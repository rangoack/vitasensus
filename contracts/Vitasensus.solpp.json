{"contracts":{"contracts/IterableMapping.solpp":{"IterableMapping":{"abi":[],"evm":{"assembly":"  // newTag tag_2, desc: function selector\n  // CompilerContext::appendYulUtilityFunctions()\n    /* \"contracts/IterableMapping.solpp\":58:1497   */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0a\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x74\n  eq\n  tag_2\n  jumpi\n  // newTag tag_3, desc: \n  mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_2:\n  mstore(0x00, address)\n  0x74\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n  // newTag tag_2, desc: function selector\n        /* \"contracts/IterableMapping.solpp\":58:1497   */\n      eq(address, deployTimeAddress())\n  // ContractCompiler::initializeContext()\n      0x80\n  // CompilerUtils::storeFreeMemoryPointer()\n      0x40\n      mstore\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // ContractCompiler::registerStateVariables()\n  // end of ContractCompiler::registerStateVariables()\n      stop\n\n    auxdata: 0xa165627a7a7230582000000000000000000000000000000000000000000000000000000000000000000029\n}\n","bytecode":{"generatedSources":[],"linkReferences":{},"object":"604a6050600a82828239805160001a6074146043577fe0f8f85500000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607481538281f3fe740000000000000000000000000000000000000000003014608060405200fea165627a7a7230582000000000000000000000000000000000000000000000000000000000000000000029","opcodes":"PUSH1 0x4A PUSH1 0x50 PUSH1 0xA DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x74 EQ PUSH1 0x43 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x74 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH21 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE STOP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP 0x29 ","sourceMap":"58:1439:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.6eb4927f.mod\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IterableMapping.solpp\":\"IterableMapping\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IterableMapping.solpp\":{\"keccak256\":\"0x23d597e141982624f4a1db139f7e83a70e590e0fcbfc56896730a4c7e5b4b02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52c6dab08c23869072f1c217d63ee9810034cf30e577431316fdfa4f0d04c98f\",\"dweb:/ipfs/QmeoAFd5hy8RKLz4ZimcbG943VyTzzcNXVEK7Lrx2jNRwL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"UintKeyedIterableMapping":{"abi":[],"evm":{"assembly":"  // newTag tag_2, desc: function selector\n  // CompilerContext::appendYulUtilityFunctions()\n    /* \"contracts/IterableMapping.solpp\":1499:2920   */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0a\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x74\n  eq\n  tag_2\n  jumpi\n  // newTag tag_3, desc: \n  mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_2:\n  mstore(0x00, address)\n  0x74\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n  // newTag tag_2, desc: function selector\n        /* \"contracts/IterableMapping.solpp\":1499:2920   */\n      eq(address, deployTimeAddress())\n  // ContractCompiler::initializeContext()\n      0x80\n  // CompilerUtils::storeFreeMemoryPointer()\n      0x40\n      mstore\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // ContractCompiler::registerStateVariables()\n  // end of ContractCompiler::registerStateVariables()\n      stop\n\n    auxdata: 0xa165627a7a7230582000000000000000000000000000000000000000000000000000000000000000000029\n}\n","bytecode":{"generatedSources":[],"linkReferences":{},"object":"604a6050600a82828239805160001a6074146043577fe0f8f85500000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607481538281f3fe740000000000000000000000000000000000000000003014608060405200fea165627a7a7230582000000000000000000000000000000000000000000000000000000000000000000029","opcodes":"PUSH1 0x4A PUSH1 0x50 PUSH1 0xA DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x74 EQ PUSH1 0x43 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x74 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH21 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE STOP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP 0x29 ","sourceMap":"1499:1421:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.6eb4927f.mod\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IterableMapping.solpp\":\"UintKeyedIterableMapping\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IterableMapping.solpp\":{\"keccak256\":\"0x23d597e141982624f4a1db139f7e83a70e590e0fcbfc56896730a4c7e5b4b02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52c6dab08c23869072f1c217d63ee9810034cf30e577431316fdfa4f0d04c98f\",\"dweb:/ipfs/QmeoAFd5hy8RKLz4ZimcbG943VyTzzcNXVEK7Lrx2jNRwL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"assembly":"","bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.6eb4927f.mod\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ownable.sol\":{\"keccak256\":\"0xa972e39f1d2fe07867a66f8b55596f8ddb3425503d7d7871faa01ee1468f311a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8350f7f6cc9e7485cef21f5ebe364a589285933846d75989c019b1f2043d0556\",\"dweb:/ipfs/QmWKoFjsiFtb4yt7UJG7iT7HR9Ey5fPaX8c5TyY4yfugV9\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":2676,"contract":"contracts/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"21"}}}}},"contracts/Vitasensus.solpp":{"Vitasensus":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"spaceId","type":"uint256"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"JoinedSpace","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"spaceId","type":"uint256"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"LeftSpace","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"spaceId","type":"uint256"},{"indexed":true,"internalType":"address","name":"author","type":"address"},{"indexed":false,"internalType":"string","name":"title","type":"string"},{"indexed":false,"internalType":"string","name":"description","type":"string"},{"indexed":false,"internalType":"uint256","name":"startTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"snapshot","type":"uint256"}],"name":"ProposalCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"spaceId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"choiceId","type":"uint256"}],"name":"ProposalExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":true,"internalType":"tokenId","name":"token","type":"tokenId"},{"indexed":true,"internalType":"bytes32","name":"name","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"avatar","type":"bytes32"},{"indexed":false,"internalType":"string","name":"description","type":"string"}],"name":"SpaceCreated","type":"event"},{"inputs":[],"name":"SPACE_CREATION_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator_","type":"address"}],"name":"addOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"uint256","name":"snapshot","type":"uint256"},{"internalType":"bytes32[]","name":"choices","type":"bytes32[]"},{"internalType":"address[]","name":"choicesExecutors","type":"address[]"},{"internalType":"bytes32[]","name":"choicesData","type":"bytes32[]"}],"name":"createProposal","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"name","type":"bytes32"},{"internalType":"string","name":"description","type":"string"},{"internalType":"tokenId","name":"spaceToken","type":"tokenId"},{"internalType":"bytes32","name":"avatar","type":"bytes32"},{"internalType":"bytes32","name":"website","type":"bytes32"},{"internalType":"uint256","name":"spaceTokenDecimals","type":"uint256"}],"name":"createSpace","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"executeProposal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"}],"name":"getCreationTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"}],"name":"getSpaceAdmins","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"}],"name":"getSpaceExternal","outputs":[{"internalType":"bytes32","name":"name","type":"bytes32"},{"internalType":"string","name":"description","type":"string"},{"internalType":"tokenId","name":"token","type":"tokenId"},{"internalType":"bytes32","name":"avatar","type":"bytes32"},{"internalType":"bytes32","name":"website","type":"bytes32"},{"internalType":"uint256","name":"memberCounts","type":"uint256"},{"internalType":"uint256","name":"tokenDecimals","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"}],"name":"getSpaceOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"getSpaceProposal","outputs":[{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"address","name":"author","type":"address"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"uint256","name":"snapshot","type":"uint256"},{"internalType":"bytes32[]","name":"choices","type":"bytes32[]"},{"internalType":"address[]","name":"choicesExecutors","type":"address[]"},{"internalType":"bytes32[]","name":"choicesData","type":"bytes32[]"},{"internalType":"uint256[]","name":"votes","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"getSpaceProposalVotersCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint256","name":"skip","type":"uint256"},{"internalType":"uint256","name":"limit","type":"uint256"}],"name":"getSpaceProposalVotes","outputs":[{"internalType":"address[]","name":"voters","type":"address[]"},{"internalType":"uint256[]","name":"votes","type":"uint256[]"},{"internalType":"uint256[]","name":"choices","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"uint256","name":"skip","type":"uint256"},{"internalType":"uint256","name":"limit","type":"uint256"}],"name":"getSpaceProposals","outputs":[{"internalType":"uint256[]","name":"proposalIds","type":"uint256[]"},{"internalType":"string[]","name":"titles","type":"string[]"},{"internalType":"string[]","name":"descriptions","type":"string[]"},{"internalType":"uint256[]","name":"startTimes","type":"uint256[]"},{"internalType":"uint256[]","name":"endTimes","type":"uint256[]"},{"internalType":"uint256[]","name":"choicesCount","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"}],"name":"getSpaceProposalsCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"}],"name":"getSpaceSettings","outputs":[{"internalType":"uint256","name":"proposalThreshold","type":"uint256"},{"internalType":"bool","name":"onlyAdminCreateProposal","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"skip","type":"uint256"},{"internalType":"uint256","name":"limit","type":"uint256"}],"name":"getSpaces","outputs":[{"internalType":"bytes32[]","name":"names","type":"bytes32[]"},{"internalType":"tokenId[]","name":"tokens","type":"tokenId[]"},{"internalType":"bytes32[]","name":"avatars","type":"bytes32[]"},{"internalType":"bytes32[]","name":"websites","type":"bytes32[]"},{"internalType":"uint256[]","name":"memberCounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSpacesCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserSpaces","outputs":[{"internalType":"uint256[]","name":"spaceIds","type":"uint256[]"},{"internalType":"bytes32[]","name":"names","type":"bytes32[]"},{"internalType":"bytes32[]","name":"avatars","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"getWinningChoiceIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"address","name":"user_","type":"address"}],"name":"hasVoted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_addr","type":"address"}],"name":"isOperator","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"isProposalActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"isProposalClosed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"isProposalExecuted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"isSpaceAdmin","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"isSpaceMember","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"isSpaceOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"}],"name":"joinSpace","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"}],"name":"leaveSpace","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"}],"name":"redeemSpaceCreationFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator_","type":"address"}],"name":"removeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"address[]","name":"newAdmins","type":"address[]"}],"name":"setSpaceAdmins","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"bytes32","name":"name","type":"bytes32"},{"internalType":"string","name":"description","type":"string"},{"internalType":"tokenId","name":"spaceToken","type":"tokenId"},{"internalType":"uint256","name":"spaceTokenDecimals","type":"uint256"},{"internalType":"bytes32","name":"avatar","type":"bytes32"},{"internalType":"bytes32","name":"website","type":"bytes32"}],"name":"updateSpace","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"uint256","name":"threshold","type":"uint256"},{"internalType":"bool","name":"adminCreateProposal","type":"bool"}],"name":"updateSpaceCreateProposalThreshold","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"address","name":"voter","type":"address"},{"internalType":"uint256","name":"choiceIndex","type":"uint256"},{"internalType":"uint256","name":"votes","type":"uint256"}],"name":"voteOnProposal","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"assembly":"  // newTag tag_2, desc: function selector\n  // ContractCompiler::initializeContext()\n  // ContractCompiler::registerImmutableVariables()\n  // end of ContractCompiler::registerImmutableVariables()\n    /* \"contracts/Vitasensus.solpp\":168:18183  contract Vitasensus is Ownable {... */\n  0x80\n  // CompilerUtils::storeFreeMemoryPointer()\n  0x40\n  mstore\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // ContractCompiler::registerStateVariables()\n  // end of ContractCompiler::registerStateVariables()\n  // ContractCompiler::initializeStateVariables()\n  // end of ContractCompiler::initializeStateVariables()\n  // ContractCompiler::initializeStateVariables()\n  // end of ContractCompiler::initializeStateVariables()\n  // newTag tag_3, desc: declaration of function \n    /* \"contracts/Ownable.sol\":893:923   */\n  tag_4\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for constructor() {\n        _transferOwnership(msg.sender);\n    }\n  // newTag tag_4, desc: return tag of \n  // start of code block of \n  // newPushTag tag_5, desc: return of function function (address)\n    /* \"contracts/Ownable.sol\":912:922   */\n  caller\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n    /* \"contracts/Ownable.sol\":893:911   */\n  tag_5\n  // newTag tag_6, desc: declaration of function _transferOwnership\n  0x20\n  // CompilerUtils::leftShiftNumberOnStack(bits=32)\n  shl\n    /* \"contracts/Ownable.sol\":893:923   */\n  0x20\n  // end of CompilerUtils::leftShiftNumberOnStack()\n  // CompilerUtils::rightShiftNumberOnStack(bits=32)\n  shr\n  jump\t// in\n  // end of CompilerUtils::rightShiftNumberOnStack()\ntag_4:  // return of function function (address)\n    /* \"contracts/Vitasensus.solpp\":168:18183  contract Vitasensus is Ownable {... */\n  tag_6\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n  jump\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 0 parameters and 0 return parameters\n  // newPushTag tag_7, desc: \n    /* \"contracts/Ownable.sol\":2386:2573   */\ntag_5:  // declaration of function _transferOwnership\n    /* \"contracts/Ownable.sol\":2459:2475   */\n  0x00\n    /* \"contracts/Ownable.sol\":2478:2484   */\n  dup1\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n  // newTag tag_8, desc: return tag of _transferOwnership\n  // start of code block of _transferOwnership\n  // ContractCompiler::appendStackVariableInitialisation(address oldOwner)\n  0x00\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::appendVariable(_owner, _owner)\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Ownable.sol\":2459:2484   */\n  swap1\n  pop\n  // CompilerUtils::moveToStackVariable(oldOwner)\n    /* \"contracts/Ownable.sol\":2503:2511   */\n  dup2\n    /* \"contracts/Ownable.sol\":2494:2500   */\n  0x00\n  // ExpressionCompiler::appendVariable(newOwner, newOwner)\n  dup1\n  // ExpressionCompiler::appendVariable(_owner, _owner)\n    /* \"contracts/Ownable.sol\":2494:2511   */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffffff\n  // CompilerUtils::copyToStackTop(4, 1)\n  and\n  // CompilerUtils::convertType(): address -> address\n  mul\n  or\n  // end of CompilerUtils::convertType()\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ownable.sol\":2557:2565   */\n  dup2\n  // CompilerUtils::popStackSlots(1)\n    /* \"contracts/Ownable.sol\":2526:2566   */\n  0xffffffffffffffffffffffffffffffffffffffffff\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(newOwner, newOwner)\n  and\n  // CompilerUtils::convertType(): address -> address\n    /* \"contracts/Ownable.sol\":2547:2555   */\n  dup2\n    /* \"contracts/Ownable.sol\":2526:2566   */\n  0xffffffffffffffffffffffffffffffffffffffffff\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(oldOwner, oldOwner)\n  and\n  // CompilerUtils::convertType(): address -> address\n  0x9a78605a08fe53b920adfc51344c28abd504bd2378db8d7dcdd50e527cbebe57\n  0x40\n  // end of CompilerUtils::convertType()\n  mload\n  // CompilerUtils::fetchFreeMemoryPointer()\n  mload(0x40)\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             ]\n  // CompilerUtils::fetchFreeMemoryPointer()\n  dup1\n  swap2\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  sub\n  swap1\n  log3\n    /* \"contracts/Ownable.sol\":2386:2573   */\n  pop\n  pop\n  // CompilerUtils::popStackSlots(1)\n  jump\t// out\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n    /* \"contracts/Vitasensus.solpp\":168:18183  contract Vitasensus is Ownable {... */\ntag_6:\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 0 return parameters\n  //  current stackLayout [0 -1 ]\n  dataSize(sub_0)\n  dup1\n  // CompilerContext::appendYulUtilityFunctions()\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n  // newTag tag_2, desc: function selector\n  // ContractCompiler::initializeContext()\n        /* \"contracts/Vitasensus.solpp\":168:18183  contract Vitasensus is Ownable {... */\n      0x80\n  // CompilerUtils::storeFreeMemoryPointer()\n      0x40\n      mstore\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // ContractCompiler::registerStateVariables()\n  // end of ContractCompiler::registerStateVariables()\n  // newTag tag_3, desc: declaration of function getSpaceProposalVotersCount\n  // newTag tag_4, desc: declaration of function getUserSpaces\n  // newTag tag_5, desc: declaration of function getWinningChoiceIndex\n  // newTag tag_6, desc: declaration of function hasVoted\n  // newTag tag_7, desc: declaration of function isProposalActive\n  // newTag tag_8, desc: declaration of function voteOnProposal\n  // newTag tag_9, desc: declaration of function updateSpaceCreateProposalThreshold\n  // newTag tag_10, desc: declaration of function setSpaceAdmins\n  // newTag tag_11, desc: declaration of function getSpaceSettings\n  // newTag tag_12, desc: declaration of function owner\n  // newTag tag_13, desc: declaration of function isOperator\n  // newTag tag_14, desc: declaration of function getSpaces\n  // newTag tag_15, desc: declaration of function getSpaceExternal\n  // newTag tag_16, desc: declaration of function getSpaceOwner\n  // newTag tag_17, desc: declaration of function isSpaceOwner\n  // newTag tag_18, desc: declaration of function createProposal\n  // newTag tag_19, desc: declaration of function transferOwnership\n  // newTag tag_20, desc: declaration of function SPACE_CREATION_FEE\n  // newTag tag_21, desc: declaration of function leaveSpace\n  // newTag tag_22, desc: declaration of function joinSpace\n  // newTag tag_23, desc: declaration of function getSpaceProposals\n  // newTag tag_24, desc: declaration of function addOperator\n  // newTag tag_25, desc: declaration of function getSpaceProposal\n  // newTag tag_26, desc: declaration of function isProposalClosed\n  // newTag tag_27, desc: declaration of function isSpaceMember\n  // newTag tag_28, desc: declaration of function removeOperator\n  // newTag tag_29, desc: declaration of function getSpaceProposalsCount\n  // newTag tag_30, desc: declaration of function isSpaceAdmin\n  // newTag tag_31, desc: declaration of function updateSpace\n  // newTag tag_32, desc: declaration of function getSpacesCount\n  // newTag tag_33, desc: declaration of function renounceOwnership\n  // newTag tag_34, desc: declaration of function createSpace\n  // newTag tag_35, desc: declaration of function executeProposal\n  // newTag tag_36, desc: declaration of function getSpaceProposalVotes\n  // newTag tag_37, desc: declaration of function getCreationTimestamp\n  // newTag tag_38, desc: declaration of function getSpaceAdmins\n  // newTag tag_39, desc: declaration of function isProposalExecuted\n  // newTag tag_40, desc: declaration of function redeemSpaceCreationFee\n      jump(tag_1)\n        /* \"contracts/Vitasensus.solpp\":12937:13115  function getSpaceProposalVotersCount(uint256 spaceId, uint256 proposalId)... */\n    tag_2:  // declaration of function getSpaceProposalVotersCount\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(uint256)\n        /* \"contracts/Vitasensus.solpp\":13040:13047  uint256 */\n      0x00\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function getSpaceProposalVotersCount(uint256 spaceId, uint256 proposalId)\n\t\texternal\n\t\tview\n\t\treturns (uint256)\n\t{\n\t\treturn _spacesProposalsVoters[spaceId][proposalId].length;\n\t}\n  // newTag tag_41, desc: return tag of getSpaceProposalVotersCount\n  // start of code block of getSpaceProposalVotersCount\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposalsVoters[spaceId][proposalId].length)\n  // ExpressionCompiler::appendVariable(_spacesProposalsVoters, _spacesProposalsVoters)\n        /* \"contracts/Vitasensus.solpp\":13061:13083  _spacesProposalsVoters */\n      0x0a\n        /* \"contracts/Vitasensus.solpp\":13061:13092  _spacesProposalsVoters[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":13084:13091  spaceId */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":13061:13092  _spacesProposalsVoters[spaceId] */\n      dup2\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      mstore\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x20\n      add\n  // bytes of type uint256: 32\n      swap1\n      dup2\n  // end of CompilerUtils::storeInMemoryDynamic()\n      mstore\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x20\n      add\n  // bytes of type uint256: 32\n      0x00\n      blake2b\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":13061:13104  _spacesProposalsVoters[spaceId][proposalId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":13093:13103  proposalId */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":13061:13104  _spacesProposalsVoters[spaceId][proposalId] */\n      dup2\n      mstore\n      0x20\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      add\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      dup2\n  // bytes of type uint256: 32\n      mstore\n      0x20\n  // end of CompilerUtils::storeInMemoryDynamic()\n      add\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x00\n      blake2b\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":13061:13111  _spacesProposalsVoters[spaceId][proposalId].length */\n      dup1\n      sload\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":13054:13111  return _spacesProposalsVoters[spaceId][proposalId].length */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":12937:13115  function getSpaceProposalVotersCount(uint256 spaceId, uint256 proposalId)... */\n      swap3\n      swap2\n      pop\n      pop\n  // CompilerUtils::moveToStackVariable()\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":13118:13651  function getUserSpaces(address user)... */\n    tag_3:  // declaration of function getUserSpaces\n  // CompilerUtils::popAndJump(toHeight=4, jumpTo=tag_40:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n        /* \"contracts/Vitasensus.solpp\":13188:13213  uint256[] memory spaceIds */\n      0x60\n        /* \"contracts/Vitasensus.solpp\":13218:13240  bytes32[] memory names */\n      dup1\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n        /* \"contracts/Vitasensus.solpp\":13245:13269  bytes32[] memory avatars */\n      0x60\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 1 return parameters\n  //  current stackLayout [1 -1 -1 0 ]\n        /* \"contracts/Vitasensus.solpp\":13279:13293  uint256 length */\n      0x00\n  //  current stackLayout [0 -1 -1 1 ]\n        /* \"contracts/Vitasensus.solpp\":13296:13320  _userSpaces[user].size() */\n      tag_42\n  //  current stackLayout [0 1 -1 -1 ]\n        /* \"contracts/Vitasensus.solpp\":13296:13307  _userSpaces */\n      0x07\n  //  current stackLayout [0 1 -1 ]\n        /* \"contracts/Vitasensus.solpp\":13296:13313  _userSpaces[user] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":13308:13312  user */\n      dup8\n        /* \"contracts/Vitasensus.solpp\":13296:13313  _userSpaces[user] */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(uint256[] memory spaceIds)\n  // CompilerUtils::pushZeroPointer()\n      and\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(bytes32[] memory names)\n  // CompilerUtils::pushZeroPointer()\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(bytes32[] memory avatars)\n  // CompilerUtils::pushZeroPointer()\n      and\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function getUserSpaces(address user)\n\t\texternal\n\t\tview\n\t\treturns (\n\t\t\tuint256[] memory spaceIds,\n\t\t\tbytes32[] memory names,\n\t\t\tbytes32[] memory avatars\n\t\t)\n\t{\n\t\tuint256 length = _userSpaces[user].size();\n\t\tspaceIds = new uint256[](length);\n\t\tnames = new bytes32[](length);\n\t\tavatars = new bytes32[](length);\n\t\tfor (uint256 index = 0; index < _userSpaces[user].size(); index++) {\n\t\t\tuint256 id = _userSpaces[user].keys[index];\n\t\t\tspaceIds[index] = id;\n\t\t\tnames[index] = _spaces[id].name;\n\t\t\tavatars[index] = _spaces[id].avatar;\n\t\t}\n\t}\n  // newTag tag_42, desc: return tag of getUserSpaces\n  // start of code block of getUserSpaces\n  // ContractCompiler::appendStackVariableInitialisation(uint256 length)\n      dup2\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // newPushTag tag_43, desc: return of function function (struct UintKeyedIterableMapping.Map) view returns (uint256)\n      mstore\n  // ExpressionCompiler::visit(_memberAccess=_userSpaces[user].size)\n  // ExpressionCompiler::appendVariable(_userSpaces, _userSpaces)\n      0x20\n      add\n      swap1\n      dup2\n  // ExpressionCompiler::appendVariable(user, user)\n      mstore\n  // CompilerUtils::convertType(): address -> address\n      0x20\n      add\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      0x00\n      blake2b\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":13296:13318  _userSpaces[user].size */\n      tag_43\n        /* \"contracts/Vitasensus.solpp\":13296:13320  _userSpaces[user].size() */\n      jump\t// in\n  // bytes of type address: 32\n    tag_42:  // return of function function (struct UintKeyedIterableMapping.Map) view returns (uint256)\n        /* \"contracts/Vitasensus.solpp\":13279:13320  uint256 length = _userSpaces[user].size() */\n      swap1\n  // end of CompilerUtils::storeInMemoryDynamic()\n      pop\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":13349:13355  length */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":13335:13356  new uint256[](length) */\n      0xffffffffffffffff\n  // bytes of type uint256: 32\n      dup2\n      gt\n  // end of CompilerUtils::storeInMemoryDynamic()\n      iszero\n      tag_44\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // CompilerUtils::convertType(): struct UintKeyedIterableMapping.Map storage ref -> struct UintKeyedIterableMapping.Map storage pointer\n  // end of CompilerUtils::convertType()\n  // newTag tag_44, desc: declaration of function size\n      0x00\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      mstore\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      0x41\n  // end of CompilerUtils::rotateStackDown()\n      0x04\n      mstore\n      0x24\n      0x00\n  // CompilerUtils::moveToStackVariable(length)\n      revert\n    tag_44:\n  // ExpressionCompiler::appendVariable(length, length)\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n  // newPushTag tag_45, desc: \n      mstore\n      dup1\n  // Jump to tag_44\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n  // CompilerUtils::fetchFreeMemoryPointer()\n      tag_45\n      jumpi\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n  // CompilerUtils::storeFreeMemoryPointer()\n      dup3\n      add\n  // end of CompilerUtils::storeFreeMemoryPointer()\n      swap2\n      pop\n  // newPushTag tag_46, desc: \n      pop\n      swap1\n  // Jump to tag_45\n      pop\n    tag_45:\n      pop\n        /* \"contracts/Vitasensus.solpp\":13324:13356  spaceIds = new uint256[](length) */\n      swap4\n      pop\n        /* \"contracts/Vitasensus.solpp\":13382:13388  length */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":13368:13389  new bytes32[](length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_46\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x41)\n      0x24\n      0x00\n  // ExpressionCompiler::appendVariable(spaceIds, spaceIds)\n      revert\n    tag_46:\n      0x40\n  // CompilerUtils::popStackSlots(1)\n      mload\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(length, length)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n  // newPushTag tag_47, desc: \n      0x20\n      mul\n  // Jump to tag_46\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_47\n      jumpi\n  // CompilerUtils::fetchFreeMemoryPointer()\n      dup2\n      0x20\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n  // CompilerUtils::storeFreeMemoryPointer()\n      swap2\n      pop\n  // end of CompilerUtils::storeFreeMemoryPointer()\n      pop\n      swap1\n  // newPushTag tag_48, desc: \n      pop\n    tag_47:\n  // Jump to tag_47\n      pop\n        /* \"contracts/Vitasensus.solpp\":13360:13389  names = new bytes32[](length) */\n      swap3\n      pop\n        /* \"contracts/Vitasensus.solpp\":13417:13423  length */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":13403:13424  new bytes32[](length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_48\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_48:\n  // ExpressionCompiler::appendVariable(names, names)\n      mload(0x40)\n      swap1\n  // CompilerUtils::popStackSlots(1)\n      dup1\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(length, length)\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n  // newPushTag tag_49, desc: \n      0x20\n      add\n  // Jump to tag_48\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_49\n      jumpi\n      dup2\n      0x20\n  // CompilerUtils::fetchFreeMemoryPointer()\n      add\n      0x20\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n  // CompilerUtils::storeFreeMemoryPointer()\n      pop\n      swap1\n  // end of CompilerUtils::storeFreeMemoryPointer()\n      pop\n    tag_49:\n  // newPushTag tag_50, desc: \n      pop\n        /* \"contracts/Vitasensus.solpp\":13393:13424  avatars = new bytes32[](length) */\n      swap2\n  // Jump to tag_49\n      pop\n        /* \"contracts/Vitasensus.solpp\":13433:13446  uint256 index */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":13428:13648  for (uint256 index = 0; index < _userSpaces[user].size(); index++) {... */\n    tag_50:\n        /* \"contracts/Vitasensus.solpp\":13460:13484  _userSpaces[user].size() */\n      tag_53\n        /* \"contracts/Vitasensus.solpp\":13460:13471  _userSpaces */\n      0x07\n        /* \"contracts/Vitasensus.solpp\":13460:13477  _userSpaces[user] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":13472:13476  user */\n      dup9\n        /* \"contracts/Vitasensus.solpp\":13460:13477  _userSpaces[user] */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n  // ExpressionCompiler::appendVariable(avatars, avatars)\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":13460:13482  _userSpaces[user].size */\n      tag_43\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/Vitasensus.solpp\":13460:13484  _userSpaces[user].size() */\n      jump\t// in\n  // end of CompilerUtils::popStackSlots()\n  // newTag tag_51, desc: \n  // newTag tag_52, desc: \n  // newTag tag_53, desc: \n  // ContractCompiler::appendStackVariableInitialisation(uint256 index)\n    tag_53:  // return of function function (struct UintKeyedIterableMapping.Map) view returns (uint256)\n  // end of ContractCompiler::appendStackVariableInitialisation()\n        /* \"contracts/Vitasensus.solpp\":13452:13457  index */\n      dup2\n  // CompilerUtils::convertType(): int_const 0 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackVariable(index)\n        /* \"contracts/Vitasensus.solpp\":13452:13484  index < _userSpaces[user].size() */\n      lt\n        /* \"contracts/Vitasensus.solpp\":13428:13648  for (uint256 index = 0; index < _userSpaces[user].size(); index++) {... */\n      iszero\n      tag_51\n  // newPushTag tag_54, desc: return of function function (struct UintKeyedIterableMapping.Map) view returns (uint256)\n      jumpi\n  // ExpressionCompiler::visit(_memberAccess=_userSpaces[user].size)\n  // ExpressionCompiler::appendVariable(_userSpaces, _userSpaces)\n        /* \"contracts/Vitasensus.solpp\":13500:13510  uint256 id */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":13513:13524  _userSpaces */\n      0x07\n        /* \"contracts/Vitasensus.solpp\":13513:13530  _userSpaces[user] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":13525:13529  user */\n      dup9\n  // ExpressionCompiler::appendVariable(user, user)\n        /* \"contracts/Vitasensus.solpp\":13513:13530  _userSpaces[user] */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // CompilerUtils::convertType(): address -> address\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      and\n      dup2\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mstore\n      0x20\n  // bytes of type address: 32\n      add\n      swap1\n  // end of CompilerUtils::storeInMemoryDynamic()\n      dup2\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mstore\n      0x20\n  // bytes of type uint256: 32\n      add\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":13513:13535  _userSpaces[user].keys */\n      0x00\n      add\n        /* \"contracts/Vitasensus.solpp\":13536:13541  index */\n      dup3\n  // CompilerUtils::convertType(): struct UintKeyedIterableMapping.Map storage ref -> struct UintKeyedIterableMapping.Map storage pointer\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":13513:13542  _userSpaces[user].keys[index] */\n      dup2\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      sload\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      dup2\n  // end of CompilerUtils::rotateStackDown()\n      lt\n      tag_54\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(index, index)\n      0x00\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mstore\n      mstore(0x04, 0x32)\n  // ContractCompiler::appendStackVariableInitialisation(uint256 id)\n      0x24\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::visit(_memberAccess=_userSpaces[user].keys)\n  // ExpressionCompiler::appendVariable(_userSpaces, _userSpaces)\n      0x00\n      revert\n    tag_54:\n      swap1\n  // ExpressionCompiler::appendVariable(user, user)\n      0x00\n  // CompilerUtils::convertType(): address -> address\n      mstore\n      0x20\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      0x00\n      blake2b\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      sload\n  // bytes of type address: 32\n        /* \"contracts/Vitasensus.solpp\":13500:13542  uint256 id = _userSpaces[user].keys[index] */\n      swap1\n      pop\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":13565:13567  id */\n      dup1\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":13547:13555  spaceIds */\n      dup7\n        /* \"contracts/Vitasensus.solpp\":13556:13561  index */\n      dup4\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":13547:13562  spaceIds[index] */\n      dup2\n      mload\n  // end of CompilerUtils::storeInMemoryDynamic()\n      dup2\n      lt\n      tag_56\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      0x32\n  // ExpressionCompiler::appendVariable(index, index)\n      0x04\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mstore\n      revert(0x00, 0x24)\n    tag_56:\n      0x20\n  // newPushTag tag_55, desc: \n      mul\n      0x20\n  // Jump to tag_54\n      add\n      add\n        /* \"contracts/Vitasensus.solpp\":13547:13567  spaceIds[index] = id */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":13587:13594  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":13595:13597  id */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":13587:13598  _spaces[id] */\n      dup2\n      sload\n  // newTag tag_56, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup2\n      lt\n  // end of CompilerUtils::storeInMemory()\n      tag_57\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      0x24\n  // CompilerUtils::moveToStackVariable(id)\n      0x00\n      revert\n  // ExpressionCompiler::appendVariable(id, id)\n    tag_57:\n  // ExpressionCompiler::appendVariable(spaceIds, spaceIds)\n      swap1\n  // ExpressionCompiler::appendVariable(index, index)\n      0x00\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mstore\n      blake2b(0x00, 0x20)\n      swap1\n      0x07\n  // newPushTag tag_57, desc: \n      mul\n      add\n  // Jump to tag_56\n        /* \"contracts/Vitasensus.solpp\":13587:13603  _spaces[id].name */\n      0x00\n      add\n      sload\n        /* \"contracts/Vitasensus.solpp\":13572:13577  names */\n      dup6\n        /* \"contracts/Vitasensus.solpp\":13578:13583  index */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":13572:13584  names[index] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_59\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      0x32\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      0x04\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      mstore\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n      0x24\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x00\n      revert\n  // bytes of type uint256: 32\n    tag_59:\n      0x20\n  // end of CompilerUtils::storeInMemoryDynamic()\n      mul\n  // CompilerUtils::popStackSlots(1)\n      0x20\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=_spaces[id].name)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      add\n      add\n        /* \"contracts/Vitasensus.solpp\":13572:13603  names[index] = _spaces[id].name */\n      dup2\n  // ExpressionCompiler::appendVariable(id, id)\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mstore\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":13625:13632  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":13633:13635  id */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":13625:13636  _spaces[id] */\n      dup2\n  // newPushTag tag_58, desc: \n      sload\n      dup2\n  // Jump to tag_57\n      lt\n      tag_60\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      0x24\n      0x00\n  // newTag tag_59, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      revert\n    tag_60:\n  // end of CompilerUtils::storeInMemory()\n      swap1\n      0x00\n      mstore\n      blake2b(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n        /* \"contracts/Vitasensus.solpp\":13625:13643  _spaces[id].avatar */\n      0x01\n      add\n      sload\n        /* \"contracts/Vitasensus.solpp\":13608:13615  avatars */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":13616:13621  index */\n      dup4\n  // ExpressionCompiler::appendVariable(names, names)\n        /* \"contracts/Vitasensus.solpp\":13608:13622  avatars[index] */\n      dup2\n  // ExpressionCompiler::appendVariable(index, index)\n      mload\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      dup2\n      lt\n      tag_62\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n  // newPushTag tag_60, desc: \n      mstore\n      0x32\n  // Jump to tag_59\n      0x04\n      mstore\n      revert(0x00, 0x24)\n    tag_62:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Vitasensus.solpp\":13608:13643  avatars[index] = _spaces[id].avatar */\n      dup2\n      dup2\n      mstore\n      pop\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      pop\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n        /* \"contracts/Vitasensus.solpp\":13428:13648  for (uint256 index = 0; index < _userSpaces[user].size(); index++) {... */\n      pop\n        /* \"contracts/Vitasensus.solpp\":13486:13493  index++ */\n      dup1\n      dup1\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      tag_63\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n      swap1\n  // CompilerUtils::storeInMemoryDynamic(type=bytes32, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=bytes32, ...)\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      tag_64\n      jump\t// in\n    tag_63:  // return of Yul function increment_t_uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap2\n      pop\n  // bytes of type bytes32: 32\n      pop\n        /* \"contracts/Vitasensus.solpp\":13428:13648  for (uint256 index = 0; index < _userSpaces[user].size(); index++) {... */\n      tag_50\n  // end of CompilerUtils::storeInMemoryDynamic()\n      jump\n  // CompilerUtils::popStackSlots(1)\n    tag_51:\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=_spaces[id].avatar)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      pop\n        /* \"contracts/Vitasensus.solpp\":13118:13651  function getUserSpaces(address user)... */\n      pop\n      swap2\n  // ExpressionCompiler::appendVariable(id, id)\n      swap4\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      swap1\n      swap3\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":5830:6246  function getWinningChoiceIndex(uint256 spaceId, uint256 proposalId)... */\n    tag_4:  // declaration of function getWinningChoiceIndex\n        /* \"contracts/Vitasensus.solpp\":5925:5932  uint256 */\n      0x00\n  // newPushTag tag_61, desc: \n        /* \"contracts/Vitasensus.solpp\":5939:5964  Proposal storage proposal */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":5967:6000  _getProposal(spaceId, proposalId) */\n      tag_66\n  // Jump to tag_60\n        /* \"contracts/Vitasensus.solpp\":5980:5987  spaceId */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":5989:5999  proposalId */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":5967:5979  _getProposal */\n      tag_67\n        /* \"contracts/Vitasensus.solpp\":5967:6000  _getProposal(spaceId, proposalId) */\n      jump\t// in\n    tag_66:  // return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n        /* \"contracts/Vitasensus.solpp\":5939:6000  Proposal storage proposal = _getProposal(spaceId, proposalId) */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":6005:6019  uint256 maxVal */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":6021:6037  uint256 maxIndex */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":6042:6043  0 */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":6045:6046  0 */\n      dup1\n  // newTag tag_62, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":6004:6047  (uint256 maxVal, uint256 maxIndex) = (0, 0) */\n      swap2\n      pop\n  // end of CompilerUtils::storeInMemory()\n      swap2\n      pop\n        /* \"contracts/Vitasensus.solpp\":6056:6069  uint256 index */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":6051:6224  for (uint256 index = 0; index < proposal.votes.length; index++) {... */\n    tag_68:\n        /* \"contracts/Vitasensus.solpp\":6083:6091  proposal */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":6083:6097  proposal.votes */\n      0x08\n      add\n        /* \"contracts/Vitasensus.solpp\":6083:6104  proposal.votes.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":6075:6080  index */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":6075:6104  index < proposal.votes.length */\n      lt\n        /* \"contracts/Vitasensus.solpp\":6051:6224  for (uint256 index = 0; index < proposal.votes.length; index++) {... */\n      iszero\n      tag_69\n  // ExpressionCompiler::appendVariable(avatars, avatars)\n      jumpi\n  // ExpressionCompiler::appendVariable(index, index)\n        /* \"contracts/Vitasensus.solpp\":6148:6154  maxVal */\n      dup3\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":6124:6132  proposal */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":6124:6138  proposal.votes */\n      0x08\n      add\n        /* \"contracts/Vitasensus.solpp\":6139:6144  index */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":6124:6145  proposal.votes[index] */\n      dup2\n      sload\n  // newPushTag tag_63, desc: \n      dup2\n      lt\n  // Jump to tag_62\n      tag_71\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_71:\n      swap1\n      0x00\n      mstore\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      0x20\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      0x00\n      blake2b\n      add\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      sload\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n        /* \"contracts/Vitasensus.solpp\":6124:6154  proposal.votes[index] > maxVal */\n      gt\n  // CompilerUtils::storeInMemoryDynamic(type=bytes32, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=bytes32, ...)\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n        /* \"contracts/Vitasensus.solpp\":6120:6220  if (proposal.votes[index] > maxVal) {... */\n      iszero\n      tag_73\n      jumpi\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":6171:6179  proposal */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":6171:6185  proposal.votes */\n      0x08\n  // bytes of type bytes32: 32\n      add\n        /* \"contracts/Vitasensus.solpp\":6186:6191  index */\n      dup2\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":6171:6192  proposal.votes[index] */\n      dup2\n  // CompilerUtils::popStackSlots(1)\n      sload\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(1)\n      dup2\n  // end of CompilerUtils::popStackSlots()\n      lt\n  // ExpressionCompiler::appendVariable(index, index)\n      tag_74\n      jumpi\n  // CompilerContext::callYulFunction(name=increment_t_uint256, _inArgs=1, _outArgs=1)\n  // newPushTag tag_64, desc: return of Yul function increment_t_uint256\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      0x00\n  // end of CompilerUtils::rotateStackDown()\n  // newTag tag_65, desc: increment_t_uint256\n      mstore\n      mstore(0x04, 0x32)\n      0x24\n  // CompilerUtils::popStackSlots(1)\n      0x00\n  // end of CompilerUtils::popStackSlots()\n      revert\n    tag_74:\n      swap1\n  // CompilerUtils::popStackSlots(1)\n      0x00\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(1)\n      mstore\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      0x20\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 3 return parameters\n  //  current stackLayout [3 -1 0 1 2 ]\n      0x00\n  //  current stackLayout [3 -1 2 1 0 ]\n      blake2b\n  //  current stackLayout [0 -1 2 1 3 ]\n      add\n  //  current stackLayout [0 -1 2 3 1 ]\n      sload\n  //  current stackLayout [0 1 2 3 -1 ]\n        /* \"contracts/Vitasensus.solpp\":6162:6192  maxVal = proposal.votes[index] */\n      swap3\n      pop\n        /* \"contracts/Vitasensus.solpp\":6209:6214  index */\n      dup1\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(uint256)\n        /* \"contracts/Vitasensus.solpp\":6198:6214  maxIndex = index */\n      swap2\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function getWinningChoiceIndex(uint256 spaceId, uint256 proposalId)\n\t\tpublic\n\t\tview\n\t\treturns (uint256)\n\t{\n\t\tProposal storage proposal = _getProposal(spaceId, proposalId);\n\t\t(uint256 maxVal, uint256 maxIndex) = (0, 0);\n\t\tfor (uint256 index = 0; index < proposal.votes.length; index++) {\n\t\t\tif (proposal.votes[index] > maxVal) {\n\t\t\t\tmaxVal = proposal.votes[index];\n\t\t\t\tmaxIndex = index;\n\t\t\t}\n\t\t}\n\t\treturn maxIndex;\n\t}\n  // newTag tag_66, desc: return tag of getWinningChoiceIndex\n  // start of code block of getWinningChoiceIndex\n  // ContractCompiler::appendStackVariableInitialisation(Proposal storage proposal)\n      pop\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // newPushTag tag_67, desc: return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n        /* \"contracts/Vitasensus.solpp\":6120:6220  if (proposal.votes[index] > maxVal) {... */\n    tag_73:\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":6106:6113  index++ */\n      dup1\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      dup1\n  // newTag tag_68, desc: declaration of function _getProposal\n      tag_76\n      swap1\n      tag_64\n      jump\t// in\n    tag_76:  // return of Yul function increment_t_uint256\n  // CompilerUtils::moveToStackVariable(proposal)\n      swap2\n      pop\n  // ContractCompiler::appendStackVariableInitialisation(uint256 maxVal)\n      pop\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(uint256 maxIndex)\n        /* \"contracts/Vitasensus.solpp\":6051:6224  for (uint256 index = 0; index < proposal.votes.length; index++) {... */\n      tag_68\n  // end of ContractCompiler::appendStackVariableInitialisation()\n      jump\n    tag_69:\n  // CompilerUtils::convertType(): int_const 0 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackVariable(maxIndex)\n      pop\n        /* \"contracts/Vitasensus.solpp\":6234:6242  maxIndex */\n      dup1\n  // CompilerUtils::convertType(): int_const 0 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackVariable(maxVal)\n        /* \"contracts/Vitasensus.solpp\":6227:6242  return maxIndex */\n      swap4\n      pop\n  // newTag tag_69, desc: \n  // newTag tag_70, desc: \n  // newTag tag_71, desc: \n  // ContractCompiler::appendStackVariableInitialisation(uint256 index)\n      pop\n  // end of ContractCompiler::appendStackVariableInitialisation()\n      pop\n  // CompilerUtils::convertType(): int_const 0 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackVariable(index)\n      pop\n        /* \"contracts/Vitasensus.solpp\":5830:6246  function getWinningChoiceIndex(uint256 spaceId, uint256 proposalId)... */\n      swap3\n      swap2\n  // ExpressionCompiler::visit(_memberAccess=proposal.votes.length)\n  // ExpressionCompiler::visit(_memberAccess=proposal.votes)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":4539:4710  function hasVoted(uint256 spaceId, uint256 proposalId, address user_) public view returns (bool) {... */\n    tag_5:  // declaration of function hasVoted\n        /* \"contracts/Vitasensus.solpp\":4630:4634  bool */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":4705:4706  0 */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":4647:4668  _spacesProposalsVotes */\n      0x09\n        /* \"contracts/Vitasensus.solpp\":4647:4677  _spacesProposalsVotes[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":4669:4676  spaceId */\n      dup7\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(index, index)\n        /* \"contracts/Vitasensus.solpp\":4647:4677  _spacesProposalsVotes[spaceId] */\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mstore\n      0x20\n      add\n      swap1\n  // ExpressionCompiler::appendVariable(maxVal, maxVal)\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=proposal.votes)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n  // ExpressionCompiler::appendVariable(index, index)\n        /* \"contracts/Vitasensus.solpp\":4647:4689  _spacesProposalsVotes[spaceId][proposalId] */\n      0x00\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":4678:4688  proposalId */\n      dup6\n        /* \"contracts/Vitasensus.solpp\":4647:4689  _spacesProposalsVotes[spaceId][proposalId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n  // newPushTag tag_72, desc: \n      dup2\n      mstore\n  // Jump to tag_71\n      0x20\n      add\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":4647:4696  _spacesProposalsVotes[spaceId][proposalId][user_] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":4690:4695  user_ */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":4647:4696  _spacesProposalsVotes[spaceId][proposalId][user_] */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n  // newTag tag_73, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mstore\n      0x20\n  // end of CompilerUtils::storeInMemory()\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":4647:4702  _spacesProposalsVotes[spaceId][proposalId][user_].votes */\n      0x01\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      add\n      sload\n  // newPushTag tag_74, desc: \n        /* \"contracts/Vitasensus.solpp\":4647:4706  _spacesProposalsVotes[spaceId][proposalId][user_].votes > 0 */\n      gt\n        /* \"contracts/Vitasensus.solpp\":4640:4706  return _spacesProposalsVotes[spaceId][proposalId][user_].votes > 0 */\n      swap1\n  // Jump to tag_73\n  // ExpressionCompiler::visit(_memberAccess=proposal.votes)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      pop\n        /* \"contracts/Vitasensus.solpp\":4539:4710  function hasVoted(uint256 spaceId, uint256 proposalId, address user_) public view returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n  // ExpressionCompiler::appendVariable(index, index)\n      pop\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":4955:5100  function isProposalActive(uint256 spaceId, uint256 proposalId) external view returns (bool) {... */\n    tag_6:  // declaration of function isProposalActive\n        /* \"contracts/Vitasensus.solpp\":5041:5045  bool */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":5058:5096  _isProposalActive(spaceId, proposalId) */\n      tag_79\n        /* \"contracts/Vitasensus.solpp\":5076:5083  spaceId */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":5085:5095  proposalId */\n      dup4\n  // newPushTag tag_75, desc: \n        /* \"contracts/Vitasensus.solpp\":5058:5075  _isProposalActive */\n      tag_80\n        /* \"contracts/Vitasensus.solpp\":5058:5096  _isProposalActive(spaceId, proposalId) */\n      jump\t// in\n  // Jump to tag_74\n    tag_79:  // return of function function (uint256,uint256) view returns (bool)\n        /* \"contracts/Vitasensus.solpp\":5051:5096  return _isProposalActive(spaceId, proposalId) */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":4955:5100  function isProposalActive(uint256 spaceId, uint256 proposalId) external view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":7249:7912  function voteOnProposal(... */\n    tag_7:  // declaration of function voteOnProposal\n        /* \"contracts/Vitasensus.solpp\":7409:7416  spaceId */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":7418:7428  proposalId */\n      dup5\n  // newTag tag_76, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":3481:3524  _requireProposalActive(spaceId, proposalId) */\n      tag_82\n        /* \"contracts/Vitasensus.solpp\":3504:3511  spaceId */\n      dup3\n  // end of CompilerUtils::storeInMemory()\n        /* \"contracts/Vitasensus.solpp\":3513:3523  proposalId */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":3481:3503  _requireProposalActive */\n      tag_83\n        /* \"contracts/Vitasensus.solpp\":3481:3524  _requireProposalActive(spaceId, proposalId) */\n      jump\t// in\n    tag_82:  // return of function function (uint256,uint256) view\n        /* \"contracts/Vitasensus.solpp\":7443:7465  isOperator(msg.sender) */\n      tag_85\n        /* \"contracts/Vitasensus.solpp\":7454:7464  msg.sender */\n      caller\n        /* \"contracts/Vitasensus.solpp\":7443:7453  isOperator */\n      tag_12\n        /* \"contracts/Vitasensus.solpp\":7443:7465  isOperator(msg.sender) */\n      jump\t// in\n    tag_85:  // return of function function (address) view returns (bool)\n  // ExpressionCompiler::appendVariable(maxVal, maxVal)\n        /* \"contracts/Vitasensus.solpp\":7435:7466  require(isOperator(msg.sender)) */\n      tag_86\n      jumpi\n      0x00\n  // CompilerUtils::popStackSlots(1)\n      dup1\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(index, index)\n      revert\n  // ExpressionCompiler::appendVariable(maxIndex, maxIndex)\n    tag_86:\n        /* \"contracts/Vitasensus.solpp\":7478:7507  isSpaceMember(spaceId, voter) */\n      tag_87\n        /* \"contracts/Vitasensus.solpp\":7492:7499  spaceId */\n      dup8\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/Vitasensus.solpp\":7501:7506  voter */\n      dup7\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n        /* \"contracts/Vitasensus.solpp\":7478:7491  isSpaceMember */\n      tag_26\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n        /* \"contracts/Vitasensus.solpp\":7478:7507  isSpaceMember(spaceId, voter) */\n      jump\t// in\n  // ExpressionCompiler::appendVariable(index, index)\n    tag_87:  // return of function function (uint256,address) view returns (bool)\n        /* \"contracts/Vitasensus.solpp\":7470:7508  require(isSpaceMember(spaceId, voter)) */\n      tag_88\n  // CompilerContext::callYulFunction(name=increment_t_uint256, _inArgs=1, _outArgs=1)\n  // newPushTag tag_77, desc: return of Yul function increment_t_uint256\n      jumpi\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      0x00\n  // end of CompilerUtils::rotateStackDown()\n      dup1\n      revert\n    tag_88:\n        /* \"contracts/Vitasensus.solpp\":7521:7557  hasVoted(spaceId, proposalId, voter) */\n      tag_89\n        /* \"contracts/Vitasensus.solpp\":7530:7537  spaceId */\n      dup8\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/Vitasensus.solpp\":7539:7549  proposalId */\n      dup8\n  // end of CompilerUtils::popStackSlots()\n        /* \"contracts/Vitasensus.solpp\":7551:7556  voter */\n      dup8\n        /* \"contracts/Vitasensus.solpp\":7521:7529  hasVoted */\n      tag_5\n        /* \"contracts/Vitasensus.solpp\":7521:7557  hasVoted(spaceId, proposalId, voter) */\n      jump\t// in\n  // CompilerUtils::popStackSlots(1)\n    tag_89:  // return of function function (uint256,uint256,address) view returns (bool)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::appendVariable(maxIndex, maxIndex)\n        /* \"contracts/Vitasensus.solpp\":7520:7557  !hasVoted(spaceId, proposalId, voter) */\n      iszero\n  // CompilerUtils::moveToStackVariable()\n        /* \"contracts/Vitasensus.solpp\":7512:7558  require(!hasVoted(spaceId, proposalId, voter)) */\n      tag_90\n      jumpi\n  // CompilerUtils::popAndJump(toHeight=4, jumpTo=tag_65:)\n  // CompilerUtils::popStackSlots(3)\n      0x00\n      dup1\n      revert\n  // end of CompilerUtils::popStackSlots()\n    tag_90:\n        /* \"contracts/Vitasensus.solpp\":7562:7587  Proposal storage proposal */\n      0x00\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(3)\n        /* \"contracts/Vitasensus.solpp\":7590:7623  _getProposal(spaceId, proposalId) */\n      tag_91\n        /* \"contracts/Vitasensus.solpp\":7603:7610  spaceId */\n      dup9\n        /* \"contracts/Vitasensus.solpp\":7612:7622  proposalId */\n      dup9\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n        /* \"contracts/Vitasensus.solpp\":7590:7602  _getProposal */\n      tag_67\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 1 return parameters\n  //  current stackLayout [1 -1 -1 0 ]\n        /* \"contracts/Vitasensus.solpp\":7590:7623  _getProposal(spaceId, proposalId) */\n      jump\t// in\n  //  current stackLayout [0 -1 -1 1 ]\n    tag_91:  // return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n  //  current stackLayout [0 1 -1 -1 ]\n        /* \"contracts/Vitasensus.solpp\":7562:7623  Proposal storage proposal = _getProposal(spaceId, proposalId) */\n      swap1\n  //  current stackLayout [0 1 -1 ]\n      pop\n        /* \"contracts/Vitasensus.solpp\":7649:7657  proposal */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":7649:7665  proposal.choices */\n      0x05\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(bool)\n      add\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function hasVoted(uint256 spaceId, uint256 proposalId, address user_) public view returns (bool) {\n\t\treturn _spacesProposalsVotes[spaceId][proposalId][user_].votes > 0;\n\t}\n  // newTag tag_78, desc: return tag of hasVoted\n  // start of code block of hasVoted\n  // ContractCompiler::visit(return)\n        /* \"contracts/Vitasensus.solpp\":7649:7672  proposal.choices.length */\n      dup1\n  // CompilerUtils::convertType(): int_const 0 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposalsVotes[spaceId][proposalId][user_].votes)\n  // ExpressionCompiler::appendVariable(_spacesProposalsVotes, _spacesProposalsVotes)\n      sload\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":7635:7646  choiceIndex */\n      dup6\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":7635:7672  choiceIndex < proposal.choices.length */\n      lt\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":7627:7673  require(choiceIndex < proposal.choices.length) */\n      tag_92\n      jumpi\n  // bytes of type uint256: 32\n      0x00\n      dup1\n  // end of CompilerUtils::storeInMemoryDynamic()\n      revert\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n    tag_92:\n        /* \"contracts/Vitasensus.solpp\":7678:7700  _spacesProposalsVoters */\n      0x0a\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":7678:7709  _spacesProposalsVoters[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":7701:7708  spaceId */\n      dup10\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":7678:7709  _spacesProposalsVoters[spaceId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mstore\n      0x20\n  // bytes of type uint256: 32\n      add\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n      blake2b\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":7678:7721  _spacesProposalsVoters[spaceId][proposalId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":7710:7720  proposalId */\n      dup9\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":7678:7721  _spacesProposalsVoters[spaceId][proposalId] */\n      dup2\n      mstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n  // ExpressionCompiler::appendVariable(user_, user_)\n      0x20\n  // CompilerUtils::convertType(): address -> address\n      add\n      0x00\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":7727:7732  voter */\n      dup7\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":7678:7733  _spacesProposalsVoters[spaceId][proposalId].push(voter) */\n      swap1\n      dup1\n  // bytes of type address: 32\n      0x01\n      dup2\n  // end of CompilerUtils::storeInMemoryDynamic()\n      sload\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      dup1\n  // bytes of type uint256: 32\n      dup3\n      sstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mstore\n  // CompilerUtils::moveToStackVariable()\n      0x20\n      0x00\n  // CompilerUtils::popAndJump(toHeight=5, jumpTo=tag_77:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      blake2b\n      add\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 3 parameters and 1 return parameters\n  //  current stackLayout [1 -1 -1 -1 0 ]\n      swap1\n  //  current stackLayout [0 -1 -1 -1 1 ]\n      swap2\n  //  current stackLayout [0 1 -1 -1 -1 ]\n      swap1\n  //  current stackLayout [0 1 -1 -1 ]\n      swap2\n  //  current stackLayout [0 1 -1 ]\n      swap1\n      swap2\n      0x0100\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(bool)\n      exp\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function isProposalActive(uint256 spaceId, uint256 proposalId) external view returns (bool) {\n\t\treturn _isProposalActive(spaceId, proposalId);\n\t}\n  // newTag tag_79, desc: return tag of isProposalActive\n  // start of code block of isProposalActive\n  // ContractCompiler::visit(return)\n  // newPushTag tag_80, desc: return of function function (uint256,uint256) view returns (bool)\n      dup2\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      sload\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      dup2\n  // newTag tag_81, desc: declaration of function _isProposalActive\n      0xffffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n  // CompilerUtils::moveToStackVariable()\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // CompilerUtils::popAndJump(toHeight=4, jumpTo=tag_78:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      and\n      mul\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      or\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 1 return parameters\n  //  current stackLayout [1 -1 -1 0 ]\n      swap1\n  //  current stackLayout [0 -1 -1 1 ]\n      sstore\n  //  current stackLayout [0 1 -1 -1 ]\n      pop\n  //  current stackLayout [0 1 -1 ]\n        /* \"contracts/Vitasensus.solpp\":7740:7757  Vote storage vote */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":7760:7781  _spacesProposalsVotes */\n      0x09\n        /* \"contracts/Vitasensus.solpp\":7760:7790  _spacesProposalsVotes[spaceId] */\n      0x00\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function voteOnProposal(\n\t\tuint256 spaceId,\n\t\tuint256 proposalId,\n\t\taddress voter,\n\t\tuint256 choiceIndex,\n\t\tuint256 votes\n\t)\n\t\texternal\n\t\trequireProposalActive(spaceId, proposalId)\n\t{\n\t\trequire(isOperator(msg.sender));\n\t\trequire(isSpaceMember(spaceId, voter));\n\t\trequire(!hasVoted(spaceId, proposalId, voter));\n\t\tProposal storage proposal = _getProposal(spaceId, proposalId);\n\t\trequire(choiceIndex < proposal.choices.length);\n\n\t\t_spacesProposalsVoters[spaceId][proposalId].push(voter);\n\t\t\n\t\tVote storage vote = _spacesProposalsVotes[spaceId][proposalId][voter];\n\t\tvote.choiceIndex = choiceIndex;\n\t\tvote.votes = votes;\n\t\tproposal.votes[choiceIndex] += votes;\n\t\t\n\t}\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":7782:7789  spaceId */\n      dup11\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n        /* \"contracts/Vitasensus.solpp\":7760:7790  _spacesProposalsVotes[spaceId] */\n      dup2\n  // newTag tag_82, desc: return tag of voteOnProposal\n  // start of code block of voteOnProposal\n  // newPushTag tag_83, desc: return of function function (uint256,uint256) view\n      mstore\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      0x20\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      add\n  // newTag tag_84, desc: declaration of function _requireProposalActive\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendModifierOrFunctionCode() for function voteOnProposal(\n\t\tuint256 spaceId,\n\t\tuint256 proposalId,\n\t\taddress voter,\n\t\tuint256 choiceIndex,\n\t\tuint256 votes\n\t)\n\t\texternal\n\t\trequireProposalActive(spaceId, proposalId)\n\t{\n\t\trequire(isOperator(msg.sender));\n\t\trequire(isSpaceMember(spaceId, voter));\n\t\trequire(!hasVoted(spaceId, proposalId, voter));\n\t\tProposal storage proposal = _getProposal(spaceId, proposalId);\n\t\trequire(choiceIndex < proposal.choices.length);\n\n\t\t_spacesProposalsVoters[spaceId][proposalId].push(voter);\n\t\t\n\t\tVote storage vote = _spacesProposalsVotes[spaceId][proposalId][voter];\n\t\tvote.choiceIndex = choiceIndex;\n\t\tvote.votes = votes;\n\t\tproposal.votes[choiceIndex] += votes;\n\t\t\n\t}\n  // newTag tag_85, desc: return tag of voteOnProposal\n  // start of code block of voteOnProposal\n  // newPushTag tag_86, desc: return of function function (address) view returns (bool)\n      0x00\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":7760:7802  _spacesProposalsVotes[spaceId][proposalId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":7791:7801  proposalId */\n      dup10\n        /* \"contracts/Vitasensus.solpp\":7760:7802  _spacesProposalsVotes[spaceId][proposalId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n  // newPushTag tag_87, desc: \n      dup2\n      mstore\n  // Jump to tag_86\n      0x20\n      add\n      0x00\n      blake2b\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // newPushTag tag_88, desc: return of function function (uint256,address) view returns (bool)\n        /* \"contracts/Vitasensus.solpp\":7760:7809  _spacesProposalsVotes[spaceId][proposalId][voter] */\n      0x00\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":7803:7808  voter */\n      dup9\n  // ExpressionCompiler::appendVariable(voter, voter)\n        /* \"contracts/Vitasensus.solpp\":7760:7809  _spacesProposalsVotes[spaceId][proposalId][voter] */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n  // newPushTag tag_89, desc: \n      swap1\n      dup2\n  // Jump to tag_88\n      mstore\n      0x20\n      add\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // newPushTag tag_90, desc: return of function function (uint256,uint256,address) view returns (bool)\n      blake2b\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":7740:7809  Vote storage vote = _spacesProposalsVotes[spaceId][proposalId][voter] */\n      swap1\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      pop\n  // ExpressionCompiler::appendVariable(voter, voter)\n        /* \"contracts/Vitasensus.solpp\":7832:7843  choiceIndex */\n      dup6\n        /* \"contracts/Vitasensus.solpp\":7813:7817  vote */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":7813:7829  vote.choiceIndex */\n      0x00\n      add\n        /* \"contracts/Vitasensus.solpp\":7813:7843  vote.choiceIndex = choiceIndex */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Vitasensus.solpp\":7860:7865  votes */\n      dup5\n  // newPushTag tag_91, desc: \n        /* \"contracts/Vitasensus.solpp\":7847:7851  vote */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":7847:7857  vote.votes */\n      0x01\n  // Jump to tag_90\n      add\n        /* \"contracts/Vitasensus.solpp\":7847:7865  vote.votes = votes */\n      dup2\n      swap1\n      sstore\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendStackVariableInitialisation(Proposal storage proposal)\n      pop\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // newPushTag tag_92, desc: return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n        /* \"contracts/Vitasensus.solpp\":7900:7905  votes */\n      dup5\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":7869:7877  proposal */\n      dup3\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n        /* \"contracts/Vitasensus.solpp\":7869:7883  proposal.votes */\n      0x08\n      add\n        /* \"contracts/Vitasensus.solpp\":7884:7895  choiceIndex */\n      dup8\n        /* \"contracts/Vitasensus.solpp\":7869:7896  proposal.votes[choiceIndex] */\n      dup2\n      sload\n      dup2\n  // CompilerUtils::moveToStackVariable(proposal)\n      lt\n      tag_94\n  // ExpressionCompiler::visit(_memberAccess=proposal.choices.length)\n  // ExpressionCompiler::visit(_memberAccess=proposal.choices)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      0x24\n      0x00\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(choiceIndex, choiceIndex)\n      revert\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n    tag_94:\n      swap1\n      0x00\n  // newPushTag tag_93, desc: \n      mstore\n      0x20\n  // Jump to tag_92\n      0x00\n      blake2b\n      add\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposalsVoters[spaceId][proposalId].push)\n  // ExpressionCompiler::appendVariable(_spacesProposalsVoters, _spacesProposalsVoters)\n        /* \"contracts/Vitasensus.solpp\":7869:7905  proposal.votes[choiceIndex] += votes */\n      dup3\n      dup3\n      sload\n      tag_96\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      swap2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      tag_97\n  // bytes of type uint256: 32\n      jump\t// in\n    tag_96:  // return of Yul function checked_add_t_uint256\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap3\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      pop\n      pop\n  // bytes of type uint256: 32\n      dup2\n      swap1\n  // end of CompilerUtils::storeInMemoryDynamic()\n      sstore\n      pop\n        /* \"contracts/Vitasensus.solpp\":3528:3529  _ */\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":7249:7912  function voteOnProposal(... */\n      pop\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      pop\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      pop\n      pop\n  // bytes of type uint256: 32\n      pop\n      pop\n  // end of CompilerUtils::storeInMemoryDynamic()\n      pop\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":12354:12695  function updateSpaceCreateProposalThreshold(... */\n    tag_8:  // declaration of function updateSpaceCreateProposalThreshold\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":12496:12503  spaceId */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":2799:2826  _requireSpaceAdmin(spaceId) */\n      tag_99\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":2818:2825  spaceId */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":2799:2817  _requireSpaceAdmin */\n      tag_100\n        /* \"contracts/Vitasensus.solpp\":2799:2826  _requireSpaceAdmin(spaceId) */\n      jump\t// in\n    tag_99:  // return of function function (uint256) view\n  // ExpressionCompiler::appendVariable(voter, voter)\n        /* \"contracts/Vitasensus.solpp\":12509:12544  SpaceSettings storage spaceSettings */\n      0x00\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n        /* \"contracts/Vitasensus.solpp\":12547:12561  _spaceSettings */\n      0x02\n  // end of CompilerUtils::rotateStackDown()\n        /* \"contracts/Vitasensus.solpp\":12562:12569  spaceId */\n      dup6\n        /* \"contracts/Vitasensus.solpp\":12547:12570  _spaceSettings[spaceId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_102\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n  // newTag tag_94, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n    tag_102:\n      swap1\n  // end of CompilerUtils::storeInMemory()\n      0x00\n      mstore\n      blake2b(0x00, 0x20)\n      swap1\n      0x02\n  // CompilerUtils::moveToStackTop(2, 1)\n  // CompilerUtils::moveIntoStack(1, 2)\n  // CompilerUtils::rotateStackDown(3)\n      mul\n      add\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::moveToStackTop(2, 1)\n  // CompilerUtils::moveIntoStack(1, 2)\n  // CompilerUtils::rotateStackDown(3)\n        /* \"contracts/Vitasensus.solpp\":12509:12570  SpaceSettings storage spaceSettings = _spaceSettings[spaceId] */\n      swap1\n      pop\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::moveToStackTop(2, 1)\n  // CompilerUtils::moveIntoStack(1, 2)\n  // CompilerUtils::rotateStackDown(3)\n        /* \"contracts/Vitasensus.solpp\":12614:12623  threshold */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":12574:12587  spaceSettings */\n      dup2\n  // end of CompilerUtils::rotateStackDown()\n        /* \"contracts/Vitasensus.solpp\":12574:12611  spaceSettings.createProposalThreshold */\n      0x00\n      add\n        /* \"contracts/Vitasensus.solpp\":12574:12623  spaceSettings.createProposalThreshold = threshold */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Vitasensus.solpp\":12672:12691  adminCreateProposal */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":12627:12640  spaceSettings */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":12627:12669  spaceSettings.onlyAdminsCanCreateProposals */\n      0x01\n      add\n  // CompilerUtils::copyToStackTop(4, 1)\n      0x00\n  // CompilerUtils::convertType(): address -> address\n        /* \"contracts/Vitasensus.solpp\":12627:12691  spaceSettings.onlyAdminsCanCreateProposals = adminCreateProposal */\n      0x0100\n      exp\n  // end of CompilerUtils::convertType()\n      dup2\n      sload\n      dup2\n      0xff\n  // CompilerUtils::popStackSlots(1)\n      mul\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendStackVariableInitialisation(Vote storage vote)\n      not\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::appendVariable(_spacesProposalsVotes, _spacesProposalsVotes)\n      and\n      swap1\n      dup4\n      iszero\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      iszero\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mul\n      or\n  // bytes of type uint256: 32\n      swap1\n      sstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      pop\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":2830:2831  _ */\n      pop\n        /* \"contracts/Vitasensus.solpp\":12354:12695  function updateSpaceCreateProposalThreshold(... */\n      pop\n  // bytes of type uint256: 32\n      pop\n      pop\n  // end of CompilerUtils::storeInMemoryDynamic()\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":10086:10505  function setSpaceAdmins(uint256 spaceId, address[] memory newAdmins)... */\n    tag_9:  // declaration of function setSpaceAdmins\n        /* \"contracts/Vitasensus.solpp\":10186:10193  spaceId */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":2564:2591  _requireSpaceOwner(spaceId) */\n      tag_105\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n        /* \"contracts/Vitasensus.solpp\":2583:2590  spaceId */\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":2564:2582  _requireSpaceOwner */\n      tag_106\n        /* \"contracts/Vitasensus.solpp\":2564:2591  _requireSpaceOwner(spaceId) */\n      jump\t// in\n  // bytes of type uint256: 32\n    tag_105:  // return of function function (uint256) view\n        /* \"contracts/Vitasensus.solpp\":10205:10218  uint256 index */\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":10200:10344  for (uint256 index = 0; index < _spacesAdmins[spaceId].length; index++) {... */\n    tag_108:\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":10232:10245  _spacesAdmins */\n      0x05\n        /* \"contracts/Vitasensus.solpp\":10232:10254  _spacesAdmins[spaceId] */\n      0x00\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":10246:10253  spaceId */\n      dup6\n        /* \"contracts/Vitasensus.solpp\":10232:10254  _spacesAdmins[spaceId] */\n      dup2\n  // end of CompilerUtils::storeInMemoryDynamic()\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n  // ExpressionCompiler::appendVariable(voter, voter)\n      mstore\n  // CompilerUtils::convertType(): address -> address\n      0x20\n      add\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      0x00\n      blake2b\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":10232:10261  _spacesAdmins[spaceId].length */\n      dup1\n      sload\n  // bytes of type address: 32\n      swap1\n      pop\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":10224:10229  index */\n      dup2\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":10224:10261  index < _spacesAdmins[spaceId].length */\n      lt\n        /* \"contracts/Vitasensus.solpp\":10200:10344  for (uint256 index = 0; index < _spacesAdmins[spaceId].length; index++) {... */\n      iszero\n  // bytes of type uint256: 32\n      tag_109\n      jumpi\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":10334:10339  false */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":10277:10291  _spacesIsAdmin */\n      0x06\n        /* \"contracts/Vitasensus.solpp\":10277:10300  _spacesIsAdmin[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":10292:10299  spaceId */\n      dup7\n  // CompilerUtils::convertType(): struct Vitasensus.Vote storage ref -> struct Vitasensus.Vote storage pointer\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackVariable(vote)\n        /* \"contracts/Vitasensus.solpp\":10277:10300  _spacesIsAdmin[spaceId] */\n      dup2\n      mstore\n  // ExpressionCompiler::appendVariable(choiceIndex, choiceIndex)\n      0x20\n  // ExpressionCompiler::visit(_memberAccess=vote.choiceIndex)\n  // ExpressionCompiler::appendVariable(vote, vote)\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":10277:10331  _spacesIsAdmin[spaceId][_spacesAdmins[spaceId][index]] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":10301:10314  _spacesAdmins */\n      0x05\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/Vitasensus.solpp\":10301:10323  _spacesAdmins[spaceId] */\n      0x00\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(votes, votes)\n        /* \"contracts/Vitasensus.solpp\":10315:10322  spaceId */\n      dup9\n  // ExpressionCompiler::visit(_memberAccess=vote.votes)\n  // ExpressionCompiler::appendVariable(vote, vote)\n        /* \"contracts/Vitasensus.solpp\":10301:10323  _spacesAdmins[spaceId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      add\n      0x00\n  // CompilerUtils::popStackSlots(1)\n      blake2b\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(votes, votes)\n        /* \"contracts/Vitasensus.solpp\":10324:10329  index */\n      dup5\n  // ExpressionCompiler::visit(_memberAccess=proposal.votes)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n        /* \"contracts/Vitasensus.solpp\":10301:10330  _spacesAdmins[spaceId][index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_111\n  // ExpressionCompiler::appendVariable(choiceIndex, choiceIndex)\n      jumpi\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n  // newPushTag tag_95, desc: \n      0x24\n      0x00\n  // Jump to tag_94\n      revert\n    tag_111:\n      swap1\n      0x00\n      mstore\n      blake2b(0x00, 0x20)\n      add\n      0x00\n      swap1\n  // newTag tag_96, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      sload\n      swap1\n  // end of CompilerUtils::storeInMemory()\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Vitasensus.solpp\":10277:10331  _spacesIsAdmin[spaceId][_spacesAdmins[spaceId][index]] */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // CompilerUtils::copyToStackTop(3, 1)\n      and\n  // CompilerUtils::copyToStackTop(3, 2)\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n  // CompilerContext::callYulFunction(name=checked_add_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_97, desc: return of Yul function checked_add_t_uint256\n      0x20\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      add\n      swap1\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_98, desc: checked_add_t_uint256\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n      0x00\n        /* \"contracts/Vitasensus.solpp\":10277:10339  _spacesIsAdmin[spaceId][_spacesAdmins[spaceId][index]] = false */\n      0x0100\n      exp\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      dup2\n      sload\n  // CompilerUtils::popStackSlots(1)\n      dup2\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(2)\n      0xff\n      mul\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      not\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      and\n  // CompilerUtils::popStackSlots(2)\n      swap1\n      dup4\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 5 parameters and 0 return parameters\n  //  current stackLayout [0 -1 -1 -1 -1 -1 ]\n      iszero\n  //  current stackLayout [0 -1 -1 -1 -1 ]\n      iszero\n  //  current stackLayout [0 -1 -1 -1 ]\n      mul\n  //  current stackLayout [0 -1 -1 ]\n      or\n  //  current stackLayout [0 -1 ]\n      swap1\n      sstore\n      pop\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function updateSpaceCreateProposalThreshold(\n\t\tuint256 spaceId,\n\t\tuint256 threshold,\n\t\tbool adminCreateProposal\n\t) external requireSpaceAdmin(spaceId) {\n\t\tSpaceSettings storage spaceSettings = _spaceSettings[spaceId];\n\t\tspaceSettings.createProposalThreshold = threshold;\n\t\tspaceSettings.onlyAdminsCanCreateProposals = adminCreateProposal;\n\t}\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":10263:10270  index++ */\n      dup1\n  // newTag tag_99, desc: return tag of updateSpaceCreateProposalThreshold\n  // start of code block of updateSpaceCreateProposalThreshold\n  // newPushTag tag_100, desc: return of function function (uint256) view\n      dup1\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      tag_113\n  // newTag tag_101, desc: declaration of function _requireSpaceAdmin\n      swap1\n      tag_64\n      jump\t// in\n    tag_113:  // return of Yul function increment_t_uint256\n      swap2\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendModifierOrFunctionCode() for function updateSpaceCreateProposalThreshold(\n\t\tuint256 spaceId,\n\t\tuint256 threshold,\n\t\tbool adminCreateProposal\n\t) external requireSpaceAdmin(spaceId) {\n\t\tSpaceSettings storage spaceSettings = _spaceSettings[spaceId];\n\t\tspaceSettings.createProposalThreshold = threshold;\n\t\tspaceSettings.onlyAdminsCanCreateProposals = adminCreateProposal;\n\t}\n  // newTag tag_102, desc: return tag of updateSpaceCreateProposalThreshold\n  // start of code block of updateSpaceCreateProposalThreshold\n  // ContractCompiler::appendStackVariableInitialisation(SpaceSettings storage spaceSettings)\n      pop\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::appendVariable(_spaceSettings, _spaceSettings)\n      pop\n        /* \"contracts/Vitasensus.solpp\":10200:10344  for (uint256 index = 0; index < _spacesAdmins[spaceId].length; index++) {... */\n      jump(tag_108)\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n    tag_109:\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      pop\n        /* \"contracts/Vitasensus.solpp\":10352:10365  uint256 index */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":10347:10464  for (uint256 index = 0; index < newAdmins.length; index++) {... */\n    tag_114:\n        /* \"contracts/Vitasensus.solpp\":10379:10388  newAdmins */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":10379:10395  newAdmins.length */\n      mload\n        /* \"contracts/Vitasensus.solpp\":10371:10376  index */\n      dup2\n  // newPushTag tag_103, desc: \n        /* \"contracts/Vitasensus.solpp\":10371:10395  index < newAdmins.length */\n      lt\n        /* \"contracts/Vitasensus.solpp\":10347:10464  for (uint256 index = 0; index < newAdmins.length; index++) {... */\n      iszero\n  // Jump to tag_102\n      tag_115\n      jumpi\n        /* \"contracts/Vitasensus.solpp\":10455:10459  true */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":10411:10425  _spacesIsAdmin */\n      0x06\n        /* \"contracts/Vitasensus.solpp\":10411:10434  _spacesIsAdmin[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":10426:10433  spaceId */\n      dup7\n        /* \"contracts/Vitasensus.solpp\":10411:10434  _spacesIsAdmin[spaceId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n  // newTag tag_104, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup2\n      mstore\n  // end of CompilerUtils::storeInMemory()\n      0x20\n      add\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":10411:10452  _spacesIsAdmin[spaceId][newAdmins[index]] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":10435:10444  newAdmins */\n      dup6\n        /* \"contracts/Vitasensus.solpp\":10445:10450  index */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":10435:10451  newAdmins[index] */\n      dup2\n      mload\n      dup2\n  // CompilerUtils::convertType(): struct Vitasensus.SpaceSettings storage ref -> struct Vitasensus.SpaceSettings storage pointer\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackVariable(spaceSettings)\n      lt\n      tag_117\n  // ExpressionCompiler::appendVariable(threshold, threshold)\n      jumpi\n  // ExpressionCompiler::visit(_memberAccess=spaceSettings.createProposalThreshold)\n  // ExpressionCompiler::appendVariable(spaceSettings, spaceSettings)\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      0x24\n      0x00\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      revert\n    tag_117:\n  // CompilerUtils::popStackSlots(1)\n      0x20\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(adminCreateProposal, adminCreateProposal)\n      mul\n  // ExpressionCompiler::visit(_memberAccess=spaceSettings.onlyAdminsCanCreateProposals)\n  // ExpressionCompiler::appendVariable(spaceSettings, spaceSettings)\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Vitasensus.solpp\":10411:10452  _spacesIsAdmin[spaceId][newAdmins[index]] */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n  // CompilerUtils::copyToStackTop(4, 1)\n      mstore\n  // CompilerUtils::convertType(): bool -> bool\n      0x20\n      add\n  // end of CompilerUtils::convertType()\n      0x00\n      blake2b\n      0x00\n        /* \"contracts/Vitasensus.solpp\":10411:10459  _spacesIsAdmin[spaceId][newAdmins[index]] = true */\n      0x0100\n  // CompilerUtils::popStackSlots(1)\n      exp\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(1)\n      dup2\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      sload\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      dup2\n  // CompilerUtils::popStackSlots(1)\n      0xff\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 3 parameters and 0 return parameters\n  //  current stackLayout [0 -1 -1 -1 ]\n      mul\n  //  current stackLayout [0 -1 -1 ]\n      not\n  //  current stackLayout [0 -1 ]\n      and\n      swap1\n      dup4\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function setSpaceAdmins(uint256 spaceId, address[] memory newAdmins)\n\t\texternal\n\t\trequireSpaceOwner(spaceId)\n\t{\n\t\tfor (uint256 index = 0; index < _spacesAdmins[spaceId].length; index++) {\n\t\t\t_spacesIsAdmin[spaceId][_spacesAdmins[spaceId][index]] = false;\n\t\t}\n\t\tfor (uint256 index = 0; index < newAdmins.length; index++) {\n\t\t\t_spacesIsAdmin[spaceId][newAdmins[index]] = true;\n\t\t}\n\t\t_spacesAdmins[spaceId] = newAdmins;\n\t}\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      iszero\n  // newTag tag_105, desc: return tag of setSpaceAdmins\n  // start of code block of setSpaceAdmins\n  // newPushTag tag_106, desc: return of function function (uint256) view\n      iszero\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      mul\n  // newTag tag_107, desc: declaration of function _requireSpaceOwner\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Vitasensus.solpp\":10397:10404  index++ */\n      dup1\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendModifierOrFunctionCode() for function setSpaceAdmins(uint256 spaceId, address[] memory newAdmins)\n\t\texternal\n\t\trequireSpaceOwner(spaceId)\n\t{\n\t\tfor (uint256 index = 0; index < _spacesAdmins[spaceId].length; index++) {\n\t\t\t_spacesIsAdmin[spaceId][_spacesAdmins[spaceId][index]] = false;\n\t\t}\n\t\tfor (uint256 index = 0; index < newAdmins.length; index++) {\n\t\t\t_spacesIsAdmin[spaceId][newAdmins[index]] = true;\n\t\t}\n\t\t_spacesAdmins[spaceId] = newAdmins;\n\t}\n  // newTag tag_108, desc: return tag of setSpaceAdmins\n  // start of code block of setSpaceAdmins\n  // newTag tag_109, desc: \n  // newTag tag_110, desc: \n  // newTag tag_111, desc: \n  // ContractCompiler::appendStackVariableInitialisation(uint256 index)\n      dup1\n  // end of ContractCompiler::appendStackVariableInitialisation()\n      tag_118\n  // CompilerUtils::convertType(): int_const 0 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackVariable(index)\n      swap1\n      tag_64\n      jump\t// in\n  // ExpressionCompiler::visit(_memberAccess=_spacesAdmins[spaceId].length)\n  // ExpressionCompiler::appendVariable(_spacesAdmins, _spacesAdmins)\n    tag_118:  // return of Yul function increment_t_uint256\n      swap2\n      pop\n      pop\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":10347:10464  for (uint256 index = 0; index < newAdmins.length; index++) {... */\n      tag_114\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jump\n    tag_115:\n  // bytes of type uint256: 32\n      pop\n        /* \"contracts/Vitasensus.solpp\":10492:10501  newAdmins */\n      dup2\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":10467:10480  _spacesAdmins */\n      0x05\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":10467:10489  _spacesAdmins[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":10481:10488  spaceId */\n      dup6\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":10467:10489  _spacesAdmins[spaceId] */\n      dup2\n      mstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(index, index)\n      blake2b\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":10467:10501  _spacesAdmins[spaceId] = newAdmins */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n  // ExpressionCompiler::appendVariable(_spacesIsAdmin, _spacesIsAdmin)\n      add\n      swap1\n      tag_119\n      swap3\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      swap2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      tag_120\n  // bytes of type uint256: 32\n      jump\t// in\n    tag_119:\n  // end of CompilerUtils::storeInMemoryDynamic()\n      pop\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":10086:10505  function setSpaceAdmins(uint256 spaceId, address[] memory newAdmins)... */\n      pop\n      pop\n  // bytes of type uint256: 32\n      pop\n      jump\t// out\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":14412:14690  function getSpaceSettings(uint256 spaceId)... */\n    tag_10:  // declaration of function getSpaceSettings\n        /* \"contracts/Vitasensus.solpp\":14484:14509  uint256 proposalThreshold */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":14511:14539  bool onlyAdminCreateProposal */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":14546:14576  SpaceSettings storage settings */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":14579:14593  _spaceSettings */\n      0x02\n  // ExpressionCompiler::appendVariable(_spacesAdmins, _spacesAdmins)\n        /* \"contracts/Vitasensus.solpp\":14594:14601  spaceId */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":14579:14602  _spaceSettings[spaceId] */\n      dup2\n      sload\n      dup2\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      lt\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      tag_122\n      jumpi\n  // bytes of type uint256: 32\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n      mstore\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x32\n      0x04\n  // bytes of type uint256: 32\n      mstore\n      0x24\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x00\n      revert\n    tag_122:\n      swap1\n  // ExpressionCompiler::appendVariable(index, index)\n      0x00\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mstore\n      blake2b(0x00, 0x20)\n      swap1\n      0x02\n  // newPushTag tag_112, desc: \n      mul\n      add\n  // Jump to tag_111\n        /* \"contracts/Vitasensus.solpp\":14546:14602  SpaceSettings storage settings = _spaceSettings[spaceId] */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":14614:14622  settings */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":14614:14646  settings.createProposalThreshold */\n      0x00\n      add\n      sload\n        /* \"contracts/Vitasensus.solpp\":14648:14656  settings */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":14648:14685  settings.onlyAdminsCanCreateProposals */\n      0x01\n      add\n      0x00\n      swap1\n  // newTag tag_113, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      sload\n      swap1\n  // end of CompilerUtils::storeInMemory()\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Vitasensus.solpp\":14606:14686  return (settings.createProposalThreshold, settings.onlyAdminsCanCreateProposals) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":14412:14690  function getSpaceSettings(uint256 spaceId)... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1156:1241   */\n    tag_11:  // declaration of function owner\n  // CompilerUtils::convertType(): address -> address\n        /* \"contracts/Ownable.sol\":1202:1209   */\n      0x00\n        /* \"contracts/Ownable.sol\":1228:1234   */\n      dup1\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      0x00\n      swap1\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      sload\n      swap1\n  // bytes of type address: 32\n      0x0100\n      exp\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap1\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      div\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // bytes of type uint256: 32\n      and\n        /* \"contracts/Ownable.sol\":1221:1234   */\n      swap1\n  // end of CompilerUtils::storeInMemoryDynamic()\n      pop\n        /* \"contracts/Ownable.sol\":1156:1241   */\n      swap1\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":4441:4536  function isOperator(address _addr) public view returns (bool) {... */\n    tag_12:  // declaration of function isOperator\n        /* \"contracts/Vitasensus.solpp\":4497:4501  bool */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":4514:4525  _isOperator */\n      0x0b\n        /* \"contracts/Vitasensus.solpp\":4514:4532  _isOperator[_addr] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":4526:4531  _addr */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":4514:4532  _isOperator[_addr] */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n  // CompilerUtils::copyToStackTop(4, 1)\n      mstore\n  // CompilerUtils::convertType(): bool -> bool\n      0x20\n      add\n  // end of CompilerUtils::convertType()\n      swap1\n      dup2\n      mstore\n      0x20\n  // CompilerUtils::popStackSlots(1)\n      add\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      0x00\n  // ExpressionCompiler::appendVariable(index, index)\n      blake2b\n      0x00\n  // CompilerContext::callYulFunction(name=increment_t_uint256, _inArgs=1, _outArgs=1)\n  // newPushTag tag_114, desc: return of Yul function increment_t_uint256\n      swap1\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      sload\n  // end of CompilerUtils::rotateStackDown()\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n  // CompilerUtils::popStackSlots(1)\n      0xff\n  // end of CompilerUtils::popStackSlots()\n      and\n        /* \"contracts/Vitasensus.solpp\":4507:4532  return _isOperator[_addr] */\n      swap1\n      pop\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/Vitasensus.solpp\":4441:4536  function isOperator(address _addr) public view returns (bool) {... */\n      swap2\n  // end of CompilerUtils::popStackSlots()\n  // newTag tag_115, desc: \n  // newTag tag_116, desc: \n  // newTag tag_117, desc: \n  // ContractCompiler::appendStackVariableInitialisation(uint256 index)\n      swap1\n  // end of ContractCompiler::appendStackVariableInitialisation()\n      pop\n  // CompilerUtils::convertType(): int_const 0 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackVariable(index)\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":14708:15609  function getSpaces(uint256 skip, uint256 limit)... */\n    tag_13:  // declaration of function getSpaces\n        /* \"contracts/Vitasensus.solpp\":14789:14811  bytes32[] memory names */\n      0x60\n  // ExpressionCompiler::visit(_memberAccess=newAdmins.length)\n  // ExpressionCompiler::appendVariable(newAdmins, newAdmins)\n        /* \"contracts/Vitasensus.solpp\":14816:14841  vitetoken[] memory tokens */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":14846:14870  bytes32[] memory avatars */\n      0x60\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(index, index)\n        /* \"contracts/Vitasensus.solpp\":14875:14900  bytes32[] memory websites */\n      dup1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":14905:14934  uint256[] memory memberCounts */\n      0x60\n        /* \"contracts/Vitasensus.solpp\":14955:14962  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":14955:14969  _spaces.length */\n      dup1\n      sload\n      swap1\n  // ExpressionCompiler::appendVariable(_spacesIsAdmin, _spacesIsAdmin)\n      pop\n        /* \"contracts/Vitasensus.solpp\":14948:14952  skip */\n      dup8\n        /* \"contracts/Vitasensus.solpp\":14948:14969  skip < _spaces.length */\n      lt\n        /* \"contracts/Vitasensus.solpp\":14944:15606  if (skip < _spaces.length) {... */\n      iszero\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      tag_127\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jumpi\n        /* \"contracts/Vitasensus.solpp\":14976:14990  uint256 length */\n      0x00\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":15019:15024  limit */\n      dup7\n        /* \"contracts/Vitasensus.solpp\":15011:15015  skip */\n      dup9\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":14994:15001  _spaces */\n      0x01\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":14994:15008  _spaces.length */\n      dup1\n      sload\n  // bytes of type uint256: 32\n      swap1\n      pop\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":14994:15015  _spaces.length - skip */\n      tag_128\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n  // ExpressionCompiler::appendVariable(newAdmins, newAdmins)\n    tag_128:  // return of Yul function checked_sub_t_uint256\n  // ExpressionCompiler::appendVariable(index, index)\n        /* \"contracts/Vitasensus.solpp\":14993:15024  (_spaces.length - skip) > limit */\n      gt\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":14993:15056  (_spaces.length - skip) > limit ? limit : _spaces.length - skip */\n      tag_130\n      jumpi\n        /* \"contracts/Vitasensus.solpp\":15052:15056  skip */\n      dup8\n        /* \"contracts/Vitasensus.solpp\":15035:15042  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":15035:15049  _spaces.length */\n      dup1\n      sload\n  // newPushTag tag_118, desc: \n      swap1\n      pop\n  // Jump to tag_117\n        /* \"contracts/Vitasensus.solpp\":15035:15056  _spaces.length - skip */\n      tag_131\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_131:  // return of Yul function checked_sub_t_uint256\n        /* \"contracts/Vitasensus.solpp\":14993:15056  (_spaces.length - skip) > limit ? limit : _spaces.length - skip */\n      jump(tag_132)\n    tag_130:\n        /* \"contracts/Vitasensus.solpp\":15027:15032  limit */\n      dup7\n        /* \"contracts/Vitasensus.solpp\":14993:15056  (_spaces.length - skip) > limit ? limit : _spaces.length - skip */\n    tag_132:\n        /* \"contracts/Vitasensus.solpp\":14976:15056  uint256 length = (_spaces.length - skip) > limit ? limit : _spaces.length - skip */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":15083:15089  length */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":15069:15090  new bytes32[](length) */\n      0xffffffffffffffff\n  // CompilerUtils::loadFromMemoryHelper()\n      dup2\n  // CompilerUtils::convertType(): address -> address\n      gt\n      iszero\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      tag_133\n      jumpi\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n  // bytes of type address: 32\n      mstore\n      0x41\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x04\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mstore\n      0x24\n  // bytes of type uint256: 32\n      0x00\n      revert\n  // end of CompilerUtils::storeInMemoryDynamic()\n    tag_133:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n  // CompilerUtils::copyToStackTop(4, 1)\n      add\n  // CompilerUtils::convertType(): bool -> bool\n      0x40\n      mstore\n  // end of CompilerUtils::convertType()\n      dup1\n      iszero\n      tag_134\n      jumpi\n  // CompilerUtils::popStackSlots(1)\n      dup2\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      0x20\n  // ExpressionCompiler::appendVariable(index, index)\n      add\n      0x20\n  // CompilerContext::callYulFunction(name=increment_t_uint256, _inArgs=1, _outArgs=1)\n  // newPushTag tag_119, desc: return of Yul function increment_t_uint256\n      dup3\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      mul\n  // end of CompilerUtils::rotateStackDown()\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n  // CompilerUtils::popStackSlots(1)\n      dup3\n  // end of CompilerUtils::popStackSlots()\n      add\n      swap2\n      pop\n  // CompilerUtils::popStackSlots(1)\n      pop\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(newAdmins, newAdmins)\n      swap1\n  // ExpressionCompiler::appendVariable(_spacesAdmins, _spacesAdmins)\n      pop\n    tag_134:\n      pop\n        /* \"contracts/Vitasensus.solpp\":15061:15090  names = new bytes32[](length) */\n      swap6\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      pop\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":15120:15126  length */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":15104:15127  new vitetoken[](length) */\n      0xffffffffffffffff\n  // bytes of type uint256: 32\n      dup2\n      gt\n  // end of CompilerUtils::storeInMemoryDynamic()\n      iszero\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      tag_135\n      jumpi\n  // bytes of type uint256: 32\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n      mstore\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_135:\n      mload(0x40)\n      swap1\n  // CompilerContext::callLowLevelFunction($copyArrayToStorage_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_storage)\n  // newPushTag tag_120, desc: \n      dup1\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      dup3\n      mstore\n      dup1\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_121, desc: $copyArrayToStorage_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_storage\n      0x20\n      mul\n      0x20\n  // CompilerUtils::popStackSlots(1)\n      add\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      dup3\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      add\n  // CompilerUtils::popStackSlots(1)\n      0x40\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 0 return parameters\n  //  current stackLayout [0 -1 -1 ]\n      mstore\n  //  current stackLayout [0 -1 ]\n      dup1\n      iszero\n      tag_136\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(uint256 proposalThreshold)\n      jumpi\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(bool onlyAdminCreateProposal)\n      dup2\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function getSpaceSettings(uint256 spaceId)\n\t\texternal\n\t\tview\n\t\treturns (uint256 proposalThreshold, bool onlyAdminCreateProposal)\n\t{\n\t\tSpaceSettings storage settings = _spaceSettings[spaceId];\n\t\treturn (settings.createProposalThreshold, settings.onlyAdminsCanCreateProposals);\n\t}\n  // newTag tag_122, desc: return tag of getSpaceSettings\n  // start of code block of getSpaceSettings\n  // ContractCompiler::appendStackVariableInitialisation(SpaceSettings storage settings)\n      0x20\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::appendVariable(_spaceSettings, _spaceSettings)\n      add\n      0x20\n      dup3\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      mul\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n  // newPushTag tag_123, desc: \n      add\n      swap2\n  // Jump to tag_122\n      pop\n      pop\n      swap1\n      pop\n    tag_136:\n      pop\n        /* \"contracts/Vitasensus.solpp\":15095:15127  tokens = new vitetoken[](length) */\n      swap5\n      pop\n        /* \"contracts/Vitasensus.solpp\":15156:15162  length */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":15142:15163  new bytes32[](length) */\n      0xffffffffffffffff\n      dup2\n  // newTag tag_124, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      gt\n      iszero\n  // end of CompilerUtils::storeInMemory()\n      tag_137\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x41)\n      0x24\n      0x00\n  // CompilerUtils::convertType(): struct Vitasensus.SpaceSettings storage ref -> struct Vitasensus.SpaceSettings storage pointer\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackVariable(settings)\n      revert\n    tag_137:\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::visit(_memberAccess=settings.createProposalThreshold)\n  // ExpressionCompiler::appendVariable(settings, settings)\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n  // ExpressionCompiler::visit(_memberAccess=settings.onlyAdminsCanCreateProposals)\n  // ExpressionCompiler::appendVariable(settings, settings)\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_138\n      jumpi\n  // CompilerUtils::moveToStackVariable(onlyAdminCreateProposal)\n      dup2\n      0x20\n  // CompilerUtils::moveToStackVariable(proposalThreshold)\n      add\n      0x20\n  // CompilerUtils::popAndJump(toHeight=4, jumpTo=tag_121:)\n  // CompilerUtils::popStackSlots(1)\n      dup3\n  // end of CompilerUtils::popStackSlots()\n      mul\n      dup1\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(1)\n      calldatasize\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      dup4\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 2 return parameters\n  //  current stackLayout [2 -1 0 1 ]\n      calldatacopy\n  //  current stackLayout [2 1 0 -1 ]\n      dup1\n  //  current stackLayout [2 1 0 ]\n      dup3\n      add\n      swap2\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(address)\n      pop\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function owner() public view virtual returns (address) {\n        return _owner;\n    }\n  // newTag tag_125, desc: return tag of owner\n  // start of code block of owner\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::appendVariable(_owner, _owner)\n      pop\n      swap1\n      pop\n    tag_138:\n      pop\n        /* \"contracts/Vitasensus.solpp\":15132:15163  avatars = new bytes32[](length) */\n      swap4\n      pop\n        /* \"contracts/Vitasensus.solpp\":15193:15199  length */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":15179:15200  new bytes32[](length) */\n      0xffffffffffffffff\n      dup2\n      gt\n  // CompilerUtils::moveToStackVariable()\n      iszero\n      tag_139\n  // CompilerUtils::popAndJump(toHeight=2, jumpTo=tag_124:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 0 parameters and 1 return parameters\n  //  current stackLayout [1 0 ]\n      mstore\n      0x41\n      0x04\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(bool)\n      mstore\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function isOperator(address _addr) public view returns (bool) {\n\t\treturn _isOperator[_addr];\n\t}\n  // newTag tag_126, desc: return tag of isOperator\n  // start of code block of isOperator\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::appendVariable(_isOperator, _isOperator)\n      revert(0x00, 0x24)\n    tag_139:\n  // ExpressionCompiler::appendVariable(_addr, _addr)\n      0x40\n  // CompilerUtils::convertType(): address -> address\n      mload\n      swap1\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      dup1\n      dup3\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mstore\n      dup1\n  // bytes of type address: 32\n      0x20\n      mul\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x20\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      dup3\n  // bytes of type uint256: 32\n      add\n      0x40\n  // end of CompilerUtils::storeInMemoryDynamic()\n      mstore\n      dup1\n      iszero\n      tag_140\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n  // CompilerUtils::moveToStackVariable()\n      calldatasize\n      dup4\n  // CompilerUtils::popAndJump(toHeight=3, jumpTo=tag_125:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      calldatacopy\n      dup1\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      dup3\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 1 return parameters\n  //  current stackLayout [1 -1 0 ]\n      add\n  //  current stackLayout [0 -1 1 ]\n      swap2\n  //  current stackLayout [0 1 -1 ]\n      pop\n      pop\n      swap1\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(bytes32[] memory names)\n  // CompilerUtils::pushZeroPointer()\n      pop\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(vitetoken[] memory tokens)\n  // CompilerUtils::pushZeroPointer()\n    tag_140:\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(bytes32[] memory avatars)\n  // CompilerUtils::pushZeroPointer()\n      pop\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(bytes32[] memory websites)\n  // CompilerUtils::pushZeroPointer()\n        /* \"contracts/Vitasensus.solpp\":15168:15200  websites = new bytes32[](length) */\n      swap3\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(uint256[] memory memberCounts)\n  // CompilerUtils::pushZeroPointer()\n      pop\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function getSpaces(uint256 skip, uint256 limit)\n\t\texternal\n\t\tview\n\t\treturns (\n\t\t\tbytes32[] memory names,\n\t\t\tvitetoken[] memory tokens,\n\t\t\tbytes32[] memory avatars,\n\t\t\tbytes32[] memory websites,\n\t\t\tuint256[] memory memberCounts\n\t\t)\n\t{\n\t\tif (skip < _spaces.length) {\n\t\t\tuint256 length = (_spaces.length - skip) > limit ? limit : _spaces.length - skip;\n\t\t\tnames = new bytes32[](length);\n\t\t\ttokens = new vitetoken[](length);\n\t\t\tavatars = new bytes32[](length);\n\t\t\twebsites = new bytes32[](length);\n\t\t\tmemberCounts = new uint256[](length);\n\n\t\t\tfor (uint256 index = skip; index < _spaces.length && index < (skip + limit); index++) {\n\t\t\t\tnames[index - skip] = _spaces[index].name;\n\t\t\t\ttokens[index - skip] = _spaces[index].token;\n\t\t\t\tavatars[index - skip] = _spaces[index].avatar;\n\t\t\t\twebsites[index - skip] = _spaces[index].website;\n\t\t\t\tmemberCounts[index - skip] = _spacesMembers[index].size();\n\t\t\t}\n\t\t}\n\t}\n  // newTag tag_127, desc: return tag of getSpaces\n  // start of code block of getSpaces\n  // ExpressionCompiler::visit(_memberAccess=_spaces.length)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n        /* \"contracts/Vitasensus.solpp\":15234:15240  length */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":15220:15241  new uint256[](length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_141\n      jumpi\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(skip, skip)\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      0x00\n      mstore\n  // newPushTag tag_128, desc: \n      0x41\n      0x04\n  // Jump to tag_127\n  // ContractCompiler::appendStackVariableInitialisation(uint256 length)\n      mstore\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::appendVariable(limit, limit)\n      0x24\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(skip, skip)\n      0x00\n  // ExpressionCompiler::visit(_memberAccess=_spaces.length)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      revert\n    tag_141:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_129, desc: return of Yul function checked_sub_t_uint256\n      mstore\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup1\n      0x20\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_130, desc: checked_sub_t_uint256\n      mul\n      0x20\n      add\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      dup3\n  // newPushTag tag_131, desc: \n      add\n      0x40\n  // Jump to tag_130\n  // ExpressionCompiler::appendVariable(skip, skip)\n      mstore\n  // ExpressionCompiler::visit(_memberAccess=_spaces.length)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      dup1\n      iszero\n      tag_142\n      jumpi\n      dup2\n      0x20\n      add\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_132, desc: return of Yul function checked_sub_t_uint256\n      0x20\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup3\n      mul\n  // end of CompilerUtils::rotateStackUp()\n      dup1\n      calldatasize\n      dup4\n  // newPushTag tag_133, desc: \n      calldatacopy\n      dup1\n      dup3\n  // ExpressionCompiler::appendVariable(limit, limit)\n      add\n      swap2\n  // CompilerUtils::moveToStackVariable(length)\n      pop\n      pop\n  // ExpressionCompiler::appendVariable(length, length)\n      swap1\n      pop\n    tag_142:\n      pop\n        /* \"contracts/Vitasensus.solpp\":15205:15241  memberCounts = new uint256[](length) */\n      swap2\n  // newPushTag tag_134, desc: \n      pop\n        /* \"contracts/Vitasensus.solpp\":15252:15265  uint256 index */\n      0x00\n  // Jump to tag_133\n        /* \"contracts/Vitasensus.solpp\":15268:15272  skip */\n      dup9\n        /* \"contracts/Vitasensus.solpp\":15252:15272  uint256 index = skip */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":15247:15602  for (uint256 index = skip; index < _spaces.length && index < (skip + limit); index++) {... */\n    tag_143:\n        /* \"contracts/Vitasensus.solpp\":15282:15289  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":15282:15296  _spaces.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":15274:15279  index */\n      dup2\n  // CompilerUtils::fetchFreeMemoryPointer()\n        /* \"contracts/Vitasensus.solpp\":15274:15296  index < _spaces.length */\n      lt\n        /* \"contracts/Vitasensus.solpp\":15274:15322  index < _spaces.length && index < (skip + limit) */\n      dup1\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      iszero\n      tag_146\n      jumpi\n      pop\n        /* \"contracts/Vitasensus.solpp\":15316:15321  limit */\n      dup8\n        /* \"contracts/Vitasensus.solpp\":15309:15313  skip */\n      dup10\n        /* \"contracts/Vitasensus.solpp\":15309:15321  skip + limit */\n      tag_147\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n  // CompilerUtils::storeFreeMemoryPointer()\n    tag_147:  // return of Yul function checked_add_t_uint256\n        /* \"contracts/Vitasensus.solpp\":15300:15305  index */\n      dup2\n  // end of CompilerUtils::storeFreeMemoryPointer()\n        /* \"contracts/Vitasensus.solpp\":15300:15322  index < (skip + limit) */\n      lt\n        /* \"contracts/Vitasensus.solpp\":15274:15322  index < _spaces.length && index < (skip + limit) */\n    tag_146:\n  // newPushTag tag_135, desc: \n        /* \"contracts/Vitasensus.solpp\":15247:15602  for (uint256 index = skip; index < _spaces.length && index < (skip + limit); index++) {... */\n      iszero\n      tag_144\n  // Jump to tag_134\n      jumpi\n        /* \"contracts/Vitasensus.solpp\":15361:15368  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":15369:15374  index */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":15361:15375  _spaces[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_148\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_148:\n      swap1\n  // ExpressionCompiler::appendVariable(names, names)\n      0x00\n      mstore\n      0x20\n  // CompilerUtils::popStackSlots(1)\n      0x00\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(length, length)\n      blake2b\n      swap1\n      0x07\n      mul\n      add\n  // newPushTag tag_136, desc: \n        /* \"contracts/Vitasensus.solpp\":15361:15380  _spaces[index].name */\n      0x00\n      add\n  // Jump to tag_135\n      sload\n        /* \"contracts/Vitasensus.solpp\":15339:15344  names */\n      dup8\n        /* \"contracts/Vitasensus.solpp\":15353:15357  skip */\n      dup11\n        /* \"contracts/Vitasensus.solpp\":15345:15350  index */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":15345:15357  index - skip */\n      tag_150\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_150:  // return of Yul function checked_sub_t_uint256\n  // CompilerUtils::fetchFreeMemoryPointer()\n        /* \"contracts/Vitasensus.solpp\":15339:15358  names[index - skip] */\n      dup2\n      mload\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      dup2\n      lt\n      tag_151\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      0x24\n  // CompilerUtils::storeFreeMemoryPointer()\n      0x00\n      revert\n  // end of CompilerUtils::storeFreeMemoryPointer()\n    tag_151:\n      0x20\n  // newPushTag tag_137, desc: \n      mul\n      0x20\n  // Jump to tag_136\n      add\n      add\n        /* \"contracts/Vitasensus.solpp\":15339:15380  names[index - skip] = _spaces[index].name */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":15409:15416  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":15417:15422  index */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":15409:15423  _spaces[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_152\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      0x32\n      0x04\n  // ExpressionCompiler::appendVariable(tokens, tokens)\n      mstore\n      0x24\n      0x00\n  // CompilerUtils::popStackSlots(1)\n      revert\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(length, length)\n    tag_152:\n      swap1\n      0x00\n      mstore\n      0x20\n  // newPushTag tag_138, desc: \n      0x00\n      blake2b\n  // Jump to tag_137\n      swap1\n      0x07\n      mul\n      add\n        /* \"contracts/Vitasensus.solpp\":15409:15429  _spaces[index].token */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x0100\n      exp\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      swap1\n      div\n      0xffffffffffffffffffff\n      and\n        /* \"contracts/Vitasensus.solpp\":15386:15392  tokens */\n      dup7\n        /* \"contracts/Vitasensus.solpp\":15401:15405  skip */\n      dup11\n        /* \"contracts/Vitasensus.solpp\":15393:15398  index */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":15393:15405  index - skip */\n      tag_154\n      swap2\n      swap1\n      tag_129\n  // CompilerUtils::storeFreeMemoryPointer()\n      jump\t// in\n    tag_154:  // return of Yul function checked_sub_t_uint256\n  // end of CompilerUtils::storeFreeMemoryPointer()\n        /* \"contracts/Vitasensus.solpp\":15386:15406  tokens[index - skip] */\n      dup2\n      mload\n  // newPushTag tag_139, desc: \n      dup2\n      lt\n  // Jump to tag_138\n      tag_155\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_155:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Vitasensus.solpp\":15386:15429  tokens[index - skip] = _spaces[index].token */\n      swap1\n      0xffffffffffffffffffff\n      and\n  // ExpressionCompiler::appendVariable(avatars, avatars)\n      swap1\n      dup2\n      0xffffffffffffffffffff\n  // CompilerUtils::popStackSlots(1)\n      and\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(length, length)\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":15459:15466  _spaces */\n      0x01\n  // newPushTag tag_140, desc: \n        /* \"contracts/Vitasensus.solpp\":15467:15472  index */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":15459:15473  _spaces[index] */\n      dup2\n  // Jump to tag_139\n      sload\n      dup2\n      lt\n      tag_156\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      0x32\n      0x04\n  // CompilerUtils::fetchFreeMemoryPointer()\n      mstore\n      0x24\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      0x00\n      revert\n    tag_156:\n      swap1\n      0x00\n      mstore\n      blake2b(0x00, 0x20)\n      swap1\n      0x07\n  // CompilerUtils::storeFreeMemoryPointer()\n      mul\n      add\n  // end of CompilerUtils::storeFreeMemoryPointer()\n        /* \"contracts/Vitasensus.solpp\":15459:15480  _spaces[index].avatar */\n      0x01\n      add\n  // newPushTag tag_141, desc: \n      sload\n        /* \"contracts/Vitasensus.solpp\":15435:15442  avatars */\n      dup6\n  // Jump to tag_140\n        /* \"contracts/Vitasensus.solpp\":15451:15455  skip */\n      dup11\n        /* \"contracts/Vitasensus.solpp\":15443:15448  index */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":15443:15455  index - skip */\n      tag_158\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_158:  // return of Yul function checked_sub_t_uint256\n        /* \"contracts/Vitasensus.solpp\":15435:15456  avatars[index - skip] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_159\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n  // ExpressionCompiler::appendVariable(websites, websites)\n      revert(0x00, 0x24)\n  // CompilerUtils::popStackSlots(1)\n    tag_159:\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(length, length)\n      0x20\n      mul\n      0x20\n      add\n      add\n  // newPushTag tag_142, desc: \n        /* \"contracts/Vitasensus.solpp\":15435:15480  avatars[index - skip] = _spaces[index].avatar */\n      dup2\n      dup2\n  // Jump to tag_141\n      mstore\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":15511:15518  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":15519:15524  index */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":15511:15525  _spaces[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_160\n  // CompilerUtils::fetchFreeMemoryPointer()\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      0x00\n      mstore\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_160:\n      swap1\n      0x00\n  // CompilerUtils::storeFreeMemoryPointer()\n      mstore\n      0x20\n  // end of CompilerUtils::storeFreeMemoryPointer()\n      0x00\n      blake2b\n  // newPushTag tag_143, desc: \n      swap1\n      0x07\n  // Jump to tag_142\n      mul\n      add\n        /* \"contracts/Vitasensus.solpp\":15511:15533  _spaces[index].website */\n      0x02\n      add\n      sload\n        /* \"contracts/Vitasensus.solpp\":15486:15494  websites */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":15503:15507  skip */\n      dup11\n        /* \"contracts/Vitasensus.solpp\":15495:15500  index */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":15495:15507  index - skip */\n      tag_162\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_162:  // return of Yul function checked_sub_t_uint256\n        /* \"contracts/Vitasensus.solpp\":15486:15508  websites[index - skip] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_163\n      jumpi\n  // ExpressionCompiler::appendVariable(memberCounts, memberCounts)\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n  // CompilerUtils::popStackSlots(1)\n      0x32\n  // end of CompilerUtils::popStackSlots()\n  // newTag tag_144, desc: \n  // newTag tag_145, desc: \n  // newTag tag_146, desc: \n  // ContractCompiler::appendStackVariableInitialisation(uint256 index)\n      0x04\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::appendVariable(skip, skip)\n      mstore\n  // CompilerUtils::moveToStackVariable(index)\n      revert(0x00, 0x24)\n  // ExpressionCompiler::visit(_memberAccess=_spaces.length)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n    tag_163:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Vitasensus.solpp\":15486:15533  websites[index - skip] = _spaces[index].website */\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(index, index)\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mstore\n      pop\n      pop\n  // newPushTag tag_147, desc: \n        /* \"contracts/Vitasensus.solpp\":15568:15596  _spacesMembers[index].size() */\n      tag_164\n        /* \"contracts/Vitasensus.solpp\":15568:15582  _spacesMembers */\n      0x04\n  // Jump to tag_146\n        /* \"contracts/Vitasensus.solpp\":15568:15589  _spacesMembers[index] */\n      0x00\n  // ExpressionCompiler::appendVariable(limit, limit)\n        /* \"contracts/Vitasensus.solpp\":15583:15588  index */\n      dup4\n  // ExpressionCompiler::appendVariable(skip, skip)\n        /* \"contracts/Vitasensus.solpp\":15568:15589  _spacesMembers[index] */\n      dup2\n  // CompilerContext::callYulFunction(name=checked_add_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_148, desc: return of Yul function checked_add_t_uint256\n      mstore\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      0x20\n      add\n  // end of CompilerUtils::rotateStackUp()\n      swap1\n      dup2\n      mstore\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(index, index)\n      0x20\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      add\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":15568:15594  _spacesMembers[index].size */\n      tag_165\n        /* \"contracts/Vitasensus.solpp\":15568:15596  _spacesMembers[index].size() */\n      jump\t// in\n  // ExpressionCompiler::visit(_memberAccess=_spaces[index].name)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n    tag_164:  // return of function function (struct IterableMapping.Map) view returns (uint256)\n        /* \"contracts/Vitasensus.solpp\":15539:15551  memberCounts */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":15560:15564  skip */\n      dup11\n  // ExpressionCompiler::appendVariable(index, index)\n        /* \"contracts/Vitasensus.solpp\":15552:15557  index */\n      dup4\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":15552:15564  index - skip */\n      tag_166\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_166:  // return of Yul function checked_sub_t_uint256\n  // newPushTag tag_149, desc: \n        /* \"contracts/Vitasensus.solpp\":15539:15565  memberCounts[index - skip] */\n      dup2\n      mload\n  // Jump to tag_148\n      dup2\n      lt\n      tag_167\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      0x24\n  // newTag tag_150, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x00\n      revert\n  // end of CompilerUtils::storeInMemory()\n    tag_167:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Vitasensus.solpp\":15539:15596  memberCounts[index - skip] = _spacesMembers[index].size() */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":15324:15331  index++ */\n      dup1\n      dup1\n      tag_168\n      swap1\n  // ExpressionCompiler::appendVariable(names, names)\n      tag_64\n  // ExpressionCompiler::appendVariable(skip, skip)\n      jump\t// in\n  // ExpressionCompiler::appendVariable(index, index)\n    tag_168:  // return of Yul function increment_t_uint256\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_151, desc: return of Yul function checked_sub_t_uint256\n      swap2\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      pop\n      pop\n  // end of CompilerUtils::rotateStackUp()\n        /* \"contracts/Vitasensus.solpp\":15247:15602  for (uint256 index = skip; index < _spaces.length && index < (skip + limit); index++) {... */\n      jump(tag_143)\n    tag_144:\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      pop\n        /* \"contracts/Vitasensus.solpp\":14944:15606  if (skip < _spaces.length) {... */\n      pop\n    tag_127:\n        /* \"contracts/Vitasensus.solpp\":14708:15609  function getSpaces(uint256 skip, uint256 limit)... */\n      swap3\n      swap6\n      pop\n  // newPushTag tag_152, desc: \n      swap3\n      swap6\n  // Jump to tag_151\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":13920:14386  function getSpaceExternal(uint256 spaceId)... */\n    tag_14:  // declaration of function getSpaceExternal\n        /* \"contracts/Vitasensus.solpp\":13996:14008  bytes32 name */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":14013:14038  string memory description */\n      0x60\n        /* \"contracts/Vitasensus.solpp\":14043:14058  vitetoken token */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":14063:14077  bytes32 avatar */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":14082:14097  bytes32 website */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":14102:14122  uint256 memberCounts */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":14127:14148  uint256 tokenDecimals */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":14170:14177  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":14178:14185  spaceId */\n      dup9\n        /* \"contracts/Vitasensus.solpp\":14170:14186  _spaces[spaceId] */\n      dup2\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      sload\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      dup2\n      lt\n      tag_170\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      jumpi\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // CompilerUtils::storeInMemoryDynamic(type=bytes32, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=bytes32, ...)\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      0x00\n      mstore\n      0x32\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x04\n      mstore\n  // bytes of type bytes32: 32\n      0x24\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n      revert\n  // CompilerUtils::popStackSlots(1)\n    tag_170:\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=_spaces[index].token)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      swap1\n      0x00\n      mstore\n  // ExpressionCompiler::appendVariable(index, index)\n      0x20\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      0x00\n      blake2b\n      swap1\n      0x07\n      mul\n      add\n  // newPushTag tag_153, desc: \n        /* \"contracts/Vitasensus.solpp\":14170:14191  _spaces[spaceId].name */\n      0x00\n      add\n  // Jump to tag_152\n      sload\n        /* \"contracts/Vitasensus.solpp\":14196:14203  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":14204:14211  spaceId */\n      dup10\n        /* \"contracts/Vitasensus.solpp\":14196:14212  _spaces[spaceId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_172\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n  // newTag tag_154, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mstore\n      0x32\n  // end of CompilerUtils::storeInMemory()\n      0x04\n      mstore\n      revert(0x00, 0x24)\n    tag_172:\n      swap1\n      0x00\n      mstore\n      blake2b(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n        /* \"contracts/Vitasensus.solpp\":14196:14224  _spaces[spaceId].description */\n      0x03\n      add\n        /* \"contracts/Vitasensus.solpp\":14229:14236  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":14237:14244  spaceId */\n      dup11\n        /* \"contracts/Vitasensus.solpp\":14229:14245  _spaces[spaceId] */\n      dup2\n      sload\n  // ExpressionCompiler::appendVariable(tokens, tokens)\n      dup2\n  // ExpressionCompiler::appendVariable(skip, skip)\n      lt\n  // ExpressionCompiler::appendVariable(index, index)\n      tag_174\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_155, desc: return of Yul function checked_sub_t_uint256\n      jumpi\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n  // end of CompilerUtils::rotateStackUp()\n      mstore\n      0x32\n      0x04\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mstore\n      revert(0x00, 0x24)\n    tag_174:\n      swap1\n  // newPushTag tag_156, desc: \n      0x00\n      mstore\n  // Jump to tag_155\n      blake2b(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n        /* \"contracts/Vitasensus.solpp\":14229:14251  _spaces[spaceId].token */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      swap1\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): tokenId -> tokenId\n      div\n      0xffffffffffffffffffff\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      and\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n        /* \"contracts/Vitasensus.solpp\":14256:14263  _spaces */\n      0x01\n  // CompilerUtils::storeInMemoryDynamic(type=tokenId, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=tokenId, ...)\n  // CompilerUtils::convertType(): tokenId -> tokenId\n        /* \"contracts/Vitasensus.solpp\":14264:14271  spaceId */\n      dup12\n        /* \"contracts/Vitasensus.solpp\":14256:14272  _spaces[spaceId] */\n      dup2\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      sload\n      dup2\n  // bytes of type tokenId: 32\n      lt\n      tag_176\n  // end of CompilerUtils::storeInMemoryDynamic()\n      jumpi\n  // CompilerUtils::popStackSlots(1)\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=_spaces[index].avatar)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      0x00\n      mstore\n      0x32\n  // ExpressionCompiler::appendVariable(index, index)\n      0x04\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mstore\n      revert(0x00, 0x24)\n    tag_176:\n      swap1\n  // newPushTag tag_157, desc: \n      0x00\n      mstore\n  // Jump to tag_156\n      blake2b(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n        /* \"contracts/Vitasensus.solpp\":14256:14279  _spaces[spaceId].avatar */\n      0x01\n      add\n      sload\n        /* \"contracts/Vitasensus.solpp\":14284:14291  _spaces */\n      0x01\n  // newTag tag_158, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":14292:14299  spaceId */\n      dup13\n        /* \"contracts/Vitasensus.solpp\":14284:14300  _spaces[spaceId] */\n      dup2\n  // end of CompilerUtils::storeInMemory()\n      sload\n      dup2\n      lt\n      tag_178\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_178:\n  // ExpressionCompiler::appendVariable(avatars, avatars)\n      swap1\n  // ExpressionCompiler::appendVariable(skip, skip)\n      0x00\n  // ExpressionCompiler::appendVariable(index, index)\n      mstore\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_159, desc: return of Yul function checked_sub_t_uint256\n      0x20\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      0x00\n      blake2b\n  // end of CompilerUtils::rotateStackUp()\n      swap1\n      0x07\n      mul\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      add\n        /* \"contracts/Vitasensus.solpp\":14284:14308  _spaces[spaceId].website */\n      0x02\n      add\n      sload\n        /* \"contracts/Vitasensus.solpp\":14313:14343  _spacesMembers[spaceId].size() */\n      tag_180\n        /* \"contracts/Vitasensus.solpp\":14313:14327  _spacesMembers */\n      0x04\n  // newPushTag tag_160, desc: \n        /* \"contracts/Vitasensus.solpp\":14313:14336  _spacesMembers[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":14328:14335  spaceId */\n      dup16\n  // Jump to tag_159\n        /* \"contracts/Vitasensus.solpp\":14313:14336  _spacesMembers[spaceId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":14313:14341  _spacesMembers[spaceId].size */\n      tag_165\n        /* \"contracts/Vitasensus.solpp\":14313:14343  _spacesMembers[spaceId].size() */\n      jump\t// in\n    tag_180:  // return of function function (struct IterableMapping.Map) view returns (uint256)\n        /* \"contracts/Vitasensus.solpp\":14348:14355  _spaces */\n      0x01\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n        /* \"contracts/Vitasensus.solpp\":14356:14363  spaceId */\n      dup15\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n        /* \"contracts/Vitasensus.solpp\":14348:14364  _spaces[spaceId] */\n      dup2\n      sload\n      dup2\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      lt\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n      tag_181\n  // CompilerUtils::storeInMemoryDynamic(type=bytes32, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=bytes32, ...)\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mstore\n      0x32\n  // bytes of type bytes32: 32\n      0x04\n      mstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x24\n  // CompilerUtils::popStackSlots(1)\n      0x00\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=_spaces[index].website)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      revert\n    tag_181:\n      swap1\n  // ExpressionCompiler::appendVariable(index, index)\n      0x00\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mstore\n      blake2b(0x00, 0x20)\n      swap1\n      0x07\n  // newPushTag tag_161, desc: \n      mul\n      add\n  // Jump to tag_160\n        /* \"contracts/Vitasensus.solpp\":14348:14378  _spaces[spaceId].tokenDecimals */\n      0x05\n      add\n      sload\n        /* \"contracts/Vitasensus.solpp\":14158:14382  return (... */\n      dup6\n      dup1\n      sload\n      tag_183\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:  // return of Yul function extract_byte_array_length\n  // newTag tag_162, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup1\n      0x1f\n  // end of CompilerUtils::storeInMemory()\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n  // ExpressionCompiler::appendVariable(websites, websites)\n      dup1\n  // ExpressionCompiler::appendVariable(skip, skip)\n      swap3\n  // ExpressionCompiler::appendVariable(index, index)\n      swap2\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_163, desc: return of Yul function checked_sub_t_uint256\n      swap1\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup2\n      dup2\n  // end of CompilerUtils::rotateStackUp()\n      mstore\n      0x20\n      add\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      dup3\n      dup1\n      sload\n      tag_185\n      swap1\n      tag_184\n  // newPushTag tag_164, desc: \n      jump\t// in\n    tag_185:  // return of Yul function extract_byte_array_length\n  // Jump to tag_163\n      dup1\n      iszero\n      tag_186\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_187\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      dup4\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      mstore\n      swap2\n      0x20\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      add\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n      swap2\n  // CompilerUtils::storeInMemoryDynamic(type=bytes32, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=bytes32, ...)\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      jump(tag_186)\n    tag_187:\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup3\n      add\n  // bytes of type bytes32: 32\n      swap2\n      swap1\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x00\n  // CompilerUtils::popStackSlots(1)\n      mstore\n  // end of CompilerUtils::popStackSlots()\n  // newPushTag tag_165, desc: return of function function (struct IterableMapping.Map) view returns (uint256)\n      0x20\n  // ExpressionCompiler::visit(_memberAccess=_spacesMembers[index].size)\n  // ExpressionCompiler::appendVariable(_spacesMembers, _spacesMembers)\n      0x00\n      blake2b\n      swap1\n    tag_188:\n  // ExpressionCompiler::appendVariable(index, index)\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      sload\n      dup2\n  // bytes of type uint256: 32\n      mstore\n      swap1\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x01\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      swap1\n  // bytes of type uint256: 32\n      0x20\n      add\n  // end of CompilerUtils::storeInMemoryDynamic()\n      dup1\n      dup4\n      gt\n      tag_188\n  // CompilerUtils::convertType(): struct IterableMapping.Map storage ref -> struct IterableMapping.Map storage pointer\n  // end of CompilerUtils::convertType()\n  // newTag tag_166, desc: declaration of function size\n      jumpi\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      dup3\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      swap1\n  // end of CompilerUtils::rotateStackDown()\n      sub\n      0x1f\n      and\n      dup3\n  // ExpressionCompiler::appendVariable(memberCounts, memberCounts)\n      add\n  // ExpressionCompiler::appendVariable(skip, skip)\n      swap2\n  // ExpressionCompiler::appendVariable(index, index)\n    tag_186:\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_167, desc: return of Yul function checked_sub_t_uint256\n      pop\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      pop\n      pop\n  // end of CompilerUtils::rotateStackUp()\n      pop\n      pop\n      swap6\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n  // newPushTag tag_168, desc: \n      pop\n      swap7\n  // Jump to tag_167\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n        /* \"contracts/Vitasensus.solpp\":13920:14386  function getSpaceExternal(uint256 spaceId)... */\n      swap2\n      swap4\n      swap6\n      swap8\n      swap1\n      swap3\n      swap5\n      swap7\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      pop\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      jump\t// out\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n        /* \"contracts/Vitasensus.solpp\":13796:13903  function getSpaceOwner(uint256 spaceId) public view returns (address) {... */\n    tag_15:  // declaration of function getSpaceOwner\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":13857:13864  address */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":13877:13890  _spacesOwners */\n      0x08\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":13877:13899  _spacesOwners[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":13891:13898  spaceId */\n      dup4\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":13877:13899  _spacesOwners[spaceId] */\n      dup2\n  // CompilerUtils::popStackSlots(1)\n      mstore\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      0x20\n  // ExpressionCompiler::appendVariable(index, index)\n      add\n      swap1\n  // CompilerContext::callYulFunction(name=increment_t_uint256, _inArgs=1, _outArgs=1)\n  // newPushTag tag_169, desc: return of Yul function increment_t_uint256\n      dup2\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      mstore\n  // end of CompilerUtils::rotateStackDown()\n      0x20\n      add\n      0x00\n      blake2b\n      0x00\n  // CompilerUtils::popStackSlots(1)\n      swap1\n  // end of CompilerUtils::popStackSlots()\n      sload\n      swap1\n      0x0100\n  // CompilerUtils::popStackSlots(1)\n      exp\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(1)\n      swap1\n  // end of CompilerUtils::popStackSlots()\n      div\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 5 return parameters\n  //  current stackLayout [5 -1 -1 0 1 2 3 4 ]\n      and\n  //  current stackLayout [5 -1 -1 0 4 2 3 1 ]\n        /* \"contracts/Vitasensus.solpp\":13870:13899  return _spacesOwners[spaceId] */\n      swap1\n  //  current stackLayout [5 1 -1 0 4 2 3 -1 ]\n      pop\n  //  current stackLayout [5 1 -1 0 4 2 3 ]\n        /* \"contracts/Vitasensus.solpp\":13796:13903  function getSpaceOwner(uint256 spaceId) public view returns (address) {... */\n      swap2\n  //  current stackLayout [5 1 -1 3 4 2 0 ]\n      swap1\n  //  current stackLayout [0 1 -1 3 4 2 5 ]\n      pop\n  //  current stackLayout [0 1 -1 3 4 5 2 ]\n      jump\t// out\n  //  current stackLayout [0 1 2 3 4 5 -1 ]\n        /* \"contracts/Vitasensus.solpp\":4313:4438  function isSpaceOwner(uint256 spaceId, address user) public view returns (bool) {... */\n    tag_16:  // declaration of function isSpaceOwner\n        /* \"contracts/Vitasensus.solpp\":4387:4391  bool */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":4430:4434  user */\n      dup2\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(bytes32 name)\n        /* \"contracts/Vitasensus.solpp\":4404:4434  _spacesOwners[spaceId] == user */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(string memory description)\n  // CompilerUtils::pushZeroPointer()\n      and\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(vitetoken token)\n        /* \"contracts/Vitasensus.solpp\":4404:4417  _spacesOwners */\n      0x08\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(bytes32 avatar)\n        /* \"contracts/Vitasensus.solpp\":4404:4426  _spacesOwners[spaceId] */\n      0x00\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(bytes32 website)\n        /* \"contracts/Vitasensus.solpp\":4418:4425  spaceId */\n      dup6\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(uint256 memberCounts)\n        /* \"contracts/Vitasensus.solpp\":4404:4426  _spacesOwners[spaceId] */\n      dup2\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(uint256 tokenDecimals)\n      mstore\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function getSpaceExternal(uint256 spaceId)\n\t\texternal\n\t\tview\n\t\treturns (\n\t\t\tbytes32 name,\n\t\t\tstring memory description,\n\t\t\tvitetoken token,\n\t\t\tbytes32 avatar,\n\t\t\tbytes32 website,\n\t\t\tuint256 memberCounts,\n\t\t\tuint256 tokenDecimals\n\t\t)\n\t{\n\t\treturn (\n\t\t\t_spaces[spaceId].name,\n\t\t\t_spaces[spaceId].description,\n\t\t\t_spaces[spaceId].token,\n\t\t\t_spaces[spaceId].avatar,\n\t\t\t_spaces[spaceId].website,\n\t\t\t_spacesMembers[spaceId].size(),\n\t\t\t_spaces[spaceId].tokenDecimals\n\t\t);\n\t}\n  // newTag tag_170, desc: return tag of getSpaceExternal\n  // start of code block of getSpaceExternal\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::visit(_memberAccess=_spaces[spaceId].name)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      0x20\n      add\n      swap1\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n      0x00\n  // newPushTag tag_171, desc: \n      swap1\n      sload\n  // Jump to tag_170\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Vitasensus.solpp\":4404:4434  _spacesOwners[spaceId] == user */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Vitasensus.solpp\":4397:4434  return _spacesOwners[spaceId] == user */\n      swap1\n  // newTag tag_172, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      pop\n        /* \"contracts/Vitasensus.solpp\":4313:4438  function isSpaceOwner(uint256 spaceId, address user) public view returns (bool) {... */\n      swap3\n  // end of CompilerUtils::storeInMemory()\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":7915:9697  function createProposal(... */\n    tag_17:  // declaration of function createProposal\n        /* \"contracts/Vitasensus.solpp\":8206:8213  spaceId */\n      dup9\n        /* \"contracts/Vitasensus.solpp\":3090:3118  _requireSpaceMember(spaceId) */\n      tag_192\n        /* \"contracts/Vitasensus.solpp\":3110:3117  spaceId */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":3090:3109  _requireSpaceMember */\n      tag_193\n        /* \"contracts/Vitasensus.solpp\":3090:3118  _requireSpaceMember(spaceId) */\n      jump\t// in\n    tag_192:  // return of function function (uint256) view\n        /* \"contracts/Vitasensus.solpp\":8253:8262  msg.token */\n      tokenid\n        /* \"contracts/Vitasensus.solpp\":8227:8262  _spaces[spaceId].token == msg.token */\n      0xffffffffffffffffffff\n      and\n        /* \"contracts/Vitasensus.solpp\":8227:8234  _spaces */\n      0x01\n  // ExpressionCompiler::visit(_memberAccess=_spaces[spaceId].description)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n        /* \"contracts/Vitasensus.solpp\":8235:8242  spaceId */\n      dup12\n        /* \"contracts/Vitasensus.solpp\":8227:8243  _spaces[spaceId] */\n      dup2\n      sload\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      lt\n      tag_195\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n  // newPushTag tag_173, desc: \n      0x32\n      0x04\n  // Jump to tag_172\n      mstore\n      revert(0x00, 0x24)\n    tag_195:\n      swap1\n      0x00\n      mstore\n      blake2b(0x00, 0x20)\n  // newTag tag_174, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      0x07\n  // end of CompilerUtils::storeInMemory()\n      mul\n      add\n        /* \"contracts/Vitasensus.solpp\":8227:8249  _spaces[spaceId].token */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffff\n      and\n  // ExpressionCompiler::visit(_memberAccess=_spaces[spaceId].token)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n        /* \"contracts/Vitasensus.solpp\":8227:8262  _spaces[spaceId].token == msg.token */\n      0xffffffffffffffffffff\n      and\n      eq\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":8219:8263  require(_spaces[spaceId].token == msg.token) */\n      tag_197\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_197:\n        /* \"contracts/Vitasensus.solpp\":8267:8302  SpaceSettings storage spaceSettings */\n      0x00\n  // newPushTag tag_175, desc: \n        /* \"contracts/Vitasensus.solpp\":8305:8319  _spaceSettings */\n      0x02\n        /* \"contracts/Vitasensus.solpp\":8320:8327  spaceId */\n      dup12\n  // Jump to tag_174\n        /* \"contracts/Vitasensus.solpp\":8305:8328  _spaceSettings[spaceId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_198\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      0x32\n      0x04\n  // newTag tag_176, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mstore\n      0x24\n  // end of CompilerUtils::storeInMemory()\n      0x00\n      revert\n    tag_198:\n      swap1\n      0x00\n      mstore\n      blake2b(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/Vitasensus.solpp\":8267:8328  SpaceSettings storage spaceSettings = _spaceSettings[spaceId] */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":8332:8344  bool isAdmin */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":8347:8380  isSpaceAdmin(spaceId, msg.sender) */\n      tag_200\n        /* \"contracts/Vitasensus.solpp\":8360:8367  spaceId */\n      dup13\n        /* \"contracts/Vitasensus.solpp\":8369:8379  msg.sender */\n      caller\n        /* \"contracts/Vitasensus.solpp\":8347:8359  isSpaceAdmin */\n      tag_29\n        /* \"contracts/Vitasensus.solpp\":8347:8380  isSpaceAdmin(spaceId, msg.sender) */\n      jump\t// in\n    tag_200:  // return of function function (uint256,address) view returns (bool)\n  // ExpressionCompiler::visit(_memberAccess=_spaces[spaceId].avatar)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n        /* \"contracts/Vitasensus.solpp\":8332:8380  bool isAdmin = isSpaceAdmin(spaceId, msg.sender) */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":8388:8401  spaceSettings */\n      dup2\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":8388:8430  spaceSettings.onlyAdminsCanCreateProposals */\n      0x01\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n  // newPushTag tag_177, desc: \n      exp\n      swap1\n  // Jump to tag_176\n      div\n      0xff\n      and\n        /* \"contracts/Vitasensus.solpp\":8384:8458  if (spaceSettings.onlyAdminsCanCreateProposals) {... */\n      iszero\n      tag_201\n      jumpi\n        /* \"contracts/Vitasensus.solpp\":8445:8452  isAdmin */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":8437:8453  require(isAdmin) */\n      tag_202\n      jumpi\n      0x00\n      dup1\n  // newTag tag_178, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      revert\n    tag_202:\n  // end of CompilerUtils::storeInMemory()\n        /* \"contracts/Vitasensus.solpp\":8384:8458  if (spaceSettings.onlyAdminsCanCreateProposals) {... */\n    tag_201:\n        /* \"contracts/Vitasensus.solpp\":8469:8476  isAdmin */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":8469:8574  isAdmin ||... */\n      dup1\n      tag_203\n      jumpi\n      pop\n        /* \"contracts/Vitasensus.solpp\":8544:8551  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":8552:8559  spaceId */\n      dup13\n        /* \"contracts/Vitasensus.solpp\":8544:8560  _spaces[spaceId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_204\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // ExpressionCompiler::visit(_memberAccess=_spaces[spaceId].website)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      0x00\n      mstore\n      0x32\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      0x04\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mstore\n      revert(0x00, 0x24)\n    tag_204:\n      swap1\n  // newPushTag tag_179, desc: \n      0x00\n      mstore\n  // Jump to tag_178\n      blake2b(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n        /* \"contracts/Vitasensus.solpp\":8544:8574  _spaces[spaceId].tokenDecimals */\n      0x05\n      add\n      sload\n        /* \"contracts/Vitasensus.solpp\":8540:8542  10 */\n      0x0a\n  // newTag tag_180, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":8540:8574  10**_spaces[spaceId].tokenDecimals */\n      tag_206\n      swap2\n  // end of CompilerUtils::storeInMemory()\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:  // return of Yul function checked_exp_t_uint256_t_uint256\n        /* \"contracts/Vitasensus.solpp\":8500:8513  spaceSettings */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":8500:8537  spaceSettings.createProposalThreshold */\n      0x00\n      add\n      sload\n        /* \"contracts/Vitasensus.solpp\":8500:8574  spaceSettings.createProposalThreshold * 10**_spaces[spaceId].tokenDecimals */\n      tag_208\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:  // return of Yul function checked_mul_t_uint256\n        /* \"contracts/Vitasensus.solpp\":8483:8492  msg.value */\n      callvalue\n  // newPushTag tag_181, desc: return of function function (struct IterableMapping.Map) view returns (uint256)\n        /* \"contracts/Vitasensus.solpp\":8483:8574  msg.value >=... */\n      lt\n  // ExpressionCompiler::visit(_memberAccess=_spacesMembers[spaceId].size)\n  // ExpressionCompiler::appendVariable(_spacesMembers, _spacesMembers)\n      iszero\n        /* \"contracts/Vitasensus.solpp\":8469:8574  isAdmin ||... */\n    tag_203:\n        /* \"contracts/Vitasensus.solpp\":8461:8578  require(isAdmin ||... */\n      tag_210\n      jumpi\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      0x00\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup1\n      revert\n  // bytes of type uint256: 32\n    tag_210:\n        /* \"contracts/Vitasensus.solpp\":8602:8609  endTime */\n      dup8\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":8590:8599  startTime */\n      dup10\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":8590:8609  startTime < endTime */\n      lt\n        /* \"contracts/Vitasensus.solpp\":8590:8638  startTime < endTime && endTime > block.timestamp */\n      dup1\n  // bytes of type uint256: 32\n      iszero\n      tag_211\n  // end of CompilerUtils::storeInMemoryDynamic()\n      jumpi\n      pop\n        /* \"contracts/Vitasensus.solpp\":8623:8638  block.timestamp */\n      timestamp\n        /* \"contracts/Vitasensus.solpp\":8613:8620  endTime */\n      dup9\n  // CompilerUtils::convertType(): struct IterableMapping.Map storage ref -> struct IterableMapping.Map storage pointer\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":8613:8638  endTime > block.timestamp */\n      gt\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n        /* \"contracts/Vitasensus.solpp\":8590:8638  startTime < endTime && endTime > block.timestamp */\n    tag_211:\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n        /* \"contracts/Vitasensus.solpp\":8582:8639  require(startTime < endTime && endTime > block.timestamp) */\n      tag_212\n  // end of CompilerUtils::rotateStackDown()\n      jumpi\n      0x00\n      dup1\n      revert\n  // ExpressionCompiler::visit(_memberAccess=_spaces[spaceId].tokenDecimals)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n    tag_212:\n        /* \"contracts/Vitasensus.solpp\":8664:8665  0 */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":8651:8660  startTime */\n      dup10\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":8651:8665  startTime == 0 */\n      eq\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":8651:8697  startTime == 0 || startTime >= block.timestamp */\n      dup1\n      tag_213\n      jumpi\n      pop\n        /* \"contracts/Vitasensus.solpp\":8682:8697  block.timestamp */\n      timestamp\n        /* \"contracts/Vitasensus.solpp\":8669:8678  startTime */\n      dup10\n  // newPushTag tag_182, desc: \n        /* \"contracts/Vitasensus.solpp\":8669:8697  startTime >= block.timestamp */\n      lt\n      iszero\n  // Jump to tag_181\n        /* \"contracts/Vitasensus.solpp\":8651:8697  startTime == 0 || startTime >= block.timestamp */\n    tag_213:\n        /* \"contracts/Vitasensus.solpp\":8643:8698  require(startTime == 0 || startTime >= block.timestamp) */\n      tag_214\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_214:\n        /* \"contracts/Vitasensus.solpp\":8720:8727  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":8720:8734  _spaces.length */\n      dup1\n      sload\n      swap1\n  // newTag tag_183, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      pop\n        /* \"contracts/Vitasensus.solpp\":8710:8717  spaceId */\n      dup13\n  // end of CompilerUtils::storeInMemory()\n        /* \"contracts/Vitasensus.solpp\":8710:8734  spaceId < _spaces.length */\n      lt\n        /* \"contracts/Vitasensus.solpp\":8702:8735  require(spaceId < _spaces.length) */\n      tag_215\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_215:\n        /* \"contracts/Vitasensus.solpp\":8764:8765  0 */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":8747:8754  choices */\n      dup7\n        /* \"contracts/Vitasensus.solpp\":8747:8761  choices.length */\n      mload\n        /* \"contracts/Vitasensus.solpp\":8747:8765  choices.length > 0 */\n      gt\n        /* \"contracts/Vitasensus.solpp\":8739:8766  require(choices.length > 0) */\n      tag_216\n      jumpi\n      0x00\n      dup1\n  // CompilerUtils::convertType(): tuple(bytes32,string storage ref,tokenId,bytes32,bytes32,uint256,uint256) -> tuple(bytes32,string memory,tokenId,bytes32,bytes32,uint256,uint256)\n  // CompilerUtils::copyToStackTop(6, 1)\n      revert\n  // CompilerUtils::convertType(): string storage ref -> string memory\n    tag_216:\n        /* \"contracts/Vitasensus.solpp\":8805:8812  choices */\n      dup6\n  // CompilerContext::callYulFunction(name=extract_byte_array_length, _inArgs=1, _outArgs=1)\n  // newPushTag tag_184, desc: return of Yul function extract_byte_array_length\n        /* \"contracts/Vitasensus.solpp\":8805:8819  choices.length */\n      mload\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n        /* \"contracts/Vitasensus.solpp\":8778:8794  choicesExecutors */\n      dup6\n  // end of CompilerUtils::rotateStackDown()\n  // newTag tag_185, desc: extract_byte_array_length\n        /* \"contracts/Vitasensus.solpp\":8778:8801  choicesExecutors.length */\n      mload\n        /* \"contracts/Vitasensus.solpp\":8778:8819  choicesExecutors.length == choices.length */\n      eq\n        /* \"contracts/Vitasensus.solpp\":8770:8820  require(choicesExecutors.length == choices.length) */\n      tag_217\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_217:\n        /* \"contracts/Vitasensus.solpp\":8854:8861  choices */\n      dup6\n        /* \"contracts/Vitasensus.solpp\":8854:8868  choices.length */\n      mload\n        /* \"contracts/Vitasensus.solpp\":8832:8843  choicesData */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":8832:8850  choicesData.length */\n      mload\n        /* \"contracts/Vitasensus.solpp\":8832:8868  choicesData.length == choices.length */\n      eq\n  // CompilerUtils::allocateMemory()\n  // CompilerUtils::fetchFreeMemoryPointer()\n        /* \"contracts/Vitasensus.solpp\":8824:8869  require(choicesData.length == choices.length) */\n      tag_218\n      jumpi\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      0x00\n      dup1\n      revert\n  // CompilerUtils::storeFreeMemoryPointer()\n    tag_218:\n        /* \"contracts/Vitasensus.solpp\":8874:8892  uint256 proposalId */\n      0x00\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // end of CompilerUtils::allocateMemory()\n        /* \"contracts/Vitasensus.solpp\":8895:8911  _spacesProposals */\n      0x03\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n        /* \"contracts/Vitasensus.solpp\":8895:8920  _spacesProposals[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":8912:8919  spaceId */\n      dup15\n        /* \"contracts/Vitasensus.solpp\":8895:8920  _spacesProposals[spaceId] */\n      dup2\n  // end of CompilerUtils::rotateStackUp()\n      mstore\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x20\n      add\n  // bytes of type uint256: 32\n      swap1\n      dup2\n  // end of CompilerUtils::storeInMemoryDynamic()\n  // CompilerUtils::copyToStackTop(3, 1)\n      mstore\n      0x20\n      add\n  // CompilerContext::callYulFunction(name=extract_byte_array_length, _inArgs=1, _outArgs=1)\n  // newPushTag tag_186, desc: return of Yul function extract_byte_array_length\n      0x00\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      blake2b\n  // end of CompilerUtils::rotateStackDown()\n        /* \"contracts/Vitasensus.solpp\":8895:8927  _spacesProposals[spaceId].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":8874:8927  uint256 proposalId = _spacesProposals[spaceId].length */\n      swap1\n  // newPushTag tag_187, desc: \n      pop\n        /* \"contracts/Vitasensus.solpp\":8931:8947  _spacesProposals */\n      0x03\n  // Jump to tag_186\n        /* \"contracts/Vitasensus.solpp\":8931:8956  _spacesProposals[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":8948:8955  spaceId */\n      dup15\n        /* \"contracts/Vitasensus.solpp\":8931:8956  _spacesProposals[spaceId] */\n      dup2\n  // newPushTag tag_188, desc: \n      mstore\n      0x20\n  // Jump to tag_187\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":8931:8963  _spacesProposals[spaceId].push() */\n      0x01\n      dup2\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      pop\n      pop\n  // end of CompilerUtils::storeInMemory()\n      sub\n      swap1\n      0x00\n      mstore\n  // newTag tag_189, desc: \n      blake2b(0x00, 0x20)\n      swap1\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":8967:8992  Proposal storage proposal */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":8995:9028  _getProposal(spaceId, proposalId) */\n      tag_220\n        /* \"contracts/Vitasensus.solpp\":9008:9015  spaceId */\n      dup15\n        /* \"contracts/Vitasensus.solpp\":9017:9027  proposalId */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":8995:9007  _getProposal */\n      tag_67\n        /* \"contracts/Vitasensus.solpp\":8995:9028  _getProposal(spaceId, proposalId) */\n      jump\t// in\n    tag_220:  // return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n        /* \"contracts/Vitasensus.solpp\":8967:9028  Proposal storage proposal = _getProposal(spaceId, proposalId) */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":9049:9054  title */\n      dup13\n        /* \"contracts/Vitasensus.solpp\":9032:9040  proposal */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":9032:9046  proposal.title */\n      0x01\n      add\n        /* \"contracts/Vitasensus.solpp\":9032:9054  proposal.title = title */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_221\n  // CompilerUtils::popStackSlots(3)\n      swap3\n      swap2\n      swap1\n  // end of CompilerUtils::popStackSlots()\n  // end of CompilerUtils::convertType()\n      tag_222\n      jump\t// in\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackVariable(tokenDecimals)\n    tag_221:\n      pop\n  // CompilerUtils::moveToStackVariable(memberCounts)\n        /* \"contracts/Vitasensus.solpp\":9074:9085  description */\n      dup12\n        /* \"contracts/Vitasensus.solpp\":9058:9066  proposal */\n      dup2\n  // CompilerUtils::moveToStackVariable(website)\n        /* \"contracts/Vitasensus.solpp\":9058:9071  proposal.body */\n      0x00\n      add\n  // CompilerUtils::moveToStackVariable(avatar)\n        /* \"contracts/Vitasensus.solpp\":9058:9085  proposal.body = description */\n      swap1\n      dup1\n  // CompilerUtils::moveToStackVariable(token)\n      mload\n      swap1\n  // CompilerUtils::moveToStackVariable(description)\n      0x20\n      add\n  // CompilerUtils::moveToStackVariable(name)\n      swap1\n      tag_223\n  // CompilerUtils::popAndJump(toHeight=9, jumpTo=tag_169:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      swap3\n      swap2\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      swap1\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 7 return parameters\n  //  current stackLayout [7 -1 0 1 2 3 4 5 6 ]\n      tag_222\n  //  current stackLayout [7 -1 0 1 2 3 6 5 4 ]\n      jump\t// in\n  //  current stackLayout [7 -1 0 1 4 3 6 5 2 ]\n    tag_223:\n  //  current stackLayout [7 -1 2 1 4 3 6 5 0 ]\n      pop\n  //  current stackLayout [0 -1 2 1 4 3 6 5 7 ]\n        /* \"contracts/Vitasensus.solpp\":9130:9131  0 */\n      0x00\n  //  current stackLayout [0 -1 2 1 4 3 6 7 5 ]\n        /* \"contracts/Vitasensus.solpp\":9117:9126  startTime */\n      dup12\n  //  current stackLayout [0 -1 2 1 4 5 6 7 3 ]\n        /* \"contracts/Vitasensus.solpp\":9117:9131  startTime == 0 */\n      eq\n  //  current stackLayout [0 -1 2 3 4 5 6 7 1 ]\n        /* \"contracts/Vitasensus.solpp\":9117:9161  startTime == 0 ? block.timestamp : startTime */\n      tag_224\n  //  current stackLayout [0 1 2 3 4 5 6 7 -1 ]\n      jumpi\n        /* \"contracts/Vitasensus.solpp\":9152:9161  startTime */\n      dup11\n        /* \"contracts/Vitasensus.solpp\":9117:9161  startTime == 0 ? block.timestamp : startTime */\n      tag_225\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(address)\n      jump\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function getSpaceOwner(uint256 spaceId) public view returns (address) {\n\t\treturn _spacesOwners[spaceId];\n\t}\n  // newTag tag_190, desc: return tag of getSpaceOwner\n  // start of code block of getSpaceOwner\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::appendVariable(_spacesOwners, _spacesOwners)\n    tag_224:\n        /* \"contracts/Vitasensus.solpp\":9134:9149  block.timestamp */\n      timestamp\n        /* \"contracts/Vitasensus.solpp\":9117:9161  startTime == 0 ? block.timestamp : startTime */\n    tag_225:\n        /* \"contracts/Vitasensus.solpp\":9089:9097  proposal */\n      dup2\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":9089:9107  proposal.startTime */\n      0x02\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      0x00\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":9089:9162  proposal.startTime = uint64(startTime == 0 ? block.timestamp : startTime) */\n      0x0100\n      exp\n  // end of CompilerUtils::storeInMemoryDynamic()\n      dup2\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      sload\n      dup2\n  // bytes of type uint256: 32\n      0xffffffffffffffff\n      mul\n  // end of CompilerUtils::storeInMemoryDynamic()\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Vitasensus.solpp\":9192:9199  endTime */\n      dup10\n  // CompilerUtils::moveToStackVariable()\n        /* \"contracts/Vitasensus.solpp\":9166:9174  proposal */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":9166:9182  proposal.endTime */\n      0x02\n  // CompilerUtils::popAndJump(toHeight=3, jumpTo=tag_189:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      add\n      0x08\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n        /* \"contracts/Vitasensus.solpp\":9166:9200  proposal.endTime = uint64(endTime) */\n      0x0100\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 1 return parameters\n  //  current stackLayout [1 -1 0 ]\n      exp\n  //  current stackLayout [0 -1 1 ]\n      dup2\n  //  current stackLayout [0 1 -1 ]\n      sload\n      dup2\n      0xffffffffffffffff\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(bool)\n      mul\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function isSpaceOwner(uint256 spaceId, address user) public view returns (bool) {\n\t\treturn _spacesOwners[spaceId] == user;\n\t}\n  // newTag tag_191, desc: return tag of isSpaceOwner\n  // start of code block of isSpaceOwner\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::appendVariable(user, user)\n      not\n  // CompilerUtils::convertType(): address -> address\n      and\n      swap1\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(_spacesOwners, _spacesOwners)\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      or\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      sstore\n  // bytes of type uint256: 32\n      pop\n        /* \"contracts/Vitasensus.solpp\":9223:9230  choices */\n      dup8\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":9204:9212  proposal */\n      dup2\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":9204:9220  proposal.choices */\n      0x05\n      add\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":9204:9230  proposal.choices = choices */\n      swap1\n      dup1\n  // end of CompilerUtils::storeInMemoryDynamic()\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_226\n      swap3\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_226:\n  // CompilerUtils::convertType(): address -> address\n      pop\n        /* \"contracts/Vitasensus.solpp\":9262:9278  choicesExecutors */\n      dup7\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":9234:9242  proposal */\n      dup2\n  // CompilerUtils::moveToStackVariable()\n        /* \"contracts/Vitasensus.solpp\":9234:9259  proposal.choicesExecutors */\n      0x06\n      add\n  // CompilerUtils::popAndJump(toHeight=4, jumpTo=tag_190:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n        /* \"contracts/Vitasensus.solpp\":9234:9278  proposal.choicesExecutors = choicesExecutors */\n      swap1\n      dup1\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      mload\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 1 return parameters\n  //  current stackLayout [1 -1 -1 0 ]\n      swap1\n  //  current stackLayout [0 -1 -1 1 ]\n      0x20\n  //  current stackLayout [0 1 -1 -1 ]\n      add\n  //  current stackLayout [0 1 -1 ]\n      swap1\n      tag_228\n      swap3\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function createProposal(\n\t\tuint256 spaceId,\n\t\tstring memory title,\n\t\tstring memory description,\n\t\tuint256 startTime,\n\t\tuint256 endTime,\n\t\tuint256 snapshot,\n\t\tbytes32[] memory choices,\n\t\taddress[] memory choicesExecutors,\n\t\tbytes32[] memory choicesData\n\t) external payable requireSpaceMember(spaceId) {\n\t\trequire(_spaces[spaceId].token == msg.token);\n\t\tSpaceSettings storage spaceSettings = _spaceSettings[spaceId];\n\t\tbool isAdmin = isSpaceAdmin(spaceId, msg.sender);\n\t\tif (spaceSettings.onlyAdminsCanCreateProposals) {\n\t\t\trequire(isAdmin);\n\t\t}\n\t\trequire(isAdmin ||\n\t\t\tmsg.value >=\n\t\t\t\tspaceSettings.createProposalThreshold * 10**_spaces[spaceId].tokenDecimals\n\t\t);\n\t\trequire(startTime < endTime && endTime > block.timestamp);\n\t\trequire(startTime == 0 || startTime >= block.timestamp);\n\t\trequire(spaceId < _spaces.length);\n\t\trequire(choices.length > 0);\n\t\trequire(choicesExecutors.length == choices.length);\n\t\trequire(choicesData.length == choices.length);\n\n\t\tuint256 proposalId = _spacesProposals[spaceId].length;\n\t\t_spacesProposals[spaceId].push();\n\t\tProposal storage proposal = _getProposal(spaceId, proposalId);\n\t\tproposal.title = title;\n\t\tproposal.body = description;\n\t\tproposal.startTime = uint64(startTime == 0 ? block.timestamp : startTime);\n\t\tproposal.endTime = uint64(endTime);\n\t\tproposal.choices = choices;\n\t\tproposal.choicesExecutors = choicesExecutors;\n\t\tproposal.choicesData = choicesData;\n\t\tproposal.author = msg.sender;\n\t\tproposal.votes = new uint256[](choices.length);\n\t\tproposal.snapshotHeight = snapshot;\n\n\t\temit ProposalCreated(\n\t\t\tproposalId,\n\t\t\tspaceId,\n\t\t\tmsg.sender,\n\t\t\tproposal.title,\n\t\t\tproposal.body,\n\t\t\tproposal.startTime,\n\t\t\tproposal.endTime,\n\t\t\tproposal.snapshotHeight\n\t\t);\n\n\t\t// Refund msg value\n\t\tpayable(msg.sender).transfer(msg.token, msg.value);\n\t}\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      swap2\n  // newTag tag_192, desc: return tag of createProposal\n  // start of code block of createProposal\n  // newPushTag tag_193, desc: return of function function (uint256) view\n      swap1\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      tag_120\n  // newTag tag_194, desc: declaration of function _requireSpaceMember\n      jump\t// in\n    tag_228:\n      pop\n        /* \"contracts/Vitasensus.solpp\":9305:9316  choicesData */\n      dup6\n        /* \"contracts/Vitasensus.solpp\":9282:9290  proposal */\n      dup2\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendModifierOrFunctionCode() for function createProposal(\n\t\tuint256 spaceId,\n\t\tstring memory title,\n\t\tstring memory description,\n\t\tuint256 startTime,\n\t\tuint256 endTime,\n\t\tuint256 snapshot,\n\t\tbytes32[] memory choices,\n\t\taddress[] memory choicesExecutors,\n\t\tbytes32[] memory choicesData\n\t) external payable requireSpaceMember(spaceId) {\n\t\trequire(_spaces[spaceId].token == msg.token);\n\t\tSpaceSettings storage spaceSettings = _spaceSettings[spaceId];\n\t\tbool isAdmin = isSpaceAdmin(spaceId, msg.sender);\n\t\tif (spaceSettings.onlyAdminsCanCreateProposals) {\n\t\t\trequire(isAdmin);\n\t\t}\n\t\trequire(isAdmin ||\n\t\t\tmsg.value >=\n\t\t\t\tspaceSettings.createProposalThreshold * 10**_spaces[spaceId].tokenDecimals\n\t\t);\n\t\trequire(startTime < endTime && endTime > block.timestamp);\n\t\trequire(startTime == 0 || startTime >= block.timestamp);\n\t\trequire(spaceId < _spaces.length);\n\t\trequire(choices.length > 0);\n\t\trequire(choicesExecutors.length == choices.length);\n\t\trequire(choicesData.length == choices.length);\n\n\t\tuint256 proposalId = _spacesProposals[spaceId].length;\n\t\t_spacesProposals[spaceId].push();\n\t\tProposal storage proposal = _getProposal(spaceId, proposalId);\n\t\tproposal.title = title;\n\t\tproposal.body = description;\n\t\tproposal.startTime = uint64(startTime == 0 ? block.timestamp : startTime);\n\t\tproposal.endTime = uint64(endTime);\n\t\tproposal.choices = choices;\n\t\tproposal.choicesExecutors = choicesExecutors;\n\t\tproposal.choicesData = choicesData;\n\t\tproposal.author = msg.sender;\n\t\tproposal.votes = new uint256[](choices.length);\n\t\tproposal.snapshotHeight = snapshot;\n\n\t\temit ProposalCreated(\n\t\t\tproposalId,\n\t\t\tspaceId,\n\t\t\tmsg.sender,\n\t\t\tproposal.title,\n\t\t\tproposal.body,\n\t\t\tproposal.startTime,\n\t\t\tproposal.endTime,\n\t\t\tproposal.snapshotHeight\n\t\t);\n\n\t\t// Refund msg value\n\t\tpayable(msg.sender).transfer(msg.token, msg.value);\n\t}\n  // newTag tag_195, desc: return tag of createProposal\n  // start of code block of createProposal\n  // ExpressionCompiler::visit(_memberAccess=msg.token)\n        /* \"contracts/Vitasensus.solpp\":9282:9302  proposal.choicesData */\n      0x07\n  // CompilerUtils::convertType(): tokenId -> tokenId\n      add\n        /* \"contracts/Vitasensus.solpp\":9282:9316  proposal.choicesData = choicesData */\n      swap1\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=_spaces[spaceId].token)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      dup1\n      mload\n      swap1\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      0x20\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      add\n      swap1\n      tag_229\n      swap3\n      swap2\n      swap1\n  // newPushTag tag_196, desc: \n      tag_227\n      jump\t// in\n  // Jump to tag_195\n    tag_229:\n      pop\n        /* \"contracts/Vitasensus.solpp\":9338:9348  msg.sender */\n      caller\n        /* \"contracts/Vitasensus.solpp\":9320:9328  proposal */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":9320:9335  proposal.author */\n      0x04\n      add\n      0x00\n        /* \"contracts/Vitasensus.solpp\":9320:9348  proposal.author = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n  // newTag tag_197, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // end of CompilerUtils::storeInMemory()\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Vitasensus.solpp\":9383:9390  choices */\n      dup8\n        /* \"contracts/Vitasensus.solpp\":9383:9397  choices.length */\n      mload\n        /* \"contracts/Vitasensus.solpp\":9369:9398  new uint256[](choices.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_230\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n  // CompilerUtils::convertType(): tokenId -> tokenId\n      mstore\n      0x41\n  // end of CompilerUtils::convertType()\n      0x04\n      mstore\n      0x24\n  // newPushTag tag_198, desc: \n      0x00\n      revert\n  // Jump to tag_197\n    tag_230:\n      mload(0x40)\n      swap1\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendStackVariableInitialisation(SpaceSettings storage spaceSettings)\n      dup1\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::appendVariable(_spaceSettings, _spaceSettings)\n      dup3\n      mstore\n      dup1\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      0x20\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n  // newPushTag tag_199, desc: \n      mstore\n      dup1\n  // Jump to tag_198\n      iszero\n      tag_231\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n  // newTag tag_200, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup4\n      calldatacopy\n  // end of CompilerUtils::storeInMemory()\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_231:\n      pop\n  // CompilerUtils::convertType(): struct Vitasensus.SpaceSettings storage ref -> struct Vitasensus.SpaceSettings storage pointer\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackVariable(spaceSettings)\n        /* \"contracts/Vitasensus.solpp\":9352:9360  proposal */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":9352:9366  proposal.votes */\n      0x08\n  // ContractCompiler::appendStackVariableInitialisation(bool isAdmin)\n      add\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // newPushTag tag_201, desc: return of function function (uint256,address) view returns (bool)\n        /* \"contracts/Vitasensus.solpp\":9352:9398  proposal.votes = new uint256[](choices.length) */\n      swap1\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      dup1\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_232\n  // CompilerUtils::moveToStackVariable(isAdmin)\n      swap3\n      swap2\n  // ExpressionCompiler::visit(_memberAccess=spaceSettings.onlyAdminsCanCreateProposals)\n  // ExpressionCompiler::appendVariable(spaceSettings, spaceSettings)\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n      pop\n        /* \"contracts/Vitasensus.solpp\":9428:9436  snapshot */\n      dup9\n        /* \"contracts/Vitasensus.solpp\":9402:9410  proposal */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":9402:9425  proposal.snapshotHeight */\n      0x03\n      add\n        /* \"contracts/Vitasensus.solpp\":9402:9436  proposal.snapshotHeight = snapshot */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Vitasensus.solpp\":9493:9503  msg.sender */\n      caller\n  // newPushTag tag_202, desc: \n        /* \"contracts/Vitasensus.solpp\":9446:9616  ProposalCreated(... */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n  // Jump to tag_201\n  // ExpressionCompiler::appendVariable(isAdmin, isAdmin)\n        /* \"contracts/Vitasensus.solpp\":9481:9488  spaceId */\n      dup15\n        /* \"contracts/Vitasensus.solpp\":9466:9476  proposalId */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":9446:9616  ProposalCreated(... */\n      0x4dd34088f7b48a18379b03b82c8b41e51a23bc7c71d55ffccc9e705ba491575e\n  // newPushTag tag_203, desc: \n        /* \"contracts/Vitasensus.solpp\":9508:9516  proposal */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":9508:9522  proposal.title */\n      0x01\n  // Jump to tag_202\n      add\n        /* \"contracts/Vitasensus.solpp\":9527:9535  proposal */\n      dup6\n        /* \"contracts/Vitasensus.solpp\":9527:9540  proposal.body */\n      0x00\n      add\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n        /* \"contracts/Vitasensus.solpp\":9545:9553  proposal */\n      dup7\n  // ExpressionCompiler::appendVariable(isAdmin, isAdmin)\n        /* \"contracts/Vitasensus.solpp\":9545:9563  proposal.startTime */\n      0x02\n      add\n  // newPushTag tag_204, desc: \n      0x00\n      swap1\n  // Jump to tag_203\n      sload\n  // ExpressionCompiler::visit(_memberAccess=_spaces[spaceId].tokenDecimals)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      swap1\n      0x0100\n      exp\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      swap1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/Vitasensus.solpp\":9568:9576  proposal */\n      dup8\n        /* \"contracts/Vitasensus.solpp\":9568:9584  proposal.endTime */\n      0x02\n      add\n  // newPushTag tag_205, desc: \n      0x08\n      swap1\n  // Jump to tag_204\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/Vitasensus.solpp\":9589:9597  proposal */\n      dup9\n        /* \"contracts/Vitasensus.solpp\":9589:9612  proposal.snapshotHeight */\n      0x03\n      add\n  // newTag tag_206, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      sload\n        /* \"contracts/Vitasensus.solpp\":9446:9616  ProposalCreated(... */\n      0x40\n  // end of CompilerUtils::storeInMemory()\n      mload\n      tag_234\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n    tag_234:  // return of Yul function abi_encode_tuple_t_string_storage_t_string_storage_t_uint64_t_uint64_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed\n      mload(0x40)\n      dup1\n      swap2\n      sub\n  // CompilerUtils::convertType(): int_const 10 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerContext::callYulFunction(name=checked_exp_t_uint256_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_207, desc: return of Yul function checked_exp_t_uint256_t_uint256\n      swap1\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      log4\n        /* \"contracts/Vitasensus.solpp\":9651:9661  msg.sender */\n      caller\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_208, desc: checked_exp_t_uint256_t_uint256\n        /* \"contracts/Vitasensus.solpp\":9643:9671  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Vitasensus.solpp\":9672:9681  msg.token */\n      tokenid\n  // ExpressionCompiler::visit(_memberAccess=spaceSettings.createProposalThreshold)\n  // ExpressionCompiler::appendVariable(spaceSettings, spaceSettings)\n        /* \"contracts/Vitasensus.solpp\":9643:9693  payable(msg.sender).transfer(msg.token, msg.value) */\n      0xffffffffffffffffffff\n      and\n        /* \"contracts/Vitasensus.solpp\":9683:9692  msg.value */\n      callvalue\n        /* \"contracts/Vitasensus.solpp\":9643:9693  payable(msg.sender).transfer(msg.token, msg.value) */\n      mload(0x40)\n      0x00\n  // CompilerContext::callYulFunction(name=checked_mul_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_209, desc: return of Yul function checked_mul_t_uint256\n      0x40\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      mload\n      swap1\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_210, desc: checked_mul_t_uint256\n      pop\n      dup1\n      dup3\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=msg.value)\n      sub\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      swap1\n      dup4\n      dup6\n      dup8\n      call\n  // newPushTag tag_211, desc: \n      pop\n      pop\n  // Jump to tag_210\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":3122:3123  _ */\n      pop\n      pop\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(endTime, endTime)\n      pop\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(startTime, startTime)\n      pop\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":7915:9697  function createProposal(... */\n      pop\n      pop\n      pop\n  // newPushTag tag_212, desc: \n      pop\n      pop\n  // Jump to tag_211\n      pop\n  // ExpressionCompiler::visit(_memberAccess=block.timestamp)\n      pop\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(endTime, endTime)\n      pop\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":2034:2232   */\n    tag_18:  // declaration of function transferOwnership\n  // newPushTag tag_213, desc: \n        /* \"contracts/Ownable.sol\":1049:1062   */\n      tag_238\n        /* \"contracts/Ownable.sol\":1049:1060   */\n      tag_239\n  // Jump to tag_212\n        /* \"contracts/Ownable.sol\":1049:1062   */\n      jump\t// in\n    tag_238:  // return of function function () view\n        /* \"contracts/Ownable.sol\":2142:2143   */\n      0x00\n        /* \"contracts/Ownable.sol\":2122:2144   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      and\n  // CompilerUtils::convertType(): int_const 0 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(startTime, startTime)\n        /* \"contracts/Ownable.sol\":2122:2130   */\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Ownable.sol\":2122:2144   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n  // newPushTag tag_214, desc: \n      eq\n      iszero\n  // Jump to tag_213\n        /* \"contracts/Ownable.sol\":2114:2187   */\n      tag_241\n  // ExpressionCompiler::visit(_memberAccess=block.timestamp)\n      jumpi\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(startTime, startTime)\n      0x40\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mload\n      0x4b2bae7e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n  // newPushTag tag_215, desc: \n      add\n      tag_242\n  // Jump to tag_214\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:  // return of Yul function abi_encode_tuple_t_stringliteral_0ff6cd9d5cae2396a0860cd9d9046debd79d2926a6d9abc06ee4b1a6011cfec4__to_t_string_memory_ptr__fromStack_reversed\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=_spaces.length)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n    tag_241:\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Ownable.sol\":2197:2225   */\n      tag_244\n        /* \"contracts/Ownable.sol\":2216:2224   */\n      dup2\n        /* \"contracts/Ownable.sol\":2197:2215   */\n      tag_245\n  // newPushTag tag_216, desc: \n        /* \"contracts/Ownable.sol\":2197:2225   */\n      jump\t// in\n    tag_244:  // return of function function (address)\n  // Jump to tag_215\n        /* \"contracts/Ownable.sol\":2034:2232   */\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":984:1040  uint256 public constant SPACE_CREATION_FEE = 10 * 10**18 */\n    tag_19:  // declaration of function SPACE_CREATION_FEE\n        /* \"contracts/Vitasensus.solpp\":1029:1040  10 * 10**18 */\n      0x8ac7230489e80000\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n        /* \"contracts/Vitasensus.solpp\":984:1040  uint256 public constant SPACE_CREATION_FEE = 10 * 10**18 */\n      dup2\n  // CompilerUtils::convertType(): int_const 0 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=choices.length)\n  // ExpressionCompiler::appendVariable(choices, choices)\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":9887:10059  function leaveSpace(uint256 spaceId) external {... */\n    tag_20:  // declaration of function leaveSpace\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":9938:9966  _requireSpaceMember(spaceId) */\n      tag_247\n        /* \"contracts/Vitasensus.solpp\":9958:9965  spaceId */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":9938:9957  _requireSpaceMember */\n      tag_193\n  // newPushTag tag_217, desc: \n        /* \"contracts/Vitasensus.solpp\":9938:9966  _requireSpaceMember(spaceId) */\n      jump\t// in\n    tag_247:  // return of function function (uint256) view\n  // Jump to tag_216\n        /* \"contracts/Vitasensus.solpp\":9970:10012  _spacesMembers[spaceId].remove(msg.sender) */\n      tag_248\n        /* \"contracts/Vitasensus.solpp\":10001:10011  msg.sender */\n      caller\n        /* \"contracts/Vitasensus.solpp\":9970:9984  _spacesMembers */\n      0x04\n        /* \"contracts/Vitasensus.solpp\":9970:9993  _spacesMembers[spaceId] */\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=choices.length)\n  // ExpressionCompiler::appendVariable(choices, choices)\n        /* \"contracts/Vitasensus.solpp\":9985:9992  spaceId */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":9970:9993  _spacesMembers[spaceId] */\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=choicesExecutors.length)\n  // ExpressionCompiler::appendVariable(choicesExecutors, choicesExecutors)\n      mstore\n      0x20\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      add\n      swap1\n      dup2\n  // newPushTag tag_218, desc: \n      mstore\n      0x20\n  // Jump to tag_217\n      add\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":9970:10000  _spacesMembers[spaceId].remove */\n      tag_249\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=choices.length)\n  // ExpressionCompiler::appendVariable(choices, choices)\n      swap1\n        /* \"contracts/Vitasensus.solpp\":9970:10012  _spacesMembers[spaceId].remove(msg.sender) */\n      swap2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=choicesData.length)\n  // ExpressionCompiler::appendVariable(choicesData, choicesData)\n      swap1\n      0xffffffff\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      and\n      jump\t// in\n    tag_248:  // return of function function (struct IterableMapping.Map,address)\n  // newPushTag tag_219, desc: \n        /* \"contracts/Vitasensus.solpp\":10016:10055  _userSpaces[msg.sender].remove(spaceId) */\n      tag_250\n        /* \"contracts/Vitasensus.solpp\":10047:10054  spaceId */\n      dup2\n  // Jump to tag_218\n        /* \"contracts/Vitasensus.solpp\":10016:10027  _userSpaces */\n      0x07\n        /* \"contracts/Vitasensus.solpp\":10016:10039  _userSpaces[msg.sender] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":10028:10038  msg.sender */\n      caller\n        /* \"contracts/Vitasensus.solpp\":10016:10039  _userSpaces[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendStackVariableInitialisation(uint256 proposalId)\n      and\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposals[spaceId].length)\n  // ExpressionCompiler::appendVariable(_spacesProposals, _spacesProposals)\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      0x20\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      swap1\n  // bytes of type uint256: 32\n      dup2\n      mstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x20\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      0x00\n  // bytes of type uint256: 32\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":10016:10046  _userSpaces[msg.sender].remove */\n      tag_251\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap1\n        /* \"contracts/Vitasensus.solpp\":10016:10055  _userSpaces[msg.sender].remove(spaceId) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_250:  // return of function function (struct UintKeyedIterableMapping.Map,uint256)\n        /* \"contracts/Vitasensus.solpp\":9887:10059  function leaveSpace(uint256 spaceId) external {... */\n      pop\n  // CompilerUtils::moveToStackVariable(proposalId)\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":9700:9884  function joinSpace(uint256 spaceId) public {... */\n    tag_21:  // declaration of function joinSpace\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposals[spaceId].push)\n  // ExpressionCompiler::appendVariable(_spacesProposals, _spacesProposals)\n        /* \"contracts/Vitasensus.solpp\":9756:9790  isSpaceMember(spaceId, msg.sender) */\n      tag_253\n        /* \"contracts/Vitasensus.solpp\":9770:9777  spaceId */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":9779:9789  msg.sender */\n      caller\n        /* \"contracts/Vitasensus.solpp\":9756:9769  isSpaceMember */\n      tag_26\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":9756:9790  isSpaceMember(spaceId, msg.sender) */\n      jump\t// in\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n    tag_253:  // return of function function (uint256,address) view returns (bool)\n        /* \"contracts/Vitasensus.solpp\":9755:9790  !isSpaceMember(spaceId, msg.sender) */\n      iszero\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":9747:9791  require(!isSpaceMember(spaceId, msg.sender)) */\n      tag_254\n      jumpi\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x00\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup1\n      revert\n  // bytes of type uint256: 32\n    tag_254:\n        /* \"contracts/Vitasensus.solpp\":9795:9837  _spacesMembers[spaceId].set(msg.sender, 1) */\n      tag_255\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":9823:9833  msg.sender */\n      caller\n        /* \"contracts/Vitasensus.solpp\":9835:9836  1 */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":9795:9809  _spacesMembers */\n      0x04\n        /* \"contracts/Vitasensus.solpp\":9795:9818  _spacesMembers[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":9810:9817  spaceId */\n      dup6\n        /* \"contracts/Vitasensus.solpp\":9795:9818  _spacesMembers[spaceId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":9795:9822  _spacesMembers[spaceId].set */\n      tag_256\n      swap1\n        /* \"contracts/Vitasensus.solpp\":9795:9837  _spacesMembers[spaceId].set(msg.sender, 1) */\n      swap3\n  // newTag tag_220, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap2\n      swap1\n  // end of CompilerUtils::storeInMemory()\n      0xffffffff\n      and\n      jump\t// in\n    tag_255:  // return of function function (struct IterableMapping.Map,address,uint256)\n        /* \"contracts/Vitasensus.solpp\":9841:9880  _userSpaces[msg.sender].set(spaceId, 1) */\n      tag_257\n        /* \"contracts/Vitasensus.solpp\":9869:9876  spaceId */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":9878:9879  1 */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":9841:9852  _userSpaces */\n      0x07\n        /* \"contracts/Vitasensus.solpp\":9841:9864  _userSpaces[msg.sender] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":9853:9863  msg.sender */\n      caller\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/Vitasensus.solpp\":9841:9864  _userSpaces[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendStackVariableInitialisation(Proposal storage proposal)\n      and\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // newPushTag tag_221, desc: return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      and\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n  // CompilerUtils::moveToStackVariable(proposal)\n      mstore\n      0x20\n  // ExpressionCompiler::appendVariable(title, title)\n      add\n  // ExpressionCompiler::visit(_memberAccess=proposal.title)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":9841:9868  _userSpaces[msg.sender].set */\n      tag_258\n      swap1\n        /* \"contracts/Vitasensus.solpp\":9841:9880  _userSpaces[msg.sender].set(spaceId, 1) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_257:  // return of function function (struct UintKeyedIterableMapping.Map,uint256,uint256)\n        /* \"contracts/Vitasensus.solpp\":9700:9884  function joinSpace(uint256 spaceId) public {... */\n      pop\n  // CompilerContext::callLowLevelFunction($copyArrayToStorage_t_string_memory_ptr_to_t_string_storage)\n  // newPushTag tag_222, desc: \n      jump\t// out\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n        /* \"contracts/Vitasensus.solpp\":15636:16470  function getSpaceProposals(... */\n    tag_22:  // declaration of function getSpaceProposals\n        /* \"contracts/Vitasensus.solpp\":15751:15779  uint256[] memory proposalIds */\n      0x60\n        /* \"contracts/Vitasensus.solpp\":15784:15806  string[] memory titles */\n      dup1\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_223, desc: $copyArrayToStorage_t_string_memory_ptr_to_t_string_storage\n        /* \"contracts/Vitasensus.solpp\":15811:15839  string[] memory descriptions */\n      0x60\n        /* \"contracts/Vitasensus.solpp\":15844:15871  uint256[] memory startTimes */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":15876:15901  uint256[] memory endTimes */\n      0x60\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/Vitasensus.solpp\":15906:15935  uint256[] memory choicesCount */\n      dup1\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(description, description)\n        /* \"contracts/Vitasensus.solpp\":15954:15967  uint256 index */\n      0x00\n  // ExpressionCompiler::visit(_memberAccess=proposal.body)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n        /* \"contracts/Vitasensus.solpp\":15970:15974  skip */\n      dup9\n        /* \"contracts/Vitasensus.solpp\":15954:15974  uint256 index = skip */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":15945:16467  for (... */\n    tag_260:\n        /* \"contracts/Vitasensus.solpp\":15987:16003  _spacesProposals */\n      0x03\n        /* \"contracts/Vitasensus.solpp\":15987:16012  _spacesProposals[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":16004:16011  spaceId */\n      dup12\n        /* \"contracts/Vitasensus.solpp\":15987:16012  _spacesProposals[spaceId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n  // CompilerContext::callLowLevelFunction($copyArrayToStorage_t_string_memory_ptr_to_t_string_storage)\n  // newPushTag tag_224, desc: \n      dup2\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      mstore\n      0x20\n      add\n  // end of CompilerUtils::rotateStackUp()\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":15987:16019  _spacesProposals[spaceId].length */\n      dup1\n  // CompilerUtils::popStackSlots(1)\n      sload\n  // end of CompilerUtils::popStackSlots()\n      swap1\n  // CompilerUtils::convertType(): int_const 0 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(startTime, startTime)\n      pop\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":15979:15984  index */\n      dup2\n  // newPushTag tag_225, desc: \n        /* \"contracts/Vitasensus.solpp\":15979:16019  index < _spacesProposals[spaceId].length */\n      lt\n        /* \"contracts/Vitasensus.solpp\":15979:16045  index < _spacesProposals[spaceId].length && index < (skip + limit) */\n      dup1\n  // Jump to tag_224\n  // ExpressionCompiler::appendVariable(startTime, startTime)\n      iszero\n  // newPushTag tag_226, desc: \n      tag_263\n      jumpi\n      pop\n  // ExpressionCompiler::visit(_memberAccess=block.timestamp)\n        /* \"contracts/Vitasensus.solpp\":16039:16044  limit */\n      dup8\n        /* \"contracts/Vitasensus.solpp\":16032:16036  skip */\n      dup10\n  // CompilerUtils::convertType(): uint256 -> uint64\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=proposal.startTime)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n        /* \"contracts/Vitasensus.solpp\":16032:16044  skip + limit */\n      tag_264\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_264:  // return of Yul function checked_add_t_uint256\n        /* \"contracts/Vitasensus.solpp\":16023:16028  index */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":16023:16045  index < (skip + limit) */\n      lt\n        /* \"contracts/Vitasensus.solpp\":15979:16045  index < _spacesProposals[spaceId].length && index < (skip + limit) */\n    tag_263:\n        /* \"contracts/Vitasensus.solpp\":15945:16467  for (... */\n      iszero\n      tag_261\n      jumpi\n        /* \"contracts/Vitasensus.solpp\":16095:16100  index */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":16067:16078  proposalIds */\n      dup8\n  // CompilerUtils::copyToStackTop(4, 1)\n        /* \"contracts/Vitasensus.solpp\":16087:16091  skip */\n      dup11\n  // CompilerUtils::convertType(): uint64 -> uint64\n        /* \"contracts/Vitasensus.solpp\":16079:16084  index */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":16079:16091  index - skip */\n      tag_265\n  // end of CompilerUtils::convertType()\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n  // CompilerUtils::popStackSlots(1)\n    tag_265:  // return of Yul function checked_sub_t_uint256\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(endTime, endTime)\n        /* \"contracts/Vitasensus.solpp\":16067:16092  proposalIds[index - skip] */\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint64\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=proposal.endTime)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      mload\n      dup2\n      lt\n      tag_266\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n  // CompilerUtils::copyToStackTop(4, 1)\n    tag_266:\n  // CompilerUtils::convertType(): uint64 -> uint64\n      0x20\n      mul\n  // end of CompilerUtils::convertType()\n      0x20\n      add\n      add\n        /* \"contracts/Vitasensus.solpp\":16067:16100  proposalIds[index - skip] = index */\n      dup2\n  // CompilerUtils::popStackSlots(1)\n      dup2\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(choices, choices)\n      mstore\n  // ExpressionCompiler::visit(_memberAccess=proposal.choices)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":16128:16144  _spacesProposals */\n      0x03\n        /* \"contracts/Vitasensus.solpp\":16128:16153  _spacesProposals[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":16145:16152  spaceId */\n      dup12\n        /* \"contracts/Vitasensus.solpp\":16128:16153  _spacesProposals[spaceId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n  // CompilerContext::callLowLevelFunction($copyArrayToStorage_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_storage)\n  // newPushTag tag_227, desc: \n      0x20\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      add\n      0x00\n      blake2b\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_228, desc: $copyArrayToStorage_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_storage\n        /* \"contracts/Vitasensus.solpp\":16154:16159  index */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":16128:16160  _spacesProposals[spaceId][index] */\n      dup2\n      sload\n  // CompilerUtils::popStackSlots(1)\n      dup2\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(choicesExecutors, choicesExecutors)\n      lt\n  // ExpressionCompiler::visit(_memberAccess=proposal.choicesExecutors)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      tag_267\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_267:\n  // CompilerContext::callLowLevelFunction($copyArrayToStorage_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_storage)\n  // newPushTag tag_229, desc: \n      swap1\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      0x00\n      mstore\n      0x20\n  // end of CompilerUtils::rotateStackUp()\n      0x00\n      blake2b\n      swap1\n  // CompilerUtils::popStackSlots(1)\n      0x0a\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(choicesData, choicesData)\n      mul\n  // ExpressionCompiler::visit(_memberAccess=proposal.choicesData)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      add\n        /* \"contracts/Vitasensus.solpp\":16128:16166  _spacesProposals[spaceId][index].title */\n      0x01\n      add\n        /* \"contracts/Vitasensus.solpp\":16105:16166  titles[index - skip] = _spacesProposals[spaceId][index].title */\n      dup1\n      sload\n      tag_269\n      swap1\n      tag_184\n      jump\t// in\n    tag_269:  // return of Yul function extract_byte_array_length\n      dup1\n      0x1f\n  // CompilerContext::callLowLevelFunction($copyArrayToStorage_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_storage)\n  // newPushTag tag_230, desc: \n      add\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      0x20\n      dup1\n      swap2\n  // end of CompilerUtils::rotateStackUp()\n      div\n      mul\n      0x20\n  // CompilerUtils::popStackSlots(1)\n      add\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n      0x40\n  // ExpressionCompiler::visit(_memberAccess=proposal.author)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      mload\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n  // CompilerUtils::copyToStackTop(4, 1)\n      add\n  // CompilerUtils::convertType(): address -> address\n      dup3\n      dup1\n  // end of CompilerUtils::convertType()\n      sload\n      tag_270\n      swap1\n      tag_184\n  // CompilerUtils::popStackSlots(1)\n      jump\t// in\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=choices.length)\n  // ExpressionCompiler::appendVariable(choices, choices)\n    tag_270:  // return of Yul function extract_byte_array_length\n      dup1\n      iszero\n      tag_271\n      jumpi\n      dup1\n  // newPushTag tag_231, desc: \n      0x1f\n      lt\n  // Jump to tag_230\n      tag_272\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n  // CompilerUtils::fetchFreeMemoryPointer()\n      swap2\n      0x20\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      add\n      swap2\n      jump(tag_271)\n    tag_272:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n  // CompilerUtils::storeFreeMemoryPointer()\n      0x20\n      0x00\n  // end of CompilerUtils::storeFreeMemoryPointer()\n      blake2b\n      swap1\n  // newPushTag tag_232, desc: \n    tag_273:\n      dup2\n  // Jump to tag_231\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_273\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n  // ExpressionCompiler::visit(_memberAccess=proposal.votes)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      add\n      swap2\n    tag_271:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":16105:16111  titles */\n      dup7\n        /* \"contracts/Vitasensus.solpp\":16120:16124  skip */\n      dup11\n        /* \"contracts/Vitasensus.solpp\":16112:16117  index */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":16112:16124  index - skip */\n      tag_274\n  // CompilerContext::callLowLevelFunction($copyArrayToStorage_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_storage)\n  // newPushTag tag_233, desc: \n      swap2\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      swap1\n      tag_129\n      jump\t// in\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_234, desc: $copyArrayToStorage_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_storage\n    tag_274:  // return of Yul function checked_sub_t_uint256\n        /* \"contracts/Vitasensus.solpp\":16105:16125  titles[index - skip] */\n      dup2\n      mload\n  // CompilerUtils::popStackSlots(1)\n      dup2\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(snapshot, snapshot)\n      lt\n  // ExpressionCompiler::visit(_memberAccess=proposal.snapshotHeight)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      tag_275\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      0x24\n      0x00\n  // CompilerUtils::popStackSlots(1)\n      revert\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n    tag_275:\n  // CompilerUtils::convertType(): address -> address\n      0x20\n      mul\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      0x20\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      add\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      add\n  // ExpressionCompiler::visit(_memberAccess=proposal.title)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n        /* \"contracts/Vitasensus.solpp\":16105:16166  titles[index - skip] = _spacesProposals[spaceId][index].title */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contracts/Vitasensus.solpp\":16200:16216  _spacesProposals */\n      0x03\n  // ExpressionCompiler::visit(_memberAccess=proposal.body)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n        /* \"contracts/Vitasensus.solpp\":16200:16225  _spacesProposals[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":16217:16224  spaceId */\n      dup12\n        /* \"contracts/Vitasensus.solpp\":16200:16225  _spacesProposals[spaceId] */\n      dup2\n      mstore\n      0x20\n  // ExpressionCompiler::visit(_memberAccess=proposal.startTime)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":16226:16231  index */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":16200:16232  _spacesProposals[spaceId][index] */\n      dup2\n      sload\n      dup2\n      lt\n  // ExpressionCompiler::visit(_memberAccess=proposal.endTime)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      tag_276\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_276:\n      swap1\n  // ExpressionCompiler::visit(_memberAccess=proposal.snapshotHeight)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      0x00\n      mstore\n      blake2b(0x00, 0x20)\n      swap1\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x0a\n      mul\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             string storage ref\n  //             string storage ref\n  //             uint64\n  //             uint64\n  //             uint256\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_string_storage_t_string_storage_t_uint64_t_uint64_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed, _inArgs=6, _outArgs=1)\n  // newPushTag tag_235, desc: return of Yul function abi_encode_tuple_t_string_storage_t_string_storage_t_uint64_t_uint64_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed\n      add\n  // CompilerUtils::moveIntoStack(6, 1)\n  // CompilerUtils::rotateStackUp(7)\n        /* \"contracts/Vitasensus.solpp\":16200:16237  _spacesProposals[spaceId][index].body */\n      0x00\n      add\n        /* \"contracts/Vitasensus.solpp\":16171:16237  descriptions[index - skip] = _spacesProposals[spaceId][index].body */\n      dup1\n      sload\n      tag_278\n      swap1\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_236, desc: abi_encode_tuple_t_string_storage_t_string_storage_t_uint64_t_uint64_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed\n      tag_184\n      jump\t// in\n    tag_278:  // return of Yul function extract_byte_array_length\n  // CompilerUtils::fetchFreeMemoryPointer()\n      dup1\n      0x1f\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      add\n      0x20\n      dup1\n      swap2\n      div\n  // ExpressionCompiler::visit(_memberAccess=payable(msg.sender).transfer)\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n      mul\n  // CompilerUtils::convertType(): address -> address payable\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::convertType(): address payable -> address payable\n      0x20\n      add\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=msg.token)\n      0x40\n  // CompilerUtils::convertType(): tokenId -> tokenId\n      mload\n      swap1\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=msg.value)\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendExternalFunctionCall(function (),\n  //       args: [\n  //             ]\n  // )\n  // evaluate arguments\n  // CompilerUtils::fetchFreeMemoryPointer()\n      add\n      0x40\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // move arguments to memory\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             ]\n      mstore\n  // CompilerUtils::fetchFreeMemoryPointer()\n      dup1\n      swap3\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n  // value to send\n      add\n  // vite token\n      dup3\n  // contract address\n      dup1\n      sload\n  // newTag tag_237, desc: \n  // pop stack slots 4\n  // CompilerUtils::popStackSlots(4)\n      tag_279\n      swap1\n      tag_184\n      jump\t// in\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(4)\n    tag_279:  // return of Yul function extract_byte_array_length\n      dup1\n      iszero\n      tag_280\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      jumpi\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      dup1\n  // CompilerUtils::popStackSlots(1)\n      0x1f\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 9 parameters and 0 return parameters\n  //  current stackLayout [0 -1 -1 -1 -1 -1 -1 -1 -1 -1 ]\n      lt\n  //  current stackLayout [0 -1 -1 -1 -1 -1 -1 -1 -1 ]\n      tag_281\n  //  current stackLayout [0 -1 -1 -1 -1 -1 -1 -1 ]\n      jumpi\n  //  current stackLayout [0 -1 -1 -1 -1 -1 -1 ]\n      0x0100\n  //  current stackLayout [0 -1 -1 -1 -1 -1 ]\n      dup1\n  //  current stackLayout [0 -1 -1 -1 -1 ]\n      dup4\n  //  current stackLayout [0 -1 -1 -1 ]\n      sload\n  //  current stackLayout [0 -1 -1 ]\n      div\n  //  current stackLayout [0 -1 ]\n      mul\n      dup4\n      mstore\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n  // newTag tag_238, desc: return tag of transferOwnership\n  // start of code block of transferOwnership\n  // newPushTag tag_239, desc: return of function function () view\n      swap2\n  // newTag tag_240, desc: declaration of function _checkOwner\n      0x20\n      add\n      swap2\n      jump(tag_280)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendModifierOrFunctionCode() for function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n  // newTag tag_241, desc: return tag of transferOwnership\n  // start of code block of transferOwnership\n    tag_281:\n  // CompilerUtils::convertType(): int_const 0 -> address\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::convertType(): address -> address\n      dup3\n      add\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(newOwner, newOwner)\n      swap2\n  // CompilerUtils::convertType(): address -> address\n      swap1\n      0x00\n  // end of CompilerUtils::convertType()\n      mstore\n      0x20\n  // CompilerUtils::moveIntoStack(1, 0)\n      0x00\n      blake2b\n  // newPushTag tag_242, desc: \n      swap1\n    tag_282:\n  // Jump to tag_241\n  // CompilerUtils::fetchFreeMemoryPointer()\n      dup2\n      sload\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             literal_string \"Ownable: new owner is the zero address\"\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_stringliteral_0ff6cd9d5cae2396a0860cd9d9046debd79d2926a6d9abc06ee4b1a6011cfec4__to_t_string_memory_ptr__fromStack_reversed, _inArgs=1, _outArgs=1)\n  // newPushTag tag_243, desc: return of Yul function abi_encode_tuple_t_stringliteral_0ff6cd9d5cae2396a0860cd9d9046debd79d2926a6d9abc06ee4b1a6011cfec4__to_t_string_memory_ptr__fromStack_reversed\n      swap1\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      0x20\n  // end of CompilerUtils::rotateStackDown()\n  // newTag tag_244, desc: abi_encode_tuple_t_stringliteral_0ff6cd9d5cae2396a0860cd9d9046debd79d2926a6d9abc06ee4b1a6011cfec4__to_t_string_memory_ptr__fromStack_reversed\n      add\n      dup1\n      dup4\n  // CompilerUtils::fetchFreeMemoryPointer()\n      gt\n      tag_282\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // newPushTag tag_245, desc: return of function function (address)\n      dup3\n  // ExpressionCompiler::appendVariable(newOwner, newOwner)\n      add\n  // newTag tag_246, desc: declaration of function _transferOwnership\n      swap2\n    tag_280:\n      pop\n      pop\n      pop\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      pop\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      pop\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 0 return parameters\n  //  current stackLayout [0 -1 ]\n        /* \"contracts/Vitasensus.solpp\":16171:16183  descriptions */\n      dup6\n        /* \"contracts/Vitasensus.solpp\":16192:16196  skip */\n      dup11\n        /* \"contracts/Vitasensus.solpp\":16184:16189  index */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":16184:16196  index - skip */\n      tag_283\n  // CompilerUtils::convertType(): int_const 10000000000000000000 -> uint256\n  // end of CompilerUtils::convertType()\n      swap2\n      swap1\n      tag_129\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function leaveSpace(uint256 spaceId) external {\n\t\t _requireSpaceMember(spaceId);\n\t\t_spacesMembers[spaceId].remove(msg.sender);\n\t\t_userSpaces[msg.sender].remove(spaceId);\n\t}\n  // newTag tag_247, desc: return tag of leaveSpace\n  // start of code block of leaveSpace\n  // newPushTag tag_248, desc: return of function function (uint256) view\n      jump\t// in\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n    tag_283:  // return of Yul function checked_sub_t_uint256\n        /* \"contracts/Vitasensus.solpp\":16171:16197  descriptions[index - skip] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_284\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // newPushTag tag_249, desc: return of function function (struct IterableMapping.Map,address)\n      jumpi\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // ExpressionCompiler::visit(_memberAccess=_spacesMembers[spaceId].remove)\n  // ExpressionCompiler::appendVariable(_spacesMembers, _spacesMembers)\n      0x00\n      mstore\n      0x32\n      0x04\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      mstore\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x24\n      0x00\n  // bytes of type uint256: 32\n      revert\n    tag_284:\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x20\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mul\n      0x20\n  // bytes of type uint256: 32\n      add\n      add\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":16171:16237  descriptions[index - skip] = _spacesProposals[spaceId][index].body */\n      dup2\n      swap1\n      mstore\n      pop\n  // CompilerUtils::convertType(): struct IterableMapping.Map storage ref -> struct IterableMapping.Map storage pointer\n  // end of CompilerUtils::convertType()\n  // newTag tag_250, desc: declaration of function remove\n        /* \"contracts/Vitasensus.solpp\":16269:16285  _spacesProposals */\n      0x03\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n        /* \"contracts/Vitasensus.solpp\":16269:16294  _spacesProposals[spaceId] */\n      0x00\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n        /* \"contracts/Vitasensus.solpp\":16286:16293  spaceId */\n      dup12\n        /* \"contracts/Vitasensus.solpp\":16269:16294  _spacesProposals[spaceId] */\n      dup2\n  // end of CompilerUtils::rotateStackUp()\n      mstore\n      0x20\n      add\n      swap1\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // newPushTag tag_251, desc: return of function function (struct UintKeyedIterableMapping.Map,uint256)\n      dup2\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      mstore\n  // ExpressionCompiler::visit(_memberAccess=_userSpaces[msg.sender].remove)\n  // ExpressionCompiler::appendVariable(_userSpaces, _userSpaces)\n      0x20\n      add\n      0x00\n      blake2b\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n        /* \"contracts/Vitasensus.solpp\":16295:16300  index */\n      dup2\n  // CompilerUtils::convertType(): address -> address\n        /* \"contracts/Vitasensus.solpp\":16269:16301  _spacesProposals[spaceId][index] */\n      dup2\n      sload\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      dup2\n      lt\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      tag_285\n      jumpi\n  // bytes of type address: 32\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n      mstore\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x32\n      0x04\n  // bytes of type uint256: 32\n      mstore\n      0x24\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x00\n      revert\n    tag_285:\n      swap1\n  // CompilerUtils::convertType(): struct UintKeyedIterableMapping.Map storage ref -> struct UintKeyedIterableMapping.Map storage pointer\n  // end of CompilerUtils::convertType()\n  // newTag tag_252, desc: declaration of function remove\n      0x00\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      mstore\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      0x20\n      0x00\n  // end of CompilerUtils::rotateStackUp()\n      blake2b\n      swap1\n      0x0a\n      mul\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      add\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 0 return parameters\n  //  current stackLayout [0 -1 ]\n        /* \"contracts/Vitasensus.solpp\":16269:16311  _spacesProposals[spaceId][index].startTime */\n      0x02\n      add\n      0x00\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function joinSpace(uint256 spaceId) public {\n\t\trequire(!isSpaceMember(spaceId, msg.sender));\n\t\t_spacesMembers[spaceId].set(msg.sender, 1);\n\t\t_userSpaces[msg.sender].set(spaceId, 1);\n\t}\n  // newTag tag_253, desc: return tag of joinSpace\n  // start of code block of joinSpace\n  // newPushTag tag_254, desc: return of function function (uint256,address) view returns (bool)\n      swap1\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      sload\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/Vitasensus.solpp\":16242:16311  startTimes[index - skip] = _spacesProposals[spaceId][index].startTime */\n      0xffffffffffffffff\n      and\n  // newPushTag tag_255, desc: \n        /* \"contracts/Vitasensus.solpp\":16242:16252  startTimes */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":16261:16265  skip */\n      dup11\n  // Jump to tag_254\n        /* \"contracts/Vitasensus.solpp\":16253:16258  index */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":16253:16265  index - skip */\n      tag_287\n      swap2\n      swap1\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // newPushTag tag_256, desc: return of function function (struct IterableMapping.Map,address,uint256)\n      tag_129\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n      jump\t// in\n    tag_287:  // return of Yul function checked_sub_t_uint256\n  // CompilerUtils::convertType(): int_const 1 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=_spacesMembers[spaceId].set)\n  // ExpressionCompiler::appendVariable(_spacesMembers, _spacesMembers)\n        /* \"contracts/Vitasensus.solpp\":16242:16266  startTimes[index - skip] */\n      dup2\n      mload\n      dup2\n      lt\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      tag_288\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // bytes of type uint256: 32\n      0x00\n      mstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x32\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x04\n      mstore\n  // bytes of type uint256: 32\n      0x24\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n      revert\n    tag_288:\n      0x20\n      mul\n  // CompilerUtils::convertType(): struct IterableMapping.Map storage ref -> struct IterableMapping.Map storage pointer\n  // end of CompilerUtils::convertType()\n  // newTag tag_257, desc: declaration of function set\n      0x20\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      add\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      add\n        /* \"contracts/Vitasensus.solpp\":16242:16311  startTimes[index - skip] = _spacesProposals[spaceId][index].startTime */\n      dup2\n      dup2\n  // end of CompilerUtils::rotateStackUp()\n      mstore\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":16341:16357  _spacesProposals */\n      0x03\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // newPushTag tag_258, desc: return of function function (struct UintKeyedIterableMapping.Map,uint256,uint256)\n        /* \"contracts/Vitasensus.solpp\":16341:16366  _spacesProposals[spaceId] */\n      0x00\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":16358:16365  spaceId */\n      dup12\n        /* \"contracts/Vitasensus.solpp\":16341:16366  _spacesProposals[spaceId] */\n      dup2\n  // CompilerUtils::convertType(): int_const 1 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=_userSpaces[msg.sender].set)\n  // ExpressionCompiler::appendVariable(_userSpaces, _userSpaces)\n      mstore\n      0x20\n      add\n      swap1\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n      dup2\n  // CompilerUtils::convertType(): address -> address\n      mstore\n      0x20\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      add\n      0x00\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":16367:16372  index */\n      dup2\n  // bytes of type address: 32\n        /* \"contracts/Vitasensus.solpp\":16341:16373  _spacesProposals[spaceId][index] */\n      dup2\n      sload\n  // end of CompilerUtils::storeInMemoryDynamic()\n      dup2\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      lt\n      tag_289\n  // bytes of type uint256: 32\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x00\n      mstore\n      0x32\n      0x04\n  // CompilerUtils::convertType(): struct UintKeyedIterableMapping.Map storage ref -> struct UintKeyedIterableMapping.Map storage pointer\n  // end of CompilerUtils::convertType()\n  // newTag tag_259, desc: declaration of function set\n      mstore\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      0x24\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      0x00\n      revert\n    tag_289:\n  // end of CompilerUtils::rotateStackUp()\n      swap1\n      0x00\n      mstore\n      0x20\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 0 return parameters\n  //  current stackLayout [0 -1 ]\n      blake2b\n      swap1\n      0x0a\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(uint256[] memory proposalIds)\n  // CompilerUtils::pushZeroPointer()\n      mul\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(string[] memory titles)\n  // CompilerUtils::pushZeroPointer()\n      add\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(string[] memory descriptions)\n  // CompilerUtils::pushZeroPointer()\n        /* \"contracts/Vitasensus.solpp\":16341:16381  _spacesProposals[spaceId][index].endTime */\n      0x02\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(uint256[] memory startTimes)\n  // CompilerUtils::pushZeroPointer()\n      add\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(uint256[] memory endTimes)\n  // CompilerUtils::pushZeroPointer()\n      0x08\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(uint256[] memory choicesCount)\n  // CompilerUtils::pushZeroPointer()\n      swap1\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function getSpaceProposals(\n\t\tuint256 spaceId,\n\t\tuint256 skip,\n\t\tuint256 limit\n\t)\n\t\texternal\n\t\tview\n\t\treturns (\n\t\t\tuint256[] memory proposalIds,\n\t\t\tstring[] memory titles,\n\t\t\tstring[] memory descriptions,\n\t\t\tuint256[] memory startTimes,\n\t\t\tuint256[] memory endTimes,\n\t\t\tuint256[] memory choicesCount\n\t\t)\n\t{\n\t\tfor (\n\t\t\tuint256 index = skip;\n\t\t\tindex < _spacesProposals[spaceId].length && index < (skip + limit);\n\t\t\tindex++\n\t\t) {\n\t\t\tproposalIds[index - skip] = index;\n\t\t\ttitles[index - skip] = _spacesProposals[spaceId][index].title;\n\t\t\tdescriptions[index - skip] = _spacesProposals[spaceId][index].body;\n\t\t\tstartTimes[index - skip] = _spacesProposals[spaceId][index].startTime;\n\t\t\tendTimes[index - skip] = _spacesProposals[spaceId][index].endTime;\n\t\t\tchoicesCount[index - skip] = _spacesProposals[spaceId][index].choices.length;\n\t\t}\n\t}\n  // newTag tag_260, desc: return tag of getSpaceProposals\n  // start of code block of getSpaceProposals\n  // newTag tag_261, desc: \n  // newTag tag_262, desc: \n  // newTag tag_263, desc: \n  // ContractCompiler::appendStackVariableInitialisation(uint256 index)\n      sload\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::appendVariable(skip, skip)\n      swap1\n  // CompilerUtils::moveToStackVariable(index)\n      0x0100\n      exp\n      swap1\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposals[spaceId].length)\n  // ExpressionCompiler::appendVariable(_spacesProposals, _spacesProposals)\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/Vitasensus.solpp\":16316:16381  endTimes[index - skip] = _spacesProposals[spaceId][index].endTime */\n      0xffffffffffffffff\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      and\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":16316:16324  endTimes */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":16333:16337  skip */\n      dup11\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":16325:16330  index */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":16325:16337  index - skip */\n      tag_291\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap2\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      tag_129\n  // bytes of type uint256: 32\n      jump\t// in\n    tag_291:  // return of Yul function checked_sub_t_uint256\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":16316:16338  endTimes[index - skip] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_292\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(index, index)\n      mstore\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mstore(0x04, 0x32)\n  // newPushTag tag_264, desc: \n      0x24\n      0x00\n  // Jump to tag_263\n      revert\n  // ExpressionCompiler::appendVariable(limit, limit)\n    tag_292:\n  // ExpressionCompiler::appendVariable(skip, skip)\n      0x20\n  // CompilerContext::callYulFunction(name=checked_add_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_265, desc: return of Yul function checked_add_t_uint256\n      mul\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      0x20\n      add\n  // end of CompilerUtils::rotateStackUp()\n      add\n        /* \"contracts/Vitasensus.solpp\":16316:16381  endTimes[index - skip] = _spacesProposals[spaceId][index].endTime */\n      dup2\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(index, index)\n      mstore\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":16415:16431  _spacesProposals */\n      0x03\n        /* \"contracts/Vitasensus.solpp\":16415:16440  _spacesProposals[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":16432:16439  spaceId */\n      dup12\n  // ExpressionCompiler::appendVariable(index, index)\n        /* \"contracts/Vitasensus.solpp\":16415:16440  _spacesProposals[spaceId] */\n      dup2\n  // ExpressionCompiler::appendVariable(proposalIds, proposalIds)\n      mstore\n  // ExpressionCompiler::appendVariable(skip, skip)\n      0x20\n  // ExpressionCompiler::appendVariable(index, index)\n      add\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_266, desc: return of Yul function checked_sub_t_uint256\n      swap1\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup2\n      mstore\n  // end of CompilerUtils::rotateStackUp()\n      0x20\n      add\n      0x00\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":16441:16446  index */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":16415:16447  _spacesProposals[spaceId][index] */\n      dup2\n      sload\n      dup2\n      lt\n  // newPushTag tag_267, desc: \n      tag_293\n      jumpi\n  // Jump to tag_266\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_293:\n      swap1\n      0x00\n      mstore\n      0x20\n      0x00\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      blake2b\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      swap1\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n      0x0a\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mul\n      add\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":16415:16455  _spacesProposals[spaceId][index].choices */\n      0x05\n      add\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":16415:16462  _spacesProposals[spaceId][index].choices.length */\n      dup1\n  // CompilerUtils::popStackSlots(1)\n      sload\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposals[spaceId][index].title)\n  // ExpressionCompiler::appendVariable(_spacesProposals, _spacesProposals)\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":16386:16398  choicesCount */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":16407:16411  skip */\n      dup11\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":16399:16404  index */\n      dup4\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":16399:16411  index - skip */\n      tag_295\n      swap2\n  // bytes of type uint256: 32\n      swap1\n      tag_129\n  // end of CompilerUtils::storeInMemoryDynamic()\n      jump\t// in\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n    tag_295:  // return of Yul function checked_sub_t_uint256\n        /* \"contracts/Vitasensus.solpp\":16386:16412  choicesCount[index - skip] */\n      dup2\n  // bytes of type uint256: 32\n      mload\n      dup2\n  // end of CompilerUtils::storeInMemoryDynamic()\n      lt\n      tag_296\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // ExpressionCompiler::appendVariable(index, index)\n      0x00\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mstore\n      mstore(0x04, 0x32)\n      0x24\n      0x00\n  // newPushTag tag_268, desc: \n      revert\n    tag_296:\n  // Jump to tag_267\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Vitasensus.solpp\":16386:16462  choicesCount[index - skip] = _spacesProposals[spaceId][index].choices.length */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":16050:16057  index++ */\n      dup1\n  // newTag tag_269, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup1\n      tag_297\n  // end of CompilerUtils::storeInMemory()\n      swap1\n      tag_64\n      jump\t// in\n    tag_297:  // return of Yul function increment_t_uint256\n      swap2\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":15945:16467  for (... */\n      jump(tag_260)\n    tag_261:\n      pop\n        /* \"contracts/Vitasensus.solpp\":15636:16470  function getSpaceProposals(... */\n      swap4\n      swap8\n      pop\n  // CompilerUtils::convertType(): string storage ref -> string memory\n      swap4\n      swap8\n  // CompilerContext::callYulFunction(name=extract_byte_array_length, _inArgs=1, _outArgs=1)\n  // newPushTag tag_270, desc: return of Yul function extract_byte_array_length\n      swap2\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      swap6\n  // end of CompilerUtils::rotateStackDown()\n      pop\n      swap4\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":5604:5700  function addOperator(address operator_) external onlyOwner {... */\n    tag_23:  // declaration of function addOperator\n        /* \"contracts/Ownable.sol\":1049:1062   */\n      tag_299\n        /* \"contracts/Ownable.sol\":1049:1060   */\n      tag_239\n        /* \"contracts/Ownable.sol\":1049:1062   */\n      jump\t// in\n    tag_299:  // return of function function () view\n        /* \"contracts/Vitasensus.solpp\":5692:5696  true */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":5667:5678  _isOperator */\n      0x0b\n        /* \"contracts/Vitasensus.solpp\":5667:5689  _isOperator[operator_] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":5679:5688  operator_ */\n      dup4\n  // CompilerUtils::allocateMemory()\n  // CompilerUtils::fetchFreeMemoryPointer()\n        /* \"contracts/Vitasensus.solpp\":5667:5689  _isOperator[operator_] */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n  // CompilerUtils::storeFreeMemoryPointer()\n      mstore\n      0x20\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // end of CompilerUtils::allocateMemory()\n      add\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      swap1\n      dup2\n      mstore\n  // end of CompilerUtils::rotateStackUp()\n      0x20\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      0x00\n  // bytes of type uint256: 32\n      blake2b\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n  // CompilerUtils::copyToStackTop(3, 1)\n        /* \"contracts/Vitasensus.solpp\":5667:5696  _isOperator[operator_] = true */\n      0x0100\n      exp\n      dup2\n  // CompilerContext::callYulFunction(name=extract_byte_array_length, _inArgs=1, _outArgs=1)\n  // newPushTag tag_271, desc: return of Yul function extract_byte_array_length\n      sload\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      dup2\n  // end of CompilerUtils::rotateStackDown()\n      0xff\n      mul\n      not\n      and\n      swap1\n  // newPushTag tag_272, desc: \n      dup4\n      iszero\n  // Jump to tag_271\n      iszero\n      mul\n      or\n  // newPushTag tag_273, desc: \n      swap1\n      sstore\n  // Jump to tag_272\n      pop\n        /* \"contracts/Vitasensus.solpp\":5604:5700  function addOperator(address operator_) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":16496:17164  function getSpaceProposal(uint256 spaceId, uint256 proposalId)... */\n    tag_24:  // declaration of function getSpaceProposal\n        /* \"contracts/Vitasensus.solpp\":16592:16611  string memory title */\n      0x60\n        /* \"contracts/Vitasensus.solpp\":16616:16641  string memory description */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":16646:16660  address author */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":16665:16682  uint256 startTime */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":16687:16702  uint256 endTime */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":16707:16723  uint256 snapshot */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":16728:16752  bytes32[] memory choices */\n      0x60\n        /* \"contracts/Vitasensus.solpp\":16757:16790  address[] memory choicesExecutors */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":16795:16823  bytes32[] memory choicesData */\n      0x60\n        /* \"contracts/Vitasensus.solpp\":16828:16850  uint256[] memory votes */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":16860:16885  Proposal storage proposal */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":16888:16921  _getProposal(spaceId, proposalId) */\n      tag_302\n        /* \"contracts/Vitasensus.solpp\":16901:16908  spaceId */\n      dup14\n        /* \"contracts/Vitasensus.solpp\":16910:16920  proposalId */\n      dup14\n        /* \"contracts/Vitasensus.solpp\":16888:16900  _getProposal */\n      tag_67\n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":16888:16921  _getProposal(spaceId, proposalId) */\n      jump\t// in\n    tag_302:  // return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n  // end of CompilerUtils::storeInMemory()\n        /* \"contracts/Vitasensus.solpp\":16860:16921  Proposal storage proposal = _getProposal(spaceId, proposalId) */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":16937:16945  proposal */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":16937:16951  proposal.title */\n      0x01\n  // newTag tag_274, desc: \n      add\n        /* \"contracts/Vitasensus.solpp\":16956:16964  proposal */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":16956:16969  proposal.body */\n      0x00\n      add\n        /* \"contracts/Vitasensus.solpp\":16974:16982  proposal */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":16974:16989  proposal.author */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Vitasensus.solpp\":16994:17002  proposal */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":16994:17012  proposal.startTime */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n  // CompilerUtils::popStackSlots(3)\n      div\n      0xffffffffffffffff\n      and\n  // end of CompilerUtils::popStackSlots()\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(titles, titles)\n        /* \"contracts/Vitasensus.solpp\":17017:17025  proposal */\n      dup5\n  // ExpressionCompiler::appendVariable(skip, skip)\n        /* \"contracts/Vitasensus.solpp\":17017:17033  proposal.endTime */\n      0x02\n  // ExpressionCompiler::appendVariable(index, index)\n      add\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_275, desc: return of Yul function checked_sub_t_uint256\n      0x08\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      swap1\n      sload\n  // end of CompilerUtils::rotateStackUp()\n      swap1\n      0x0100\n      exp\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/Vitasensus.solpp\":17038:17046  proposal */\n      dup6\n        /* \"contracts/Vitasensus.solpp\":17038:17061  proposal.snapshotHeight */\n      0x03\n  // newPushTag tag_276, desc: \n      add\n      sload\n  // Jump to tag_275\n        /* \"contracts/Vitasensus.solpp\":17066:17074  proposal */\n      dup7\n        /* \"contracts/Vitasensus.solpp\":17066:17082  proposal.choices */\n      0x05\n      add\n        /* \"contracts/Vitasensus.solpp\":17087:17095  proposal */\n      dup8\n        /* \"contracts/Vitasensus.solpp\":17087:17112  proposal.choicesExecutors */\n      0x06\n      add\n        /* \"contracts/Vitasensus.solpp\":17117:17125  proposal */\n      dup9\n        /* \"contracts/Vitasensus.solpp\":17117:17137  proposal.choicesData */\n      0x07\n      add\n        /* \"contracts/Vitasensus.solpp\":17142:17150  proposal */\n      dup10\n        /* \"contracts/Vitasensus.solpp\":17142:17156  proposal.votes */\n      0x08\n      add\n        /* \"contracts/Vitasensus.solpp\":16925:17160  return (... */\n      dup10\n      dup1\n      sload\n      tag_303\n      swap1\n      tag_184\n  // CompilerUtils::popStackSlots(1)\n      jump\t// in\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposals[spaceId][index].body)\n  // ExpressionCompiler::appendVariable(_spacesProposals, _spacesProposals)\n    tag_303:  // return of Yul function extract_byte_array_length\n      dup1\n      0x1f\n      add\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      0x20\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup1\n      swap2\n  // bytes of type uint256: 32\n      div\n      mul\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x20\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      0x40\n  // bytes of type uint256: 32\n      mload\n      swap1\n  // end of CompilerUtils::storeInMemoryDynamic()\n      dup2\n      add\n      0x40\n      mstore\n  // ExpressionCompiler::appendVariable(index, index)\n      dup1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n  // newPushTag tag_277, desc: \n      0x20\n      add\n  // Jump to tag_276\n      dup3\n      dup1\n      sload\n      tag_304\n      swap1\n      tag_184\n      jump\t// in\n    tag_304:  // return of Yul function extract_byte_array_length\n      dup1\n      iszero\n      tag_305\n  // newTag tag_278, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jumpi\n      dup1\n  // end of CompilerUtils::storeInMemory()\n      0x1f\n      lt\n      tag_306\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n  // CompilerUtils::convertType(): string storage ref -> string memory\n      add\n      swap2\n  // CompilerContext::callYulFunction(name=extract_byte_array_length, _inArgs=1, _outArgs=1)\n  // newPushTag tag_279, desc: return of Yul function extract_byte_array_length\n      tag_305\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      jump\n  // end of CompilerUtils::rotateStackDown()\n    tag_306:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      blake2b(0x00, 0x20)\n      swap1\n    tag_307:\n      dup2\n  // CompilerUtils::allocateMemory()\n  // CompilerUtils::fetchFreeMemoryPointer()\n      sload\n      dup2\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      mstore\n      swap1\n      0x01\n  // CompilerUtils::storeFreeMemoryPointer()\n      add\n      swap1\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // end of CompilerUtils::allocateMemory()\n      0x20\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      add\n      dup1\n      dup4\n  // end of CompilerUtils::rotateStackUp()\n      gt\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      tag_307\n      jumpi\n  // bytes of type uint256: 32\n      dup3\n      swap1\n  // end of CompilerUtils::storeInMemoryDynamic()\n  // CompilerUtils::copyToStackTop(3, 1)\n      sub\n      0x1f\n      and\n  // CompilerContext::callYulFunction(name=extract_byte_array_length, _inArgs=1, _outArgs=1)\n  // newPushTag tag_280, desc: return of Yul function extract_byte_array_length\n      dup3\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      add\n  // end of CompilerUtils::rotateStackDown()\n      swap2\n    tag_305:\n      pop\n      pop\n      pop\n  // newPushTag tag_281, desc: \n      pop\n      pop\n  // Jump to tag_280\n      swap10\n      pop\n      dup9\n  // newPushTag tag_282, desc: \n      dup1\n      sload\n  // Jump to tag_281\n      tag_308\n      swap1\n      tag_184\n      jump\t// in\n    tag_308:  // return of Yul function extract_byte_array_length\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      0x40\n  // end of CompilerUtils::storeInMemory()\n      mstore\n      dup1\n      swap3\n      swap2\n  // newTag tag_283, desc: \n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_309\n      swap1\n      tag_184\n      jump\t// in\n    tag_309:  // return of Yul function extract_byte_array_length\n      dup1\n      iszero\n      tag_310\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_311\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n  // CompilerUtils::popStackSlots(3)\n      div\n      mul\n      dup4\n  // end of CompilerUtils::popStackSlots()\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(descriptions, descriptions)\n      mstore\n  // ExpressionCompiler::appendVariable(skip, skip)\n      swap2\n  // ExpressionCompiler::appendVariable(index, index)\n      0x20\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_284, desc: return of Yul function checked_sub_t_uint256\n      add\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      swap2\n      tag_310\n  // end of CompilerUtils::rotateStackUp()\n      jump\n    tag_311:\n      dup3\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      0x20\n  // newPushTag tag_285, desc: \n      0x00\n      blake2b\n  // Jump to tag_284\n      swap1\n    tag_312:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_312\n      jumpi\n      dup3\n  // CompilerUtils::popStackSlots(1)\n      swap1\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposals[spaceId][index].startTime)\n  // ExpressionCompiler::appendVariable(_spacesProposals, _spacesProposals)\n      sub\n      0x1f\n      and\n      dup3\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      add\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap2\n    tag_310:\n  // bytes of type uint256: 32\n      pop\n      pop\n  // end of CompilerUtils::storeInMemoryDynamic()\n      pop\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      pop\n      pop\n  // bytes of type uint256: 32\n      swap9\n      pop\n  // end of CompilerUtils::storeInMemoryDynamic()\n      dup7\n      0xffffffffffffffff\n      and\n      swap7\n  // ExpressionCompiler::appendVariable(index, index)\n      pop\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      dup6\n      0xffffffffffffffff\n      and\n      swap6\n      pop\n      dup4\n  // newPushTag tag_286, desc: \n      dup1\n      sload\n  // Jump to tag_285\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n  // newTag tag_287, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mstore\n      dup1\n  // end of CompilerUtils::storeInMemory()\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_313\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n  // CompilerUtils::convertType(): uint64 -> uint256\n      mstore\n      0x20\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(startTimes, startTimes)\n      0x00\n  // ExpressionCompiler::appendVariable(skip, skip)\n      blake2b\n  // ExpressionCompiler::appendVariable(index, index)\n      swap1\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_288, desc: return of Yul function checked_sub_t_uint256\n    tag_314:\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup2\n      sload\n  // end of CompilerUtils::rotateStackUp()\n      dup2\n      mstore\n      0x20\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n  // newPushTag tag_289, desc: \n      dup4\n      gt\n  // Jump to tag_288\n      tag_314\n      jumpi\n    tag_313:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap4\n      pop\n      dup3\n      dup1\n      sload\n      dup1\n      0x20\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      mul\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      0x20\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n      add\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mload(0x40)\n  // bytes of type uint256: 32\n      swap1\n      dup2\n  // end of CompilerUtils::storeInMemoryDynamic()\n      add\n  // CompilerUtils::popStackSlots(1)\n      0x40\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposals[spaceId][index].endTime)\n  // ExpressionCompiler::appendVariable(_spacesProposals, _spacesProposals)\n      mstore\n      dup1\n      swap3\n      swap2\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      swap1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup2\n      dup2\n  // bytes of type uint256: 32\n      mstore\n      0x20\n  // end of CompilerUtils::storeInMemoryDynamic()\n      add\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup3\n      dup1\n  // bytes of type uint256: 32\n      sload\n      dup1\n  // end of CompilerUtils::storeInMemoryDynamic()\n      iszero\n      tag_315\n      jumpi\n      0x20\n  // ExpressionCompiler::appendVariable(index, index)\n      mul\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n  // newPushTag tag_290, desc: \n      0x20\n      0x00\n  // Jump to tag_289\n      blake2b\n      swap1\n    tag_316:\n      dup2\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n  // newTag tag_291, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      div\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // end of CompilerUtils::storeInMemory()\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_316\n      jumpi\n    tag_315:\n      pop\n      pop\n      pop\n      pop\n      pop\n  // CompilerUtils::convertType(): uint64 -> uint256\n      swap3\n      pop\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(endTimes, endTimes)\n      dup2\n  // ExpressionCompiler::appendVariable(skip, skip)\n      dup1\n  // ExpressionCompiler::appendVariable(index, index)\n      sload\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_292, desc: return of Yul function checked_sub_t_uint256\n      dup1\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      0x20\n      mul\n  // end of CompilerUtils::rotateStackUp()\n      0x20\n      add\n      0x40\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mload\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n  // newPushTag tag_293, desc: \n      dup1\n      swap3\n  // Jump to tag_292\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_317\n      jumpi\n      0x20\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      mul\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      dup3\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n      add\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap2\n      swap1\n  // bytes of type uint256: 32\n      0x00\n      mstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x20\n  // CompilerUtils::popStackSlots(1)\n      0x00\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposals[spaceId][index].choices.length)\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposals[spaceId][index].choices)\n  // ExpressionCompiler::appendVariable(_spacesProposals, _spacesProposals)\n      blake2b\n      swap1\n    tag_318:\n      dup2\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      sload\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup2\n      mstore\n  // bytes of type uint256: 32\n      0x20\n      add\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap1\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x01\n      add\n  // bytes of type uint256: 32\n      swap1\n      dup1\n  // end of CompilerUtils::storeInMemoryDynamic()\n      dup4\n      gt\n      tag_318\n      jumpi\n  // ExpressionCompiler::appendVariable(index, index)\n    tag_317:\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n  // newPushTag tag_294, desc: \n      pop\n      dup1\n  // Jump to tag_293\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n  // newTag tag_295, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      0x40\n  // end of CompilerUtils::storeInMemory()\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_319\n      jumpi\n      0x20\n  // ExpressionCompiler::appendVariable(choicesCount, choicesCount)\n      mul\n  // ExpressionCompiler::appendVariable(skip, skip)\n      dup3\n  // ExpressionCompiler::appendVariable(index, index)\n      add\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_296, desc: return of Yul function checked_sub_t_uint256\n      swap2\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      swap1\n      0x00\n  // end of CompilerUtils::rotateStackUp()\n      mstore\n      0x20\n      0x00\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      blake2b\n      swap1\n    tag_320:\n      dup2\n      sload\n      dup2\n  // newPushTag tag_297, desc: \n      mstore\n      0x20\n  // Jump to tag_296\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_320\n      jumpi\n    tag_319:\n      pop\n      pop\n      pop\n      pop\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      pop\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      swap1\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n      pop\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap11\n      pop\n  // bytes of type uint256: 32\n      swap11\n      pop\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap11\n  // CompilerUtils::popStackSlots(1)\n      pop\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      swap11\n  // ExpressionCompiler::appendVariable(index, index)\n      pop\n      swap11\n  // CompilerContext::callYulFunction(name=increment_t_uint256, _inArgs=1, _outArgs=1)\n  // newPushTag tag_298, desc: return of Yul function increment_t_uint256\n      pop\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      swap11\n  // end of CompilerUtils::rotateStackDown()\n      pop\n      swap11\n      pop\n      swap11\n      pop\n  // CompilerUtils::popStackSlots(1)\n      swap11\n  // end of CompilerUtils::popStackSlots()\n      pop\n      swap11\n      pop\n  // CompilerUtils::popStackSlots(1)\n      pop\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n        /* \"contracts/Vitasensus.solpp\":16496:17164  function getSpaceProposal(uint256 spaceId, uint256 proposalId)... */\n      swap3\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 3 parameters and 6 return parameters\n  //  current stackLayout [6 -1 -1 -1 0 1 2 3 4 5 ]\n      swap6\n  //  current stackLayout [6 -1 -1 -1 0 5 2 3 4 1 ]\n      swap9\n  //  current stackLayout [6 1 -1 -1 0 5 2 3 4 -1 ]\n      swap12\n  //  current stackLayout [6 1 -1 -1 0 5 2 3 4 ]\n      swap2\n  //  current stackLayout [6 1 -1 -1 4 5 2 3 0 ]\n      swap5\n  //  current stackLayout [0 1 -1 -1 4 5 2 3 6 ]\n      swap8\n  //  current stackLayout [0 1 -1 -1 4 5 6 3 2 ]\n      swap11\n  //  current stackLayout [0 1 2 -1 4 5 6 3 -1 ]\n      pop\n  //  current stackLayout [0 1 2 -1 4 5 6 3 ]\n      swap3\n  //  current stackLayout [0 1 2 3 4 5 6 -1 ]\n      swap6\n      swap9\n      pop\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function addOperator(address operator_) external onlyOwner {\n\t\t_isOperator[operator_] = true;\n\t}\n  // newTag tag_299, desc: return tag of addOperator\n  // start of code block of addOperator\n  // newPushTag tag_300, desc: return of function function () view\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":5103:5267  function isProposalClosed(uint256 spaceId, uint256 proposalId) public view returns (bool) {... */\n    tag_25:  // declaration of function isProposalClosed\n        /* \"contracts/Vitasensus.solpp\":5187:5191  bool */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":5248:5263  block.timestamp */\n      timestamp\n        /* \"contracts/Vitasensus.solpp\":5204:5237  _getProposal(spaceId, proposalId) */\n      tag_322\n        /* \"contracts/Vitasensus.solpp\":5217:5224  spaceId */\n      dup5\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendModifierOrFunctionCode() for function addOperator(address operator_) external onlyOwner {\n\t\t_isOperator[operator_] = true;\n\t}\n  // newTag tag_301, desc: return tag of addOperator\n  // start of code block of addOperator\n        /* \"contracts/Vitasensus.solpp\":5226:5236  proposalId */\n      dup5\n  // ExpressionCompiler::appendVariable(_isOperator, _isOperator)\n        /* \"contracts/Vitasensus.solpp\":5204:5216  _getProposal */\n      tag_67\n        /* \"contracts/Vitasensus.solpp\":5204:5237  _getProposal(spaceId, proposalId) */\n      jump\t// in\n    tag_322:  // return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n        /* \"contracts/Vitasensus.solpp\":5204:5245  _getProposal(spaceId, proposalId).endTime */\n      0x02\n  // ExpressionCompiler::appendVariable(operator_, operator_)\n      add\n  // CompilerUtils::convertType(): address -> address\n      0x08\n      swap1\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      sload\n      swap1\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x0100\n      exp\n  // bytes of type address: 32\n      swap1\n      div\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0xffffffffffffffff\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      and\n        /* \"contracts/Vitasensus.solpp\":5204:5263  _getProposal(spaceId, proposalId).endTime < block.timestamp */\n      0xffffffffffffffff\n  // bytes of type uint256: 32\n      and\n      lt\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":5197:5263  return _getProposal(spaceId, proposalId).endTime < block.timestamp */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":5103:5267  function isProposalClosed(uint256 spaceId, uint256 proposalId) public view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":4018:4152  function isSpaceMember(uint256 spaceId, address user) public view returns (bool) {... */\n    tag_26:  // declaration of function isSpaceMember\n        /* \"contracts/Vitasensus.solpp\":4093:4097  bool */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":4147:4148  1 */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":4110:4143  _spacesMembers[spaceId].get(user) */\n      tag_324\n        /* \"contracts/Vitasensus.solpp\":4138:4142  user */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":4110:4124  _spacesMembers */\n      0x04\n  // CompilerUtils::copyToStackTop(4, 1)\n        /* \"contracts/Vitasensus.solpp\":4110:4133  _spacesMembers[spaceId] */\n      0x00\n  // CompilerUtils::convertType(): bool -> bool\n        /* \"contracts/Vitasensus.solpp\":4125:4132  spaceId */\n      dup8\n        /* \"contracts/Vitasensus.solpp\":4110:4133  _spacesMembers[spaceId] */\n      dup2\n  // end of CompilerUtils::convertType()\n      mstore\n      0x20\n      add\n      swap1\n  // CompilerUtils::popStackSlots(1)\n      dup2\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      mstore\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      0x20\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 0 return parameters\n  //  current stackLayout [0 -1 ]\n      add\n      0x00\n      blake2b\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(string memory title)\n  // CompilerUtils::pushZeroPointer()\n        /* \"contracts/Vitasensus.solpp\":4110:4137  _spacesMembers[spaceId].get */\n      tag_325\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(string memory description)\n  // CompilerUtils::pushZeroPointer()\n      swap1\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(address author)\n        /* \"contracts/Vitasensus.solpp\":4110:4143  _spacesMembers[spaceId].get(user) */\n      swap2\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(uint256 startTime)\n      swap1\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(uint256 endTime)\n      0xffffffff\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(uint256 snapshot)\n      and\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(bytes32[] memory choices)\n  // CompilerUtils::pushZeroPointer()\n      jump\t// in\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(address[] memory choicesExecutors)\n  // CompilerUtils::pushZeroPointer()\n    tag_324:  // return of function function (struct IterableMapping.Map,address) view returns (uint256)\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(bytes32[] memory choicesData)\n  // CompilerUtils::pushZeroPointer()\n        /* \"contracts/Vitasensus.solpp\":4110:4148  _spacesMembers[spaceId].get(user) == 1 */\n      eq\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(uint256[] memory votes)\n  // CompilerUtils::pushZeroPointer()\n        /* \"contracts/Vitasensus.solpp\":4103:4148  return _spacesMembers[spaceId].get(user) == 1 */\n      swap1\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function getSpaceProposal(uint256 spaceId, uint256 proposalId)\n\t\texternal\n\t\tview\n\t\treturns (\n\t\t\tstring memory title,\n\t\t\tstring memory description,\n\t\t\taddress author,\n\t\t\tuint256 startTime,\n\t\t\tuint256 endTime,\n\t\t\tuint256 snapshot,\n\t\t\tbytes32[] memory choices,\n\t\t\taddress[] memory choicesExecutors,\n\t\t\tbytes32[] memory choicesData,\n\t\t\tuint256[] memory votes\n\t\t)\n\t{\n\t\tProposal storage proposal = _getProposal(spaceId, proposalId);\n\t\treturn (\n\t\t\tproposal.title,\n\t\t\tproposal.body,\n\t\t\tproposal.author,\n\t\t\tproposal.startTime,\n\t\t\tproposal.endTime,\n\t\t\tproposal.snapshotHeight,\n\t\t\tproposal.choices,\n\t\t\tproposal.choicesExecutors,\n\t\t\tproposal.choicesData,\n\t\t\tproposal.votes\n\t\t);\n\t}\n  // newTag tag_302, desc: return tag of getSpaceProposal\n  // start of code block of getSpaceProposal\n  // ContractCompiler::appendStackVariableInitialisation(Proposal storage proposal)\n      pop\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // newPushTag tag_303, desc: return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n        /* \"contracts/Vitasensus.solpp\":4018:4152  function isSpaceMember(uint256 spaceId, address user) public view returns (bool) {... */\n      swap3\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      swap2\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":5703:5803  function removeOperator(address operator_) external onlyOwner {... */\n    tag_27:  // declaration of function removeOperator\n        /* \"contracts/Ownable.sol\":1049:1062   */\n      tag_327\n        /* \"contracts/Ownable.sol\":1049:1060   */\n      tag_239\n  // CompilerUtils::moveToStackVariable(proposal)\n        /* \"contracts/Ownable.sol\":1049:1062   */\n      jump\t// in\n    tag_327:  // return of function function () view\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::visit(_memberAccess=proposal.title)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n        /* \"contracts/Vitasensus.solpp\":5794:5799  false */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":5769:5780  _isOperator */\n      0x0b\n        /* \"contracts/Vitasensus.solpp\":5769:5791  _isOperator[operator_] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":5781:5790  operator_ */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":5769:5791  _isOperator[operator_] */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // ExpressionCompiler::visit(_memberAccess=proposal.body)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n  // ExpressionCompiler::visit(_memberAccess=proposal.author)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n      0x00\n        /* \"contracts/Vitasensus.solpp\":5769:5799  _isOperator[operator_] = false */\n      0x0100\n      exp\n      dup2\n  // ExpressionCompiler::visit(_memberAccess=proposal.startTime)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n  // ExpressionCompiler::visit(_memberAccess=proposal.endTime)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      sstore\n      pop\n        /* \"contracts/Vitasensus.solpp\":5703:5803  function removeOperator(address operator_) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":12806:12934  function getSpaceProposalsCount(uint256 spaceId) external view returns (uint256) {... */\n    tag_28:  // declaration of function getSpaceProposalsCount\n        /* \"contracts/Vitasensus.solpp\":12878:12885  uint256 */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":12898:12914  _spacesProposals */\n      0x03\n        /* \"contracts/Vitasensus.solpp\":12898:12923  _spacesProposals[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":12915:12922  spaceId */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":12898:12923  _spacesProposals[spaceId] */\n      dup2\n      mstore\n      0x20\n      add\n  // ExpressionCompiler::visit(_memberAccess=proposal.snapshotHeight)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n  // ExpressionCompiler::visit(_memberAccess=proposal.choices)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":12898:12930  _spacesProposals[spaceId].length */\n      dup1\n      sload\n      swap1\n      pop\n  // ExpressionCompiler::visit(_memberAccess=proposal.choicesExecutors)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n        /* \"contracts/Vitasensus.solpp\":12891:12930  return _spacesProposals[spaceId].length */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":12806:12934  function getSpaceProposalsCount(uint256 spaceId) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n  // ExpressionCompiler::visit(_memberAccess=proposal.choicesData)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":4155:4310  function isSpaceAdmin(uint256 spaceId, address user) public view returns (bool) {... */\n    tag_29:  // declaration of function isSpaceAdmin\n        /* \"contracts/Vitasensus.solpp\":4229:4233  bool */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":4246:4260  _spacesIsAdmin */\n      0x06\n        /* \"contracts/Vitasensus.solpp\":4246:4269  _spacesIsAdmin[spaceId] */\n      0x00\n  // ExpressionCompiler::visit(_memberAccess=proposal.votes)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n        /* \"contracts/Vitasensus.solpp\":4261:4268  spaceId */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":4246:4269  _spacesIsAdmin[spaceId] */\n      dup2\n      mstore\n      0x20\n      add\n  // CompilerUtils::convertType(): tuple(string storage ref,string storage ref,address,uint64,uint64,uint256,bytes32[] storage ref,address[] storage ref,bytes32[] storage ref,uint256[] storage ref) -> tuple(string memory,string memory,address,uint256,uint256,uint256,bytes32[] memory,address[] memory,bytes32[] memory,uint256[] memory)\n  // CompilerUtils::copyToStackTop(10, 1)\n      swap1\n  // CompilerUtils::convertType(): string storage ref -> string memory\n      dup2\n      mstore\n  // CompilerContext::callYulFunction(name=extract_byte_array_length, _inArgs=1, _outArgs=1)\n  // newPushTag tag_304, desc: return of Yul function extract_byte_array_length\n      0x20\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      add\n  // end of CompilerUtils::rotateStackDown()\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":4246:4275  _spacesIsAdmin[spaceId][user] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":4270:4274  user */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":4246:4275  _spacesIsAdmin[spaceId][user] */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n  // CompilerUtils::allocateMemory()\n  // CompilerUtils::fetchFreeMemoryPointer()\n      dup2\n      mstore\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      0x20\n      add\n      0x00\n  // CompilerUtils::storeFreeMemoryPointer()\n      blake2b\n      0x00\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // end of CompilerUtils::allocateMemory()\n      swap1\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      sload\n      swap1\n      0x0100\n  // end of CompilerUtils::rotateStackUp()\n      exp\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      div\n  // bytes of type uint256: 32\n      0xff\n      and\n  // end of CompilerUtils::storeInMemoryDynamic()\n  // CompilerUtils::copyToStackTop(3, 1)\n        /* \"contracts/Vitasensus.solpp\":4246:4306  _spacesIsAdmin[spaceId][user] || isSpaceOwner(spaceId, user) */\n      dup1\n      tag_331\n      jumpi\n  // CompilerContext::callYulFunction(name=extract_byte_array_length, _inArgs=1, _outArgs=1)\n  // newPushTag tag_305, desc: return of Yul function extract_byte_array_length\n      pop\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n        /* \"contracts/Vitasensus.solpp\":4279:4306  isSpaceOwner(spaceId, user) */\n      tag_332\n  // end of CompilerUtils::rotateStackDown()\n        /* \"contracts/Vitasensus.solpp\":4292:4299  spaceId */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":4301:4305  user */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":4279:4291  isSpaceOwner */\n      tag_16\n        /* \"contracts/Vitasensus.solpp\":4279:4306  isSpaceOwner(spaceId, user) */\n      jump\t// in\n    tag_332:  // return of function function (uint256,address) view returns (bool)\n  // newPushTag tag_306, desc: \n        /* \"contracts/Vitasensus.solpp\":4246:4306  _spacesIsAdmin[spaceId][user] || isSpaceOwner(spaceId, user) */\n    tag_331:\n        /* \"contracts/Vitasensus.solpp\":4239:4306  return _spacesIsAdmin[spaceId][user] || isSpaceOwner(spaceId, user) */\n      swap1\n  // Jump to tag_305\n      pop\n        /* \"contracts/Vitasensus.solpp\":4155:4310  function isSpaceAdmin(uint256 spaceId, address user) public view returns (bool) {... */\n      swap3\n      swap2\n  // newPushTag tag_307, desc: \n      pop\n      pop\n  // Jump to tag_306\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":11860:12308  function updateSpace(... */\n    tag_30:  // declaration of function updateSpace\n        /* \"contracts/Vitasensus.solpp\":12066:12073  spaceId */\n      dup7\n        /* \"contracts/Vitasensus.solpp\":2799:2826  _requireSpaceAdmin(spaceId) */\n      tag_334\n        /* \"contracts/Vitasensus.solpp\":2818:2825  spaceId */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":2799:2817  _requireSpaceAdmin */\n      tag_100\n        /* \"contracts/Vitasensus.solpp\":2799:2826  _requireSpaceAdmin(spaceId) */\n      jump\t// in\n    tag_334:  // return of function function (uint256) view\n        /* \"contracts/Vitasensus.solpp\":12079:12098  Space storage space */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":12101:12108  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":12109:12116  spaceId */\n      dup10\n        /* \"contracts/Vitasensus.solpp\":12101:12117  _spaces[spaceId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_336\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mstore\n      0x32\n  // end of CompilerUtils::storeInMemory()\n      0x04\n      mstore\n      0x24\n      0x00\n  // newTag tag_308, desc: \n      revert\n    tag_336:\n      swap1\n      0x00\n      mstore\n      blake2b(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n        /* \"contracts/Vitasensus.solpp\":12079:12117  Space storage space = _spaces[spaceId] */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":12134:12138  name */\n      dup8\n        /* \"contracts/Vitasensus.solpp\":12121:12126  space */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":12121:12131  space.name */\n      0x00\n      add\n        /* \"contracts/Vitasensus.solpp\":12121:12138  space.name = name */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Vitasensus.solpp\":12162:12173  description */\n      dup7\n        /* \"contracts/Vitasensus.solpp\":12142:12147  space */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":12142:12159  space.description */\n      0x03\n      add\n        /* \"contracts/Vitasensus.solpp\":12142:12173  space.description = description */\n      swap1\n  // CompilerUtils::popStackSlots(3)\n      dup1\n      mload\n      swap1\n  // end of CompilerUtils::popStackSlots()\n  // end of CompilerUtils::convertType()\n      0x20\n      add\n  // CompilerUtils::copyToStackTop(9, 1)\n      swap1\n  // CompilerUtils::convertType(): string storage ref -> string memory\n      tag_338\n      swap3\n  // CompilerContext::callYulFunction(name=extract_byte_array_length, _inArgs=1, _outArgs=1)\n  // newPushTag tag_309, desc: return of Yul function extract_byte_array_length\n      swap2\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      swap1\n  // end of CompilerUtils::rotateStackDown()\n      tag_222\n      jump\t// in\n    tag_338:\n      pop\n        /* \"contracts/Vitasensus.solpp\":12191:12201  spaceToken */\n      dup6\n        /* \"contracts/Vitasensus.solpp\":12177:12182  space */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":12177:12188  space.token */\n      0x04\n      add\n      0x00\n        /* \"contracts/Vitasensus.solpp\":12177:12201  space.token = spaceToken */\n      0x0100\n      exp\n      dup2\n      sload\n  // CompilerUtils::allocateMemory()\n  // CompilerUtils::fetchFreeMemoryPointer()\n      dup2\n      0xffffffffffffffffffff\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      mul\n      not\n      and\n  // CompilerUtils::storeFreeMemoryPointer()\n      swap1\n      dup4\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // end of CompilerUtils::allocateMemory()\n      0xffffffffffffffffffff\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      and\n      mul\n      or\n  // end of CompilerUtils::rotateStackUp()\n      swap1\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      sstore\n      pop\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":12233:12251  spaceTokenDecimals */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":12205:12252  space.tokenDecimals = uint8(spaceTokenDecimals) */\n      0xff\n  // end of CompilerUtils::storeInMemoryDynamic()\n  // CompilerUtils::copyToStackTop(3, 1)\n      and\n        /* \"contracts/Vitasensus.solpp\":12205:12210  space */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":12205:12224  space.tokenDecimals */\n      0x05\n  // CompilerContext::callYulFunction(name=extract_byte_array_length, _inArgs=1, _outArgs=1)\n  // newPushTag tag_310, desc: return of Yul function extract_byte_array_length\n      add\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n        /* \"contracts/Vitasensus.solpp\":12205:12252  space.tokenDecimals = uint8(spaceTokenDecimals) */\n      dup2\n  // end of CompilerUtils::rotateStackDown()\n      swap1\n      sstore\n      pop\n        /* \"contracts/Vitasensus.solpp\":12271:12277  avatar */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":12256:12261  space */\n      dup2\n  // newPushTag tag_311, desc: \n        /* \"contracts/Vitasensus.solpp\":12256:12268  space.avatar */\n      0x01\n      add\n  // Jump to tag_310\n        /* \"contracts/Vitasensus.solpp\":12256:12277  space.avatar = avatar */\n      dup2\n      swap1\n      sstore\n  // newPushTag tag_312, desc: \n      pop\n        /* \"contracts/Vitasensus.solpp\":12297:12304  website */\n      dup3\n  // Jump to tag_311\n        /* \"contracts/Vitasensus.solpp\":12281:12286  space */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":12281:12294  space.website */\n      0x02\n      add\n        /* \"contracts/Vitasensus.solpp\":12281:12304  space.website = website */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Vitasensus.solpp\":2830:2831  _ */\n      pop\n        /* \"contracts/Vitasensus.solpp\":11860:12308  function updateSpace(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":12716:12803  function getSpacesCount() external view returns (uint256) {... */\n    tag_31:  // declaration of function getSpacesCount\n        /* \"contracts/Vitasensus.solpp\":12765:12772  uint256 */\n      0x00\n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":12785:12792  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":12785:12799  _spaces.length */\n      dup1\n  // end of CompilerUtils::storeInMemory()\n      sload\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":12778:12799  return _spaces.length */\n      swap1\n  // newTag tag_313, desc: \n      pop\n        /* \"contracts/Vitasensus.solpp\":12716:12803  function getSpacesCount() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1784:1885   */\n    tag_32:  // declaration of function renounceOwnership\n        /* \"contracts/Ownable.sol\":1049:1062   */\n      tag_341\n        /* \"contracts/Ownable.sol\":1049:1060   */\n      tag_239\n        /* \"contracts/Ownable.sol\":1049:1062   */\n      jump\t// in\n    tag_341:  // return of function function () view\n        /* \"contracts/Ownable.sol\":1848:1878   */\n      tag_343\n        /* \"contracts/Ownable.sol\":1875:1876   */\n      0x00\n        /* \"contracts/Ownable.sol\":1848:1866   */\n      tag_245\n        /* \"contracts/Ownable.sol\":1848:1878   */\n      jump\t// in\n    tag_343:  // return of function function (address)\n        /* \"contracts/Ownable.sol\":1784:1885   */\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":10527:11244  function createSpace(... */\n    tag_33:  // declaration of function createSpace\n        /* \"contracts/Vitasensus.solpp\":1029:1040  10 * 10**18 */\n      0x8ac7230489e80000\n        /* \"contracts/Vitasensus.solpp\":10716:10725  msg.value */\n      callvalue\n        /* \"contracts/Vitasensus.solpp\":10716:10747  msg.value == SPACE_CREATION_FEE */\n      eq\n        /* \"contracts/Vitasensus.solpp\":10716:10777  msg.value == SPACE_CREATION_FEE && msg.token == VITE_TOKEN_ID */\n      dup1\n      iszero\n      tag_345\n      jumpi\n      pop\n        /* \"contracts/Vitasensus.solpp\":951:981  \"tti_5649544520544f4b454e6e40\" */\n      0x5649544520544f4b454e\n        /* \"contracts/Vitasensus.solpp\":10751:10777  msg.token == VITE_TOKEN_ID */\n      0xffffffffffffffffffff\n      and\n        /* \"contracts/Vitasensus.solpp\":10751:10760  msg.token */\n      tokenid\n  // CompilerUtils::popStackSlots(3)\n        /* \"contracts/Vitasensus.solpp\":10751:10777  msg.token == VITE_TOKEN_ID */\n      0xffffffffffffffffffff\n      and\n      eq\n  // end of CompilerUtils::popStackSlots()\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":10716:10777  msg.value == SPACE_CREATION_FEE && msg.token == VITE_TOKEN_ID */\n    tag_345:\n        /* \"contracts/Vitasensus.solpp\":10708:10778  require(msg.value == SPACE_CREATION_FEE && msg.token == VITE_TOKEN_ID) */\n      tag_346\n  // CompilerUtils::copyToStackTop(7, 1)\n      jumpi\n  // CompilerUtils::convertType(): uint64 -> uint256\n      0x00\n      dup1\n  // end of CompilerUtils::convertType()\n      revert\n    tag_346:\n  // CompilerUtils::copyToStackTop(6, 1)\n        /* \"contracts/Vitasensus.solpp\":10782:10797  uint256 spaceId */\n      0x00\n  // CompilerUtils::convertType(): uint64 -> uint256\n        /* \"contracts/Vitasensus.solpp\":10800:10807  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":10800:10814  _spaces.length */\n      dup1\n  // end of CompilerUtils::convertType()\n      sload\n      swap1\n  // CompilerUtils::copyToStackTop(4, 1)\n      pop\n  // CompilerUtils::convertType(): bytes32[] storage ref -> bytes32[] memory\n        /* \"contracts/Vitasensus.solpp\":10782:10814  uint256 spaceId = _spaces.length */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":10818:10836  Space memory space */\n      tag_347\n      tag_348\n      jump\t// in\n    tag_347:\n        /* \"contracts/Vitasensus.solpp\":10853:10857  name */\n      dup8\n  // CompilerUtils::allocateMemory()\n  // CompilerUtils::fetchFreeMemoryPointer()\n        /* \"contracts/Vitasensus.solpp\":10840:10845  space */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":10840:10850  space.name */\n      0x00\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      add\n        /* \"contracts/Vitasensus.solpp\":10840:10857  space.name = name */\n      dup2\n      dup2\n  // CompilerUtils::storeFreeMemoryPointer()\n      mstore\n      pop\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // end of CompilerUtils::allocateMemory()\n      pop\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n        /* \"contracts/Vitasensus.solpp\":10881:10892  description */\n      dup7\n        /* \"contracts/Vitasensus.solpp\":10861:10866  space */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":10861:10878  space.description */\n      0x60\n  // end of CompilerUtils::rotateStackUp()\n      add\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":10861:10892  space.description = description */\n      dup2\n      swap1\n  // bytes of type uint256: 32\n      mstore\n      pop\n  // end of CompilerUtils::storeInMemoryDynamic()\n  // CompilerUtils::copyToStackTop(3, 1)\n        /* \"contracts/Vitasensus.solpp\":10910:10920  spaceToken */\n      dup6\n        /* \"contracts/Vitasensus.solpp\":10896:10901  space */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":10896:10907  space.token */\n      0x80\n      add\n        /* \"contracts/Vitasensus.solpp\":10896:10920  space.token = spaceToken */\n      swap1\n  // newPushTag tag_314, desc: \n      0xffffffffffffffffffff\n      and\n  // Jump to tag_313\n      swap1\n      dup2\n      0xffffffffffffffffffff\n      and\n      dup2\n      mstore\n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      pop\n      pop\n  // end of CompilerUtils::storeInMemory()\n        /* \"contracts/Vitasensus.solpp\":10939:10945  avatar */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":10924:10929  space */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":10924:10936  space.avatar */\n      0x20\n      add\n  // newTag tag_315, desc: \n        /* \"contracts/Vitasensus.solpp\":10924:10945  space.avatar = avatar */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n  // CompilerUtils::storeInMemoryDynamic(type=bytes32, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=bytes32, ...)\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n        /* \"contracts/Vitasensus.solpp\":10965:10972  website */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":10949:10954  space */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":10949:10962  space.website */\n      0x40\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n        /* \"contracts/Vitasensus.solpp\":10949:10972  space.website = website */\n      dup2\n  // bytes of type bytes32: 32\n      dup2\n      mstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":10998:11016  spaceTokenDecimals */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":10976:10981  space */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":10976:10995  space.tokenDecimals */\n      0xa0\n      add\n        /* \"contracts/Vitasensus.solpp\":10976:11016  space.tokenDecimals = spaceTokenDecimals */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":11045:11060  block.timestamp */\n      timestamp\n  // CompilerUtils::popStackSlots(3)\n        /* \"contracts/Vitasensus.solpp\":11020:11025  space */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":11020:11042  space.createdTimestamp */\n      0xc0\n      add\n  // end of CompilerUtils::popStackSlots()\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":11020:11060  space.createdTimestamp = block.timestamp */\n      dup2\n      dup2\n  // CompilerUtils::copyToStackTop(3, 1)\n      mstore\n  // CompilerUtils::convertType(): address[] storage ref -> address[] memory\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":11065:11072  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":11078:11083  space */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":11065:11084  _spaces.push(space) */\n      swap1\n      dup1\n      0x01\n  // CompilerUtils::allocateMemory()\n  // CompilerUtils::fetchFreeMemoryPointer()\n      dup2\n      sload\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      add\n      dup1\n      dup3\n  // CompilerUtils::storeFreeMemoryPointer()\n      sstore\n      dup1\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // end of CompilerUtils::allocateMemory()\n      swap2\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      pop\n      pop\n      0x01\n  // end of CompilerUtils::rotateStackUp()\n      swap1\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      sub\n      swap1\n  // bytes of type uint256: 32\n      0x00\n      mstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n  // CompilerUtils::copyToStackTop(3, 1)\n      blake2b(0x00, 0x20)\n      swap1\n      0x07\n  // newPushTag tag_316, desc: \n      mul\n      add\n  // Jump to tag_315\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap2\n      pop\n  // end of CompilerUtils::storeInMemory()\n      0x00\n      dup3\n      add\n      mload\n  // newTag tag_317, desc: \n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      0x40\n      dup3\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      mload\n  // bytes of type address: 32\n      dup2\n      0x02\n  // end of CompilerUtils::storeInMemoryDynamic()\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      swap1\n      dup1\n      mload\n  // CompilerUtils::popStackSlots(3)\n      swap1\n      0x20\n      add\n  // end of CompilerUtils::popStackSlots()\n  // end of CompilerUtils::convertType()\n      swap1\n      tag_350\n  // CompilerUtils::copyToStackTop(2, 1)\n      swap3\n  // CompilerUtils::convertType(): bytes32[] storage ref -> bytes32[] memory\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_350:\n      pop\n      0x80\n  // CompilerUtils::allocateMemory()\n  // CompilerUtils::fetchFreeMemoryPointer()\n      dup3\n      add\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      mload\n      dup2\n      0x04\n  // CompilerUtils::storeFreeMemoryPointer()\n      add\n      0x00\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // end of CompilerUtils::allocateMemory()\n      0x0100\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      exp\n      dup2\n      sload\n  // end of CompilerUtils::rotateStackUp()\n      dup2\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0xffffffffffffffffffff\n      mul\n  // bytes of type uint256: 32\n      not\n      and\n  // end of CompilerUtils::storeInMemoryDynamic()\n  // CompilerUtils::copyToStackTop(3, 1)\n      swap1\n      dup4\n      0xffffffffffffffffffff\n      and\n      mul\n  // newPushTag tag_318, desc: \n      or\n      swap1\n  // Jump to tag_317\n      sstore\n      pop\n      0xa0\n      dup3\n      add\n      mload\n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup2\n      0x05\n  // end of CompilerUtils::storeInMemory()\n      add\n      sstore\n      0xc0\n      dup3\n  // newTag tag_319, desc: \n      add\n      mload\n      dup2\n      0x06\n      add\n  // CompilerUtils::storeInMemoryDynamic(type=bytes32, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=bytes32, ...)\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      sstore\n      pop\n      pop\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":11088:11102  _spaceSettings */\n      0x02\n        /* \"contracts/Vitasensus.solpp\":11088:11109  _spaceSettings.push() */\n      0x01\n  // bytes of type bytes32: 32\n      dup2\n      0x01\n  // end of CompilerUtils::storeInMemoryDynamic()\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      sub\n      swap1\n  // CompilerUtils::popStackSlots(3)\n      0x00\n      mstore\n      0x20\n  // end of CompilerUtils::popStackSlots()\n  // end of CompilerUtils::convertType()\n      0x00\n      blake2b\n  // CompilerUtils::copyToStackTop(1, 1)\n      swap1\n  // CompilerUtils::convertType(): uint256[] storage ref -> uint256[] memory\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":11139:11149  msg.sender */\n      caller\n        /* \"contracts/Vitasensus.solpp\":11114:11127  _spacesOwners */\n      0x08\n        /* \"contracts/Vitasensus.solpp\":11114:11136  _spacesOwners[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":11128:11135  spaceId */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":11114:11136  _spacesOwners[spaceId] */\n      dup2\n  // CompilerUtils::allocateMemory()\n  // CompilerUtils::fetchFreeMemoryPointer()\n      mstore\n      0x20\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      add\n      swap1\n      dup2\n  // CompilerUtils::storeFreeMemoryPointer()\n      mstore\n      0x20\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // end of CompilerUtils::allocateMemory()\n      add\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      0x00\n      blake2b\n      0x00\n  // end of CompilerUtils::rotateStackUp()\n        /* \"contracts/Vitasensus.solpp\":11114:11149  _spacesOwners[spaceId] = msg.sender */\n      0x0100\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      exp\n      dup2\n  // bytes of type uint256: 32\n      sload\n      dup2\n  // end of CompilerUtils::storeInMemoryDynamic()\n  // CompilerUtils::copyToStackTop(3, 1)\n      0xffffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n  // newPushTag tag_320, desc: \n      dup4\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // Jump to tag_319\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":11192:11196  name */\n      dup8\n        /* \"contracts/Vitasensus.solpp\":11180:11190  spaceToken */\n      dup7\n  // end of CompilerUtils::storeInMemory()\n        /* \"contracts/Vitasensus.solpp\":11158:11218  SpaceCreated(spaceId, spaceToken, name, avatar, description) */\n      0xffffffffffffffffffff\n      and\n        /* \"contracts/Vitasensus.solpp\":11171:11178  spaceId */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":11158:11218  SpaceCreated(spaceId, spaceToken, name, avatar, description) */\n      0x92ac3827b776c572e5d72006a513f694b98b56b65e899bbdde95c3b1103b00f2\n  // newTag tag_321, desc: \n        /* \"contracts/Vitasensus.solpp\":11198:11204  avatar */\n      dup9\n        /* \"contracts/Vitasensus.solpp\":11206:11217  description */\n      dup12\n        /* \"contracts/Vitasensus.solpp\":11158:11218  SpaceCreated(spaceId, spaceToken, name, avatar, description) */\n      mload(0x40)\n      tag_352\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap3\n      swap2\n  // bytes of type uint256: 32\n      swap1\n      tag_353\n  // end of CompilerUtils::storeInMemoryDynamic()\n      jump\t// in\n    tag_352:  // return of Yul function abi_encode_tuple_t_bytes32_t_string_memory_ptr__to_t_bytes32_t_string_memory_ptr__fromStack_reversed\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/Vitasensus.solpp\":11222:11240  joinSpace(spaceId) */\n      tag_354\n        /* \"contracts/Vitasensus.solpp\":11232:11239  spaceId */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":11222:11231  joinSpace */\n      tag_21\n  // CompilerUtils::popStackSlots(3)\n        /* \"contracts/Vitasensus.solpp\":11222:11240  joinSpace(spaceId) */\n      jump\t// in\n    tag_354:  // return of function function (uint256)\n        /* \"contracts/Vitasensus.solpp\":10527:11244  function createSpace(... */\n      pop\n  // end of CompilerUtils::popStackSlots()\n  // end of CompilerUtils::convertType()\n      pop\n      pop\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackVariable(votes)\n      pop\n      pop\n  // CompilerUtils::moveToStackVariable(choicesData)\n      pop\n      pop\n  // CompilerUtils::moveToStackVariable(choicesExecutors)\n      pop\n      jump\t// out\n  // CompilerUtils::moveToStackVariable(choices)\n        /* \"contracts/Vitasensus.solpp\":6916:7225  function executeProposal(uint256 spaceId, uint256 proposalId)... */\n    tag_34:  // declaration of function executeProposal\n        /* \"contracts/Vitasensus.solpp\":7013:7020  spaceId */\n      dup2\n  // CompilerUtils::moveToStackVariable(snapshot)\n        /* \"contracts/Vitasensus.solpp\":7022:7032  proposalId */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":3608:3651  _requireProposalClosed(spaceId, proposalId) */\n      tag_356\n  // CompilerUtils::moveToStackVariable(endTime)\n        /* \"contracts/Vitasensus.solpp\":3631:3638  spaceId */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":3640:3650  proposalId */\n      dup3\n  // CompilerUtils::moveToStackVariable(startTime)\n        /* \"contracts/Vitasensus.solpp\":3608:3630  _requireProposalClosed */\n      tag_357\n        /* \"contracts/Vitasensus.solpp\":3608:3651  _requireProposalClosed(spaceId, proposalId) */\n      jump\t// in\n  // CompilerUtils::moveToStackVariable(author)\n    tag_356:  // return of function function (uint256,uint256) view\n        /* \"contracts/Vitasensus.solpp\":7063:7070  spaceId */\n      dup4\n  // CompilerUtils::moveToStackVariable(description)\n        /* \"contracts/Vitasensus.solpp\":7072:7082  proposalId */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":3749:3788  isProposalExecuted(spaceId, proposalId) */\n      tag_359\n  // CompilerUtils::moveToStackVariable(title)\n        /* \"contracts/Vitasensus.solpp\":3768:3775  spaceId */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":3777:3787  proposalId */\n      dup3\n  // CompilerUtils::popAndJump(toHeight=13, jumpTo=tag_301:)\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/Vitasensus.solpp\":3749:3767  isProposalExecuted */\n      tag_38\n  // end of CompilerUtils::popStackSlots()\n        /* \"contracts/Vitasensus.solpp\":3749:3788  isProposalExecuted(spaceId, proposalId) */\n      jump\t// in\n    tag_359:  // return of function function (uint256,uint256) view returns (bool)\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/Vitasensus.solpp\":3748:3788  !isProposalExecuted(spaceId, proposalId) */\n      iszero\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n        /* \"contracts/Vitasensus.solpp\":3740:3789  require(!isProposalExecuted(spaceId, proposalId)) */\n      tag_360\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 10 return parameters\n  //  current stackLayout [10 -1 -1 0 1 2 3 4 5 6 7 8 9 ]\n      jumpi\n  //  current stackLayout [10 -1 -1 0 1 2 3 4 5 9 7 8 6 ]\n      0x00\n  //  current stackLayout [10 -1 -1 0 1 2 6 4 5 9 7 8 3 ]\n      dup1\n  //  current stackLayout [10 -1 -1 3 1 2 6 4 5 9 7 8 0 ]\n      revert\n  //  current stackLayout [0 -1 -1 3 1 2 6 4 5 9 7 8 10 ]\n    tag_360:\n  //  current stackLayout [0 -1 -1 3 1 2 6 4 5 9 10 8 7 ]\n        /* \"contracts/Vitasensus.solpp\":7089:7115  uint256 winningChoiceIndex */\n      0x00\n  //  current stackLayout [0 -1 -1 3 1 2 6 7 5 9 10 8 4 ]\n        /* \"contracts/Vitasensus.solpp\":7118:7160  getWinningChoiceIndex(spaceId, proposalId) */\n      tag_362\n  //  current stackLayout [0 -1 -1 3 4 2 6 7 5 9 10 8 1 ]\n        /* \"contracts/Vitasensus.solpp\":7140:7147  spaceId */\n      dup8\n  //  current stackLayout [0 1 -1 3 4 2 6 7 5 9 10 8 -1 ]\n        /* \"contracts/Vitasensus.solpp\":7149:7159  proposalId */\n      dup8\n  //  current stackLayout [0 1 -1 3 4 2 6 7 5 9 10 8 ]\n        /* \"contracts/Vitasensus.solpp\":7118:7139  getWinningChoiceIndex */\n      tag_4\n  //  current stackLayout [0 1 -1 3 4 2 6 7 8 9 10 5 ]\n        /* \"contracts/Vitasensus.solpp\":7118:7160  getWinningChoiceIndex(spaceId, proposalId) */\n      jump\t// in\n  //  current stackLayout [0 1 -1 3 4 5 6 7 8 9 10 2 ]\n    tag_362:  // return of function function (uint256,uint256) view returns (uint256)\n  //  current stackLayout [0 1 2 3 4 5 6 7 8 9 10 -1 ]\n        /* \"contracts/Vitasensus.solpp\":7089:7160  uint256 winningChoiceIndex = getWinningChoiceIndex(spaceId, proposalId) */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":7164:7221  _executeProposal(spaceId, proposalId, winningChoiceIndex) */\n      tag_363\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(bool)\n        /* \"contracts/Vitasensus.solpp\":7181:7188  spaceId */\n      dup8\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function isProposalClosed(uint256 spaceId, uint256 proposalId) public view returns (bool) {\n\t\treturn _getProposal(spaceId, proposalId).endTime < block.timestamp;\n\t}\n  // newTag tag_322, desc: return tag of isProposalClosed\n  // start of code block of isProposalClosed\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::visit(_memberAccess=block.timestamp)\n        /* \"contracts/Vitasensus.solpp\":7190:7200  proposalId */\n      dup8\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=_getProposal(spaceId, proposalId).endTime)\n  // newPushTag tag_323, desc: return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n        /* \"contracts/Vitasensus.solpp\":7202:7220  winningChoiceIndex */\n      dup4\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":7164:7180  _executeProposal */\n      tag_364\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n        /* \"contracts/Vitasensus.solpp\":7164:7221  _executeProposal(spaceId, proposalId, winningChoiceIndex) */\n      jump\t// in\n    tag_363:  // return of function function (uint256,uint256,uint256)\n        /* \"contracts/Vitasensus.solpp\":3793:3794  _ */\n      pop\n        /* \"contracts/Vitasensus.solpp\":3655:3656  _ */\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":6916:7225  function executeProposal(uint256 spaceId, uint256 proposalId)... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":17196:18181  function getSpaceProposalVotes(... */\n    tag_35:  // declaration of function getSpaceProposalVotes\n        /* \"contracts/Vitasensus.solpp\":17327:17350  address[] memory voters */\n      0x60\n        /* \"contracts/Vitasensus.solpp\":17352:17374  uint256[] memory votes */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":17376:17400  uint256[] memory choices */\n      0x60\n        /* \"contracts/Vitasensus.solpp\":17417:17439  _spacesProposalsVoters */\n      0x0a\n        /* \"contracts/Vitasensus.solpp\":17417:17448  _spacesProposalsVoters[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":17440:17447  spaceId */\n      dup9\n        /* \"contracts/Vitasensus.solpp\":17417:17448  _spacesProposalsVoters[spaceId] */\n      dup2\n  // CompilerUtils::convertType(): uint64 -> uint256\n      mstore\n      0x20\n  // end of CompilerUtils::convertType()\n      add\n  // CompilerUtils::moveToStackVariable()\n      swap1\n      dup2\n  // CompilerUtils::popAndJump(toHeight=4, jumpTo=tag_321:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      mstore\n      0x20\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      add\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 1 return parameters\n  //  current stackLayout [1 -1 -1 0 ]\n      0x00\n  //  current stackLayout [0 -1 -1 1 ]\n      blake2b\n  //  current stackLayout [0 1 -1 -1 ]\n        /* \"contracts/Vitasensus.solpp\":17417:17460  _spacesProposalsVoters[spaceId][proposalId] */\n      0x00\n  //  current stackLayout [0 1 -1 ]\n        /* \"contracts/Vitasensus.solpp\":17449:17459  proposalId */\n      dup8\n        /* \"contracts/Vitasensus.solpp\":17417:17460  _spacesProposalsVoters[spaceId][proposalId] */\n      dup2\n      mstore\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(bool)\n      0x20\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function isSpaceMember(uint256 spaceId, address user) public view returns (bool) {\n\t\treturn _spacesMembers[spaceId].get(user) == 1;\n\t}\n  // newTag tag_324, desc: return tag of isSpaceMember\n  // start of code block of isSpaceMember\n  // ContractCompiler::visit(return)\n      add\n  // CompilerUtils::convertType(): int_const 1 -> uint256\n  // end of CompilerUtils::convertType()\n  // newPushTag tag_325, desc: return of function function (struct IterableMapping.Map,address) view returns (uint256)\n      swap1\n  // ExpressionCompiler::appendVariable(user, user)\n      dup2\n  // ExpressionCompiler::visit(_memberAccess=_spacesMembers[spaceId].get)\n  // ExpressionCompiler::appendVariable(_spacesMembers, _spacesMembers)\n      mstore\n      0x20\n      add\n      0x00\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      blake2b\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":17417:17467  _spacesProposalsVoters[spaceId][proposalId].length */\n      dup1\n      sload\n  // bytes of type uint256: 32\n      swap1\n      pop\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":17410:17414  skip */\n      dup6\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":17410:17467  skip < _spacesProposalsVoters[spaceId][proposalId].length */\n      lt\n        /* \"contracts/Vitasensus.solpp\":17406:18178  if (skip < _spacesProposalsVoters[spaceId][proposalId].length) {... */\n      iszero\n  // bytes of type uint256: 32\n      tag_366\n      jumpi\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":17474:17488  uint256 length */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":17553:17558  limit */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":17545:17549  skip */\n      dup7\n        /* \"contracts/Vitasensus.solpp\":17492:17514  _spacesProposalsVoters */\n      0x0a\n  // CompilerUtils::convertType(): struct IterableMapping.Map storage ref -> struct IterableMapping.Map storage pointer\n  // end of CompilerUtils::convertType()\n  // newTag tag_326, desc: declaration of function get\n        /* \"contracts/Vitasensus.solpp\":17492:17523  _spacesProposalsVoters[spaceId] */\n      0x00\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n        /* \"contracts/Vitasensus.solpp\":17515:17522  spaceId */\n      dup12\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n        /* \"contracts/Vitasensus.solpp\":17492:17523  _spacesProposalsVoters[spaceId] */\n      dup2\n      mstore\n  // end of CompilerUtils::rotateStackUp()\n      0x20\n      add\n      swap1\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mstore\n  // CompilerUtils::moveToStackVariable()\n      0x20\n      add\n  // CompilerUtils::popAndJump(toHeight=4, jumpTo=tag_323:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      0x00\n      blake2b\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n        /* \"contracts/Vitasensus.solpp\":17492:17535  _spacesProposalsVoters[spaceId][proposalId] */\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 1 return parameters\n  //  current stackLayout [1 -1 -1 0 ]\n        /* \"contracts/Vitasensus.solpp\":17524:17534  proposalId */\n      dup11\n  //  current stackLayout [0 -1 -1 1 ]\n        /* \"contracts/Vitasensus.solpp\":17492:17535  _spacesProposalsVoters[spaceId][proposalId] */\n      dup2\n  //  current stackLayout [0 1 -1 -1 ]\n      mstore\n  //  current stackLayout [0 1 -1 ]\n      0x20\n      add\n      swap1\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function removeOperator(address operator_) external onlyOwner {\n\t\t_isOperator[operator_] = false;\n\t}\n  // newTag tag_327, desc: return tag of removeOperator\n  // start of code block of removeOperator\n  // newPushTag tag_328, desc: return of function function () view\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendModifierOrFunctionCode() for function removeOperator(address operator_) external onlyOwner {\n\t\t_isOperator[operator_] = false;\n\t}\n  // newTag tag_329, desc: return tag of removeOperator\n  // start of code block of removeOperator\n        /* \"contracts/Vitasensus.solpp\":17492:17542  _spacesProposalsVoters[spaceId][proposalId].length */\n      dup1\n  // ExpressionCompiler::appendVariable(_isOperator, _isOperator)\n      sload\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":17492:17549  _spacesProposalsVoters[spaceId][proposalId].length - skip */\n      tag_367\n  // ExpressionCompiler::appendVariable(operator_, operator_)\n      swap2\n  // CompilerUtils::convertType(): address -> address\n      swap1\n      tag_129\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      jump\t// in\n    tag_367:  // return of Yul function checked_sub_t_uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":17491:17558  (_spacesProposalsVoters[spaceId][proposalId].length - skip) > limit */\n      gt\n        /* \"contracts/Vitasensus.solpp\":17491:17634  (_spacesProposalsVoters[spaceId][proposalId].length - skip) > limit... */\n      tag_368\n  // bytes of type address: 32\n      jumpi\n        /* \"contracts/Vitasensus.solpp\":17630:17634  skip */\n      dup6\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":17577:17599  _spacesProposalsVoters */\n      0x0a\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":17577:17608  _spacesProposalsVoters[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":17600:17607  spaceId */\n      dup11\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":17577:17608  _spacesProposalsVoters[spaceId] */\n      dup2\n      mstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":17577:17620  _spacesProposalsVoters[spaceId][proposalId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":17609:17619  proposalId */\n      dup10\n        /* \"contracts/Vitasensus.solpp\":17577:17620  _spacesProposalsVoters[spaceId][proposalId] */\n      dup2\n      mstore\n  // CompilerUtils::copyToStackTop(4, 1)\n      0x20\n  // CompilerUtils::convertType(): bool -> bool\n      add\n      swap1\n  // end of CompilerUtils::convertType()\n      dup2\n      mstore\n      0x20\n      add\n  // CompilerUtils::popStackSlots(1)\n      0x00\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      blake2b\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n        /* \"contracts/Vitasensus.solpp\":17577:17627  _spacesProposalsVoters[spaceId][proposalId].length */\n      dup1\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 0 return parameters\n  //  current stackLayout [0 -1 ]\n      sload\n      swap1\n      pop\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(uint256)\n        /* \"contracts/Vitasensus.solpp\":17577:17634  _spacesProposalsVoters[spaceId][proposalId].length - skip */\n      tag_369\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function getSpaceProposalsCount(uint256 spaceId) external view returns (uint256) {\n\t\treturn _spacesProposals[spaceId].length;\n\t}\n  // newTag tag_330, desc: return tag of getSpaceProposalsCount\n  // start of code block of getSpaceProposalsCount\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposals[spaceId].length)\n  // ExpressionCompiler::appendVariable(_spacesProposals, _spacesProposals)\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n    tag_369:  // return of Yul function checked_sub_t_uint256\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":17491:17634  (_spacesProposalsVoters[spaceId][proposalId].length - skip) > limit... */\n      jump(tag_370)\n  // bytes of type uint256: 32\n    tag_368:\n        /* \"contracts/Vitasensus.solpp\":17565:17570  limit */\n      dup5\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":17491:17634  (_spacesProposalsVoters[spaceId][proposalId].length - skip) > limit... */\n    tag_370:\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":17474:17634  uint256 length = (_spacesProposalsVoters[spaceId][proposalId].length - skip) > limit... */\n      swap1\n      pop\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":17662:17668  length */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":17648:17669  new address[](length) */\n      0xffffffffffffffff\n  // end of CompilerUtils::storeInMemoryDynamic()\n      dup2\n      gt\n      iszero\n      tag_371\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n  // CompilerUtils::moveToStackVariable()\n      0x41\n      0x04\n  // CompilerUtils::popAndJump(toHeight=3, jumpTo=tag_329:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      mstore\n      0x24\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 1 return parameters\n  //  current stackLayout [1 -1 0 ]\n      revert\n  //  current stackLayout [0 -1 1 ]\n    tag_371:\n  //  current stackLayout [0 1 -1 ]\n      mload(0x40)\n      swap1\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(bool)\n      dup1\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function isSpaceAdmin(uint256 spaceId, address user) public view returns (bool) {\n\t\treturn _spacesIsAdmin[spaceId][user] || isSpaceOwner(spaceId, user);\n\t}\n  // newTag tag_331, desc: return tag of isSpaceAdmin\n  // start of code block of isSpaceAdmin\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::appendVariable(_spacesIsAdmin, _spacesIsAdmin)\n      dup3\n      mstore\n      dup1\n      0x20\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      mul\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x20\n      add\n  // bytes of type uint256: 32\n      dup3\n      add\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x40\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mstore\n      dup1\n  // bytes of type uint256: 32\n      iszero\n      tag_372\n  // end of CompilerUtils::storeInMemoryDynamic()\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n  // ExpressionCompiler::appendVariable(user, user)\n      dup3\n  // CompilerUtils::convertType(): address -> address\n      mul\n      dup1\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      calldatasize\n      dup4\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      calldatacopy\n      dup1\n  // bytes of type address: 32\n      dup3\n      add\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap2\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      pop\n      pop\n  // bytes of type uint256: 32\n      swap1\n      pop\n  // end of CompilerUtils::storeInMemoryDynamic()\n    tag_372:\n      pop\n        /* \"contracts/Vitasensus.solpp\":17639:17669  voters = new address[](length) */\n      swap4\n      pop\n        /* \"contracts/Vitasensus.solpp\":17696:17702  length */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":17682:17703  new uint256[](length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_373\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n  // newPushTag tag_332, desc: \n      mstore\n      0x41\n  // Jump to tag_331\n      0x04\n  // newPushTag tag_333, desc: return of function function (uint256,address) view returns (bool)\n      mstore\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      0x24\n  // ExpressionCompiler::appendVariable(user, user)\n      0x00\n      revert\n    tag_373:\n      mload(0x40)\n      swap1\n      dup1\n  // CompilerUtils::moveToStackVariable()\n      dup3\n      mstore\n  // CompilerUtils::popAndJump(toHeight=4, jumpTo=tag_330:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      dup1\n      0x20\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      mul\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 1 return parameters\n  //  current stackLayout [1 -1 -1 0 ]\n      0x20\n  //  current stackLayout [0 -1 -1 1 ]\n      add\n  //  current stackLayout [0 1 -1 -1 ]\n      dup3\n  //  current stackLayout [0 1 -1 ]\n      add\n      0x40\n      mstore\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function updateSpace(\n\t\tuint256 spaceId,\n\t\tbytes32 name,\n\t\tstring memory description,\n\t\tvitetoken spaceToken,\n\t\tuint256 spaceTokenDecimals,\n\t\tbytes32 avatar,\n\t\tbytes32 website\n\t) external requireSpaceAdmin(spaceId) {\n\t\tSpace storage space = _spaces[spaceId];\n\t\tspace.name = name;\n\t\tspace.description = description;\n\t\tspace.token = spaceToken;\n\t\tspace.tokenDecimals = uint8(spaceTokenDecimals);\n\t\tspace.avatar = avatar;\n\t\tspace.website = website;\n\t}\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      dup1\n  // newTag tag_334, desc: return tag of updateSpace\n  // start of code block of updateSpace\n  // newPushTag tag_335, desc: return of function function (uint256) view\n      iszero\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      tag_374\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendModifierOrFunctionCode() for function updateSpace(\n\t\tuint256 spaceId,\n\t\tbytes32 name,\n\t\tstring memory description,\n\t\tvitetoken spaceToken,\n\t\tuint256 spaceTokenDecimals,\n\t\tbytes32 avatar,\n\t\tbytes32 website\n\t) external requireSpaceAdmin(spaceId) {\n\t\tSpace storage space = _spaces[spaceId];\n\t\tspace.name = name;\n\t\tspace.description = description;\n\t\tspace.token = spaceToken;\n\t\tspace.tokenDecimals = uint8(spaceTokenDecimals);\n\t\tspace.avatar = avatar;\n\t\tspace.website = website;\n\t}\n  // newTag tag_336, desc: return tag of updateSpace\n  // start of code block of updateSpace\n  // ContractCompiler::appendStackVariableInitialisation(Space storage space)\n      dup3\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      mul\n      dup1\n      calldatasize\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      dup4\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n  // newPushTag tag_337, desc: \n      pop\n      swap1\n  // Jump to tag_336\n      pop\n    tag_374:\n      pop\n        /* \"contracts/Vitasensus.solpp\":17674:17703  votes = new uint256[](length) */\n      swap3\n      pop\n        /* \"contracts/Vitasensus.solpp\":17732:17738  length */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":17718:17739  new uint256[](length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_375\n  // newTag tag_338, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // end of CompilerUtils::storeInMemory()\n      0x00\n      mstore\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_375:\n      0x40\n  // CompilerUtils::convertType(): struct Vitasensus.Space storage ref -> struct Vitasensus.Space storage pointer\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackVariable(space)\n      mload\n      swap1\n  // ExpressionCompiler::appendVariable(name, name)\n      dup1\n  // ExpressionCompiler::visit(_memberAccess=space.name)\n  // ExpressionCompiler::appendVariable(space, space)\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      add\n      0x40\n      mstore\n  // end of CompilerUtils::convertType()\n      dup1\n      iszero\n  // CompilerUtils::popStackSlots(1)\n      tag_376\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(description, description)\n      jumpi\n  // ExpressionCompiler::visit(_memberAccess=space.description)\n  // ExpressionCompiler::appendVariable(space, space)\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n  // CompilerContext::callLowLevelFunction($copyArrayToStorage_t_string_memory_ptr_to_t_string_storage)\n  // newPushTag tag_339, desc: \n      add\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      swap2\n      pop\n      pop\n  // end of CompilerUtils::rotateStackUp()\n      swap1\n      pop\n    tag_376:\n  // CompilerUtils::popStackSlots(1)\n      pop\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(spaceToken, spaceToken)\n        /* \"contracts/Vitasensus.solpp\":17708:17739  choices = new uint256[](length) */\n      swap2\n  // ExpressionCompiler::visit(_memberAccess=space.token)\n  // ExpressionCompiler::appendVariable(space, space)\n      pop\n        /* \"contracts/Vitasensus.solpp\":17754:17767  uint256 index */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":17770:17774  skip */\n      dup7\n        /* \"contracts/Vitasensus.solpp\":17754:17774  uint256 index = skip */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":17744:18174  for (... */\n    tag_377:\n        /* \"contracts/Vitasensus.solpp\":17788:17810  _spacesProposalsVoters */\n      0x0a\n        /* \"contracts/Vitasensus.solpp\":17788:17819  _spacesProposalsVoters[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":17811:17818  spaceId */\n      dup11\n        /* \"contracts/Vitasensus.solpp\":17788:17819  _spacesProposalsVoters[spaceId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n  // CompilerUtils::copyToStackTop(4, 1)\n      dup2\n  // CompilerUtils::convertType(): tokenId -> tokenId\n      mstore\n      0x20\n  // end of CompilerUtils::convertType()\n      add\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":17788:17831  _spacesProposalsVoters[spaceId][proposalId] */\n      0x00\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/Vitasensus.solpp\":17820:17830  proposalId */\n      dup10\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(spaceTokenDecimals, spaceTokenDecimals)\n        /* \"contracts/Vitasensus.solpp\":17788:17831  _spacesProposalsVoters[spaceId][proposalId] */\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint8\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::convertType(): uint8 -> uint256\n      mstore\n      0x20\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=space.tokenDecimals)\n  // ExpressionCompiler::appendVariable(space, space)\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":17788:17838  _spacesProposalsVoters[spaceId][proposalId].length */\n      dup1\n      sload\n  // CompilerUtils::popStackSlots(1)\n      swap1\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(avatar, avatar)\n      pop\n  // ExpressionCompiler::visit(_memberAccess=space.avatar)\n  // ExpressionCompiler::appendVariable(space, space)\n        /* \"contracts/Vitasensus.solpp\":17780:17785  index */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":17780:17838  index < _spacesProposalsVoters[spaceId][proposalId].length */\n      lt\n        /* \"contracts/Vitasensus.solpp\":17780:17869  index < _spacesProposalsVoters[spaceId][proposalId].length &&... */\n      dup1\n      iszero\n      tag_380\n      jumpi\n      pop\n        /* \"contracts/Vitasensus.solpp\":17863:17868  limit */\n      dup6\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n        /* \"contracts/Vitasensus.solpp\":17856:17860  skip */\n      dup8\n        /* \"contracts/Vitasensus.solpp\":17856:17868  skip + limit */\n      tag_381\n      swap2\n  // end of CompilerUtils::convertType()\n      swap1\n      tag_97\n  // CompilerUtils::popStackSlots(1)\n      jump\t// in\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(website, website)\n    tag_381:  // return of Yul function checked_add_t_uint256\n  // ExpressionCompiler::visit(_memberAccess=space.website)\n  // ExpressionCompiler::appendVariable(space, space)\n        /* \"contracts/Vitasensus.solpp\":17847:17852  index */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":17847:17869  index < (skip + limit) */\n      lt\n        /* \"contracts/Vitasensus.solpp\":17780:17869  index < _spacesProposalsVoters[spaceId][proposalId].length &&... */\n    tag_380:\n        /* \"contracts/Vitasensus.solpp\":17744:18174  for (... */\n      iszero\n      tag_378\n      jumpi\n        /* \"contracts/Vitasensus.solpp\":17894:17907  address voter */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":17910:17932  _spacesProposalsVoters */\n      0x0a\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n        /* \"contracts/Vitasensus.solpp\":17910:17941  _spacesProposalsVoters[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":17933:17940  spaceId */\n      dup12\n        /* \"contracts/Vitasensus.solpp\":17910:17941  _spacesProposalsVoters[spaceId] */\n      dup2\n  // end of CompilerUtils::convertType()\n      mstore\n      0x20\n  // CompilerUtils::popStackSlots(1)\n      add\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(1)\n      swap1\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      dup2\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      mstore\n  // CompilerUtils::popStackSlots(1)\n      0x20\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 7 parameters and 0 return parameters\n  //  current stackLayout [0 -1 -1 -1 -1 -1 -1 -1 ]\n      add\n  //  current stackLayout [0 -1 -1 -1 -1 -1 -1 ]\n      0x00\n  //  current stackLayout [0 -1 -1 -1 -1 -1 ]\n      blake2b\n  //  current stackLayout [0 -1 -1 -1 -1 ]\n        /* \"contracts/Vitasensus.solpp\":17910:17953  _spacesProposalsVoters[spaceId][proposalId] */\n      0x00\n  //  current stackLayout [0 -1 -1 -1 ]\n        /* \"contracts/Vitasensus.solpp\":17942:17952  proposalId */\n      dup11\n  //  current stackLayout [0 -1 -1 ]\n        /* \"contracts/Vitasensus.solpp\":17910:17953  _spacesProposalsVoters[spaceId][proposalId] */\n      dup2\n  //  current stackLayout [0 -1 ]\n      mstore\n      0x20\n      add\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(uint256)\n      swap1\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function getSpacesCount() external view returns (uint256) {\n\t\treturn _spaces.length;\n\t}\n  // newTag tag_340, desc: return tag of getSpacesCount\n  // start of code block of getSpacesCount\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::visit(_memberAccess=_spaces.length)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":17954:17959  index */\n      dup3\n  // CompilerUtils::moveToStackVariable()\n        /* \"contracts/Vitasensus.solpp\":17910:17960  _spacesProposalsVoters[spaceId][proposalId][index] */\n      dup2\n      sload\n  // CompilerUtils::popAndJump(toHeight=2, jumpTo=tag_339:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      dup2\n      lt\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      tag_382\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 0 parameters and 1 return parameters\n  //  current stackLayout [1 0 ]\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n  // newTag tag_341, desc: return tag of renounceOwnership\n  // start of code block of renounceOwnership\n  // newPushTag tag_342, desc: return of function function () view\n      mstore\n      mstore(0x04, 0x32)\n      0x24\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendModifierOrFunctionCode() for function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n  // newTag tag_343, desc: return tag of renounceOwnership\n  // start of code block of renounceOwnership\n  // newPushTag tag_344, desc: return of function function (address)\n      revert\n    tag_382:\n  // CompilerUtils::convertType(): int_const 0 -> address\n  // end of CompilerUtils::convertType()\n      swap1\n      0x00\n      mstore\n      0x20\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      blake2b\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      add\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 0 parameters and 0 return parameters\n      0x00\n      swap1\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function createSpace(\n\t\tbytes32 name,\n\t\tstring memory description,\n\t\tvitetoken spaceToken,\n\t\tbytes32 avatar,\n\t\tbytes32 website,\n\t\tuint256 spaceTokenDecimals\n\t) external payable {\n\t\trequire(msg.value == SPACE_CREATION_FEE && msg.token == VITE_TOKEN_ID);\n\t\tuint256 spaceId = _spaces.length;\n\t\tSpace memory space;\n\t\tspace.name = name;\n\t\tspace.description = description;\n\t\tspace.token = spaceToken;\n\t\tspace.avatar = avatar;\n\t\tspace.website = website;\n\t\tspace.tokenDecimals = spaceTokenDecimals;\n\t\tspace.createdTimestamp = block.timestamp;\n\n\t\t_spaces.push(space);\n\t\t_spaceSettings.push();\n\n\t\t_spacesOwners[spaceId] = msg.sender;\n\t\temit SpaceCreated(spaceId, spaceToken, name, avatar, description);\n\t\tjoinSpace(spaceId);\n\t}\n  // newTag tag_345, desc: return tag of createSpace\n  // start of code block of createSpace\n  // ExpressionCompiler::appendVariable(SPACE_CREATION_FEE, SPACE_CREATION_FEE)\n      sload\n  // CompilerUtils::convertType(): int_const 10000000000000000000 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=msg.value)\n      swap1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      0x0100\n      exp\n      swap1\n  // newPushTag tag_346, desc: \n      div\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // Jump to tag_345\n      and\n  // ExpressionCompiler::appendVariable(VITE_TOKEN_ID, VITE_TOKEN_ID)\n        /* \"contracts/Vitasensus.solpp\":17894:17960  address voter = _spacesProposalsVoters[spaceId][proposalId][index] */\n      swap1\n  // CompilerUtils::convertType(): tokenId -> tokenId\n      pop\n        /* \"contracts/Vitasensus.solpp\":17989:17994  voter */\n      dup1\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=msg.token)\n        /* \"contracts/Vitasensus.solpp\":17966:17972  voters */\n      dup7\n  // CompilerUtils::convertType(): tokenId -> tokenId\n        /* \"contracts/Vitasensus.solpp\":17981:17985  skip */\n      dup10\n        /* \"contracts/Vitasensus.solpp\":17973:17978  index */\n      dup5\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":17973:17985  index - skip */\n      tag_384\n      swap2\n      swap1\n      tag_129\n  // newPushTag tag_347, desc: \n      jump\t// in\n    tag_384:  // return of Yul function checked_sub_t_uint256\n  // Jump to tag_346\n        /* \"contracts/Vitasensus.solpp\":17966:17986  voters[index - skip] */\n      dup2\n      mload\n      dup2\n      lt\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendStackVariableInitialisation(uint256 spaceId)\n      tag_385\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::visit(_memberAccess=_spaces.length)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n  // CompilerUtils::moveToStackVariable(spaceId)\n      0x24\n      0x00\n  // ContractCompiler::appendStackVariableInitialisation(Space memory space)\n  // CompilerContext::callLowLevelFunction($pushZeroValue_t_struct$_Space_$92_memory_ptr)\n  // newPushTag tag_348, desc: \n      revert\n  // CompilerUtils::moveIntoStack(0, 1)\n  // newTag tag_349, desc: $pushZeroValue_t_struct$_Space_$92_memory_ptr\n    tag_385:\n      0x20\n      mul\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::appendVariable(name, name)\n      0x20\n  // ExpressionCompiler::visit(_memberAccess=space.name)\n  // ExpressionCompiler::appendVariable(space, space)\n      add\n      add\n        /* \"contracts/Vitasensus.solpp\":17966:17994  voters[index - skip] = voter */\n      swap1\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      and\n      swap1\n      dup2\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n      and\n  // CompilerUtils::storeInMemoryDynamic(type=bytes32, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=bytes32, ...)\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      dup2\n      mstore\n      pop\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      pop\n        /* \"contracts/Vitasensus.solpp\":18022:18043  _spacesProposalsVotes */\n      0x09\n  // bytes of type bytes32: 32\n        /* \"contracts/Vitasensus.solpp\":18022:18052  _spacesProposalsVotes[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":18044:18051  spaceId */\n      dup12\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":18022:18052  _spacesProposalsVotes[spaceId] */\n      dup2\n  // CompilerUtils::popStackSlots(1)\n      mstore\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(description, description)\n      0x20\n  // ExpressionCompiler::visit(_memberAccess=space.description)\n  // ExpressionCompiler::appendVariable(space, space)\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n  // CompilerUtils::popStackSlots(1)\n      0x00\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(spaceToken, spaceToken)\n      blake2b\n  // ExpressionCompiler::visit(_memberAccess=space.token)\n  // ExpressionCompiler::appendVariable(space, space)\n        /* \"contracts/Vitasensus.solpp\":18022:18064  _spacesProposalsVotes[spaceId][proposalId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":18053:18063  proposalId */\n      dup11\n        /* \"contracts/Vitasensus.solpp\":18022:18064  _spacesProposalsVotes[spaceId][proposalId] */\n      dup2\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      mstore\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): tokenId -> tokenId\n      0x20\n      add\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      swap1\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n      dup2\n  // CompilerUtils::storeInMemoryDynamic(type=tokenId, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=tokenId, ...)\n  // CompilerUtils::convertType(): tokenId -> tokenId\n      mstore\n      0x20\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      0x00\n  // bytes of type tokenId: 32\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":18022:18071  _spacesProposalsVotes[spaceId][proposalId][voter] */\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":18065:18070  voter */\n      dup3\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/Vitasensus.solpp\":18022:18071  _spacesProposalsVotes[spaceId][proposalId][voter] */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(avatar, avatar)\n      and\n  // ExpressionCompiler::visit(_memberAccess=space.avatar)\n  // ExpressionCompiler::appendVariable(space, space)\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      mstore\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      0x20\n      add\n      swap1\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      dup2\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n      mstore\n  // CompilerUtils::storeInMemoryDynamic(type=bytes32, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=bytes32, ...)\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      0x20\n      add\n      0x00\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":18022:18077  _spacesProposalsVotes[spaceId][proposalId][voter].votes */\n      0x01\n  // bytes of type bytes32: 32\n      add\n      sload\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":18000:18005  votes */\n      dup6\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/Vitasensus.solpp\":18014:18018  skip */\n      dup10\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(website, website)\n        /* \"contracts/Vitasensus.solpp\":18006:18011  index */\n      dup5\n  // ExpressionCompiler::visit(_memberAccess=space.website)\n  // ExpressionCompiler::appendVariable(space, space)\n        /* \"contracts/Vitasensus.solpp\":18006:18018  index - skip */\n      tag_386\n      swap2\n      swap1\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      tag_129\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      jump\t// in\n    tag_386:  // return of Yul function checked_sub_t_uint256\n        /* \"contracts/Vitasensus.solpp\":18000:18019  votes[index - skip] */\n      dup2\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      mload\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n      dup2\n  // CompilerUtils::storeInMemoryDynamic(type=bytes32, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=bytes32, ...)\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      lt\n      tag_387\n      jumpi\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n  // bytes of type bytes32: 32\n      mstore\n      0x32\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x04\n  // CompilerUtils::popStackSlots(1)\n      mstore\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(spaceTokenDecimals, spaceTokenDecimals)\n      0x24\n  // ExpressionCompiler::visit(_memberAccess=space.tokenDecimals)\n  // ExpressionCompiler::appendVariable(space, space)\n      0x00\n      revert\n    tag_387:\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      0x20\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      mul\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n      0x20\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      add\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":18000:18077  votes[index - skip] = _spacesProposalsVotes[spaceId][proposalId][voter].votes */\n      dup2\n      dup2\n  // end of CompilerUtils::storeInMemoryDynamic()\n      mstore\n  // CompilerUtils::popStackSlots(1)\n      pop\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=block.timestamp)\n      pop\n  // ExpressionCompiler::visit(_memberAccess=space.createdTimestamp)\n  // ExpressionCompiler::appendVariable(space, space)\n        /* \"contracts/Vitasensus.solpp\":18107:18128  _spacesProposalsVotes */\n      0x09\n        /* \"contracts/Vitasensus.solpp\":18107:18137  _spacesProposalsVotes[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":18129:18136  spaceId */\n      dup12\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n        /* \"contracts/Vitasensus.solpp\":18107:18137  _spacesProposalsVotes[spaceId] */\n      dup2\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      mstore\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n      0x20\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      swap1\n  // bytes of type uint256: 32\n      dup2\n      mstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x20\n  // CompilerUtils::popStackSlots(1)\n      add\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=_spaces.push)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":18107:18149  _spacesProposalsVotes[spaceId][proposalId] */\n      0x00\n  // ExpressionCompiler::appendVariable(space, space)\n        /* \"contracts/Vitasensus.solpp\":18138:18148  proposalId */\n      dup11\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n        /* \"contracts/Vitasensus.solpp\":18107:18149  _spacesProposalsVotes[spaceId][proposalId] */\n      dup2\n  // end of CompilerUtils::rotateStackDown()\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":18107:18156  _spacesProposalsVotes[spaceId][proposalId][voter] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":18150:18155  voter */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":18107:18156  _spacesProposalsVotes[spaceId][proposalId][voter] */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n  // newTag tag_350, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup2\n      mstore\n  // end of CompilerUtils::storeInMemory()\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n  // CompilerUtils::moveToStackTop(2, 1)\n  // CompilerUtils::moveIntoStack(1, 2)\n  // CompilerUtils::rotateStackDown(3)\n        /* \"contracts/Vitasensus.solpp\":18107:18168  _spacesProposalsVotes[spaceId][proposalId][voter].choiceIndex */\n      0x00\n      add\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::moveToStackTop(2, 1)\n  // CompilerUtils::moveIntoStack(1, 2)\n  // CompilerUtils::rotateStackDown(3)\n      sload\n        /* \"contracts/Vitasensus.solpp\":18083:18090  choices */\n      dup5\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::moveToStackTop(2, 1)\n  // CompilerUtils::moveIntoStack(1, 2)\n  // CompilerUtils::rotateStackDown(3)\n        /* \"contracts/Vitasensus.solpp\":18099:18103  skip */\n      dup10\n        /* \"contracts/Vitasensus.solpp\":18091:18096  index */\n      dup5\n  // end of CompilerUtils::rotateStackDown()\n        /* \"contracts/Vitasensus.solpp\":18091:18103  index - skip */\n      tag_388\n      swap2\n      swap1\n      tag_129\n  // CompilerUtils::loadFromMemoryHelper()\n      jump\t// in\n    tag_388:  // return of Yul function checked_sub_t_uint256\n        /* \"contracts/Vitasensus.solpp\":18083:18104  choices[index - skip] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_389\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n  // end of CompilerUtils::convertType()\n      mstore\n      mstore(0x04, 0x32)\n      0x24\n  // CompilerUtils::loadFromMemoryHelper()\n      0x00\n      revert\n    tag_389:\n      0x20\n      mul\n      0x20\n      add\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      add\n        /* \"contracts/Vitasensus.solpp\":18083:18168  choices[index - skip] = _spacesProposalsVotes[spaceId][proposalId][voter].choiceIndex */\n      dup2\n      dup2\n  // end of CompilerUtils::convertType()\n      mstore\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":17744:18174  for (... */\n      pop\n        /* \"contracts/Vitasensus.solpp\":17875:17882  index++ */\n      dup1\n  // CompilerUtils::loadFromMemoryHelper()\n      dup1\n      tag_390\n      swap1\n      tag_64\n      jump\t// in\n    tag_390:  // return of Yul function increment_t_uint256\n      swap2\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":17744:18174  for (... */\n      tag_377\n  // end of CompilerUtils::convertType()\n      jump\n    tag_378:\n      pop\n        /* \"contracts/Vitasensus.solpp\":17406:18178  if (skip < _spacesProposalsVoters[spaceId][proposalId].length) {... */\n      pop\n    tag_366:\n        /* \"contracts/Vitasensus.solpp\":17196:18181  function getSpaceProposalVotes(... */\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":11711:11838  function getCreationTimestamp(uint256 spaceId) external view returns (uint256) {... */\n    tag_36:  // declaration of function getCreationTimestamp\n        /* \"contracts/Vitasensus.solpp\":11781:11788  uint256 */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":11801:11808  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":11809:11816  spaceId */\n      dup3\n  // CompilerContext::callLowLevelFunction($copyArrayToStorage_t_string_memory_ptr_to_t_string_storage)\n  // newPushTag tag_351, desc: \n        /* \"contracts/Vitasensus.solpp\":11801:11817  _spaces[spaceId] */\n      dup2\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      sload\n      dup2\n      lt\n  // end of CompilerUtils::rotateStackUp()\n      tag_392\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      0x32\n      0x04\n  // CompilerUtils::loadFromMemoryHelper()\n      mstore\n      revert(0x00, 0x24)\n    tag_392:\n      swap1\n      0x00\n      mstore\n      blake2b(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n  // CompilerUtils::copyToStackTop(4, 1)\n        /* \"contracts/Vitasensus.solpp\":11801:11834  _spaces[spaceId].createdTimestamp */\n      0x06\n  // CompilerUtils::convertType(): tokenId -> tokenId\n      add\n      sload\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":11794:11834  return _spaces[spaceId].createdTimestamp */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":11711:11838  function getCreationTimestamp(uint256 spaceId) external view returns (uint256) {... */\n      swap2\n      swap1\n  // CompilerUtils::popStackSlots(1)\n      pop\n  // end of CompilerUtils::popStackSlots()\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":13654:13773  function getSpaceAdmins(uint256 spaceId) external view returns (address[] memory) {... */\n    tag_37:  // declaration of function getSpaceAdmins\n        /* \"contracts/Vitasensus.solpp\":13718:13734  address[] memory */\n      0x60\n  // CompilerUtils::loadFromMemoryHelper()\n        /* \"contracts/Vitasensus.solpp\":13747:13760  _spacesAdmins */\n      0x05\n        /* \"contracts/Vitasensus.solpp\":13747:13769  _spacesAdmins[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":13761:13768  spaceId */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":13747:13769  _spacesAdmins[spaceId] */\n      dup2\n      mstore\n      0x20\n      add\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n  // CompilerUtils::loadFromMemoryHelper()\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":13740:13769  return _spacesAdmins[spaceId] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      0x20\n      add\n  // CompilerUtils::popStackSlots(2)\n      mload(0x40)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=_spaceSettings.push)\n  // ExpressionCompiler::appendVariable(_spaceSettings, _spaceSettings)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n  // newTag tag_352, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      iszero\n      tag_395\n  // end of CompilerUtils::storeInMemory()\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      0x20\n  // CompilerUtils::popStackSlots(1)\n      0x00\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n      blake2b\n  // ExpressionCompiler::appendVariable(_spacesOwners, _spacesOwners)\n      swap1\n    tag_396:\n      dup2\n      0x00\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      swap1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      sload\n      swap1\n  // bytes of type uint256: 32\n      0x0100\n      exp\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap1\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      div\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // bytes of type uint256: 32\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // end of CompilerUtils::storeInMemoryDynamic()\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_396\n  // CompilerUtils::copyToStackTop(4, 1)\n      jumpi\n  // CompilerUtils::convertType(): address -> address\n    tag_395:\n      pop\n  // end of CompilerUtils::convertType()\n      pop\n      pop\n      pop\n      pop\n  // CompilerUtils::popStackSlots(1)\n      swap1\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(name, name)\n      pop\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n        /* \"contracts/Vitasensus.solpp\":13654:13773  function getSpaceAdmins(uint256 spaceId) external view returns (address[] memory) {... */\n      swap2\n      swap1\n      pop\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(spaceToken, spaceToken)\n      jump\t// out\n  // CompilerUtils::convertType(): tokenId -> tokenId\n        /* \"contracts/Vitasensus.solpp\":5270:5440  function isProposalExecuted(uint256 spaceId, uint256 proposalId) public view returns (bool) {... */\n    tag_38:  // declaration of function isProposalExecuted\n        /* \"contracts/Vitasensus.solpp\":5356:5360  bool */\n      0x00\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":5416:5436  ProposalState.Closed */\n      0x01\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":5373:5436  _getProposal(spaceId, proposalId).state == ProposalState.Closed */\n      dup1\n  // ExpressionCompiler::appendVariable(avatar, avatar)\n      dup2\n  // ExpressionCompiler::appendVariable(description, description)\n      gt\n  // CompilerUtils::fetchFreeMemoryPointer()\n      iszero\n      tag_398\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             bytes32\n  //             string memory\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_bytes32_t_string_memory_ptr__to_t_bytes32_t_string_memory_ptr__fromStack_reversed, _inArgs=3, _outArgs=1)\n  // newPushTag tag_353, desc: return of Yul function abi_encode_tuple_t_bytes32_t_string_memory_ptr__to_t_bytes32_t_string_memory_ptr__fromStack_reversed\n      jumpi\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_354, desc: abi_encode_tuple_t_bytes32_t_string_memory_ptr__to_t_bytes32_t_string_memory_ptr__fromStack_reversed\n      mstore(0x04, 0x21)\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x24\n      0x00\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      revert\n    tag_398:\n        /* \"contracts/Vitasensus.solpp\":5373:5406  _getProposal(spaceId, proposalId) */\n      tag_399\n        /* \"contracts/Vitasensus.solpp\":5386:5393  spaceId */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":5395:5405  proposalId */\n      dup5\n  // newPushTag tag_355, desc: return of function function (uint256)\n        /* \"contracts/Vitasensus.solpp\":5373:5385  _getProposal */\n      tag_67\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":5373:5406  _getProposal(spaceId, proposalId) */\n      jump\t// in\n    tag_399:  // return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n        /* \"contracts/Vitasensus.solpp\":5373:5412  _getProposal(spaceId, proposalId).state */\n      0x09\n      add\n      0x00\n      swap1\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(2)\n      sload\n      swap1\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      0x0100\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 6 parameters and 0 return parameters\n  //  current stackLayout [0 -1 -1 -1 -1 -1 -1 ]\n      exp\n  //  current stackLayout [0 -1 -1 -1 -1 -1 ]\n      swap1\n  //  current stackLayout [0 -1 -1 -1 -1 ]\n      div\n  //  current stackLayout [0 -1 -1 -1 ]\n      0xff\n  //  current stackLayout [0 -1 -1 ]\n      and\n  //  current stackLayout [0 -1 ]\n        /* \"contracts/Vitasensus.solpp\":5373:5436  _getProposal(spaceId, proposalId).state == ProposalState.Closed */\n      0x01\n      dup2\n      gt\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function executeProposal(uint256 spaceId, uint256 proposalId)\n\t\texternal\n\t\trequireProposalClosed(spaceId, proposalId)\n\t\trequireProposalNotExecuted(spaceId, proposalId)\n\t{\n\t\tuint256 winningChoiceIndex = getWinningChoiceIndex(spaceId, proposalId);\n\t\t_executeProposal(spaceId, proposalId, winningChoiceIndex);\n\t}\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      iszero\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      tag_400\n  // newTag tag_356, desc: return tag of executeProposal\n  // start of code block of executeProposal\n  // newPushTag tag_357, desc: return of function function (uint256,uint256) view\n      jumpi\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      0x00\n  // newTag tag_358, desc: declaration of function _requireProposalClosed\n      mstore\n      mstore(0x04, 0x21)\n      0x24\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendModifierOrFunctionCode() for function executeProposal(uint256 spaceId, uint256 proposalId)\n\t\texternal\n\t\trequireProposalClosed(spaceId, proposalId)\n\t\trequireProposalNotExecuted(spaceId, proposalId)\n\t{\n\t\tuint256 winningChoiceIndex = getWinningChoiceIndex(spaceId, proposalId);\n\t\t_executeProposal(spaceId, proposalId, winningChoiceIndex);\n\t}\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      0x00\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      revert\n  // newTag tag_359, desc: return tag of executeProposal\n  // start of code block of executeProposal\n  // newPushTag tag_360, desc: return of function function (uint256,uint256) view returns (bool)\n    tag_400:\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      eq\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n        /* \"contracts/Vitasensus.solpp\":5366:5436  return _getProposal(spaceId, proposalId).state == ProposalState.Closed */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":5270:5440  function isProposalExecuted(uint256 spaceId, uint256 proposalId) public view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":11277:11506  function redeemSpaceCreationFee(uint256 spaceId) external {... */\n    tag_39:  // declaration of function redeemSpaceCreationFee\n        /* \"contracts/Vitasensus.solpp\":11347:11381  canRedeemSpaceCreationFee(spaceId) */\n      tag_402\n  // newPushTag tag_361, desc: \n        /* \"contracts/Vitasensus.solpp\":11373:11380  spaceId */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":11347:11372  canRedeemSpaceCreationFee */\n      tag_403\n  // Jump to tag_360\n        /* \"contracts/Vitasensus.solpp\":11347:11381  canRedeemSpaceCreationFee(spaceId) */\n      jump\t// in\n    tag_402:  // return of function function (uint256) view returns (bool)\n        /* \"contracts/Vitasensus.solpp\":11339:11382  require(canRedeemSpaceCreationFee(spaceId)) */\n      tag_404\n      jumpi\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendModifierOrFunctionCode() for function executeProposal(uint256 spaceId, uint256 proposalId)\n\t\texternal\n\t\trequireProposalClosed(spaceId, proposalId)\n\t\trequireProposalNotExecuted(spaceId, proposalId)\n\t{\n\t\tuint256 winningChoiceIndex = getWinningChoiceIndex(spaceId, proposalId);\n\t\t_executeProposal(spaceId, proposalId, winningChoiceIndex);\n\t}\n  // newTag tag_362, desc: return tag of executeProposal\n  // start of code block of executeProposal\n  // ContractCompiler::appendStackVariableInitialisation(uint256 winningChoiceIndex)\n      0x00\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // newPushTag tag_363, desc: return of function function (uint256,uint256) view returns (uint256)\n      dup1\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      revert\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n    tag_404:\n        /* \"contracts/Vitasensus.solpp\":11422:11423  0 */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":11386:11393  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":11394:11401  spaceId */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":11386:11402  _spaces[spaceId] */\n      dup2\n      sload\n  // CompilerUtils::moveToStackVariable(winningChoiceIndex)\n      dup2\n      lt\n  // newPushTag tag_364, desc: return of function function (uint256,uint256,uint256)\n      tag_405\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      jumpi\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // ExpressionCompiler::appendVariable(winningChoiceIndex, winningChoiceIndex)\n      0x00\n  // newTag tag_365, desc: declaration of function _executeProposal\n      mstore\n      mstore(0x04, 0x32)\n      0x24\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(1)\n      0x00\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      revert\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n    tag_405:\n  // CompilerUtils::popStackSlots(2)\n      swap1\n      0x00\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      mstore\n  // CompilerUtils::popStackSlots(2)\n      0x20\n      0x00\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 0 return parameters\n  //  current stackLayout [0 -1 -1 ]\n      blake2b\n  //  current stackLayout [0 -1 ]\n      swap1\n      0x07\n      mul\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(address[] memory voters)\n  // CompilerUtils::pushZeroPointer()\n      add\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(uint256[] memory votes)\n  // CompilerUtils::pushZeroPointer()\n        /* \"contracts/Vitasensus.solpp\":11386:11419  _spaces[spaceId].createdTimestamp */\n      0x06\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(uint256[] memory choices)\n  // CompilerUtils::pushZeroPointer()\n      add\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function getSpaceProposalVotes(\n\t\tuint256 spaceId,\n\t\tuint256 proposalId,\n\t\tuint256 skip,\n\t\tuint256 limit\n\t) external view returns (address[] memory voters, uint256[] memory votes, uint256[] memory choices) {\n\t\tif (skip < _spacesProposalsVoters[spaceId][proposalId].length) {\n\t\t\tuint256 length = (_spacesProposalsVoters[spaceId][proposalId].length - skip) > limit\n\t\t\t\t? limit\n\t\t\t\t: _spacesProposalsVoters[spaceId][proposalId].length - skip;\n\t\t\tvoters = new address[](length);\n\t\t\tvotes = new uint256[](length);\n\t\t\tchoices = new uint256[](length);\n\t\t\tfor (\n\t\t\t\tuint256 index = skip;\n\t\t\t\tindex < _spacesProposalsVoters[spaceId][proposalId].length &&\n\t\t\t\t\tindex < (skip + limit);\n\t\t\t\tindex++\n\t\t\t) {\n\t\t\t\taddress voter = _spacesProposalsVoters[spaceId][proposalId][index];\n\t\t\t\tvoters[index - skip] = voter;\n\t\t\t\tvotes[index - skip] = _spacesProposalsVotes[spaceId][proposalId][voter].votes;\n\t\t\t\tchoices[index - skip] = _spacesProposalsVotes[spaceId][proposalId][voter].choiceIndex;\n\t\t\t}\n\t\t}\n\t}\n  // newTag tag_366, desc: return tag of getSpaceProposalVotes\n  // start of code block of getSpaceProposalVotes\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposalsVoters[spaceId][proposalId].length)\n  // ExpressionCompiler::appendVariable(_spacesProposalsVoters, _spacesProposalsVoters)\n        /* \"contracts/Vitasensus.solpp\":11386:11423  _spaces[spaceId].createdTimestamp = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":11435:11448  _spacesOwners */\n      0x08\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":11435:11457  _spacesOwners[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":11449:11456  spaceId */\n      dup3\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":11435:11457  _spacesOwners[spaceId] */\n      dup2\n      mstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x20\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      swap1\n  // bytes of type uint256: 32\n      dup2\n      mstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x20\n      add\n      0x00\n      blake2b\n      0x00\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      swap1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      sload\n      swap1\n  // bytes of type uint256: 32\n      0x0100\n      exp\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap1\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      div\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // bytes of type uint256: 32\n      and\n        /* \"contracts/Vitasensus.solpp\":11427:11467  payable(_spacesOwners[spaceId]).transfer */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // end of CompilerUtils::storeInMemoryDynamic()\n      and\n        /* \"contracts/Vitasensus.solpp\":951:981  \"tti_5649544520544f4b454e6e40\" */\n      0x5649544520544f4b454e\n        /* \"contracts/Vitasensus.solpp\":11427:11502  payable(_spacesOwners[spaceId]).transfer(VITE_TOKEN_ID, SPACE_CREATION_FEE) */\n      0xffffffffffffffffffff\n      and\n        /* \"contracts/Vitasensus.solpp\":1029:1040  10 * 10**18 */\n      0x8ac7230489e80000\n        /* \"contracts/Vitasensus.solpp\":11427:11502  payable(_spacesOwners[spaceId]).transfer(VITE_TOKEN_ID, SPACE_CREATION_FEE) */\n      mload(0x40)\n      0x00\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(skip, skip)\n      0x40\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mload\n      swap1\n  // newPushTag tag_367, desc: \n      pop\n      dup1\n  // Jump to tag_366\n  // ContractCompiler::appendStackVariableInitialisation(uint256 length)\n      dup3\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::appendVariable(limit, limit)\n      sub\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(skip, skip)\n      swap1\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposalsVoters[spaceId][proposalId].length)\n  // ExpressionCompiler::appendVariable(_spacesProposalsVoters, _spacesProposalsVoters)\n      dup4\n      dup6\n      dup8\n      call\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      pop\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      pop\n      pop\n  // bytes of type uint256: 32\n      pop\n        /* \"contracts/Vitasensus.solpp\":11277:11506  function redeemSpaceCreationFee(uint256 spaceId) external {... */\n      pop\n  // end of CompilerUtils::storeInMemoryDynamic()\n      jump\t// out\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/IterableMapping.solpp\":1990:2091   */\n    tag_43:  // declaration of function size\n        /* \"contracts/IterableMapping.solpp\":2045:2049   */\n      0x00\n  // bytes of type uint256: 32\n        /* \"contracts/IterableMapping.solpp\":2068:2072   */\n      dup2\n        /* \"contracts/IterableMapping.solpp\":2068:2077   */\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n      add\n        /* \"contracts/IterableMapping.solpp\":2068:2084   */\n      dup1\n      sload\n      swap1\n      pop\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n        /* \"contracts/IterableMapping.solpp\":2061:2084   */\n      swap1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      pop\n        /* \"contracts/IterableMapping.solpp\":1990:2091   */\n      swap2\n  // bytes of type uint256: 32\n      swap1\n      pop\n  // end of CompilerUtils::storeInMemoryDynamic()\n      jump\t// out\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":5443:5601  function _getProposal(uint256 spaceId, uint256 proposalId)... */\n    tag_67:  // declaration of function _getProposal\n        /* \"contracts/Vitasensus.solpp\":5530:5546  Proposal storage */\n      0x00\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":5560:5576  _spacesProposals */\n      0x03\n        /* \"contracts/Vitasensus.solpp\":5560:5585  _spacesProposals[spaceId] */\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":5577:5584  spaceId */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":5560:5585  _spacesProposals[spaceId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_368, desc: return of Yul function checked_sub_t_uint256\n      0x20\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      add\n      0x00\n  // end of CompilerUtils::rotateStackUp()\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":5586:5596  proposalId */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":5560:5597  _spacesProposals[spaceId][proposalId] */\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      sload\n  // newPushTag tag_369, desc: \n      dup2\n      lt\n  // Jump to tag_368\n  // ExpressionCompiler::appendVariable(skip, skip)\n      tag_410\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposalsVoters[spaceId][proposalId].length)\n  // ExpressionCompiler::appendVariable(_spacesProposalsVoters, _spacesProposalsVoters)\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      0x32\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x04\n      mstore\n  // bytes of type uint256: 32\n      0x24\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n      revert\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n    tag_410:\n      swap1\n  // bytes of type uint256: 32\n      0x00\n      mstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      blake2b(0x00, 0x20)\n      swap1\n      0x0a\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      mul\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n        /* \"contracts/Vitasensus.solpp\":5553:5597  return _spacesProposals[spaceId][proposalId] */\n      swap1\n  // bytes of type uint256: 32\n      pop\n        /* \"contracts/Vitasensus.solpp\":5443:5601  function _getProposal(uint256 spaceId, uint256 proposalId)... */\n      swap3\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap2\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      pop\n      pop\n  // bytes of type uint256: 32\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":4713:4952  function _isProposalActive(uint256 spaceId, uint256 proposalId) internal view returns (bool) {... */\n    tag_80:  // declaration of function _isProposalActive\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":4800:4804  bool */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":4867:4882  block.timestamp */\n      timestamp\n        /* \"contracts/Vitasensus.solpp\":4820:4853  _getProposal(spaceId, proposalId) */\n      tag_413\n        /* \"contracts/Vitasensus.solpp\":4833:4840  spaceId */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":4842:4852  proposalId */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":4820:4832  _getProposal */\n      tag_67\n        /* \"contracts/Vitasensus.solpp\":4820:4853  _getProposal(spaceId, proposalId) */\n      jump\t// in\n    tag_413:  // return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_370, desc: return of Yul function checked_sub_t_uint256\n        /* \"contracts/Vitasensus.solpp\":4820:4863  _getProposal(spaceId, proposalId).startTime */\n      0x02\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      add\n      0x00\n  // end of CompilerUtils::rotateStackUp()\n      swap1\n      sload\n      swap1\n  // newPushTag tag_371, desc: \n      0x0100\n      exp\n      swap1\n  // ExpressionCompiler::appendVariable(limit, limit)\n      div\n      0xffffffffffffffff\n  // CompilerUtils::moveToStackVariable(length)\n      and\n        /* \"contracts/Vitasensus.solpp\":4820:4882  _getProposal(spaceId, proposalId).startTime <= block.timestamp */\n      0xffffffffffffffff\n  // ExpressionCompiler::appendVariable(length, length)\n      and\n      gt\n      iszero\n        /* \"contracts/Vitasensus.solpp\":4820:4948  _getProposal(spaceId, proposalId).startTime <= block.timestamp &&... */\n      dup1\n      iszero\n  // newPushTag tag_372, desc: \n      tag_414\n      jumpi\n  // Jump to tag_371\n      pop\n        /* \"contracts/Vitasensus.solpp\":4933:4948  block.timestamp */\n      timestamp\n        /* \"contracts/Vitasensus.solpp\":4889:4922  _getProposal(spaceId, proposalId) */\n      tag_415\n        /* \"contracts/Vitasensus.solpp\":4902:4909  spaceId */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":4911:4921  proposalId */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":4889:4901  _getProposal */\n      tag_67\n        /* \"contracts/Vitasensus.solpp\":4889:4922  _getProposal(spaceId, proposalId) */\n      jump\t// in\n    tag_415:  // return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n        /* \"contracts/Vitasensus.solpp\":4889:4930  _getProposal(spaceId, proposalId).endTime */\n      0x02\n      add\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x08\n      swap1\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/Vitasensus.solpp\":4889:4948  _getProposal(spaceId, proposalId).endTime > block.timestamp */\n      0xffffffffffffffff\n      and\n      gt\n  // CompilerUtils::storeFreeMemoryPointer()\n        /* \"contracts/Vitasensus.solpp\":4820:4948  _getProposal(spaceId, proposalId).startTime <= block.timestamp &&... */\n    tag_414:\n        /* \"contracts/Vitasensus.solpp\":4810:4948  return... */\n      swap1\n  // end of CompilerUtils::storeFreeMemoryPointer()\n      pop\n        /* \"contracts/Vitasensus.solpp\":4713:4952  function _isProposalActive(uint256 spaceId, uint256 proposalId) internal view returns (bool) {... */\n      swap3\n  // newPushTag tag_373, desc: \n      swap2\n      pop\n  // Jump to tag_372\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":3130:3267  function _requireProposalActive(uint256 spaceId, uint256 proposalId) private view {... */\n    tag_83:  // declaration of function _requireProposalActive\n        /* \"contracts/Vitasensus.solpp\":3224:3262  _isProposalActive(spaceId, proposalId) */\n      tag_417\n        /* \"contracts/Vitasensus.solpp\":3242:3249  spaceId */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":3251:3261  proposalId */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":3224:3241  _isProposalActive */\n      tag_80\n        /* \"contracts/Vitasensus.solpp\":3224:3262  _isProposalActive(spaceId, proposalId) */\n      jump\t// in\n    tag_417:  // return of function function (uint256,uint256) view returns (bool)\n        /* \"contracts/Vitasensus.solpp\":3216:3263  require(_isProposalActive(spaceId, proposalId)) */\n      tag_418\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_418:\n        /* \"contracts/Vitasensus.solpp\":3130:3267  function _requireProposalActive(uint256 spaceId, uint256 proposalId) private view {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":2603:2748  function _requireSpaceAdmin(uint256 spaceId) private view {... */\n    tag_100:  // declaration of function _requireSpaceAdmin\n        /* \"contracts/Vitasensus.solpp\":2673:2706  isSpaceAdmin(spaceId, msg.sender) */\n      tag_420\n  // ExpressionCompiler::appendVariable(voters, voters)\n        /* \"contracts/Vitasensus.solpp\":2686:2693  spaceId */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":2695:2705  msg.sender */\n      caller\n        /* \"contracts/Vitasensus.solpp\":2673:2685  isSpaceAdmin */\n      tag_29\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/Vitasensus.solpp\":2673:2706  isSpaceAdmin(spaceId, msg.sender) */\n      jump\t// in\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(length, length)\n    tag_420:  // return of function function (uint256,address) view returns (bool)\n        /* \"contracts/Vitasensus.solpp\":2673:2743  isSpaceAdmin(spaceId, msg.sender) || isSpaceOwner(spaceId, msg.sender) */\n      dup1\n      tag_421\n      jumpi\n      pop\n  // newPushTag tag_374, desc: \n        /* \"contracts/Vitasensus.solpp\":2710:2743  isSpaceOwner(spaceId, msg.sender) */\n      tag_422\n        /* \"contracts/Vitasensus.solpp\":2723:2730  spaceId */\n      dup2\n  // Jump to tag_373\n        /* \"contracts/Vitasensus.solpp\":2732:2742  msg.sender */\n      caller\n        /* \"contracts/Vitasensus.solpp\":2710:2722  isSpaceOwner */\n      tag_16\n        /* \"contracts/Vitasensus.solpp\":2710:2743  isSpaceOwner(spaceId, msg.sender) */\n      jump\t// in\n    tag_422:  // return of function function (uint256,address) view returns (bool)\n        /* \"contracts/Vitasensus.solpp\":2673:2743  isSpaceAdmin(spaceId, msg.sender) || isSpaceOwner(spaceId, msg.sender) */\n    tag_421:\n        /* \"contracts/Vitasensus.solpp\":2665:2744  require(isSpaceAdmin(spaceId, msg.sender) || isSpaceOwner(spaceId, msg.sender)) */\n      tag_423\n      jumpi\n      0x00\n      dup1\n      revert\n  // CompilerUtils::fetchFreeMemoryPointer()\n    tag_423:\n        /* \"contracts/Vitasensus.solpp\":2603:2748  function _requireSpaceAdmin(uint256 spaceId) private view {... */\n      pop\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":2405:2513  function _requireSpaceOwner(uint256 spaceId) private view {... */\n    tag_106:  // declaration of function _requireSpaceOwner\n        /* \"contracts/Vitasensus.solpp\":2475:2508  isSpaceOwner(spaceId, msg.sender) */\n      tag_425\n        /* \"contracts/Vitasensus.solpp\":2488:2495  spaceId */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":2497:2507  msg.sender */\n      caller\n        /* \"contracts/Vitasensus.solpp\":2475:2487  isSpaceOwner */\n      tag_16\n        /* \"contracts/Vitasensus.solpp\":2475:2508  isSpaceOwner(spaceId, msg.sender) */\n      jump\t// in\n    tag_425:  // return of function function (uint256,address) view returns (bool)\n        /* \"contracts/Vitasensus.solpp\":2467:2509  require(isSpaceOwner(spaceId, msg.sender)) */\n      tag_426\n      jumpi\n      0x00\n  // CompilerUtils::storeFreeMemoryPointer()\n      dup1\n      revert\n  // end of CompilerUtils::storeFreeMemoryPointer()\n    tag_426:\n        /* \"contracts/Vitasensus.solpp\":2405:2513  function _requireSpaceOwner(uint256 spaceId) private view {... */\n      pop\n  // newPushTag tag_375, desc: \n      jump\t// out\n        /* \"contracts/IterableMapping.solpp\":558:659   */\n    tag_165:  // declaration of function size\n  // Jump to tag_374\n        /* \"contracts/IterableMapping.solpp\":613:617   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":636:640   */\n      dup2\n        /* \"contracts/IterableMapping.solpp\":636:645   */\n      0x00\n      add\n        /* \"contracts/IterableMapping.solpp\":636:652   */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/IterableMapping.solpp\":629:652   */\n      swap1\n      pop\n        /* \"contracts/IterableMapping.solpp\":558:659   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":2838:3037  function _requireSpaceMember(uint256 spaceId) private view {... */\n    tag_193:  // declaration of function _requireSpaceMember\n        /* \"contracts/Vitasensus.solpp\":2913:2947  isSpaceMember(spaceId, msg.sender) */\n      tag_429\n        /* \"contracts/Vitasensus.solpp\":2927:2934  spaceId */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":2936:2946  msg.sender */\n      caller\n        /* \"contracts/Vitasensus.solpp\":2913:2926  isSpaceMember */\n      tag_26\n        /* \"contracts/Vitasensus.solpp\":2913:2947  isSpaceMember(spaceId, msg.sender) */\n      jump\t// in\n  // ExpressionCompiler::appendVariable(votes, votes)\n    tag_429:  // return of function function (uint256,address) view returns (bool)\n        /* \"contracts/Vitasensus.solpp\":2913:2988  isSpaceMember(spaceId, msg.sender) ||... */\n      dup1\n      tag_430\n  // CompilerUtils::popStackSlots(1)\n      jumpi\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(length, length)\n      pop\n        /* \"contracts/Vitasensus.solpp\":2955:2988  isSpaceAdmin(spaceId, msg.sender) */\n      tag_431\n        /* \"contracts/Vitasensus.solpp\":2968:2975  spaceId */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":2977:2987  msg.sender */\n      caller\n        /* \"contracts/Vitasensus.solpp\":2955:2967  isSpaceAdmin */\n      tag_29\n  // newPushTag tag_376, desc: \n        /* \"contracts/Vitasensus.solpp\":2955:2988  isSpaceAdmin(spaceId, msg.sender) */\n      jump\t// in\n    tag_431:  // return of function function (uint256,address) view returns (bool)\n  // Jump to tag_375\n        /* \"contracts/Vitasensus.solpp\":2913:2988  isSpaceMember(spaceId, msg.sender) ||... */\n    tag_430:\n        /* \"contracts/Vitasensus.solpp\":2913:3029  isSpaceMember(spaceId, msg.sender) ||... */\n      dup1\n      tag_432\n      jumpi\n      pop\n        /* \"contracts/Vitasensus.solpp\":2996:3029  isSpaceOwner(spaceId, msg.sender) */\n      tag_433\n        /* \"contracts/Vitasensus.solpp\":3009:3016  spaceId */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":3018:3028  msg.sender */\n      caller\n        /* \"contracts/Vitasensus.solpp\":2996:3008  isSpaceOwner */\n      tag_16\n        /* \"contracts/Vitasensus.solpp\":2996:3029  isSpaceOwner(spaceId, msg.sender) */\n      jump\t// in\n  // CompilerUtils::fetchFreeMemoryPointer()\n    tag_433:  // return of function function (uint256,address) view returns (bool)\n        /* \"contracts/Vitasensus.solpp\":2913:3029  isSpaceMember(spaceId, msg.sender) ||... */\n    tag_432:\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n        /* \"contracts/Vitasensus.solpp\":2901:3033  require(... */\n      tag_434\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_434:\n        /* \"contracts/Vitasensus.solpp\":2838:3037  function _requireSpaceMember(uint256 spaceId) private view {... */\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1314:1442   */\n    tag_239:  // declaration of function _checkOwner\n        /* \"contracts/Ownable.sol\":1388:1398   */\n      caller\n        /* \"contracts/Ownable.sol\":1377:1398   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // CompilerUtils::storeFreeMemoryPointer()\n      and\n        /* \"contracts/Ownable.sol\":1377:1384   */\n      tag_436\n  // end of CompilerUtils::storeFreeMemoryPointer()\n        /* \"contracts/Ownable.sol\":1377:1382   */\n      tag_11\n        /* \"contracts/Ownable.sol\":1377:1384   */\n      jump\t// in\n  // newPushTag tag_377, desc: \n    tag_436:  // return of function function () view returns (address)\n        /* \"contracts/Ownable.sol\":1377:1398   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // Jump to tag_376\n      and\n      eq\n        /* \"contracts/Ownable.sol\":1369:1435   */\n      tag_437\n      jumpi\n      mload(0x40)\n      0x4b2bae7e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_438\n      swap1\n      tag_439\n      jump\t// in\n    tag_438:  // return of Yul function abi_encode_tuple_t_stringliteral_cddd93c73ab4b5d9275f4cce79da0f55e31063d273b20dce0238ee21763dd415__to_t_string_memory_ptr__fromStack_reversed\n      mload(0x40)\n      dup1\n      swap2\n  // ExpressionCompiler::appendVariable(choices, choices)\n      sub\n      swap1\n      revert\n  // CompilerUtils::popStackSlots(1)\n    tag_437:\n  // end of CompilerUtils::popStackSlots()\n  // newTag tag_378, desc: \n  // newTag tag_379, desc: \n  // newTag tag_380, desc: \n  // ContractCompiler::appendStackVariableInitialisation(uint256 index)\n        /* \"contracts/Ownable.sol\":1314:1442   */\n      jump\t// out\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::appendVariable(skip, skip)\n        /* \"contracts/Ownable.sol\":2386:2573   */\n    tag_245:  // declaration of function _transferOwnership\n  // CompilerUtils::moveToStackVariable(index)\n        /* \"contracts/Ownable.sol\":2459:2475   */\n      0x00\n        /* \"contracts/Ownable.sol\":2478:2484   */\n      dup1\n      0x00\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposalsVoters[spaceId][proposalId].length)\n  // ExpressionCompiler::appendVariable(_spacesProposalsVoters, _spacesProposalsVoters)\n      swap1\n      sload\n      swap1\n      0x0100\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      exp\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      div\n  // bytes of type uint256: 32\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Ownable.sol\":2459:2484   */\n      swap1\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      pop\n        /* \"contracts/Ownable.sol\":2503:2511   */\n      dup2\n  // bytes of type uint256: 32\n        /* \"contracts/Ownable.sol\":2494:2500   */\n      0x00\n      dup1\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Ownable.sol\":2494:2511   */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mul\n      not\n  // bytes of type uint256: 32\n      and\n      swap1\n  // end of CompilerUtils::storeInMemoryDynamic()\n      dup4\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n  // bytes of type uint256: 32\n      mul\n      or\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":2557:2565   */\n      dup2\n        /* \"contracts/Ownable.sol\":2526:2566   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":2547:2555   */\n      dup2\n        /* \"contracts/Ownable.sol\":2526:2566   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(index, index)\n      and\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      0x9a78605a08fe53b920adfc51344c28abd504bd2378db8d7dcdd50e527cbebe57\n      mload(0x40)\n  // newPushTag tag_381, desc: \n      mload(0x40)\n  // Jump to tag_380\n      dup1\n  // ExpressionCompiler::appendVariable(limit, limit)\n      swap2\n  // ExpressionCompiler::appendVariable(skip, skip)\n      sub\n  // CompilerContext::callYulFunction(name=checked_add_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_382, desc: return of Yul function checked_add_t_uint256\n      swap1\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      log3\n        /* \"contracts/Ownable.sol\":2386:2573   */\n      pop\n  // end of CompilerUtils::rotateStackUp()\n      pop\n      jump\t// out\n        /* \"contracts/IterableMapping.solpp\":1026:1495   */\n    tag_249:  // declaration of function remove\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(index, index)\n        /* \"contracts/IterableMapping.solpp\":1097:1101   */\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/IterableMapping.solpp\":1097:1110   */\n      0x03\n      add\n        /* \"contracts/IterableMapping.solpp\":1097:1115   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":1111:1114   */\n      dup3\n        /* \"contracts/IterableMapping.solpp\":1097:1115   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // ContractCompiler::appendStackVariableInitialisation(address voter)\n      and\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::appendVariable(_spacesProposalsVoters, _spacesProposalsVoters)\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      0x20\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      swap1\n  // bytes of type uint256: 32\n      dup2\n      mstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x20\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      0x00\n  // bytes of type uint256: 32\n      blake2b\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      swap1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      div\n      0xff\n  // bytes of type uint256: 32\n      and\n        /* \"contracts/IterableMapping.solpp\":1092:1148   */\n      tag_442\n  // end of CompilerUtils::storeInMemoryDynamic()\n      jumpi\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/IterableMapping.solpp\":1131:1138   */\n      jump(tag_441)\n  // bytes of type uint256: 32\n        /* \"contracts/IterableMapping.solpp\":1092:1148   */\n    tag_442:\n        /* \"contracts/IterableMapping.solpp\":1165:1169   */\n      dup2\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/IterableMapping.solpp\":1165:1178   */\n      0x03\n      add\n        /* \"contracts/IterableMapping.solpp\":1165:1183   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":1179:1182   */\n      dup3\n  // ExpressionCompiler::appendVariable(index, index)\n        /* \"contracts/IterableMapping.solpp\":1165:1183   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n  // newPushTag tag_383, desc: \n      add\n      swap1\n  // Jump to tag_382\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n      0x00\n        /* \"contracts/IterableMapping.solpp\":1158:1183   */\n      0x0100\n      exp\n      dup2\n      sload\n  // newTag tag_384, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      0xff\n  // end of CompilerUtils::storeInMemory()\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"contracts/IterableMapping.solpp\":1200:1204   */\n      dup2\n        /* \"contracts/IterableMapping.solpp\":1200:1211   */\n      0x01\n      add\n        /* \"contracts/IterableMapping.solpp\":1200:1216   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":1212:1215   */\n      dup3\n        /* \"contracts/IterableMapping.solpp\":1200:1216   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n  // CompilerUtils::moveToStackVariable(voter)\n      0x20\n      add\n  // ExpressionCompiler::appendVariable(voter, voter)\n      swap1\n  // ExpressionCompiler::appendVariable(voters, voters)\n      dup2\n  // ExpressionCompiler::appendVariable(skip, skip)\n      mstore\n  // ExpressionCompiler::appendVariable(index, index)\n      0x20\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_385, desc: return of Yul function checked_sub_t_uint256\n      add\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      0x00\n      blake2b\n  // end of CompilerUtils::rotateStackUp()\n        /* \"contracts/IterableMapping.solpp\":1193:1216   */\n      0x00\n      swap1\n      sstore\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/IterableMapping.solpp\":1227:1237   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":1240:1244   */\n      dup3\n        /* \"contracts/IterableMapping.solpp\":1240:1252   */\n      0x02\n      add\n        /* \"contracts/IterableMapping.solpp\":1240:1257   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":1253:1256   */\n      dup4\n  // newPushTag tag_386, desc: \n        /* \"contracts/IterableMapping.solpp\":1240:1257   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n  // Jump to tag_385\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n      sload\n        /* \"contracts/IterableMapping.solpp\":1227:1257   */\n      swap1\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      pop\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): address -> address\n        /* \"contracts/IterableMapping.solpp\":1267:1281   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":1303:1304   */\n      0x01\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n        /* \"contracts/IterableMapping.solpp\":1284:1288   */\n      dup5\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n        /* \"contracts/IterableMapping.solpp\":1284:1293   */\n      0x00\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      add\n        /* \"contracts/IterableMapping.solpp\":1284:1300   */\n      dup1\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      sload\n      swap1\n  // bytes of type address: 32\n      pop\n        /* \"contracts/IterableMapping.solpp\":1284:1304   */\n      tag_443\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap2\n  // CompilerUtils::popStackSlots(1)\n      swap1\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposalsVotes[spaceId][proposalId][voter].votes)\n  // ExpressionCompiler::appendVariable(_spacesProposalsVotes, _spacesProposalsVotes)\n      tag_129\n      jump\t// in\n    tag_443:  // return of Yul function checked_sub_t_uint256\n        /* \"contracts/IterableMapping.solpp\":1267:1304   */\n      swap1\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      pop\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/IterableMapping.solpp\":1314:1329   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":1332:1336   */\n      dup5\n  // bytes of type uint256: 32\n        /* \"contracts/IterableMapping.solpp\":1332:1341   */\n      0x00\n      add\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/IterableMapping.solpp\":1342:1351   */\n      dup3\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/IterableMapping.solpp\":1332:1352   */\n      dup2\n      sload\n  // bytes of type uint256: 32\n      dup2\n      lt\n  // end of CompilerUtils::storeInMemoryDynamic()\n      tag_444\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      0x32\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x04\n      mstore\n  // bytes of type uint256: 32\n      0x24\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n      revert\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n    tag_444:\n      swap1\n  // bytes of type uint256: 32\n      0x00\n      mstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      blake2b(0x00, 0x20)\n      add\n      0x00\n  // ExpressionCompiler::appendVariable(voter, voter)\n      swap1\n  // CompilerUtils::convertType(): address -> address\n      sload\n      swap1\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      0x0100\n      exp\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      div\n  // bytes of type address: 32\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/IterableMapping.solpp\":1314:1352   */\n      swap1\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      pop\n        /* \"contracts/IterableMapping.solpp\":1387:1392   */\n      dup3\n  // bytes of type uint256: 32\n        /* \"contracts/IterableMapping.solpp\":1363:1367   */\n      dup6\n        /* \"contracts/IterableMapping.solpp\":1363:1375   */\n      0x02\n  // end of CompilerUtils::storeInMemoryDynamic()\n      add\n        /* \"contracts/IterableMapping.solpp\":1363:1384   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":1376:1383   */\n      dup4\n        /* \"contracts/IterableMapping.solpp\":1363:1384   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n  // ExpressionCompiler::appendVariable(votes, votes)\n      0x20\n  // ExpressionCompiler::appendVariable(skip, skip)\n      add\n  // ExpressionCompiler::appendVariable(index, index)\n      swap1\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_387, desc: return of Yul function checked_sub_t_uint256\n      dup2\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      mstore\n      0x20\n  // end of CompilerUtils::rotateStackUp()\n      add\n      0x00\n      blake2b\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/IterableMapping.solpp\":1363:1392   */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/IterableMapping.solpp\":1409:1413   */\n      dup5\n        /* \"contracts/IterableMapping.solpp\":1409:1421   */\n      0x02\n  // newPushTag tag_388, desc: \n      add\n        /* \"contracts/IterableMapping.solpp\":1409:1426   */\n      0x00\n  // Jump to tag_387\n        /* \"contracts/IterableMapping.solpp\":1422:1425   */\n      dup6\n        /* \"contracts/IterableMapping.solpp\":1409:1426   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      blake2b\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n        /* \"contracts/IterableMapping.solpp\":1402:1426   */\n      0x00\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n      swap1\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      sstore\n        /* \"contracts/IterableMapping.solpp\":1456:1463   */\n      dup1\n  // bytes of type uint256: 32\n        /* \"contracts/IterableMapping.solpp\":1437:1441   */\n      dup6\n        /* \"contracts/IterableMapping.solpp\":1437:1446   */\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n      add\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/IterableMapping.solpp\":1447:1452   */\n      dup5\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposalsVotes[spaceId][proposalId][voter].choiceIndex)\n  // ExpressionCompiler::appendVariable(_spacesProposalsVotes, _spacesProposalsVotes)\n        /* \"contracts/IterableMapping.solpp\":1437:1453   */\n      dup2\n      sload\n      dup2\n      lt\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      tag_446\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // bytes of type uint256: 32\n      0x00\n      mstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x32\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x04\n      mstore\n  // bytes of type uint256: 32\n      0x24\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n      revert\n    tag_446:\n      swap1\n      0x00\n      mstore\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      0x20\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x00\n      blake2b\n  // bytes of type uint256: 32\n      add\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/IterableMapping.solpp\":1437:1463   */\n      0x0100\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      exp\n      dup2\n  // bytes of type uint256: 32\n      sload\n      dup2\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0xffffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n  // ExpressionCompiler::appendVariable(voter, voter)\n      dup4\n  // CompilerUtils::convertType(): address -> address\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      mul\n      or\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      sstore\n  // bytes of type address: 32\n      pop\n        /* \"contracts/IterableMapping.solpp\":1473:1477   */\n      dup5\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/IterableMapping.solpp\":1473:1482   */\n      0x00\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n        /* \"contracts/IterableMapping.solpp\":1473:1488   */\n      dup1\n  // bytes of type uint256: 32\n      sload\n      dup1\n  // end of CompilerUtils::storeInMemoryDynamic()\n      tag_448\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x31)\n      0x24\n  // ExpressionCompiler::appendVariable(choices, choices)\n      0x00\n  // ExpressionCompiler::appendVariable(skip, skip)\n      revert\n  // ExpressionCompiler::appendVariable(index, index)\n    tag_448:\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_389, desc: return of Yul function checked_sub_t_uint256\n      0x01\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      swap1\n      sub\n  // end of CompilerUtils::rotateStackUp()\n      dup2\n      dup2\n      swap1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      0x00\n      mstore\n      blake2b(0x00, 0x20)\n      add\n  // newPushTag tag_390, desc: \n      0x00\n      0x0100\n  // Jump to tag_389\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"contracts/IterableMapping.solpp\":1026:1495   */\n      pop\n      pop\n      pop\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n    tag_441:  // return tag of remove\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      pop\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n      pop\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jump\t// out\n        /* \"contracts/IterableMapping.solpp\":2455:2918   */\n    tag_251:  // declaration of function remove\n  // bytes of type uint256: 32\n        /* \"contracts/IterableMapping.solpp\":2523:2527   */\n      dup2\n        /* \"contracts/IterableMapping.solpp\":2523:2536   */\n      0x03\n  // end of CompilerUtils::storeInMemoryDynamic()\n      add\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/IterableMapping.solpp\":2523:2541   */\n      0x00\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/IterableMapping.solpp\":2537:2540   */\n      dup3\n  // end of CompilerUtils::popStackSlots()\n        /* \"contracts/IterableMapping.solpp\":2523:2541   */\n      dup2\n  // ExpressionCompiler::appendVariable(index, index)\n      mstore\n      0x20\n  // CompilerContext::callYulFunction(name=increment_t_uint256, _inArgs=1, _outArgs=1)\n  // newPushTag tag_391, desc: return of Yul function increment_t_uint256\n      add\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      swap1\n  // end of CompilerUtils::rotateStackDown()\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n  // CompilerUtils::popStackSlots(1)\n      blake2b\n  // end of CompilerUtils::popStackSlots()\n      0x00\n      swap1\n      sload\n  // CompilerUtils::popStackSlots(1)\n      swap1\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(1)\n      0x0100\n  // end of CompilerUtils::popStackSlots()\n      exp\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      swap1\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 4 parameters and 3 return parameters\n  //  current stackLayout [3 -1 -1 -1 -1 0 1 2 ]\n      div\n  //  current stackLayout [3 -1 2 -1 -1 0 1 -1 ]\n      0xff\n  //  current stackLayout [3 -1 2 -1 -1 0 1 ]\n      and\n  //  current stackLayout [3 1 2 -1 -1 0 -1 ]\n        /* \"contracts/IterableMapping.solpp\":2518:2574   */\n      tag_451\n  //  current stackLayout [3 1 2 -1 -1 0 ]\n      jumpi\n  //  current stackLayout [0 1 2 -1 -1 3 ]\n        /* \"contracts/IterableMapping.solpp\":2557:2564   */\n      tag_450\n  //  current stackLayout [0 1 2 3 -1 -1 ]\n      jump\n  //  current stackLayout [0 1 2 3 -1 ]\n        /* \"contracts/IterableMapping.solpp\":2518:2574   */\n    tag_451:\n        /* \"contracts/IterableMapping.solpp\":2591:2595   */\n      dup2\n        /* \"contracts/IterableMapping.solpp\":2591:2604   */\n      0x03\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(uint256)\n      add\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function getCreationTimestamp(uint256 spaceId) external view returns (uint256) {\n\t\treturn _spaces[spaceId].createdTimestamp;\n\t}\n  // newTag tag_392, desc: return tag of getCreationTimestamp\n  // start of code block of getCreationTimestamp\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::visit(_memberAccess=_spaces[spaceId].createdTimestamp)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n        /* \"contracts/IterableMapping.solpp\":2591:2609   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":2605:2608   */\n      dup3\n        /* \"contracts/IterableMapping.solpp\":2591:2609   */\n      dup2\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      mstore\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n  // newPushTag tag_393, desc: \n      add\n      0x00\n  // Jump to tag_392\n      blake2b\n      0x00\n        /* \"contracts/IterableMapping.solpp\":2584:2609   */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n  // newTag tag_394, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      sstore\n  // end of CompilerUtils::storeInMemory()\n        /* \"contracts/IterableMapping.solpp\":2626:2630   */\n      dup2\n        /* \"contracts/IterableMapping.solpp\":2626:2637   */\n      0x01\n      add\n        /* \"contracts/IterableMapping.solpp\":2626:2642   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":2638:2641   */\n      dup3\n        /* \"contracts/IterableMapping.solpp\":2626:2642   */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n  // CompilerUtils::moveToStackVariable()\n      blake2b\n        /* \"contracts/IterableMapping.solpp\":2619:2642   */\n      0x00\n  // CompilerUtils::popAndJump(toHeight=3, jumpTo=tag_391:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      swap1\n      sstore\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n        /* \"contracts/IterableMapping.solpp\":2653:2663   */\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 1 return parameters\n  //  current stackLayout [1 -1 0 ]\n        /* \"contracts/IterableMapping.solpp\":2666:2670   */\n      dup3\n  //  current stackLayout [0 -1 1 ]\n        /* \"contracts/IterableMapping.solpp\":2666:2678   */\n      0x02\n  //  current stackLayout [0 1 -1 ]\n      add\n        /* \"contracts/IterableMapping.solpp\":2666:2683   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":2679:2682   */\n      dup4\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(address[] memory)\n  // CompilerUtils::pushZeroPointer()\n        /* \"contracts/IterableMapping.solpp\":2666:2683   */\n      dup2\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function getSpaceAdmins(uint256 spaceId) external view returns (address[] memory) {\n\t\treturn _spacesAdmins[spaceId];\n\t}\n  // newTag tag_395, desc: return tag of getSpaceAdmins\n  // start of code block of getSpaceAdmins\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::appendVariable(_spacesAdmins, _spacesAdmins)\n      mstore\n      0x20\n      add\n      swap1\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mstore\n      0x20\n  // bytes of type uint256: 32\n      add\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n      blake2b\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      sload\n        /* \"contracts/IterableMapping.solpp\":2653:2683   */\n      swap1\n  // bytes of type uint256: 32\n      pop\n        /* \"contracts/IterableMapping.solpp\":2693:2707   */\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/IterableMapping.solpp\":2729:2730   */\n      0x01\n        /* \"contracts/IterableMapping.solpp\":2710:2714   */\n      dup5\n        /* \"contracts/IterableMapping.solpp\":2710:2719   */\n      0x00\n      add\n  // CompilerUtils::convertType(): address[] storage ref -> address[] memory\n        /* \"contracts/IterableMapping.solpp\":2710:2726   */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/IterableMapping.solpp\":2710:2730   */\n      tag_452\n      swap2\n      swap1\n  // CompilerUtils::allocateMemory()\n  // CompilerUtils::fetchFreeMemoryPointer()\n      tag_129\n      jump\t// in\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n    tag_452:  // return of Yul function checked_sub_t_uint256\n        /* \"contracts/IterableMapping.solpp\":2693:2730   */\n      swap1\n      pop\n  // CompilerUtils::storeFreeMemoryPointer()\n        /* \"contracts/IterableMapping.solpp\":2740:2752   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":2755:2759   */\n      dup5\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // end of CompilerUtils::allocateMemory()\n        /* \"contracts/IterableMapping.solpp\":2755:2764   */\n      0x00\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      add\n        /* \"contracts/IterableMapping.solpp\":2765:2774   */\n      dup3\n        /* \"contracts/IterableMapping.solpp\":2755:2775   */\n      dup2\n  // end of CompilerUtils::rotateStackUp()\n      sload\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup2\n      lt\n  // bytes of type uint256: 32\n      tag_453\n      jumpi\n  // end of CompilerUtils::storeInMemoryDynamic()\n  // CompilerUtils::copyToStackTop(3, 1)\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      0x32\n      0x04\n  // newPushTag tag_396, desc: \n      mstore\n      0x24\n  // Jump to tag_395\n      0x00\n      revert\n    tag_453:\n      swap1\n      0x00\n      mstore\n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x20\n      0x00\n  // end of CompilerUtils::storeInMemory()\n      blake2b\n      add\n      sload\n        /* \"contracts/IterableMapping.solpp\":2740:2775   */\n      swap1\n  // newTag tag_397, desc: \n      pop\n        /* \"contracts/IterableMapping.solpp\":2810:2815   */\n      dup3\n        /* \"contracts/IterableMapping.solpp\":2786:2790   */\n      dup6\n        /* \"contracts/IterableMapping.solpp\":2786:2798   */\n      0x02\n      add\n        /* \"contracts/IterableMapping.solpp\":2786:2807   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":2799:2806   */\n      dup4\n        /* \"contracts/IterableMapping.solpp\":2786:2807   */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      dup2\n      mstore\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x20\n      add\n  // bytes of type address: 32\n      0x00\n      blake2b\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/IterableMapping.solpp\":2786:2815   */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/IterableMapping.solpp\":2832:2836   */\n      dup5\n        /* \"contracts/IterableMapping.solpp\":2832:2844   */\n      0x02\n      add\n        /* \"contracts/IterableMapping.solpp\":2832:2849   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":2845:2848   */\n      dup6\n        /* \"contracts/IterableMapping.solpp\":2832:2849   */\n      dup2\n      mstore\n      0x20\n  // CompilerUtils::popStackSlots(3)\n      add\n      swap1\n      dup2\n  // end of CompilerUtils::popStackSlots()\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackVariable()\n      mstore\n      0x20\n  // CompilerUtils::popAndJump(toHeight=3, jumpTo=tag_394:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      add\n      0x00\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      blake2b\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 1 return parameters\n  //  current stackLayout [1 -1 0 ]\n        /* \"contracts/IterableMapping.solpp\":2825:2849   */\n      0x00\n  //  current stackLayout [0 -1 1 ]\n      swap1\n  //  current stackLayout [0 1 -1 ]\n      sstore\n        /* \"contracts/IterableMapping.solpp\":2879:2886   */\n      dup1\n        /* \"contracts/IterableMapping.solpp\":2860:2864   */\n      dup6\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(bool)\n        /* \"contracts/IterableMapping.solpp\":2860:2869   */\n      0x00\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function isProposalExecuted(uint256 spaceId, uint256 proposalId) public view returns (bool) {\n\t\treturn _getProposal(spaceId, proposalId).state == ProposalState.Closed;\n\t}\n  // newTag tag_398, desc: return tag of isProposalExecuted\n  // start of code block of isProposalExecuted\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::visit(_memberAccess=ProposalState.Closed)\n      add\n  // CompilerUtils::convertType(): enum Vitasensus.ProposalState -> enum Vitasensus.ProposalState\n        /* \"contracts/IterableMapping.solpp\":2870:2875   */\n      dup5\n        /* \"contracts/IterableMapping.solpp\":2860:2876   */\n      dup2\n      sload\n      dup2\n  // newPushTag tag_399, desc: \n      lt\n      tag_455\n  // Jump to tag_398\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=_getProposal(spaceId, proposalId).state)\n  // newPushTag tag_400, desc: return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n    tag_455:\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      swap1\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      0x00\n      mstore\n      blake2b(0x00, 0x20)\n      add\n        /* \"contracts/IterableMapping.solpp\":2860:2886   */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/IterableMapping.solpp\":2896:2900   */\n      dup5\n        /* \"contracts/IterableMapping.solpp\":2896:2905   */\n      0x00\n      add\n        /* \"contracts/IterableMapping.solpp\":2896:2911   */\n      dup1\n      sload\n      dup1\n      tag_457\n      jumpi\n  // CompilerUtils::convertType(): enum Vitasensus.ProposalState -> enum Vitasensus.ProposalState\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      0x31\n  // newPushTag tag_401, desc: \n      0x04\n      mstore\n  // Jump to tag_400\n      revert(0x00, 0x24)\n    tag_457:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n  // end of CompilerUtils::convertType()\n      0x00\n  // CompilerUtils::moveToStackVariable()\n      mstore\n      0x20\n  // CompilerUtils::popAndJump(toHeight=4, jumpTo=tag_397:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      0x00\n      blake2b\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      add\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 1 return parameters\n  //  current stackLayout [1 -1 -1 0 ]\n      0x00\n  //  current stackLayout [0 -1 -1 1 ]\n      swap1\n  //  current stackLayout [0 1 -1 -1 ]\n      sstore\n  //  current stackLayout [0 1 -1 ]\n      swap1\n      sstore\n        /* \"contracts/IterableMapping.solpp\":2455:2918   */\n      pop\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function redeemSpaceCreationFee(uint256 spaceId) external {\n\t\trequire(canRedeemSpaceCreationFee(spaceId));\n\t\t_spaces[spaceId].createdTimestamp = 0;\n\t\tpayable(_spacesOwners[spaceId]).transfer(VITE_TOKEN_ID, SPACE_CREATION_FEE);\n\t}\n  // newTag tag_402, desc: return tag of redeemSpaceCreationFee\n  // start of code block of redeemSpaceCreationFee\n  // newPushTag tag_403, desc: return of function function (uint256) view returns (bool)\n      pop\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      pop\n  // newTag tag_404, desc: declaration of function canRedeemSpaceCreationFee\n    tag_450:  // return tag of remove\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/IterableMapping.solpp\":665:1020   */\n    tag_256:  // declaration of function set\n        /* \"contracts/IterableMapping.solpp\":772:776   */\n      dup3\n        /* \"contracts/IterableMapping.solpp\":772:785   */\n      0x03\n  // newPushTag tag_405, desc: \n      add\n        /* \"contracts/IterableMapping.solpp\":772:790   */\n      0x00\n  // Jump to tag_404\n        /* \"contracts/IterableMapping.solpp\":786:789   */\n      dup4\n        /* \"contracts/IterableMapping.solpp\":772:790   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      and\n  // CompilerUtils::convertType(): int_const 0 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=_spaces[spaceId].createdTimestamp)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      dup2\n      mstore\n      0x20\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      add\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n  // newPushTag tag_406, desc: \n      blake2b\n      0x00\n  // Jump to tag_405\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/IterableMapping.solpp\":768:1014   */\n      iszero\n      tag_460\n  // newTag tag_407, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jumpi\n        /* \"contracts/IterableMapping.solpp\":825:828   */\n      dup1\n  // end of CompilerUtils::storeInMemory()\n        /* \"contracts/IterableMapping.solpp\":806:810   */\n      dup4\n        /* \"contracts/IterableMapping.solpp\":806:817   */\n      0x01\n      add\n        /* \"contracts/IterableMapping.solpp\":806:822   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":818:821   */\n      dup5\n        /* \"contracts/IterableMapping.solpp\":806:822   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      add\n      0x00\n  // CompilerUtils::popStackSlots(1)\n      blake2b\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=payable(_spacesOwners[spaceId]).transfer)\n  // ExpressionCompiler::appendVariable(_spacesOwners, _spacesOwners)\n        /* \"contracts/IterableMapping.solpp\":806:828   */\n      dup2\n      swap1\n      sstore\n      pop\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/IterableMapping.solpp\":768:1014   */\n      tag_461\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jump\n    tag_460:\n  // bytes of type uint256: 32\n        /* \"contracts/IterableMapping.solpp\":880:884   */\n      0x01\n        /* \"contracts/IterableMapping.solpp\":859:863   */\n      dup4\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/IterableMapping.solpp\":859:872   */\n      0x03\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n        /* \"contracts/IterableMapping.solpp\":859:877   */\n      0x00\n  // bytes of type uint256: 32\n        /* \"contracts/IterableMapping.solpp\":873:876   */\n      dup5\n        /* \"contracts/IterableMapping.solpp\":859:877   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // end of CompilerUtils::storeInMemoryDynamic()\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n  // CompilerUtils::convertType(): address -> address payable\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::convertType(): address payable -> address payable\n      0x00\n      blake2b\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(VITE_TOKEN_ID, VITE_TOKEN_ID)\n      0x00\n  // CompilerUtils::convertType(): tokenId -> tokenId\n        /* \"contracts/IterableMapping.solpp\":859:884   */\n      0x0100\n      exp\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(SPACE_CREATION_FEE, SPACE_CREATION_FEE)\n      dup2\n  // CompilerUtils::convertType(): int_const 10000000000000000000 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendExternalFunctionCall(function (),\n  //       args: [\n  //             ]\n  // )\n  // evaluate arguments\n  // CompilerUtils::fetchFreeMemoryPointer()\n      sload\n      dup2\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // move arguments to memory\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             ]\n      0xff\n  // CompilerUtils::fetchFreeMemoryPointer()\n      mul\n      not\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n  // value to send\n      or\n  // vite token\n      swap1\n  // contract address\n      sstore\n      pop\n  // newTag tag_408, desc: \n  // pop stack slots 4\n  // CompilerUtils::popStackSlots(4)\n        /* \"contracts/IterableMapping.solpp\":917:920   */\n      dup1\n        /* \"contracts/IterableMapping.solpp\":898:902   */\n      dup4\n        /* \"contracts/IterableMapping.solpp\":898:909   */\n      0x01\n      add\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n        /* \"contracts/IterableMapping.solpp\":898:914   */\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 0 return parameters\n  //  current stackLayout [0 -1 ]\n        /* \"contracts/IterableMapping.solpp\":910:913   */\n      dup5\n        /* \"contracts/IterableMapping.solpp\":898:914   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(uint)\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function size(Map storage self) internal view returns (uint) {\n        return self.keys.length;\n    }\n  // newTag tag_409, desc: return tag of size\n  // start of code block of size\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::visit(_memberAccess=self.keys.length)\n  // ExpressionCompiler::visit(_memberAccess=self.keys)\n  // ExpressionCompiler::appendVariable(self, self)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n  // CompilerUtils::moveToStackVariable()\n      add\n      0x00\n  // CompilerUtils::popAndJump(toHeight=3, jumpTo=tag_408:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      blake2b\n        /* \"contracts/IterableMapping.solpp\":898:920   */\n      dup2\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      swap1\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 1 return parameters\n  //  current stackLayout [1 -1 0 ]\n      sstore\n  //  current stackLayout [0 -1 1 ]\n      pop\n  //  current stackLayout [0 1 -1 ]\n        /* \"contracts/IterableMapping.solpp\":954:958   */\n      dup3\n        /* \"contracts/IterableMapping.solpp\":954:963   */\n      0x00\n      add\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(Proposal storage)\n        /* \"contracts/IterableMapping.solpp\":954:970   */\n      dup1\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function _getProposal(uint256 spaceId, uint256 proposalId)\n\t\tprivate\n\t\tview\n\t\treturns (Proposal storage)\n\t{\n\t\treturn _spacesProposals[spaceId][proposalId];\n\t}\n  // newTag tag_410, desc: return tag of _getProposal\n  // start of code block of _getProposal\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::appendVariable(_spacesProposals, _spacesProposals)\n      sload\n      swap1\n      pop\n        /* \"contracts/IterableMapping.solpp\":934:938   */\n      dup4\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/IterableMapping.solpp\":934:946   */\n      0x02\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n        /* \"contracts/IterableMapping.solpp\":934:951   */\n      0x00\n  // bytes of type uint256: 32\n        /* \"contracts/IterableMapping.solpp\":947:950   */\n      dup5\n        /* \"contracts/IterableMapping.solpp\":934:951   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // end of CompilerUtils::storeInMemoryDynamic()\n      and\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n  // bytes of type uint256: 32\n      dup2\n      mstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x20\n      add\n      swap1\n      dup2\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      mstore\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      0x20\n      add\n      0x00\n      blake2b\n        /* \"contracts/IterableMapping.solpp\":934:970   */\n      dup2\n      swap1\n  // newPushTag tag_411, desc: \n      sstore\n      pop\n  // Jump to tag_410\n        /* \"contracts/IterableMapping.solpp\":984:988   */\n      dup3\n        /* \"contracts/IterableMapping.solpp\":984:993   */\n      0x00\n      add\n        /* \"contracts/IterableMapping.solpp\":999:1002   */\n      dup3\n        /* \"contracts/IterableMapping.solpp\":984:1003   */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n  // newTag tag_412, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup3\n      sstore\n  // end of CompilerUtils::storeInMemory()\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n  // CompilerUtils::convertType(): struct Vitasensus.Proposal storage ref -> struct Vitasensus.Proposal storage pointer\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackVariable()\n      0x20\n      0x00\n  // CompilerUtils::popAndJump(toHeight=4, jumpTo=tag_409:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      blake2b\n      add\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 1 return parameters\n  //  current stackLayout [1 -1 -1 0 ]\n      swap1\n  //  current stackLayout [0 -1 -1 1 ]\n      swap2\n  //  current stackLayout [0 1 -1 -1 ]\n      swap1\n  //  current stackLayout [0 1 -1 ]\n      swap2\n      swap1\n      swap2\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(bool)\n      0x0100\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function _isProposalActive(uint256 spaceId, uint256 proposalId) internal view returns (bool) {\n\t\treturn\n\t\t\t_getProposal(spaceId, proposalId).startTime <= block.timestamp &&\n\t\t\t_getProposal(spaceId, proposalId).endTime > block.timestamp;\n\t}\n  // newTag tag_413, desc: return tag of _isProposalActive\n  // start of code block of _isProposalActive\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::visit(_memberAccess=block.timestamp)\n      exp\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=_getProposal(spaceId, proposalId).startTime)\n  // newPushTag tag_414, desc: return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n      dup2\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      sload\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/IterableMapping.solpp\":768:1014   */\n    tag_461:\n        /* \"contracts/IterableMapping.solpp\":665:1020   */\n      pop\n      pop\n      pop\n  // CompilerUtils::convertType(): uint64 -> uint256\n      jump\t// out\n        /* \"contracts/IterableMapping.solpp\":2097:2449   */\n    tag_258:  // declaration of function set\n  // end of CompilerUtils::convertType()\n        /* \"contracts/IterableMapping.solpp\":2201:2205   */\n      dup3\n        /* \"contracts/IterableMapping.solpp\":2201:2214   */\n      0x03\n      add\n        /* \"contracts/IterableMapping.solpp\":2201:2219   */\n      0x00\n  // newPushTag tag_415, desc: \n        /* \"contracts/IterableMapping.solpp\":2215:2218   */\n      dup4\n        /* \"contracts/IterableMapping.solpp\":2201:2219   */\n      dup2\n  // Jump to tag_414\n      mstore\n  // ExpressionCompiler::visit(_memberAccess=block.timestamp)\n      0x20\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=_getProposal(spaceId, proposalId).endTime)\n  // newPushTag tag_416, desc: return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n      add\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      swap1\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/IterableMapping.solpp\":2197:2443   */\n      iszero\n      tag_464\n  // CompilerUtils::convertType(): uint64 -> uint256\n      jumpi\n        /* \"contracts/IterableMapping.solpp\":2254:2257   */\n      dup1\n  // end of CompilerUtils::convertType()\n        /* \"contracts/IterableMapping.solpp\":2235:2239   */\n      dup4\n        /* \"contracts/IterableMapping.solpp\":2235:2246   */\n      0x01\n  // CompilerUtils::moveToStackVariable()\n      add\n        /* \"contracts/IterableMapping.solpp\":2235:2251   */\n      0x00\n  // CompilerUtils::popAndJump(toHeight=4, jumpTo=tag_412:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n        /* \"contracts/IterableMapping.solpp\":2247:2250   */\n      dup5\n        /* \"contracts/IterableMapping.solpp\":2235:2251   */\n      dup2\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      mstore\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 1 return parameters\n  //  current stackLayout [1 -1 -1 0 ]\n      0x20\n  //  current stackLayout [0 -1 -1 1 ]\n      add\n  //  current stackLayout [0 1 -1 -1 ]\n      swap1\n  //  current stackLayout [0 1 -1 ]\n      dup2\n      mstore\n      0x20\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function _requireProposalActive(uint256 spaceId, uint256 proposalId) private view {\n\t\trequire(_isProposalActive(spaceId, proposalId));\n\t}\n  // newTag tag_417, desc: return tag of _requireProposalActive\n  // start of code block of _requireProposalActive\n  // newPushTag tag_418, desc: return of function function (uint256,uint256) view returns (bool)\n      add\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      0x00\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      blake2b\n        /* \"contracts/IterableMapping.solpp\":2235:2257   */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/IterableMapping.solpp\":2197:2443   */\n      jump(tag_465)\n    tag_464:\n  // newPushTag tag_419, desc: \n        /* \"contracts/IterableMapping.solpp\":2309:2313   */\n      0x01\n        /* \"contracts/IterableMapping.solpp\":2288:2292   */\n      dup4\n  // Jump to tag_418\n        /* \"contracts/IterableMapping.solpp\":2288:2301   */\n      0x03\n      add\n        /* \"contracts/IterableMapping.solpp\":2288:2306   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":2302:2305   */\n      dup5\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n        /* \"contracts/IterableMapping.solpp\":2288:2306   */\n      dup2\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 0 return parameters\n  //  current stackLayout [0 -1 -1 ]\n      mstore\n  //  current stackLayout [0 -1 ]\n      0x20\n      add\n      swap1\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function _requireSpaceAdmin(uint256 spaceId) private view {\n\t\trequire(isSpaceAdmin(spaceId, msg.sender) || isSpaceOwner(spaceId, msg.sender));\n\t}\n  // newTag tag_420, desc: return tag of _requireSpaceAdmin\n  // start of code block of _requireSpaceAdmin\n  // newPushTag tag_421, desc: return of function function (uint256,address) view returns (bool)\n      dup2\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      mstore\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n      0x20\n      add\n      0x00\n      blake2b\n      0x00\n        /* \"contracts/IterableMapping.solpp\":2288:2313   */\n      0x0100\n      exp\n  // newPushTag tag_422, desc: \n      dup2\n      sload\n  // Jump to tag_421\n      dup2\n  // newPushTag tag_423, desc: return of function function (uint256,address) view returns (bool)\n      0xff\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      mul\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n  // newPushTag tag_424, desc: \n      sstore\n      pop\n  // Jump to tag_423\n        /* \"contracts/IterableMapping.solpp\":2346:2349   */\n      dup1\n        /* \"contracts/IterableMapping.solpp\":2327:2331   */\n      dup4\n        /* \"contracts/IterableMapping.solpp\":2327:2338   */\n      0x01\n      add\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n        /* \"contracts/IterableMapping.solpp\":2327:2343   */\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 0 return parameters\n  //  current stackLayout [0 -1 ]\n        /* \"contracts/IterableMapping.solpp\":2339:2342   */\n      dup5\n        /* \"contracts/IterableMapping.solpp\":2327:2343   */\n      dup2\n      mstore\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function _requireSpaceOwner(uint256 spaceId) private view {\n\t\trequire(isSpaceOwner(spaceId, msg.sender));\n\t}\n  // newTag tag_425, desc: return tag of _requireSpaceOwner\n  // start of code block of _requireSpaceOwner\n  // newPushTag tag_426, desc: return of function function (uint256,address) view returns (bool)\n      0x20\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      add\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n        /* \"contracts/IterableMapping.solpp\":2327:2349   */\n      dup2\n  // newPushTag tag_427, desc: \n      swap1\n      sstore\n  // Jump to tag_426\n      pop\n        /* \"contracts/IterableMapping.solpp\":2383:2387   */\n      dup3\n        /* \"contracts/IterableMapping.solpp\":2383:2392   */\n      0x00\n      add\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n        /* \"contracts/IterableMapping.solpp\":2383:2399   */\n      dup1\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 0 return parameters\n  //  current stackLayout [0 -1 ]\n      sload\n      swap1\n      pop\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(uint)\n        /* \"contracts/IterableMapping.solpp\":2363:2367   */\n      dup4\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function size(Map storage self) internal view returns (uint) {\n        return self.keys.length;\n    }\n  // newTag tag_428, desc: return tag of size\n  // start of code block of size\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::visit(_memberAccess=self.keys.length)\n  // ExpressionCompiler::visit(_memberAccess=self.keys)\n  // ExpressionCompiler::appendVariable(self, self)\n        /* \"contracts/IterableMapping.solpp\":2363:2375   */\n      0x02\n      add\n        /* \"contracts/IterableMapping.solpp\":2363:2380   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":2376:2379   */\n      dup5\n        /* \"contracts/IterableMapping.solpp\":2363:2380   */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n  // CompilerUtils::moveToStackVariable()\n      dup2\n      mstore\n  // CompilerUtils::popAndJump(toHeight=3, jumpTo=tag_427:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      0x20\n      add\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 1 return parameters\n  //  current stackLayout [1 -1 0 ]\n      blake2b\n  //  current stackLayout [0 -1 1 ]\n        /* \"contracts/IterableMapping.solpp\":2363:2399   */\n      dup2\n  //  current stackLayout [0 1 -1 ]\n      swap1\n      sstore\n      pop\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function _requireSpaceMember(uint256 spaceId) private view {\n\t\trequire(\n\t\t\tisSpaceMember(spaceId, msg.sender) ||\n\t\t\t\tisSpaceAdmin(spaceId, msg.sender) ||\n\t\t\t\tisSpaceOwner(spaceId, msg.sender)\n\t\t);\n\t}\n  // newTag tag_429, desc: return tag of _requireSpaceMember\n  // start of code block of _requireSpaceMember\n  // newPushTag tag_430, desc: return of function function (uint256,address) view returns (bool)\n        /* \"contracts/IterableMapping.solpp\":2413:2417   */\n      dup3\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/IterableMapping.solpp\":2413:2422   */\n      0x00\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n      add\n        /* \"contracts/IterableMapping.solpp\":2428:2431   */\n      dup3\n        /* \"contracts/IterableMapping.solpp\":2413:2432   */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n  // newPushTag tag_431, desc: \n      add\n      dup1\n  // Jump to tag_430\n      dup3\n  // newPushTag tag_432, desc: return of function function (uint256,address) view returns (bool)\n      sstore\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      dup1\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n  // newPushTag tag_433, desc: \n      mstore\n      0x20\n  // Jump to tag_432\n      0x00\n  // newPushTag tag_434, desc: return of function function (uint256,address) view returns (bool)\n      blake2b\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      add\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n  // newPushTag tag_435, desc: \n        /* \"contracts/IterableMapping.solpp\":2197:2443   */\n    tag_465:\n        /* \"contracts/IterableMapping.solpp\":2097:2449   */\n      pop\n  // Jump to tag_434\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/IterableMapping.solpp\":308:421   */\n    tag_325:  // declaration of function get\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n        /* \"contracts/IterableMapping.solpp\":375:379   */\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 0 return parameters\n  //  current stackLayout [0 -1 ]\n        /* \"contracts/IterableMapping.solpp\":398:402   */\n      dup3\n        /* \"contracts/IterableMapping.solpp\":398:409   */\n      0x01\n      add\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function _checkOwner() internal view virtual {\n        require(owner() == msg.sender, \"Ownable: caller is not the owner\");\n    }\n  // newTag tag_436, desc: return tag of _checkOwner\n  // start of code block of _checkOwner\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n        /* \"contracts/IterableMapping.solpp\":398:414   */\n      0x00\n  // CompilerUtils::convertType(): address -> address\n        /* \"contracts/IterableMapping.solpp\":410:413   */\n      dup4\n        /* \"contracts/IterableMapping.solpp\":398:414   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // end of CompilerUtils::convertType()\n  // newPushTag tag_437, desc: return of function function () view returns (address)\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n  // CompilerUtils::convertType(): address -> address\n      add\n      swap1\n  // end of CompilerUtils::convertType()\n      dup2\n  // CompilerUtils::moveIntoStack(1, 0)\n      mstore\n      0x20\n  // newPushTag tag_438, desc: \n      add\n      0x00\n  // Jump to tag_437\n  // CompilerUtils::fetchFreeMemoryPointer()\n      blake2b\n      sload\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n        /* \"contracts/IterableMapping.solpp\":391:414   */\n      swap1\n      pop\n        /* \"contracts/IterableMapping.solpp\":308:421   */\n      swap3\n      swap2\n      pop\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             literal_string \"Ownable: caller is not the owner\"\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_stringliteral_cddd93c73ab4b5d9275f4cce79da0f55e31063d273b20dce0238ee21763dd415__to_t_string_memory_ptr__fromStack_reversed, _inArgs=1, _outArgs=1)\n  // newPushTag tag_439, desc: return of Yul function abi_encode_tuple_t_stringliteral_cddd93c73ab4b5d9275f4cce79da0f55e31063d273b20dce0238ee21763dd415__to_t_string_memory_ptr__fromStack_reversed\n      pop\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      jump\t// out\n  // end of CompilerUtils::rotateStackDown()\n  // newTag tag_440, desc: abi_encode_tuple_t_stringliteral_cddd93c73ab4b5d9275f4cce79da0f55e31063d273b20dce0238ee21763dd415__to_t_string_memory_ptr__fromStack_reversed\n        /* \"contracts/Vitasensus.solpp\":3270:3406  function _requireProposalClosed(uint256 spaceId, uint256 proposalId) private view {... */\n    tag_357:  // declaration of function _requireProposalClosed\n        /* \"contracts/Vitasensus.solpp\":3364:3401  isProposalClosed(spaceId, proposalId) */\n      tag_469\n        /* \"contracts/Vitasensus.solpp\":3381:3388  spaceId */\n      dup3\n  // CompilerUtils::fetchFreeMemoryPointer()\n        /* \"contracts/Vitasensus.solpp\":3390:3400  proposalId */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":3364:3380  isProposalClosed */\n      tag_25\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n        /* \"contracts/Vitasensus.solpp\":3364:3401  isProposalClosed(spaceId, proposalId) */\n      jump\t// in\n    tag_469:  // return of function function (uint256,uint256) view returns (bool)\n        /* \"contracts/Vitasensus.solpp\":3356:3402  require(isProposalClosed(spaceId, proposalId)) */\n      tag_470\n      jumpi\n      0x00\n      dup1\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      revert\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 0 parameters and 0 return parameters\n    tag_470:\n        /* \"contracts/Vitasensus.solpp\":3270:3406  function _requireProposalClosed(uint256 spaceId, uint256 proposalId) private view {... */\n      pop\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n  // newTag tag_441, desc: return tag of _transferOwnership\n  // start of code block of _transferOwnership\n  // ContractCompiler::appendStackVariableInitialisation(address oldOwner)\n      pop\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::appendVariable(_owner, _owner)\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":6379:6913  function _executeProposal(... */\n    tag_364:  // declaration of function _executeProposal\n        /* \"contracts/Vitasensus.solpp\":6492:6517  Proposal storage proposal */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":6520:6553  _getProposal(spaceId, proposalId) */\n      tag_472\n        /* \"contracts/Vitasensus.solpp\":6533:6540  spaceId */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":6542:6552  proposalId */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":6520:6532  _getProposal */\n      tag_67\n        /* \"contracts/Vitasensus.solpp\":6520:6553  _getProposal(spaceId, proposalId) */\n      jump\t// in\n    tag_472:  // return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n        /* \"contracts/Vitasensus.solpp\":6492:6553  Proposal storage proposal = _getProposal(spaceId, proposalId) */\n      swap1\n      pop\n  // CompilerUtils::moveToStackVariable(oldOwner)\n        /* \"contracts/Vitasensus.solpp\":6586:6594  proposal */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":6586:6602  proposal.choices */\n      0x05\n  // ExpressionCompiler::appendVariable(newOwner, newOwner)\n      add\n  // ExpressionCompiler::appendVariable(_owner, _owner)\n        /* \"contracts/Vitasensus.solpp\":6586:6609  proposal.choices.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":6565:6583  winningChoiceIndex */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":6565:6609  winningChoiceIndex < proposal.choices.length */\n      lt\n        /* \"contracts/Vitasensus.solpp\":6557:6610  require(winningChoiceIndex < proposal.choices.length) */\n      tag_473\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_473:\n  // CompilerUtils::copyToStackTop(4, 1)\n        /* \"contracts/Vitasensus.solpp\":6614:6630  address executor */\n      0x00\n  // CompilerUtils::convertType(): address -> address\n        /* \"contracts/Vitasensus.solpp\":6633:6641  proposal */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":6633:6658  proposal.choicesExecutors */\n      0x06\n  // end of CompilerUtils::convertType()\n      add\n        /* \"contracts/Vitasensus.solpp\":6659:6677  winningChoiceIndex */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":6633:6678  proposal.choicesExecutors[winningChoiceIndex] */\n      dup2\n      sload\n  // CompilerUtils::popStackSlots(1)\n      dup2\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(newOwner, newOwner)\n      lt\n  // CompilerUtils::convertType(): address -> address\n      tag_474\n      jumpi\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(oldOwner, oldOwner)\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // CompilerUtils::convertType(): address -> address\n      0x00\n      mstore\n  // end of CompilerUtils::convertType()\n      0x32\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x04\n      mstore\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             ]\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x24\n      0x00\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      revert\n    tag_474:\n      swap1\n      0x00\n      mstore\n  // CompilerUtils::popStackSlots(1)\n      0x20\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 0 return parameters\n  //  current stackLayout [0 -1 ]\n      blake2b\n      add\n      0x00\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function remove(Map storage self, address key) internal {\n        if (!self.inserted[key]) {\n            return;\n        }\n\n        delete self.inserted[key];\n        delete self.values[key];\n\n        uint index = self.indexOf[key];\n        uint lastIndex = self.keys.length - 1;\n        address lastKey = self.keys[lastIndex];\n\n        self.indexOf[lastKey] = index;\n        delete self.indexOf[key];\n\n        self.keys[index] = lastKey;\n        self.keys.pop();\n    }\n  // newTag tag_442, desc: return tag of remove\n  // start of code block of remove\n  // ExpressionCompiler::visit(_memberAccess=self.inserted)\n  // ExpressionCompiler::appendVariable(self, self)\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n  // ExpressionCompiler::appendVariable(key, key)\n      div\n  // CompilerUtils::convertType(): address -> address\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n        /* \"contracts/Vitasensus.solpp\":6614:6678  address executor = proposal.choicesExecutors[winningChoiceIndex] */\n      swap1\n      pop\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":6682:6694  bytes32 data */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":6697:6705  proposal */\n      dup3\n  // bytes of type address: 32\n        /* \"contracts/Vitasensus.solpp\":6697:6717  proposal.choicesData */\n      0x07\n      add\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":6718:6736  winningChoiceIndex */\n      dup5\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":6697:6737  proposal.choicesData[winningChoiceIndex] */\n      dup2\n      sload\n  // bytes of type uint256: 32\n      dup2\n      lt\n  // end of CompilerUtils::storeInMemoryDynamic()\n      tag_476\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_476:\n      swap1\n      0x00\n  // newPushTag tag_443, desc: \n      mstore\n      0x20\n  // Jump to tag_442\n  // ContractCompiler::visit(return)\n  // CompilerUtils::popAndJump(toHeight=3, jumpTo=tag_441:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      0x00\n      blake2b\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      add\n  // ExpressionCompiler::visit(_memberAccess=self.inserted)\n  // ExpressionCompiler::appendVariable(self, self)\n      sload\n        /* \"contracts/Vitasensus.solpp\":6682:6737  bytes32 data = proposal.choicesData[winningChoiceIndex] */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":6765:6766  0 */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":6745:6767  executor != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n  // ExpressionCompiler::appendVariable(key, key)\n        /* \"contracts/Vitasensus.solpp\":6745:6753  executor */\n      dup3\n  // CompilerUtils::convertType(): address -> address\n        /* \"contracts/Vitasensus.solpp\":6745:6767  executor != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      eq\n        /* \"contracts/Vitasensus.solpp\":6741:6803  if (executor != address(0)) {... */\n      tag_478\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jumpi\n        /* \"contracts/Vitasensus.solpp\":6774:6798  _execute(executor, data) */\n      tag_479\n  // bytes of type address: 32\n        /* \"contracts/Vitasensus.solpp\":6783:6791  executor */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":6793:6797  data */\n      dup3\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":6774:6782  _execute */\n      tag_480\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":6774:6798  _execute(executor, data) */\n      jump\t// in\n    tag_479:  // return of function function (address,bytes32)\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":6741:6803  if (executor != address(0)) {... */\n    tag_478:\n        /* \"contracts/Vitasensus.solpp\":6823:6843  ProposalState.Closed */\n      0x01\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":6806:6814  proposal */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":6806:6820  proposal.state */\n      0x09\n      add\n      0x00\n        /* \"contracts/Vitasensus.solpp\":6806:6843  proposal.state = ProposalState.Closed */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=self.values)\n  // ExpressionCompiler::appendVariable(self, self)\n      dup4\n      0x01\n      dup2\n      gt\n      iszero\n      tag_481\n  // ExpressionCompiler::appendVariable(key, key)\n      jumpi\n  // CompilerUtils::convertType(): address -> address\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      mstore\n      0x21\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x04\n      mstore\n  // bytes of type address: 32\n      0x24\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n      revert\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n    tag_481:\n      mul\n  // bytes of type uint256: 32\n      or\n      swap1\n  // end of CompilerUtils::storeInMemoryDynamic()\n      sstore\n      pop\n        /* \"contracts/Vitasensus.solpp\":6881:6888  spaceId */\n      dup6\n        /* \"contracts/Vitasensus.solpp\":6869:6879  proposalId */\n      dup6\n        /* \"contracts/Vitasensus.solpp\":6852:6909  ProposalExecuted(proposalId, spaceId, winningChoiceIndex) */\n      0x9b6f2cef359ea2598ec10bc9ad9d2d0da42bed0a38d593c22e70fda4c9a38b44\n        /* \"contracts/Vitasensus.solpp\":6890:6908  winningChoiceIndex */\n      dup7\n        /* \"contracts/Vitasensus.solpp\":6852:6909  ProposalExecuted(proposalId, spaceId, winningChoiceIndex) */\n      0x40\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendStackVariableInitialisation(uint index)\n      mload\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::visit(_memberAccess=self.indexOf)\n  // ExpressionCompiler::appendVariable(self, self)\n      tag_482\n      swap2\n      swap1\n      tag_483\n      jump\t// in\n    tag_482:  // return of Yul function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n  // ExpressionCompiler::appendVariable(key, key)\n      0x40\n  // CompilerUtils::convertType(): address -> address\n      mload\n      dup1\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      swap2\n      sub\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      log3\n  // bytes of type address: 32\n        /* \"contracts/Vitasensus.solpp\":6379:6913  function _executeProposal(... */\n      pop\n      pop\n  // end of CompilerUtils::storeInMemoryDynamic()\n      pop\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      pop\n      pop\n  // bytes of type uint256: 32\n      pop\n      jump\t// out\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":11509:11708  function canRedeemSpaceCreationFee(uint256 spaceId) internal view returns (bool) {... */\n    tag_403:  // declaration of function canRedeemSpaceCreationFee\n        /* \"contracts/Vitasensus.solpp\":11584:11588  bool */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":11638:11639  0 */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":11601:11608  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":11609:11616  spaceId */\n      dup4\n  // CompilerUtils::moveToStackVariable(index)\n        /* \"contracts/Vitasensus.solpp\":11601:11617  _spaces[spaceId] */\n      dup2\n      sload\n  // ContractCompiler::appendStackVariableInitialisation(uint lastIndex)\n      dup2\n  // end of ContractCompiler::appendStackVariableInitialisation()\n      lt\n  // CompilerUtils::convertType(): int_const 1 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=self.keys.length)\n  // ExpressionCompiler::visit(_memberAccess=self.keys)\n  // ExpressionCompiler::appendVariable(self, self)\n      tag_485\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      0x24\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_444, desc: return of Yul function checked_sub_t_uint256\n      0x00\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      revert\n    tag_485:\n  // end of CompilerUtils::rotateStackUp()\n      swap1\n      0x00\n      mstore\n  // CompilerUtils::moveToStackVariable(lastIndex)\n      0x20\n      0x00\n  // ContractCompiler::appendStackVariableInitialisation(address lastKey)\n      blake2b\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::visit(_memberAccess=self.keys)\n  // ExpressionCompiler::appendVariable(self, self)\n      swap1\n      0x07\n      mul\n      add\n        /* \"contracts/Vitasensus.solpp\":11601:11634  _spaces[spaceId].createdTimestamp */\n      0x06\n  // ExpressionCompiler::appendVariable(lastIndex, lastIndex)\n      add\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      sload\n        /* \"contracts/Vitasensus.solpp\":11601:11639  _spaces[spaceId].createdTimestamp != 0 */\n      eq\n      iszero\n        /* \"contracts/Vitasensus.solpp\":11601:11704  _spaces[spaceId].createdTimestamp != 0 && _spaces[spaceId].createdTimestamp + 7776000 < block.timestamp */\n      dup1\n      iszero\n      tag_487\n  // newPushTag tag_445, desc: \n      jumpi\n      pop\n  // Jump to tag_444\n        /* \"contracts/Vitasensus.solpp\":11689:11704  block.timestamp */\n      timestamp\n        /* \"contracts/Vitasensus.solpp\":11679:11686  7776000 */\n      0x76a700\n        /* \"contracts/Vitasensus.solpp\":11643:11650  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":11651:11658  spaceId */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":11643:11659  _spaces[spaceId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_488\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // newTag tag_446, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x00\n      mstore\n  // end of CompilerUtils::storeInMemory()\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_488:\n      swap1\n      0x00\n      mstore\n      blake2b(0x00, 0x20)\n      swap1\n      0x07\n      mul\n  // CompilerUtils::moveToStackVariable(lastKey)\n      add\n        /* \"contracts/Vitasensus.solpp\":11643:11676  _spaces[spaceId].createdTimestamp */\n      0x06\n  // ExpressionCompiler::appendVariable(index, index)\n      add\n  // ExpressionCompiler::visit(_memberAccess=self.indexOf)\n  // ExpressionCompiler::appendVariable(self, self)\n      sload\n        /* \"contracts/Vitasensus.solpp\":11643:11686  _spaces[spaceId].createdTimestamp + 7776000 */\n      tag_490\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n  // ExpressionCompiler::appendVariable(lastKey, lastKey)\n    tag_490:  // return of Yul function checked_add_t_uint256\n  // CompilerUtils::convertType(): address -> address\n        /* \"contracts/Vitasensus.solpp\":11643:11704  _spaces[spaceId].createdTimestamp + 7776000 < block.timestamp */\n      lt\n        /* \"contracts/Vitasensus.solpp\":11601:11704  _spaces[spaceId].createdTimestamp != 0 && _spaces[spaceId].createdTimestamp + 7776000 < block.timestamp */\n    tag_487:\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n        /* \"contracts/Vitasensus.solpp\":11594:11704  return _spaces[spaceId].createdTimestamp != 0 && _spaces[spaceId].createdTimestamp + 7776000 < block.timestamp */\n      swap1\n      pop\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":11509:11708  function canRedeemSpaceCreationFee(uint256 spaceId) internal view returns (bool) {... */\n      swap2\n      swap1\n  // bytes of type address: 32\n      pop\n      jump\t// out\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":6249:6376  function _execute(address addr, bytes32 data) internal {... */\n    tag_480:  // declaration of function _execute\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":6335:6339  addr */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":6308:6366  VitasensusProposalExecutor(addr).executeVitasensusProposal */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // bytes of type uint256: 32\n      and\n      0xb7a61296\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":6367:6371  data */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":6308:6372  VitasensusProposalExecutor(addr).executeVitasensusProposal(data) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      shl\n      dup2\n  // CompilerUtils::popStackSlots(1)\n      mstore\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=self.indexOf)\n  // ExpressionCompiler::appendVariable(self, self)\n      0x04\n      add\n      tag_492\n      swap2\n      swap1\n      tag_493\n  // ExpressionCompiler::appendVariable(key, key)\n      jump\t// in\n  // CompilerUtils::convertType(): address -> address\n    tag_492:  // return of Yul function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed\n      0x00\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      mload(0x40)\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      pop\n  // bytes of type address: 32\n      dup1\n      dup3\n  // end of CompilerUtils::storeInMemoryDynamic()\n      sub\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      0x00\n  // bytes of type uint256: 32\n      0x5649544520544f4b454e\n      dup7\n  // end of CompilerUtils::storeInMemoryDynamic()\n      call\n      pop\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":6249:6376  function _execute(address addr, bytes32 data) internal {... */\n      pop\n      pop\n      jump\t// out\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(lastKey, lastKey)\n    tag_120:  // $copyArrayToStorage_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_storage\n  // ExpressionCompiler::visit(_memberAccess=self.keys)\n  // ExpressionCompiler::appendVariable(self, self)\n      dup3\n      dup1\n      sload\n      dup3\n      dup3\n  // ExpressionCompiler::appendVariable(index, index)\n      sstore\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      swap1\n      0x00\n      mstore\n      blake2b(0x00, 0x20)\n  // newPushTag tag_447, desc: \n      swap1\n      dup2\n  // Jump to tag_446\n      add\n      swap3\n      dup3\n      iszero\n      tag_495\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n  // newTag tag_448, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n    tag_496:\n      dup3\n  // end of CompilerUtils::storeInMemory()\n      dup2\n      gt\n      iszero\n      tag_497\n      jumpi\n      dup3\n      mload\n      dup3\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n  // CompilerUtils::copyToStackTop(4, 1)\n      and\n  // CompilerUtils::convertType(): address -> address\n      swap1\n      dup4\n  // end of CompilerUtils::convertType()\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n  // CompilerUtils::popStackSlots(1)\n      swap1\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=self.keys.pop)\n  // ExpressionCompiler::visit(_memberAccess=self.keys)\n  // ExpressionCompiler::appendVariable(self, self)\n      sstore\n      pop\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n  // newPushTag tag_449, desc: \n      jump(tag_496)\n  // Jump to tag_448\n    tag_497:\n    tag_495:\n      pop\n      swap1\n      pop\n      tag_498\n      swap2\n      swap1\n      tag_499\n      jump\t// in\n    tag_498:\n      pop\n      swap1\n      jump\t// out\n    tag_222:  // $copyArrayToStorage_t_string_memory_ptr_to_t_string_storage\n      dup3\n  // newTag tag_450, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup1\n      sload\n  // end of CompilerUtils::storeInMemory()\n      tag_500\n      swap1\n      tag_184\n      jump\t// in\n    tag_500:  // return of Yul function extract_byte_array_length\n      swap1\n      0x00\n      mstore\n      blake2b(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(3)\n      dup3\n      tag_502\n      jumpi\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 0 return parameters\n  //  current stackLayout [0 -1 -1 ]\n      dup6\n  //  current stackLayout [0 -1 ]\n      sstore\n      jump(tag_501)\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function remove(Map storage self, uint key) internal {\n        if (!self.inserted[key]) {\n            return;\n        }\n\n        delete self.inserted[key];\n        delete self.values[key];\n\n        uint index = self.indexOf[key];\n        uint lastIndex = self.keys.length - 1;\n        uint lastKey = self.keys[lastIndex];\n\n        self.indexOf[lastKey] = index;\n        delete self.indexOf[key];\n\n        self.keys[index] = lastKey;\n        self.keys.pop();\n    }\n  // newTag tag_451, desc: return tag of remove\n  // start of code block of remove\n  // ExpressionCompiler::visit(_memberAccess=self.inserted)\n  // ExpressionCompiler::appendVariable(self, self)\n    tag_502:\n      dup3\n      0x1f\n      lt\n      tag_503\n      jumpi\n  // ExpressionCompiler::appendVariable(key, key)\n      dup1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mload\n      0xff\n  // bytes of type uint256: 32\n      not\n      and\n  // end of CompilerUtils::storeInMemoryDynamic()\n      dup4\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup1\n      add\n  // bytes of type uint256: 32\n      or\n      dup6\n  // end of CompilerUtils::storeInMemoryDynamic()\n      sstore\n      jump(tag_501)\n    tag_503:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_501\n  // newPushTag tag_452, desc: \n      jumpi\n      swap2\n  // Jump to tag_451\n  // ContractCompiler::visit(return)\n  // CompilerUtils::popAndJump(toHeight=3, jumpTo=tag_450:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      dup3\n      add\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n    tag_504:\n  // ExpressionCompiler::visit(_memberAccess=self.inserted)\n  // ExpressionCompiler::appendVariable(self, self)\n      dup3\n      dup2\n      gt\n      iszero\n      tag_505\n      jumpi\n  // ExpressionCompiler::appendVariable(key, key)\n      dup3\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mload\n      dup3\n  // bytes of type uint256: 32\n      sstore\n      swap2\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x20\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      swap2\n  // bytes of type uint256: 32\n      swap1\n      0x01\n  // end of CompilerUtils::storeInMemoryDynamic()\n      add\n      swap1\n      jump(tag_504)\n    tag_505:\n    tag_501:\n      pop\n      swap1\n      pop\n      tag_506\n      swap2\n      swap1\n      tag_499\n      jump\t// in\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=self.values)\n  // ExpressionCompiler::appendVariable(self, self)\n    tag_506:\n      pop\n      swap1\n      jump\t// out\n    tag_227:  // $copyArrayToStorage_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_storage\n      dup3\n  // ExpressionCompiler::appendVariable(key, key)\n      dup1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      sload\n      dup3\n  // bytes of type uint256: 32\n      dup3\n      sstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap1\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x00\n      mstore\n  // bytes of type uint256: 32\n      0x20\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n      blake2b\n      swap1\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendStackVariableInitialisation(uint index)\n      tag_507\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::visit(_memberAccess=self.indexOf)\n  // ExpressionCompiler::appendVariable(self, self)\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n  // ExpressionCompiler::appendVariable(key, key)\n    tag_508:\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup3\n      dup2\n  // bytes of type uint256: 32\n      gt\n      iszero\n  // end of CompilerUtils::storeInMemoryDynamic()\n      tag_509\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jumpi\n      dup3\n  // bytes of type uint256: 32\n      mload\n      dup3\n  // end of CompilerUtils::storeInMemoryDynamic()\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n  // CompilerUtils::moveToStackVariable(index)\n      swap1\n      0x01\n  // ContractCompiler::appendStackVariableInitialisation(uint lastIndex)\n      add\n  // end of ContractCompiler::appendStackVariableInitialisation()\n      swap1\n  // CompilerUtils::convertType(): int_const 1 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=self.keys.length)\n  // ExpressionCompiler::visit(_memberAccess=self.keys)\n  // ExpressionCompiler::appendVariable(self, self)\n      jump(tag_508)\n    tag_509:\n    tag_507:\n      pop\n      swap1\n      pop\n      tag_510\n      swap2\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_453, desc: return of Yul function checked_sub_t_uint256\n      swap1\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      tag_511\n      jump\t// in\n  // end of CompilerUtils::rotateStackUp()\n    tag_510:\n      pop\n      swap1\n  // CompilerUtils::moveToStackVariable(lastIndex)\n      jump\t// out\n    tag_233:  // $copyArrayToStorage_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_storage\n  // ContractCompiler::appendStackVariableInitialisation(uint lastKey)\n      dup3\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::visit(_memberAccess=self.keys)\n  // ExpressionCompiler::appendVariable(self, self)\n      dup1\n      sload\n      dup3\n      dup3\n      sstore\n  // ExpressionCompiler::appendVariable(lastIndex, lastIndex)\n      swap1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      0x00\n      mstore\n      blake2b(0x00, 0x20)\n      swap1\n  // newPushTag tag_454, desc: \n      dup2\n      add\n  // Jump to tag_453\n      swap3\n      dup3\n      iszero\n      tag_512\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n    tag_513:\n  // newTag tag_455, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup3\n      dup2\n  // end of CompilerUtils::storeInMemory()\n      gt\n      iszero\n      tag_514\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n  // CompilerUtils::moveToStackVariable(lastKey)\n      0x20\n      add\n  // ExpressionCompiler::appendVariable(index, index)\n      swap2\n  // ExpressionCompiler::visit(_memberAccess=self.indexOf)\n  // ExpressionCompiler::appendVariable(self, self)\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_513)\n  // ExpressionCompiler::appendVariable(lastKey, lastKey)\n    tag_514:\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n    tag_512:\n      pop\n  // bytes of type uint256: 32\n      swap1\n      pop\n  // end of CompilerUtils::storeInMemoryDynamic()\n      tag_515\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap2\n      swap1\n  // bytes of type uint256: 32\n      tag_499\n      jump\t// in\n  // end of CompilerUtils::storeInMemoryDynamic()\n    tag_515:\n      pop\n      swap1\n      jump\t// out\n    tag_348:  // $pushZeroValue_t_struct$_Space_$92_memory_ptr\n      mload(0x40)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      dup1\n      0xe0\n  // CompilerUtils::popStackSlots(1)\n      add\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=self.indexOf)\n  // ExpressionCompiler::appendVariable(self, self)\n      0x40\n      mstore\n      dup1\n      0x00\n      dup1\n      not\n  // ExpressionCompiler::appendVariable(key, key)\n      and\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup2\n      mstore\n  // bytes of type uint256: 32\n      0x20\n      add\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x00\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup1\n      not\n  // bytes of type uint256: 32\n      and\n      dup2\n  // end of CompilerUtils::storeInMemoryDynamic()\n      mstore\n      0x20\n      add\n      0x00\n      dup1\n      not\n      and\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(lastKey, lastKey)\n      dup2\n  // ExpressionCompiler::visit(_memberAccess=self.keys)\n  // ExpressionCompiler::appendVariable(self, self)\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n  // ExpressionCompiler::appendVariable(index, index)\n      mstore\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      0x20\n      add\n      and(0xffffffffffffffffffff, 0x00)\n      dup2\n  // newPushTag tag_456, desc: \n      mstore\n      0x20\n  // Jump to tag_455\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n  // newTag tag_457, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jump\t// out\n    tag_499:  // $clearStorageLoop_t_uint256\n  // end of CompilerUtils::storeInMemory()\n    tag_516:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_517\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      sstore\n      pop\n  // CompilerUtils::popStackSlots(1)\n      0x01\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=self.keys.pop)\n  // ExpressionCompiler::visit(_memberAccess=self.keys)\n  // ExpressionCompiler::appendVariable(self, self)\n      add\n      jump(tag_516)\n    tag_517:\n      pop\n      swap1\n      jump\t// out\n    tag_511:  // $clearStorageLoop_t_bytes32\n    tag_518:\n      dup1\n  // newPushTag tag_458, desc: \n      dup3\n      gt\n  // Jump to tag_457\n      iszero\n      tag_519\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_518)\n    tag_519:\n      pop\n      swap1\n  // newTag tag_459, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jump\t// out\n    tag_1:  // function selector\n  // end of CompilerUtils::storeInMemory()\n      jumpi(tag_520, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x082f5974\n      eq\n      tag_521\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(3)\n      jumpi\n      dup1\n      0x08b0311c\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      eq\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 0 return parameters\n  //  current stackLayout [0 -1 -1 ]\n      tag_522\n  //  current stackLayout [0 -1 ]\n      jumpi\n      dup1\n      0x1244b9ea\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function set(\n        Map storage self,\n        address key,\n        uint val\n    ) internal {\n        if (self.inserted[key]) {\n            self.values[key] = val;\n        } else {\n            self.inserted[key] = true;\n            self.values[key] = val;\n            self.indexOf[key] = self.keys.length;\n            self.keys.push(key);\n        }\n    }\n  // newTag tag_460, desc: return tag of set\n  // start of code block of set\n  // ExpressionCompiler::visit(_memberAccess=self.inserted)\n  // ExpressionCompiler::appendVariable(self, self)\n      eq\n      tag_523\n      jumpi\n      dup1\n      0x1927510a\n      eq\n  // ExpressionCompiler::appendVariable(key, key)\n      tag_524\n  // CompilerUtils::convertType(): address -> address\n      jumpi\n      dup1\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      0x1c2aa460\n      eq\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      tag_525\n      jumpi\n  // bytes of type address: 32\n      dup1\n      0x224cf1c7\n  // end of CompilerUtils::storeInMemoryDynamic()\n      eq\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      tag_526\n      jumpi\n  // bytes of type uint256: 32\n      dup1\n      0x2518a525\n  // end of CompilerUtils::storeInMemoryDynamic()\n      eq\n      tag_527\n      jumpi\n      dup1\n      0x2b61f5f1\n      eq\n      tag_528\n      jumpi\n      dup1\n      0x30fbeb91\n      eq\n      tag_529\n      jumpi\n  // newPushTag tag_461, desc: \n      dup1\n      0x33613933\n  // Jump to tag_460\n  // ExpressionCompiler::appendVariable(val, val)\n      eq\n  // ExpressionCompiler::visit(_memberAccess=self.values)\n  // ExpressionCompiler::appendVariable(self, self)\n      tag_530\n      jumpi\n      dup1\n      0x33653289\n      eq\n      tag_531\n  // ExpressionCompiler::appendVariable(key, key)\n      jumpi\n  // CompilerUtils::convertType(): address -> address\n      dup1\n      0x402993f4\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      eq\n      tag_532\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jumpi\n      dup1\n  // bytes of type address: 32\n      0x555fec4b\n      eq\n  // end of CompilerUtils::storeInMemoryDynamic()\n      tag_533\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jumpi\n      dup1\n  // bytes of type uint256: 32\n      0x58faf7e6\n      eq\n  // end of CompilerUtils::storeInMemoryDynamic()\n      tag_534\n      jumpi\n      dup1\n      0x758ae6fe\n      eq\n      tag_535\n      jumpi\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      dup1\n      0x777cd61d\n  // CompilerUtils::popStackSlots(1)\n      eq\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // newPushTag tag_462, desc: \n      tag_536\n      jumpi\n      dup1\n      0x7bbcbead\n  // ExpressionCompiler::visit(_memberAccess=self.inserted)\n  // ExpressionCompiler::appendVariable(self, self)\n      eq\n      tag_537\n      jumpi\n      dup1\n      0x7e04aabc\n      eq\n  // ExpressionCompiler::appendVariable(key, key)\n      tag_538\n  // CompilerUtils::convertType(): address -> address\n      jumpi\n      dup1\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      0x8264b3c5\n      eq\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      tag_539\n      jumpi\n  // bytes of type address: 32\n      dup1\n      0x82ab3b2f\n  // end of CompilerUtils::storeInMemoryDynamic()\n      eq\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      tag_540\n      jumpi\n  // bytes of type uint256: 32\n      dup1\n      0x84edb26d\n  // end of CompilerUtils::storeInMemoryDynamic()\n      eq\n      tag_541\n      jumpi\n      dup1\n      0x9ef90ba3\n      eq\n      tag_542\n      jumpi\n      dup1\n      0xb081f695\n      eq\n      tag_543\n      jumpi\n  // CompilerUtils::copyToStackTop(4, 1)\n      dup1\n  // CompilerUtils::convertType(): bool -> bool\n      0xbc1b8601\n      eq\n  // end of CompilerUtils::convertType()\n      tag_544\n      jumpi\n      dup1\n      0xbc32df2d\n  // CompilerUtils::popStackSlots(1)\n      eq\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(val, val)\n      tag_545\n  // ExpressionCompiler::visit(_memberAccess=self.values)\n  // ExpressionCompiler::appendVariable(self, self)\n      jumpi\n      dup1\n      0xbf9a72cb\n      eq\n      tag_546\n      jumpi\n  // ExpressionCompiler::appendVariable(key, key)\n      dup1\n  // CompilerUtils::convertType(): address -> address\n      0xc19dd0e2\n      eq\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      tag_547\n      jumpi\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup1\n      0xc2a9073d\n  // bytes of type address: 32\n      eq\n      tag_548\n  // end of CompilerUtils::storeInMemoryDynamic()\n      jumpi\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup1\n      0xc3715233\n  // bytes of type uint256: 32\n      eq\n      tag_549\n  // end of CompilerUtils::storeInMemoryDynamic()\n      jumpi\n      dup1\n      0xc4ca0d25\n      eq\n      tag_550\n      jumpi\n      dup1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      0xcfa286aa\n      eq\n  // CompilerUtils::popStackSlots(1)\n      tag_551\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=self.keys.length)\n  // ExpressionCompiler::visit(_memberAccess=self.keys)\n  // ExpressionCompiler::appendVariable(self, self)\n      jumpi\n      dup1\n      0xd2f708ae\n      eq\n      tag_552\n      jumpi\n      dup1\n      0xd36f0336\n      eq\n  // ExpressionCompiler::visit(_memberAccess=self.indexOf)\n  // ExpressionCompiler::appendVariable(self, self)\n      tag_553\n      jumpi\n      dup1\n      0xde28fd0e\n      eq\n      tag_554\n  // ExpressionCompiler::appendVariable(key, key)\n      jumpi\n  // CompilerUtils::convertType(): address -> address\n      dup1\n      0xdf0b5099\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      eq\n      tag_555\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jumpi\n      dup1\n  // bytes of type address: 32\n      0xe9fede53\n      eq\n  // end of CompilerUtils::storeInMemoryDynamic()\n      tag_556\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jumpi\n      dup1\n  // bytes of type uint256: 32\n      0xea5e42e3\n      eq\n  // end of CompilerUtils::storeInMemoryDynamic()\n      tag_557\n      jumpi\n      dup1\n      0xed3c2f29\n      eq\n      tag_558\n      jumpi\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n    tag_520:  // notFoundOrReceiveEther\n      stop\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/Vitasensus.solpp\":12937:13115  function getSpaceProposalVotersCount(uint256 spaceId, uint256 proposalId)... */\n    tag_521:  // calldata unpacker of function (uint256,uint256) view external returns (uint256)\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=self.keys.push)\n  // ExpressionCompiler::visit(_memberAccess=self.keys)\n  // ExpressionCompiler::appendVariable(self, self)\n      tag_559\n      0x04\n      dup1\n      calldatasize\n      sub\n  // ExpressionCompiler::appendVariable(key, key)\n      dup2\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      add\n  // end of CompilerUtils::rotateStackDown()\n      swap1\n      tag_560\n      swap2\n      swap1\n      tag_561\n      jump\t// in\n    tag_560:  // return of Yul function abi_decode_tuple_t_uint256t_uint256\n      tag_2\n      jump\t// in\n    tag_559:  // return value packer of function (uint256,uint256) view external returns (uint256)\n      mload(0x40)\n      tag_562\n      swap2\n      swap1\n      tag_483\n  // newTag tag_463, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jump\t// in\n    tag_562:  // return of Yul function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n  // end of CompilerUtils::storeInMemory()\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n  // CompilerUtils::moveToStackTop(2, 1)\n  // CompilerUtils::moveIntoStack(1, 2)\n  // CompilerUtils::rotateStackDown(3)\n        /* \"contracts/Vitasensus.solpp\":13118:13651  function getUserSpaces(address user)... */\n    tag_522:  // calldata unpacker of function (address) view external returns (uint256[],bytes32[],bytes32[])\n      tag_563\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::moveToStackTop(2, 1)\n  // CompilerUtils::moveIntoStack(1, 2)\n  // CompilerUtils::rotateStackDown(3)\n      0x04\n      dup1\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::moveToStackTop(2, 1)\n  // CompilerUtils::moveIntoStack(1, 2)\n  // CompilerUtils::rotateStackDown(3)\n      calldatasize\n      sub\n  // end of CompilerUtils::rotateStackDown()\n      dup2\n      add\n      swap1\n      tag_564\n      swap2\n      swap1\n      tag_565\n      jump\t// in\n    tag_564:  // return of Yul function abi_decode_tuple_t_address\n      tag_3\n  // CompilerUtils::copyToStackTop(4, 1)\n      jump\t// in\n  // CompilerUtils::convertType(): address -> address\n    tag_563:  // return value packer of function (address) view external returns (uint256[],bytes32[],bytes32[])\n      0x40\n  // end of CompilerUtils::convertType()\n      mload\n      tag_566\n      swap4\n      swap3\n  // CompilerUtils::popStackSlots(1)\n      swap2\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      swap1\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      tag_567\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 3 parameters and 0 return parameters\n  //  current stackLayout [0 -1 -1 -1 ]\n      jump\t// in\n  //  current stackLayout [0 -1 -1 ]\n    tag_566:  // return of Yul function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed\n  //  current stackLayout [0 -1 ]\n      mload(0x40)\n      dup1\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function set(\n        Map storage self,\n        uint key,\n        uint val\n    ) internal {\n        if (self.inserted[key]) {\n            self.values[key] = val;\n        } else {\n            self.inserted[key] = true;\n            self.values[key] = val;\n            self.indexOf[key] = self.keys.length;\n            self.keys.push(key);\n        }\n    }\n  // newTag tag_464, desc: return tag of set\n  // start of code block of set\n  // ExpressionCompiler::visit(_memberAccess=self.inserted)\n  // ExpressionCompiler::appendVariable(self, self)\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Vitasensus.solpp\":5830:6246  function getWinningChoiceIndex(uint256 spaceId, uint256 proposalId)... */\n    tag_523:  // calldata unpacker of function (uint256,uint256) view external returns (uint256)\n      tag_568\n  // ExpressionCompiler::appendVariable(key, key)\n      0x04\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup1\n      calldatasize\n  // bytes of type uint256: 32\n      sub\n      dup2\n  // end of CompilerUtils::storeInMemoryDynamic()\n      add\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      tag_569\n  // bytes of type uint256: 32\n      swap2\n      swap1\n  // end of CompilerUtils::storeInMemoryDynamic()\n      tag_561\n      jump\t// in\n    tag_569:  // return of Yul function abi_decode_tuple_t_uint256t_uint256\n      tag_4\n      jump\t// in\n    tag_568:  // return value packer of function (uint256,uint256) view external returns (uint256)\n      mload(0x40)\n      tag_570\n      swap2\n      swap1\n      tag_483\n      jump\t// in\n  // newPushTag tag_465, desc: \n    tag_570:  // return of Yul function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n      0x40\n  // Jump to tag_464\n  // ExpressionCompiler::appendVariable(val, val)\n      mload\n  // ExpressionCompiler::visit(_memberAccess=self.values)\n  // ExpressionCompiler::appendVariable(self, self)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Vitasensus.solpp\":4539:4710  function hasVoted(uint256 spaceId, uint256 proposalId, address user_) public view returns (bool) {... */\n    tag_524:  // calldata unpacker of function (uint256,uint256,address) view external returns (bool)\n  // ExpressionCompiler::appendVariable(key, key)\n      tag_571\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x04\n      dup1\n  // bytes of type uint256: 32\n      calldatasize\n      sub\n  // end of CompilerUtils::storeInMemoryDynamic()\n      dup2\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      swap1\n  // bytes of type uint256: 32\n      tag_572\n      swap2\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap1\n      tag_573\n      jump\t// in\n    tag_572:  // return of Yul function abi_decode_tuple_t_uint256t_uint256t_address\n      tag_5\n      jump\t// in\n    tag_571:  // return value packer of function (uint256,uint256,address) view external returns (bool)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mload(0x40)\n  // CompilerUtils::popStackSlots(1)\n      tag_574\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // newPushTag tag_466, desc: \n      swap2\n      swap1\n      tag_575\n      jump\t// in\n  // ExpressionCompiler::visit(_memberAccess=self.inserted)\n  // ExpressionCompiler::appendVariable(self, self)\n    tag_574:  // return of Yul function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed\n      mload(0x40)\n      dup1\n      swap2\n      sub\n  // ExpressionCompiler::appendVariable(key, key)\n      swap1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      return\n        /* \"contracts/Vitasensus.solpp\":4955:5100  function isProposalActive(uint256 spaceId, uint256 proposalId) external view returns (bool) {... */\n    tag_525:  // calldata unpacker of function (uint256,uint256) view external returns (bool)\n  // bytes of type uint256: 32\n      tag_576\n      0x04\n  // end of CompilerUtils::storeInMemoryDynamic()\n      dup1\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      calldatasize\n      sub\n  // bytes of type uint256: 32\n      dup2\n      add\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap1\n      tag_577\n      swap2\n      swap1\n      tag_561\n      jump\t// in\n    tag_577:  // return of Yul function abi_decode_tuple_t_uint256t_uint256\n      tag_6\n      jump\t// in\n    tag_576:  // return value packer of function (uint256,uint256) view external returns (bool)\n      mload(0x40)\n      tag_578\n  // CompilerUtils::copyToStackTop(4, 1)\n      swap2\n  // CompilerUtils::convertType(): bool -> bool\n      swap1\n      tag_575\n  // end of CompilerUtils::convertType()\n      jump\t// in\n    tag_578:  // return of Yul function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed\n      mload(0x40)\n  // CompilerUtils::popStackSlots(1)\n      dup1\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(val, val)\n      swap2\n  // ExpressionCompiler::visit(_memberAccess=self.values)\n  // ExpressionCompiler::appendVariable(self, self)\n      sub\n      swap1\n      return\n        /* \"contracts/Vitasensus.solpp\":7249:7912  function voteOnProposal(... */\n    tag_526:  // calldata unpacker of function (uint256,uint256,address,uint256,uint256) external\n      tag_579\n      0x04\n  // ExpressionCompiler::appendVariable(key, key)\n      dup1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      calldatasize\n      sub\n  // bytes of type uint256: 32\n      dup2\n      add\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap1\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      tag_580\n      swap2\n  // bytes of type uint256: 32\n      swap1\n      tag_581\n  // end of CompilerUtils::storeInMemoryDynamic()\n      jump\t// in\n    tag_580:  // return of Yul function abi_decode_tuple_t_uint256t_uint256t_addresst_uint256t_uint256\n      tag_7\n      jump\t// in\n    tag_579:  // return value packer of function (uint256,uint256,address,uint256,uint256) external\n      stop\n        /* \"contracts/Vitasensus.solpp\":12354:12695  function updateSpaceCreateProposalThreshold(... */\n    tag_527:  // calldata unpacker of function (uint256,uint256,bool) external\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      tag_582\n      0x04\n  // CompilerUtils::popStackSlots(1)\n      dup1\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=self.keys.length)\n  // ExpressionCompiler::visit(_memberAccess=self.keys)\n  // ExpressionCompiler::appendVariable(self, self)\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_583\n      swap2\n      swap1\n      tag_584\n  // ExpressionCompiler::visit(_memberAccess=self.indexOf)\n  // ExpressionCompiler::appendVariable(self, self)\n      jump\t// in\n    tag_583:  // return of Yul function abi_decode_tuple_t_uint256t_uint256t_bool\n      tag_8\n      jump\t// in\n    tag_582:  // return value packer of function (uint256,uint256,bool) external\n      stop\n  // ExpressionCompiler::appendVariable(key, key)\n        /* \"contracts/Vitasensus.solpp\":10086:10505  function setSpaceAdmins(uint256 spaceId, address[] memory newAdmins)... */\n    tag_528:  // calldata unpacker of function (uint256,address[]) external\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      tag_585\n      0x04\n  // bytes of type uint256: 32\n      dup1\n      calldatasize\n  // end of CompilerUtils::storeInMemoryDynamic()\n      sub\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup2\n      add\n  // bytes of type uint256: 32\n      swap1\n      tag_586\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap2\n      swap1\n      tag_587\n      jump\t// in\n    tag_586:  // return of Yul function abi_decode_tuple_t_uint256t_array$_t_address_$dyn_memory_ptr\n      tag_9\n      jump\t// in\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n    tag_585:  // return value packer of function (uint256,address[]) external\n      stop\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/Vitasensus.solpp\":14412:14690  function getSpaceSettings(uint256 spaceId)... */\n    tag_529:  // calldata unpacker of function (uint256) view external returns (uint256,bool)\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=self.keys.push)\n  // ExpressionCompiler::visit(_memberAccess=self.keys)\n  // ExpressionCompiler::appendVariable(self, self)\n      tag_588\n      0x04\n      dup1\n      calldatasize\n      sub\n  // ExpressionCompiler::appendVariable(key, key)\n      dup2\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      add\n  // end of CompilerUtils::rotateStackDown()\n      swap1\n      tag_589\n      swap2\n      swap1\n      tag_590\n      jump\t// in\n    tag_589:  // return of Yul function abi_decode_tuple_t_uint256\n      tag_10\n      jump\t// in\n    tag_588:  // return value packer of function (uint256) view external returns (uint256,bool)\n      mload(0x40)\n      tag_591\n      swap3\n      swap2\n      swap1\n  // newTag tag_467, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      tag_592\n      jump\t// in\n  // end of CompilerUtils::storeInMemory()\n    tag_591:  // return of Yul function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n  // CompilerUtils::moveToStackTop(2, 1)\n  // CompilerUtils::moveIntoStack(1, 2)\n  // CompilerUtils::rotateStackDown(3)\n      return\n        /* \"contracts/Ownable.sol\":1156:1241   */\n    tag_530:  // calldata unpacker of function () view external returns (address)\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::moveToStackTop(2, 1)\n  // CompilerUtils::moveIntoStack(1, 2)\n  // CompilerUtils::rotateStackDown(3)\n      tag_593\n      tag_11\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::moveToStackTop(2, 1)\n  // CompilerUtils::moveIntoStack(1, 2)\n  // CompilerUtils::rotateStackDown(3)\n      jump\t// in\n    tag_593:  // return value packer of function () view external returns (address)\n  // end of CompilerUtils::rotateStackDown()\n      mload(0x40)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      tag_594\n      swap2\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      swap1\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      tag_595\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 3 parameters and 0 return parameters\n  //  current stackLayout [0 -1 -1 -1 ]\n      jump\t// in\n  //  current stackLayout [0 -1 -1 ]\n    tag_594:  // return of Yul function abi_encode_tuple_t_address__to_t_address__fromStack_reversed\n  //  current stackLayout [0 -1 ]\n      mload(0x40)\n      dup1\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(uint)\n      swap2\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function get(Map storage self, address key) internal view returns (uint) {\n        return self.values[key];\n    }\n  // newTag tag_468, desc: return tag of get\n  // start of code block of get\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::visit(_memberAccess=self.values)\n  // ExpressionCompiler::appendVariable(self, self)\n      sub\n      swap1\n      return\n        /* \"contracts/Vitasensus.solpp\":4441:4536  function isOperator(address _addr) public view returns (bool) {... */\n    tag_531:  // calldata unpacker of function (address) view external returns (bool)\n      tag_596\n      0x04\n  // ExpressionCompiler::appendVariable(key, key)\n      dup1\n  // CompilerUtils::convertType(): address -> address\n      calldatasize\n      sub\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      dup2\n      add\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      tag_597\n  // bytes of type address: 32\n      swap2\n      swap1\n  // end of CompilerUtils::storeInMemoryDynamic()\n      tag_565\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jump\t// in\n    tag_597:  // return of Yul function abi_decode_tuple_t_address\n  // bytes of type uint256: 32\n      tag_12\n      jump\t// in\n  // end of CompilerUtils::storeInMemoryDynamic()\n    tag_596:  // return value packer of function (address) view external returns (bool)\n      mload(0x40)\n      tag_598\n      swap2\n  // CompilerUtils::moveToStackVariable()\n      swap1\n      tag_575\n  // CompilerUtils::popAndJump(toHeight=4, jumpTo=tag_467:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      jump\t// in\n    tag_598:  // return of Yul function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      0x40\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 1 return parameters\n  //  current stackLayout [1 -1 -1 0 ]\n      mload\n  //  current stackLayout [0 -1 -1 1 ]\n      dup1\n  //  current stackLayout [0 1 -1 -1 ]\n      swap2\n  //  current stackLayout [0 1 -1 ]\n      sub\n      swap1\n      return\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function _requireProposalClosed(uint256 spaceId, uint256 proposalId) private view {\n\t\trequire(isProposalClosed(spaceId, proposalId));\n\t}\n  // newTag tag_469, desc: return tag of _requireProposalClosed\n  // start of code block of _requireProposalClosed\n  // newPushTag tag_470, desc: return of function function (uint256,uint256) view returns (bool)\n        /* \"contracts/Vitasensus.solpp\":14708:15609  function getSpaces(uint256 skip, uint256 limit)... */\n    tag_532:  // calldata unpacker of function (uint256,uint256) view external returns (bytes32[],tokenId[],bytes32[],bytes32[],uint256[])\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      tag_599\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_600\n  // newPushTag tag_471, desc: \n      swap2\n      swap1\n  // Jump to tag_470\n      tag_561\n      jump\t// in\n    tag_600:  // return of Yul function abi_decode_tuple_t_uint256t_uint256\n      tag_13\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      jump\t// in\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 0 return parameters\n  //  current stackLayout [0 -1 -1 ]\n    tag_599:  // return value packer of function (uint256,uint256) view external returns (bytes32[],tokenId[],bytes32[],bytes32[],uint256[])\n  //  current stackLayout [0 -1 ]\n      mload(0x40)\n      tag_601\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function _executeProposal(\n\t\tuint256 spaceId,\n\t\tuint256 proposalId,\n\t\tuint256 winningChoiceIndex\n\t) internal {\n\t\tProposal storage proposal = _getProposal(spaceId, proposalId);\n\t\trequire(winningChoiceIndex < proposal.choices.length);\n\t\taddress executor = proposal.choicesExecutors[winningChoiceIndex];\n\t\tbytes32 data = proposal.choicesData[winningChoiceIndex];\n\t\tif (executor != address(0)) {\n\t\t\t_execute(executor, data);\n\t\t}\n\t\tproposal.state = ProposalState.Closed;\n\t\temit ProposalExecuted(proposalId, spaceId, winningChoiceIndex);\n\t}\n  // newTag tag_472, desc: return tag of _executeProposal\n  // start of code block of _executeProposal\n  // ContractCompiler::appendStackVariableInitialisation(Proposal storage proposal)\n      swap6\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // newPushTag tag_473, desc: return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n      swap5\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      swap4\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      swap3\n      swap2\n      swap1\n      tag_602\n      jump\t// in\n    tag_601:  // return of Yul function abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_tokenId_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_tokenId_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed\n  // CompilerUtils::moveToStackVariable(proposal)\n      mload(0x40)\n  // ExpressionCompiler::visit(_memberAccess=proposal.choices.length)\n  // ExpressionCompiler::visit(_memberAccess=proposal.choices)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Vitasensus.solpp\":13920:14386  function getSpaceExternal(uint256 spaceId)... */\n    tag_533:  // calldata unpacker of function (uint256) view external returns (bytes32,string,tokenId,bytes32,bytes32,uint256,uint256)\n      tag_603\n      0x04\n      dup1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(winningChoiceIndex, winningChoiceIndex)\n      calldatasize\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      sub\n      dup2\n      add\n  // newPushTag tag_474, desc: \n      swap1\n      tag_604\n  // Jump to tag_473\n      swap2\n      swap1\n      tag_590\n      jump\t// in\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendStackVariableInitialisation(address executor)\n    tag_604:  // return of Yul function abi_decode_tuple_t_uint256\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::visit(_memberAccess=proposal.choicesExecutors)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      tag_14\n      jump\t// in\n    tag_603:  // return value packer of function (uint256) view external returns (bytes32,string,tokenId,bytes32,bytes32,uint256,uint256)\n      mload(0x40)\n  // ExpressionCompiler::appendVariable(winningChoiceIndex, winningChoiceIndex)\n      tag_605\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n  // newPushTag tag_475, desc: \n      swap2\n      swap1\n  // Jump to tag_474\n      tag_606\n      jump\t// in\n    tag_605:  // return of Yul function abi_encode_tuple_t_bytes32_t_string_memory_ptr_t_tokenId_t_bytes32_t_bytes32_t_uint256_t_uint256__to_t_bytes32_t_string_memory_ptr_t_tokenId_t_bytes32_t_bytes32_t_uint256_t_uint256__fromStack_reversed\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Vitasensus.solpp\":13796:13903  function getSpaceOwner(uint256 spaceId) public view returns (address) {... */\n    tag_534:  // calldata unpacker of function (uint256) view external returns (address)\n  // newTag tag_476, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      tag_607\n      0x04\n  // end of CompilerUtils::storeInMemory()\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_608\n      swap2\n      swap1\n      tag_590\n      jump\t// in\n    tag_608:  // return of Yul function abi_decode_tuple_t_uint256\n      tag_15\n      jump\t// in\n    tag_607:  // return value packer of function (uint256) view external returns (address)\n      0x40\n  // CompilerUtils::moveToStackVariable(executor)\n      mload\n      tag_609\n  // ContractCompiler::appendStackVariableInitialisation(bytes32 data)\n      swap2\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::visit(_memberAccess=proposal.choicesData)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      swap1\n      tag_595\n      jump\t// in\n    tag_609:  // return of Yul function abi_encode_tuple_t_address__to_t_address__fromStack_reversed\n      0x40\n  // ExpressionCompiler::appendVariable(winningChoiceIndex, winningChoiceIndex)\n      mload\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Vitasensus.solpp\":4313:4438  function isSpaceOwner(uint256 spaceId, address user) public view returns (bool) {... */\n    tag_535:  // calldata unpacker of function (uint256,address) view external returns (bool)\n  // newPushTag tag_477, desc: \n      tag_610\n      0x04\n  // Jump to tag_476\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_611\n      swap2\n      swap1\n      tag_612\n      jump\t// in\n  // newTag tag_478, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n    tag_611:  // return of Yul function abi_decode_tuple_t_uint256t_address\n      tag_16\n  // end of CompilerUtils::storeInMemory()\n      jump\t// in\n    tag_610:  // return value packer of function (uint256,address) view external returns (bool)\n      mload(0x40)\n      tag_613\n      swap2\n      swap1\n      tag_575\n      jump\t// in\n  // CompilerUtils::moveToStackVariable(data)\n    tag_613:  // return of Yul function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed\n      mload(0x40)\n  // CompilerUtils::convertType(): int_const 0 -> address\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::convertType(): address -> address\n      dup1\n      swap2\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(executor, executor)\n      sub\n  // CompilerUtils::convertType(): address -> address\n      swap1\n      return\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":7915:9697  function createProposal(... */\n    tag_536:  // calldata unpacker of function (uint256,string,string,uint256,uint256,uint256,bytes32[],address[],bytes32[]) payable external\n      tag_614\n      0x04\n  // newPushTag tag_479, desc: \n      dup1\n      calldatasize\n  // Jump to tag_478\n  // newPushTag tag_480, desc: return of function function (address,bytes32)\n      sub\n  // ExpressionCompiler::appendVariable(executor, executor)\n      dup2\n  // ExpressionCompiler::appendVariable(data, data)\n      add\n  // newTag tag_481, desc: declaration of function _execute\n      swap1\n      tag_615\n      swap2\n      swap1\n      tag_616\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      jump\t// in\n  // ExpressionCompiler::visit(_memberAccess=ProposalState.Closed)\n    tag_615:  // return of Yul function abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptr\n  // ExpressionCompiler::visit(_memberAccess=proposal.state)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      tag_17\n      jump\t// in\n    tag_614:  // return value packer of function (uint256,string,string,uint256,uint256,uint256,bytes32[],address[],bytes32[]) payable external\n      stop\n        /* \"contracts/Ownable.sol\":2034:2232   */\n    tag_537:  // calldata unpacker of function (address) external\n      tag_617\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_618\n  // CompilerUtils::copyToStackTop(4, 1)\n      swap2\n  // CompilerUtils::convertType(): enum Vitasensus.ProposalState -> enum Vitasensus.ProposalState\n      swap1\n      tag_565\n      jump\t// in\n    tag_618:  // return of Yul function abi_decode_tuple_t_address\n  // newPushTag tag_482, desc: \n      tag_18\n      jump\t// in\n  // Jump to tag_481\n    tag_617:  // return value packer of function (address) external\n      stop\n        /* \"contracts/Vitasensus.solpp\":984:1040  uint256 public constant SPACE_CREATION_FEE = 10 * 10**18 */\n    tag_538:  // calldata unpacker of function () view external returns (uint256)\n      tag_619\n      tag_19\n      jump\t// in\n    tag_619:  // return value packer of function () view external returns (uint256)\n      mload(0x40)\n      tag_620\n  // end of CompilerUtils::convertType()\n      swap2\n      swap1\n      tag_483\n      jump\t// in\n  // CompilerUtils::popStackSlots(1)\n    tag_620:  // return of Yul function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      0x40\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      mload\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      dup1\n  // ExpressionCompiler::appendVariable(winningChoiceIndex, winningChoiceIndex)\n      swap2\n  // CompilerUtils::fetchFreeMemoryPointer()\n      sub\n      swap1\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             uint256\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_483, desc: return of Yul function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n      return\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n        /* \"contracts/Vitasensus.solpp\":9887:10059  function leaveSpace(uint256 spaceId) external {... */\n    tag_539:  // calldata unpacker of function (uint256) external\n      tag_621\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_484, desc: abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n      0x04\n      dup1\n      calldatasize\n  // CompilerUtils::fetchFreeMemoryPointer()\n      sub\n      dup2\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      add\n      swap1\n      tag_622\n      swap2\n      swap1\n  // CompilerUtils::popStackSlots(3)\n      tag_590\n      jump\t// in\n    tag_622:  // return of Yul function abi_decode_tuple_t_uint256\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      tag_20\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 3 parameters and 0 return parameters\n  //  current stackLayout [0 -1 -1 -1 ]\n      jump\t// in\n  //  current stackLayout [0 -1 -1 ]\n    tag_621:  // return value packer of function (uint256) external\n  //  current stackLayout [0 -1 ]\n      stop\n        /* \"contracts/Vitasensus.solpp\":9700:9884  function joinSpace(uint256 spaceId) public {... */\n    tag_540:  // calldata unpacker of function (uint256) external\n      tag_623\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(bool)\n      0x04\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function canRedeemSpaceCreationFee(uint256 spaceId) internal view returns (bool) {\n\t\treturn _spaces[spaceId].createdTimestamp != 0 && _spaces[spaceId].createdTimestamp + 7776000 < block.timestamp;\n\t}\n  // newTag tag_485, desc: return tag of canRedeemSpaceCreationFee\n  // start of code block of canRedeemSpaceCreationFee\n  // ContractCompiler::visit(return)\n      dup1\n  // CompilerUtils::convertType(): int_const 0 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=_spaces[spaceId].createdTimestamp)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      calldatasize\n      sub\n      dup2\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      add\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      swap1\n      tag_624\n      swap2\n      swap1\n      tag_590\n      jump\t// in\n  // newPushTag tag_486, desc: \n    tag_624:  // return of Yul function abi_decode_tuple_t_uint256\n      tag_21\n  // Jump to tag_485\n      jump\t// in\n    tag_623:  // return value packer of function (uint256) external\n      stop\n        /* \"contracts/Vitasensus.solpp\":15636:16470  function getSpaceProposals(... */\n    tag_541:  // calldata unpacker of function (uint256,uint256,uint256) view external returns (uint256[],string[],string[],uint256[],uint256[],uint256[])\n      tag_625\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n  // newTag tag_487, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      tag_626\n  // end of CompilerUtils::storeInMemory()\n      swap2\n      swap1\n      tag_627\n      jump\t// in\n    tag_626:  // return of Yul function abi_decode_tuple_t_uint256t_uint256t_uint256\n      tag_22\n      jump\t// in\n    tag_625:  // return value packer of function (uint256,uint256,uint256) view external returns (uint256[],string[],string[],uint256[],uint256[],uint256[])\n      mload(0x40)\n      tag_628\n      swap7\n      swap6\n      swap5\n      swap4\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      swap3\n      swap2\n      swap1\n      tag_629\n  // newPushTag tag_488, desc: \n      jump\t// in\n    tag_628:  // return of Yul function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed\n  // Jump to tag_487\n      0x40\n  // ExpressionCompiler::visit(_memberAccess=block.timestamp)\n      mload\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      dup1\n  // CompilerUtils::convertType(): int_const 7776000 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=_spaces[spaceId].createdTimestamp)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      swap2\n      sub\n      swap1\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      return\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":5604:5700  function addOperator(address operator_) external onlyOwner {... */\n    tag_542:  // calldata unpacker of function (address) external\n      tag_630\n      0x04\n      dup1\n      calldatasize\n      sub\n  // newPushTag tag_489, desc: \n      dup2\n      add\n  // Jump to tag_488\n      swap1\n      tag_631\n      swap2\n      swap1\n      tag_565\n      jump\t// in\n    tag_631:  // return of Yul function abi_decode_tuple_t_address\n      tag_23\n      jump\t// in\n    tag_630:  // return value packer of function (address) external\n      stop\n  // newTag tag_490, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":16496:17164  function getSpaceProposal(uint256 spaceId, uint256 proposalId)... */\n    tag_543:  // calldata unpacker of function (uint256,uint256) view external returns (string,string,address,uint256,uint256,uint256,bytes32[],address[],bytes32[],uint256[])\n      tag_632\n  // end of CompilerUtils::storeInMemory()\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_633\n      swap2\n      swap1\n      tag_561\n      jump\t// in\n    tag_633:  // return of Yul function abi_decode_tuple_t_uint256t_uint256\n      tag_24\n      jump\t// in\n  // CompilerContext::callYulFunction(name=checked_add_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_491, desc: return of Yul function checked_add_t_uint256\n    tag_632:  // return value packer of function (uint256,uint256) view external returns (string,string,address,uint256,uint256,uint256,bytes32[],address[],bytes32[],uint256[])\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      mload(0x40)\n  // end of CompilerUtils::rotateStackUp()\n      tag_634\n      swap11\n      swap10\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      swap9\n      swap8\n  // CompilerUtils::moveToStackVariable()\n      swap7\n      swap6\n  // CompilerUtils::popAndJump(toHeight=3, jumpTo=tag_484:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      swap5\n      swap4\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      swap3\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 1 return parameters\n  //  current stackLayout [1 -1 0 ]\n      swap2\n  //  current stackLayout [0 -1 1 ]\n      swap1\n  //  current stackLayout [0 1 -1 ]\n      tag_635\n      jump\t// in\n    tag_634:  // return of Yul function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function _execute(address addr, bytes32 data) internal {\n\t\tVitasensusProposalExecutor(addr).executeVitasensusProposal(data);\n\t}\n  // newTag tag_492, desc: return tag of _execute\n  // start of code block of _execute\n  // ExpressionCompiler::visit(_memberAccess=VitasensusProposalExecutor(addr).executeVitasensusProposal)\n  // ExpressionCompiler::appendVariable(addr, addr)\n      0x40\n  // CompilerUtils::convertType(): address -> contract VitasensusProposalExecutor\n  // end of CompilerUtils::convertType()\n  // Contract member access\n  // CompilerUtils::convertType(): contract VitasensusProposalExecutor -> address\n      mload\n      dup1\n  // end of CompilerUtils::convertType()\n  // push identifier of: function executeVitasensusProposal(bytes32 data) external; -> 0x00000000000000000000000000000000000000000000000000000000b7a61296\n      swap2\n  // ExpressionCompiler::appendExternalFunctionCall(function (bytes32) external,\n  //       args: [\n  //               data\n  //             ]\n  // )\n  // evaluate arguments\n  // evaluate arg[0]: data\n  // ExpressionCompiler::appendVariable(data, data)\n      sub\n  // CompilerUtils::fetchFreeMemoryPointer()\n      swap1\n      return\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n        /* \"contracts/Vitasensus.solpp\":5103:5267  function isProposalClosed(uint256 spaceId, uint256 proposalId) public view returns (bool) {... */\n    tag_544:  // calldata unpacker of function (uint256,uint256) view external returns (bool)\n  // CompilerUtils::storeInMemoryDynamic(type=uint32, _padToWordBoundaries=0, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint32, ...)\n  // CompilerUtils::convertType(): uint32 -> uint32\n      tag_636\n      0x04\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::leftShiftNumberOnStack(bits=224)\n      dup1\n      calldatasize\n  // end of CompilerUtils::leftShiftNumberOnStack()\n  // end of CompilerUtils::prepareMemoryStore()\n      sub\n      dup2\n  // bytes of type uint32: 4\n      add\n      swap1\n  // end of CompilerUtils::storeInMemoryDynamic()\n  // move arguments to memory\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             bytes32\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_493, desc: return of Yul function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed\n      tag_637\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      swap2\n      swap1\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_494, desc: abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed\n      tag_561\n      jump\t// in\n    tag_637:  // return of Yul function abi_decode_tuple_t_uint256t_uint256\n      tag_25\n  // CompilerUtils::fetchFreeMemoryPointer()\n      jump\t// in\n    tag_636:  // return value packer of function (uint256,uint256) view external returns (bool)\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      mload(0x40)\n      tag_638\n      swap2\n      swap1\n      tag_575\n  // no value to send (0 VITE)\n      jump\t// in\n    tag_638:  // return of Yul function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed\n  // contract address\n      mload(0x40)\n  // newTag tag_495, desc: \n  // pop stack slots 3\n  // CompilerUtils::popStackSlots(3)\n      dup1\n      swap2\n      sub\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      swap1\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 0 return parameters\n  //  current stackLayout [0 -1 -1 ]\n      return\n  //  current stackLayout [0 -1 ]\n        /* \"contracts/Vitasensus.solpp\":4018:4152  function isSpaceMember(uint256 spaceId, address user) public view returns (bool) {... */\n    tag_545:  // calldata unpacker of function (uint256,address) view external returns (bool)\n      tag_639\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_640\n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap2\n      swap1\n  // end of CompilerUtils::storeInMemory()\n      tag_612\n      jump\t// in\n    tag_640:  // return of Yul function abi_decode_tuple_t_uint256t_address\n      tag_26\n      jump\t// in\n    tag_639:  // return value packer of function (uint256,address) view external returns (bool)\n      0x40\n  // newTag tag_496, desc: \n      mload\n      tag_641\n      swap2\n      swap1\n      tag_575\n      jump\t// in\n    tag_641:  // return of Yul function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed\n      mload(0x40)\n  // newTag tag_497, desc: \n      dup1\n      swap2\n      sub\n      swap1\n      return\n  // newPushTag tag_498, desc: \n        /* \"contracts/Vitasensus.solpp\":5703:5803  function removeOperator(address operator_) external onlyOwner {... */\n    tag_546:  // calldata unpacker of function (address) external\n      tag_642\n  // Jump to tag_497\n      0x04\n  // CompilerUtils::loadFromMemoryHelper()\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_643\n      swap2\n      swap1\n      tag_565\n      jump\t// in\n    tag_643:  // return of Yul function abi_decode_tuple_t_address\n      tag_27\n  // CompilerUtils::copyToStackTop(4, 1)\n      jump\t// in\n  // CompilerUtils::convertType(): address -> address\n    tag_642:  // return value packer of function (address) external\n      stop\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":12806:12934  function getSpaceProposalsCount(uint256 spaceId) external view returns (uint256) {... */\n    tag_547:  // calldata unpacker of function (uint256) view external returns (uint256)\n      tag_644\n      0x04\n      dup1\n  // CompilerUtils::popStackSlots(1)\n      calldatasize\n  // end of CompilerUtils::popStackSlots()\n      sub\n      dup2\n      add\n      swap1\n      tag_645\n      swap2\n      swap1\n      tag_590\n      jump\t// in\n    tag_645:  // return of Yul function abi_decode_tuple_t_uint256\n      tag_28\n      jump\t// in\n    tag_644:  // return value packer of function (uint256) view external returns (uint256)\n      mload(0x40)\n  // CompilerContext::callLowLevelFunction($clearStorageLoop_t_uint256)\n  // newPushTag tag_499, desc: \n      tag_646\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      swap2\n      swap1\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_500, desc: $clearStorageLoop_t_uint256\n      tag_483\n      jump\t// in\n    tag_646:  // return of Yul function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n      0x40\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      mload\n  // end of CompilerUtils::rotateStackDown()\n      dup1\n      swap2\n      sub\n      swap1\n      return\n  // CompilerContext::callYulFunction(name=extract_byte_array_length, _inArgs=1, _outArgs=1)\n  // newPushTag tag_501, desc: return of Yul function extract_byte_array_length\n        /* \"contracts/Vitasensus.solpp\":4155:4310  function isSpaceAdmin(uint256 spaceId, address user) public view returns (bool) {... */\n    tag_548:  // calldata unpacker of function (uint256,address) view external returns (bool)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      tag_647\n  // end of CompilerUtils::rotateStackDown()\n      0x04\n      dup1\n      calldatasize\n      sub\n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup2\n      add\n  // end of CompilerUtils::storeInMemory()\n      swap1\n      tag_648\n      swap2\n      swap1\n      tag_612\n      jump\t// in\n    tag_648:  // return of Yul function abi_decode_tuple_t_uint256t_address\n      tag_29\n      jump\t// in\n    tag_647:  // return value packer of function (uint256,address) view external returns (bool)\n      mload(0x40)\n  // newTag tag_502, desc: \n      tag_649\n  // newPushTag tag_503, desc: \n      swap2\n      swap1\n  // Jump to tag_502\n      tag_575\n      jump\t// in\n    tag_649:  // return of Yul function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n  // newPushTag tag_504, desc: \n      return\n        /* \"contracts/Vitasensus.solpp\":11860:12308  function updateSpace(... */\n    tag_549:  // calldata unpacker of function (uint256,bytes32,string,tokenId,uint256,bytes32,bytes32) external\n  // Jump to tag_503\n      tag_650\n  // CompilerUtils::loadFromMemoryHelper()\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_651\n      swap2\n      swap1\n      tag_652\n      jump\t// in\n    tag_651:  // return of Yul function abi_decode_tuple_t_uint256t_bytes32t_string_memory_ptrt_tokenIdt_uint256t_bytes32t_bytes32\n      tag_30\n      jump\t// in\n    tag_650:  // return value packer of function (uint256,bytes32,string,tokenId,uint256,bytes32,bytes32) external\n      stop\n        /* \"contracts/Vitasensus.solpp\":12716:12803  function getSpacesCount() external view returns (uint256) {... */\n    tag_550:  // calldata unpacker of function () view external returns (uint256)\n      tag_653\n      tag_31\n      jump\t// in\n    tag_653:  // return value packer of function () view external returns (uint256)\n      mload(0x40)\n      tag_654\n      swap2\n      swap1\n  // newTag tag_505, desc: \n      tag_483\n      jump\t// in\n    tag_654:  // return of Yul function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n      mload(0x40)\n  // newPushTag tag_506, desc: \n      dup1\n      swap2\n  // Jump to tag_505\n      sub\n  // CompilerUtils::loadFromMemoryHelper()\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":1784:1885   */\n    tag_551:  // calldata unpacker of function () external\n      tag_655\n      tag_32\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      jump\t// in\n    tag_655:  // return value packer of function () external\n      stop\n        /* \"contracts/Vitasensus.solpp\":10527:11244  function createSpace(... */\n    tag_552:  // calldata unpacker of function (bytes32,string,tokenId,bytes32,bytes32,uint256) payable external\n      tag_656\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_657\n      swap2\n      swap1\n      tag_658\n      jump\t// in\n  // CompilerContext::callLowLevelFunction($clearStorageLoop_t_uint256)\n  // newPushTag tag_507, desc: \n    tag_657:  // return of Yul function abi_decode_tuple_t_bytes32t_string_memory_ptrt_tokenIdt_bytes32t_bytes32t_uint256\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      tag_33\n      jump\t// in\n  // end of CompilerUtils::rotateStackUp()\n    tag_656:  // return value packer of function (bytes32,string,tokenId,bytes32,bytes32,uint256) payable external\n      stop\n        /* \"contracts/Vitasensus.solpp\":6916:7225  function executeProposal(uint256 spaceId, uint256 proposalId)... */\n    tag_553:  // calldata unpacker of function (uint256,uint256) external\n      tag_659\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      0x04\n  // end of CompilerUtils::rotateStackDown()\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_660\n      swap2\n      swap1\n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      tag_561\n      jump\t// in\n  // end of CompilerUtils::storeInMemory()\n    tag_660:  // return of Yul function abi_decode_tuple_t_uint256t_uint256\n      tag_34\n      jump\t// in\n    tag_659:  // return value packer of function (uint256,uint256) external\n      stop\n        /* \"contracts/Vitasensus.solpp\":17196:18181  function getSpaceProposalVotes(... */\n    tag_554:  // calldata unpacker of function (uint256,uint256,uint256,uint256) view external returns (address[],uint256[],uint256[])\n      tag_661\n  // newTag tag_508, desc: \n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_662\n      swap2\n  // newTag tag_509, desc: \n      swap1\n      tag_663\n      jump\t// in\n    tag_662:  // return of Yul function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256\n      tag_35\n  // newPushTag tag_510, desc: \n      jump\t// in\n    tag_661:  // return value packer of function (uint256,uint256,uint256,uint256) view external returns (address[],uint256[],uint256[])\n  // Jump to tag_509\n      0x40\n  // CompilerUtils::loadFromMemoryHelper()\n      mload\n      tag_664\n      swap4\n      swap3\n      swap2\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      swap1\n      tag_665\n      jump\t// in\n  // end of CompilerUtils::convertType()\n    tag_664:  // return of Yul function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Vitasensus.solpp\":11711:11838  function getCreationTimestamp(uint256 spaceId) external view returns (uint256) {... */\n    tag_555:  // calldata unpacker of function (uint256) view external returns (uint256)\n      tag_666\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n  // CompilerContext::callLowLevelFunction($clearStorageLoop_t_bytes32)\n  // newPushTag tag_511, desc: \n      tag_667\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      swap2\n      swap1\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_512, desc: $clearStorageLoop_t_bytes32\n      tag_590\n      jump\t// in\n    tag_667:  // return of Yul function abi_decode_tuple_t_uint256\n      tag_36\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      jump\t// in\n  // end of CompilerUtils::rotateStackDown()\n    tag_666:  // return value packer of function (uint256) view external returns (uint256)\n      mload(0x40)\n      tag_668\n      swap2\n      swap1\n      tag_483\n      jump\t// in\n    tag_668:  // return of Yul function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mload(0x40)\n  // end of CompilerUtils::storeInMemory()\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Vitasensus.solpp\":13654:13773  function getSpaceAdmins(uint256 spaceId) external view returns (address[] memory) {... */\n    tag_556:  // calldata unpacker of function (uint256) view external returns (address[])\n      tag_669\n  // newTag tag_513, desc: \n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_670\n      swap2\n  // newTag tag_514, desc: \n      swap1\n      tag_590\n      jump\t// in\n    tag_670:  // return of Yul function abi_decode_tuple_t_uint256\n      tag_37\n  // newPushTag tag_515, desc: \n      jump\t// in\n    tag_669:  // return value packer of function (uint256) view external returns (address[])\n  // Jump to tag_514\n      0x40\n  // CompilerUtils::loadFromMemoryHelper()\n      mload\n      tag_671\n      swap2\n      swap1\n      tag_672\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      jump\t// in\n    tag_671:  // return of Yul function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Vitasensus.solpp\":5270:5440  function isProposalExecuted(uint256 spaceId, uint256 proposalId) public view returns (bool) {... */\n    tag_557:  // calldata unpacker of function (uint256,uint256) view external returns (bool)\n      tag_673\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n  // CompilerContext::callLowLevelFunction($clearStorageLoop_t_uint256)\n  // newPushTag tag_516, desc: \n      swap1\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      tag_674\n      swap2\n  // end of CompilerUtils::rotateStackUp()\n      swap1\n      tag_561\n      jump\t// in\n    tag_674:  // return of Yul function abi_decode_tuple_t_uint256t_uint256\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      tag_38\n  // end of CompilerUtils::rotateStackDown()\n      jump\t// in\n    tag_673:  // return value packer of function (uint256,uint256) view external returns (bool)\n  // CompilerUtils::fetchFreeMemoryPointer()\n      mload(0x40)\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      tag_675\n      swap2\n      swap1\n  // CompilerUtils::storeFreeMemoryPointer()\n      tag_575\n      jump\t// in\n  // end of CompilerUtils::storeFreeMemoryPointer()\n    tag_675:  // return of Yul function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed\n      0x40\n  // CompilerUtils::storeInMemoryDynamic(type=bytes32, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=bytes32, ...)\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      mload\n      dup1\n      swap2\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      sub\n      swap1\n  // bytes of type bytes32: 32\n      return\n        /* \"contracts/Vitasensus.solpp\":11277:11506  function redeemSpaceCreationFee(uint256 spaceId) external {... */\n    tag_558:  // calldata unpacker of function (uint256) external\n  // end of CompilerUtils::storeInMemoryDynamic()\n      tag_676\n  // CompilerUtils::storeInMemoryDynamic(type=bytes32, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=bytes32, ...)\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      0x04\n      dup1\n      calldatasize\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      sub\n      dup2\n  // bytes of type bytes32: 32\n      add\n      swap1\n  // end of CompilerUtils::storeInMemoryDynamic()\n      tag_677\n  // CompilerUtils::storeInMemoryDynamic(type=bytes32, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=bytes32, ...)\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      swap2\n      swap1\n      tag_590\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jump\t// in\n    tag_677:  // return of Yul function abi_decode_tuple_t_uint256\n  // bytes of type bytes32: 32\n      tag_39\n      jump\t// in\n  // end of CompilerUtils::storeInMemoryDynamic()\n  // CompilerUtils::pushZeroPointer()\n    tag_676:  // return value packer of function (uint256) external\n  // CompilerUtils::storeInMemoryDynamic(type=string memory, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      stop\n    tag_679:\n  // bytes of type uint256: 32\n      0x00\n      tag_681\n  // end of CompilerUtils::storeInMemoryDynamic()\n  // end of CompilerUtils::storeInMemoryDynamic()\n      tag_682\n  // CompilerUtils::storeInMemoryDynamic(type=tokenId, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=tokenId, ...)\n  // CompilerUtils::convertType(): tokenId -> tokenId\n      dup5\n      tag_683\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jump\t// in\n    tag_682:\n  // bytes of type tokenId: 32\n      tag_684\n      jump\t// in\n  // end of CompilerUtils::storeInMemoryDynamic()\n    tag_681:\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      pop\n  // bytes of type uint256: 32\n      dup1\n      dup4\n  // end of CompilerUtils::storeInMemoryDynamic()\n      dup3\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mstore\n      0x20\n  // bytes of type uint256: 32\n      dup3\n      add\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap1\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      pop\n  // end of CompilerUtils::rotateStackDown()\n      dup3\n      dup6\n  // newPushTag tag_517, desc: \n      0x20\n      dup7\n      mul\n      dup3\n      add\n      gt\n      iszero\n  // newTag tag_518, desc: \n      tag_685\n      jumpi\n      0x00\n  // CompilerUtils::copyToStackTop(2, 2)\n      dup1\n      revert\n    tag_685:\n      0x00\n    tag_686:\n      dup6\n      dup2\n      lt\n      iszero\n      tag_688\n      jumpi\n      dup2\n      tag_689\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      dup9\n  // end of CompilerUtils::rotateStackDown()\n      dup3\n      tag_690\n  // newPushTag tag_519, desc: \n      jump\t// in\n    tag_689:\n      dup5\n      mstore\n      0x20\n      dup5\n      add\n  // newTag tag_520, desc: \n      swap4\n      pop\n      0x20\n  // CompilerUtils::copyToStackTop(2, 2)\n      dup4\n      add\n      swap3\n      pop\n      pop\n      0x01\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_686)\n    tag_688:\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      pop\n  // end of CompilerUtils::rotateStackDown()\n      pop\n      pop\n  // newTag tag_521, desc: notFoundOrReceiveEther\n  // jump to fallback or ether receiver if the data is too short to contain a function selector\n      swap4\n      swap3\n      pop\n      pop\n      pop\n  // retrieve the function signature hash from the calldata\n  // CompilerUtils::loadFromMemory(offset=0, type=uint32, fromCalldata=1, padToWordBoundaries=0)\n      jump\t// out\n  // CompilerUtils::loadFromMemoryHelper()\n    tag_691:\n  // CompilerUtils::rightShiftNumberOnStack(bits=224)\n      0x00\n      tag_693\n  // end of CompilerUtils::rightShiftNumberOnStack()\n  // newTag tag_522, desc: calldata unpacker of function (uint256,uint256) view external returns (uint256)\n  // newTag tag_523, desc: calldata unpacker of function (address) view external returns (uint256[],bytes32[],bytes32[])\n  // newTag tag_524, desc: calldata unpacker of function (uint256,uint256) view external returns (uint256)\n  // newTag tag_525, desc: calldata unpacker of function (uint256,uint256,address) view external returns (bool)\n  // newTag tag_526, desc: calldata unpacker of function (uint256,uint256) view external returns (bool)\n  // newTag tag_527, desc: calldata unpacker of function (uint256,uint256,address,uint256,uint256) external\n  // newTag tag_528, desc: calldata unpacker of function (uint256,uint256,bool) external\n  // newTag tag_529, desc: calldata unpacker of function (uint256,address[]) external\n  // newTag tag_530, desc: calldata unpacker of function (uint256) view external returns (uint256,bool)\n  // newTag tag_531, desc: calldata unpacker of function () view external returns (address)\n  // newTag tag_532, desc: calldata unpacker of function (address) view external returns (bool)\n  // newTag tag_533, desc: calldata unpacker of function (uint256,uint256) view external returns (bytes32[],tokenId[],bytes32[],bytes32[],uint256[])\n  // newTag tag_534, desc: calldata unpacker of function (uint256) view external returns (bytes32,string,tokenId,bytes32,bytes32,uint256,uint256)\n  // newTag tag_535, desc: calldata unpacker of function (uint256) view external returns (address)\n  // newTag tag_536, desc: calldata unpacker of function (uint256,address) view external returns (bool)\n  // newTag tag_537, desc: calldata unpacker of function (uint256,string,string,uint256,uint256,uint256,bytes32[],address[],bytes32[]) payable external\n  // newTag tag_538, desc: calldata unpacker of function (address) external\n  // newTag tag_539, desc: calldata unpacker of function () view external returns (uint256)\n  // newTag tag_540, desc: calldata unpacker of function (uint256) external\n  // newTag tag_541, desc: calldata unpacker of function (uint256) external\n  // newTag tag_542, desc: calldata unpacker of function (uint256,uint256,uint256) view external returns (uint256[],string[],string[],uint256[],uint256[],uint256[])\n  // newTag tag_543, desc: calldata unpacker of function (address) external\n  // newTag tag_544, desc: calldata unpacker of function (uint256,uint256) view external returns (string,string,address,uint256,uint256,uint256,bytes32[],address[],bytes32[],uint256[])\n  // newTag tag_545, desc: calldata unpacker of function (uint256,uint256) view external returns (bool)\n  // newTag tag_546, desc: calldata unpacker of function (uint256,address) view external returns (bool)\n  // newTag tag_547, desc: calldata unpacker of function (address) external\n  // newTag tag_548, desc: calldata unpacker of function (uint256) view external returns (uint256)\n  // newTag tag_549, desc: calldata unpacker of function (uint256,address) view external returns (bool)\n  // newTag tag_550, desc: calldata unpacker of function (uint256,bytes32,string,tokenId,uint256,bytes32,bytes32) external\n  // newTag tag_551, desc: calldata unpacker of function () view external returns (uint256)\n  // newTag tag_552, desc: calldata unpacker of function () external\n  // newTag tag_553, desc: calldata unpacker of function (bytes32,string,tokenId,bytes32,bytes32,uint256) payable external\n  // newTag tag_554, desc: calldata unpacker of function (uint256,uint256) external\n  // newTag tag_555, desc: calldata unpacker of function (uint256,uint256,uint256,uint256) view external returns (address[],uint256[],uint256[])\n  // newTag tag_556, desc: calldata unpacker of function (uint256) view external returns (uint256)\n  // newTag tag_557, desc: calldata unpacker of function (uint256) view external returns (address[])\n  // newTag tag_558, desc: calldata unpacker of function (uint256,uint256) view external returns (bool)\n  // newTag tag_559, desc: calldata unpacker of function (uint256) external\n  // ContractCompiler::appendInternalSelector()\n  // function selector\n      tag_694\n      dup5\n      tag_695\n      jump\t// in\n    tag_694:\n      tag_684\n      jump\t// in\n    tag_693:\n      swap1\n      pop\n      dup1\n      dup4\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      pop\n      dup3\n      dup6\n      0x20\n      dup7\n      mul\n      dup3\n      add\n      gt\n      iszero\n      tag_696\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_696:\n      0x00\n    tag_697:\n      dup6\n      dup2\n      lt\n      iszero\n      tag_699\n      jumpi\n      dup2\n      tag_700\n      dup9\n      dup3\n      tag_701\n      jump\t// in\n    tag_700:\n      dup5\n      mstore\n      0x20\n      dup5\n      add\n      swap4\n      pop\n      0x20\n      dup4\n      add\n      swap3\n      pop\n      pop\n      0x01\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_697)\n    tag_699:\n      pop\n      pop\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_702:\n      0x00\n      tag_704\n      tag_705\n      dup5\n      tag_706\n      jump\t// in\n    tag_705:\n      tag_684\n      jump\t// in\n    tag_704:\n      swap1\n      pop\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup5\n      dup5\n      dup5\n      add\n      gt\n      iszero\n      tag_707\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_707:\n      tag_708\n      dup5\n      dup3\n      dup6\n      tag_709\n      jump\t// in\n    tag_708:\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_690:\n      0x00\n      dup2\n      calldataload\n      swap1\n      pop\n      tag_711\n      dup2\n      tag_712\n      jump\t// in\n    tag_711:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_713:\n      0x00\n      dup3\n      0x1f\n      dup4\n      add\n      slt\n      tag_715\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_715:\n      dup2\n      calldataload\n      tag_716\n      dup5\n      dup3\n      0x20\n      dup7\n      add\n      tag_679\n      jump\t// in\n    tag_716:\n      swap2\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_717:\n      0x00\n      dup3\n      0x1f\n      dup4\n      add\n      slt\n      tag_719\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_719:\n      dup2\n      calldataload\n      tag_720\n      dup5\n      dup3\n  // callback selector\n  // not found\n      0x20\n      dup7\n  // end of ContractCompiler::appendInternalSelector()\n      add\n      tag_691\n      jump\t// in\n  // return value packer of function (uint256,uint256) view external returns (uint256)\n  // newPushTag tag_560, desc: return value packer of function (uint256,uint256) view external returns (uint256)\n    tag_720:\n      swap2\n      pop\n      pop\n      swap3\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      swap2\n      pop\n      pop\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_uint256, _inArgs=2, _outArgs=2)\n  // newPushTag tag_561, desc: return of Yul function abi_decode_tuple_t_uint256t_uint256\n      jump\t// out\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n    tag_721:\n      0x00\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_562, desc: abi_decode_tuple_t_uint256t_uint256\n      dup2\n      calldataload\n      swap1\n      pop\n      tag_723\n      dup2\n  // CompilerUtils::fetchFreeMemoryPointer()\n      tag_724\n      jump\t// in\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             uint256\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_563, desc: return of Yul function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n    tag_723:\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      swap3\n      swap2\n  // end of CompilerUtils::rotateStackUp()\n      pop\n      pop\n      jump\t// out\n  // CompilerUtils::fetchFreeMemoryPointer()\n    tag_701:\n      0x00\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      dup2\n      calldataload\n      swap1\n      pop\n      tag_726\n      dup2\n  // return value packer of function (address) view external returns (uint256[],bytes32[],bytes32[])\n  // newPushTag tag_564, desc: return value packer of function (address) view external returns (uint256[],bytes32[],bytes32[])\n      tag_727\n      jump\t// in\n    tag_726:\n      swap3\n      swap2\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      pop\n      pop\n      jump\t// out\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_address, _inArgs=2, _outArgs=1)\n  // newPushTag tag_565, desc: return of Yul function abi_decode_tuple_t_address\n    tag_728:\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      0x00\n      dup3\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_566, desc: abi_decode_tuple_t_address\n      0x1f\n      dup4\n      add\n      slt\n      tag_730\n      jumpi\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x00\n      dup1\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             uint256[] memory\n  //             bytes32[] memory\n  //             bytes32[] memory\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed, _inArgs=4, _outArgs=1)\n  // newPushTag tag_567, desc: return of Yul function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed\n      revert\n  // CompilerUtils::moveIntoStack(4, 1)\n  // CompilerUtils::rotateStackUp(5)\n    tag_730:\n      dup2\n      calldataload\n      tag_731\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_568, desc: abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed\n      dup5\n      dup3\n      0x20\n  // CompilerUtils::fetchFreeMemoryPointer()\n      dup7\n      add\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      tag_702\n      jump\t// in\n    tag_731:\n      swap2\n      pop\n      pop\n  // return value packer of function (uint256,uint256) view external returns (uint256)\n  // newPushTag tag_569, desc: return value packer of function (uint256,uint256) view external returns (uint256)\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n    tag_732:\n      0x00\n      dup2\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_uint256, _inArgs=2, _outArgs=2)\n  // newPushTag tag_570, desc: return of Yul function abi_decode_tuple_t_uint256t_uint256\n      calldataload\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      swap1\n      pop\n  // end of CompilerUtils::rotateStackUp()\n      tag_734\n      dup2\n      tag_735\n      jump\t// in\n    tag_734:\n      swap3\n  // CompilerUtils::fetchFreeMemoryPointer()\n      swap2\n      pop\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             uint256\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_571, desc: return of Yul function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n      pop\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      jump\t// out\n    tag_736:\n  // end of CompilerUtils::rotateStackUp()\n      0x00\n      dup2\n      calldataload\n  // CompilerUtils::fetchFreeMemoryPointer()\n      swap1\n      pop\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      tag_738\n      dup2\n      tag_739\n      jump\t// in\n    tag_738:\n      swap3\n  // return value packer of function (uint256,uint256,address) view external returns (bool)\n  // newPushTag tag_572, desc: return value packer of function (uint256,uint256,address) view external returns (bool)\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_565:\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      0x00\n      0x20\n      dup3\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_uint256t_address, _inArgs=2, _outArgs=3)\n  // newPushTag tag_573, desc: return of Yul function abi_decode_tuple_t_uint256t_uint256t_address\n      dup5\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      sub\n      slt\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_574, desc: abi_decode_tuple_t_uint256t_uint256t_address\n      iszero\n      tag_741\n      jumpi\n      0x00\n      dup1\n      revert\n  // CompilerUtils::fetchFreeMemoryPointer()\n    tag_741:\n      0x00\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             bool\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_575, desc: return of Yul function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed\n      tag_742\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup5\n      dup3\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_576, desc: abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed\n      dup6\n      add\n      tag_690\n  // CompilerUtils::fetchFreeMemoryPointer()\n      jump\t// in\n    tag_742:\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      swap2\n      pop\n      pop\n      swap3\n      swap2\n      pop\n  // return value packer of function (uint256,uint256) view external returns (bool)\n  // newPushTag tag_577, desc: return value packer of function (uint256,uint256) view external returns (bool)\n      pop\n      jump\t// out\n    tag_658:\n      0x00\n      dup1\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      0x00\n      dup1\n      0x00\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_uint256, _inArgs=2, _outArgs=2)\n  // newPushTag tag_578, desc: return of Yul function abi_decode_tuple_t_uint256t_uint256\n      dup1\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      0xc0\n      dup8\n  // end of CompilerUtils::rotateStackUp()\n      dup10\n      sub\n      slt\n      iszero\n      tag_744\n      jumpi\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x00\n      dup1\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             bool\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_579, desc: return of Yul function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed\n      revert\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n    tag_744:\n      0x00\n  // end of CompilerUtils::rotateStackUp()\n      tag_745\n      dup10\n      dup3\n  // CompilerUtils::fetchFreeMemoryPointer()\n      dup11\n      add\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      tag_701\n      jump\t// in\n    tag_745:\n      swap7\n      pop\n      pop\n  // return value packer of function (uint256,uint256,address,uint256,uint256) external\n  // newPushTag tag_580, desc: return value packer of function (uint256,uint256,address,uint256,uint256) external\n      0x20\n      dup8\n      add\n      calldataload\n      0xffffffffffffffff\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      dup2\n      gt\n      iszero\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_uint256t_addresst_uint256t_uint256, _inArgs=2, _outArgs=5)\n  // newPushTag tag_581, desc: return of Yul function abi_decode_tuple_t_uint256t_uint256t_addresst_uint256t_uint256\n      tag_746\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      jumpi\n      0x00\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_582, desc: abi_decode_tuple_t_uint256t_uint256t_addresst_uint256t_uint256\n      dup1\n      revert\n    tag_746:\n      tag_747\n      dup10\n      dup3\n      dup11\n      add\n  // return value packer of function (uint256,uint256,bool) external\n  // newPushTag tag_583, desc: return value packer of function (uint256,uint256,bool) external\n      tag_728\n      jump\t// in\n    tag_747:\n      swap6\n      pop\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      pop\n      0x40\n      tag_748\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_uint256t_bool, _inArgs=2, _outArgs=3)\n  // newPushTag tag_584, desc: return of Yul function abi_decode_tuple_t_uint256t_uint256t_bool\n      dup10\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup3\n      dup11\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_585, desc: abi_decode_tuple_t_uint256t_uint256t_bool\n      add\n      tag_732\n      jump\t// in\n    tag_748:\n      swap5\n      pop\n      pop\n      0x60\n  // return value packer of function (uint256,address[]) external\n  // newPushTag tag_586, desc: return value packer of function (uint256,address[]) external\n      tag_749\n      dup10\n      dup3\n      dup11\n      add\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      tag_701\n      jump\t// in\n    tag_749:\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_array$_t_address_$dyn_memory_ptr, _inArgs=2, _outArgs=2)\n  // newPushTag tag_587, desc: return of Yul function abi_decode_tuple_t_uint256t_array$_t_address_$dyn_memory_ptr\n      swap4\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      pop\n      pop\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_588, desc: abi_decode_tuple_t_uint256t_array$_t_address_$dyn_memory_ptr\n      0x80\n      tag_750\n      dup10\n      dup3\n      dup11\n      add\n      tag_701\n      jump\t// in\n  // return value packer of function (uint256) view external returns (uint256,bool)\n  // newPushTag tag_589, desc: return value packer of function (uint256) view external returns (uint256,bool)\n    tag_750:\n      swap3\n      pop\n      pop\n      0xa0\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      tag_751\n      dup10\n      dup3\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_590, desc: return of Yul function abi_decode_tuple_t_uint256\n      dup11\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      add\n      tag_736\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_591, desc: abi_decode_tuple_t_uint256\n      jump\t// in\n    tag_751:\n      swap2\n      pop\n      pop\n      swap3\n  // CompilerUtils::fetchFreeMemoryPointer()\n      swap6\n      pop\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             uint256\n  //             bool\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed, _inArgs=3, _outArgs=1)\n  // newPushTag tag_592, desc: return of Yul function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed\n      swap3\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      swap6\n      pop\n      swap3\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_593, desc: abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed\n      swap6\n      jump\t// out\n    tag_590:\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x00\n      0x20\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      dup3\n      dup5\n      sub\n      slt\n      iszero\n      tag_753\n  // return value packer of function () view external returns (address)\n  // newPushTag tag_594, desc: return value packer of function () view external returns (address)\n      jumpi\n      0x00\n      dup1\n      revert\n  // CompilerUtils::fetchFreeMemoryPointer()\n    tag_753:\n      0x00\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             address\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_address__to_t_address__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_595, desc: return of Yul function abi_encode_tuple_t_address__to_t_address__fromStack_reversed\n      tag_754\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup5\n      dup3\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_596, desc: abi_encode_tuple_t_address__to_t_address__fromStack_reversed\n      dup6\n      add\n      tag_736\n  // CompilerUtils::fetchFreeMemoryPointer()\n      jump\t// in\n    tag_754:\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      swap2\n      pop\n      pop\n      swap3\n      swap2\n      pop\n  // return value packer of function (address) view external returns (bool)\n  // newPushTag tag_597, desc: return value packer of function (address) view external returns (bool)\n      pop\n      jump\t// out\n    tag_612:\n      0x00\n      dup1\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      0x40\n      dup4\n      dup6\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_address, _inArgs=2, _outArgs=1)\n  // newPushTag tag_598, desc: return of Yul function abi_decode_tuple_t_address\n      sub\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      slt\n      iszero\n  // end of CompilerUtils::rotateStackUp()\n      tag_756\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_756:\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x00\n      tag_757\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             bool\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_599, desc: return of Yul function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed\n      dup6\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup3\n      dup7\n  // end of CompilerUtils::rotateStackUp()\n      add\n      tag_736\n      jump\t// in\n  // CompilerUtils::fetchFreeMemoryPointer()\n    tag_757:\n      swap3\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      pop\n      pop\n      0x20\n      tag_758\n      dup6\n      dup3\n  // return value packer of function (uint256,uint256) view external returns (bytes32[],tokenId[],bytes32[],bytes32[],uint256[])\n  // newPushTag tag_600, desc: return value packer of function (uint256,uint256) view external returns (bytes32[],tokenId[],bytes32[],bytes32[],uint256[])\n      dup7\n      add\n      tag_690\n      jump\t// in\n    tag_758:\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      swap2\n      pop\n      pop\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_uint256, _inArgs=2, _outArgs=2)\n  // newPushTag tag_601, desc: return of Yul function abi_decode_tuple_t_uint256t_uint256\n      swap3\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      pop\n      swap3\n  // end of CompilerUtils::rotateStackUp()\n      swap1\n      pop\n      jump\t// out\n    tag_587:\n      0x00\n      dup1\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x40\n      dup4\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             bytes32[] memory\n  //             tokenId[] memory\n  //             bytes32[] memory\n  //             bytes32[] memory\n  //             uint256[] memory\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_tokenId_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_tokenId_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed, _inArgs=6, _outArgs=1)\n  // newPushTag tag_602, desc: return of Yul function abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_tokenId_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_tokenId_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed\n      dup6\n  // CompilerUtils::moveIntoStack(6, 1)\n  // CompilerUtils::rotateStackUp(7)\n      sub\n      slt\n      iszero\n      tag_760\n      jumpi\n      0x00\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_603, desc: abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_tokenId_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_tokenId_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed\n      dup1\n      revert\n    tag_760:\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x00\n      tag_761\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      dup6\n      dup3\n      dup7\n      add\n      tag_736\n      jump\t// in\n  // return value packer of function (uint256) view external returns (bytes32,string,tokenId,bytes32,bytes32,uint256,uint256)\n  // newPushTag tag_604, desc: return value packer of function (uint256) view external returns (bytes32,string,tokenId,bytes32,bytes32,uint256,uint256)\n    tag_761:\n      swap3\n      pop\n      pop\n      0x20\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      dup4\n      add\n      calldataload\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_605, desc: return of Yul function abi_decode_tuple_t_uint256\n      0xffffffffffffffff\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup2\n      gt\n  // end of CompilerUtils::rotateStackUp()\n      iszero\n      tag_762\n      jumpi\n      0x00\n      dup1\n      revert\n  // CompilerUtils::fetchFreeMemoryPointer()\n    tag_762:\n      tag_763\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             bytes32\n  //             string memory\n  //             tokenId\n  //             bytes32\n  //             bytes32\n  //             uint256\n  //             uint256\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_bytes32_t_string_memory_ptr_t_tokenId_t_bytes32_t_bytes32_t_uint256_t_uint256__to_t_bytes32_t_string_memory_ptr_t_tokenId_t_bytes32_t_bytes32_t_uint256_t_uint256__fromStack_reversed, _inArgs=8, _outArgs=1)\n  // newPushTag tag_606, desc: return of Yul function abi_encode_tuple_t_bytes32_t_string_memory_ptr_t_tokenId_t_bytes32_t_bytes32_t_uint256_t_uint256__to_t_bytes32_t_string_memory_ptr_t_tokenId_t_bytes32_t_bytes32_t_uint256_t_uint256__fromStack_reversed\n      dup6\n  // CompilerUtils::moveIntoStack(8, 1)\n  // CompilerUtils::rotateStackUp(9)\n      dup3\n      dup7\n      add\n      tag_713\n      jump\t// in\n    tag_763:\n      swap2\n      pop\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_607, desc: abi_encode_tuple_t_bytes32_t_string_memory_ptr_t_tokenId_t_bytes32_t_bytes32_t_uint256_t_uint256__to_t_bytes32_t_string_memory_ptr_t_tokenId_t_bytes32_t_bytes32_t_uint256_t_uint256__fromStack_reversed\n      pop\n      swap3\n      pop\n  // CompilerUtils::fetchFreeMemoryPointer()\n      swap3\n      swap1\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      pop\n      jump\t// out\n    tag_652:\n      0x00\n      dup1\n      0x00\n  // return value packer of function (uint256) view external returns (address)\n  // newPushTag tag_608, desc: return value packer of function (uint256) view external returns (address)\n      dup1\n      0x00\n      dup1\n      0x00\n      0xe0\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      dup9\n      dup11\n      sub\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_609, desc: return of Yul function abi_decode_tuple_t_uint256\n      slt\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      iszero\n      tag_765\n  // end of CompilerUtils::rotateStackUp()\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_765:\n      0x00\n  // CompilerUtils::fetchFreeMemoryPointer()\n      tag_766\n      dup11\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             address\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_address__to_t_address__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_610, desc: return of Yul function abi_encode_tuple_t_address__to_t_address__fromStack_reversed\n      dup3\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup12\n      add\n  // end of CompilerUtils::rotateStackUp()\n      tag_736\n      jump\t// in\n    tag_766:\n  // CompilerUtils::fetchFreeMemoryPointer()\n      swap8\n      pop\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      pop\n      0x20\n      tag_767\n      dup11\n      dup3\n      dup12\n  // return value packer of function (uint256,address) view external returns (bool)\n  // newPushTag tag_611, desc: return value packer of function (uint256,address) view external returns (bool)\n      add\n      tag_701\n      jump\t// in\n    tag_767:\n      swap7\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      pop\n      pop\n      0x40\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_address, _inArgs=2, _outArgs=2)\n  // newPushTag tag_612, desc: return of Yul function abi_decode_tuple_t_uint256t_address\n      dup9\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      add\n      calldataload\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_613, desc: abi_decode_tuple_t_uint256t_address\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_768\n      jumpi\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x00\n      dup1\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             bool\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_614, desc: return of Yul function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed\n      revert\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n    tag_768:\n      tag_769\n  // end of CompilerUtils::rotateStackUp()\n      dup11\n      dup3\n      dup12\n  // CompilerUtils::fetchFreeMemoryPointer()\n      add\n      tag_728\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      jump\t// in\n    tag_769:\n      swap6\n      pop\n      pop\n      0x60\n  // return value packer of function (uint256,string,string,uint256,uint256,uint256,bytes32[],address[],bytes32[]) payable external\n  // newPushTag tag_615, desc: return value packer of function (uint256,string,string,uint256,uint256,uint256,bytes32[],address[],bytes32[]) payable external\n      tag_770\n      dup11\n      dup3\n      dup12\n      add\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      tag_732\n      jump\t// in\n    tag_770:\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptr, _inArgs=2, _outArgs=9)\n  // newPushTag tag_616, desc: return of Yul function abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptr\n      swap5\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      pop\n      pop\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_617, desc: abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptr\n      0x80\n      tag_771\n      dup11\n      dup3\n      dup12\n      add\n      tag_736\n      jump\t// in\n  // return value packer of function (address) external\n  // newPushTag tag_618, desc: return value packer of function (address) external\n    tag_771:\n      swap4\n      pop\n      pop\n      0xa0\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      tag_772\n      dup11\n      dup3\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_address, _inArgs=2, _outArgs=1)\n  // newPushTag tag_619, desc: return of Yul function abi_decode_tuple_t_address\n      dup12\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      add\n      tag_701\n  // end of CompilerUtils::rotateStackUp()\n      jump\t// in\n    tag_772:\n      swap3\n      pop\n      pop\n      0xc0\n      tag_773\n      dup11\n  // return value packer of function () view external returns (uint256)\n  // newPushTag tag_620, desc: return value packer of function () view external returns (uint256)\n      dup3\n      dup12\n      add\n      tag_701\n  // CompilerUtils::fetchFreeMemoryPointer()\n      jump\t// in\n    tag_773:\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             uint256\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_621, desc: return of Yul function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n      swap2\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      pop\n      pop\n  // end of CompilerUtils::rotateStackUp()\n      swap3\n      swap6\n      swap9\n  // CompilerUtils::fetchFreeMemoryPointer()\n      swap2\n      swap5\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n  // return value packer of function (uint256) external\n  // newPushTag tag_622, desc: return value packer of function (uint256) external\n    tag_616:\n      0x00\n      dup1\n      0x00\n      dup1\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      0x00\n      dup1\n      0x00\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_623, desc: return of Yul function abi_decode_tuple_t_uint256\n      dup1\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      0x00\n      0x0120\n  // end of CompilerUtils::rotateStackUp()\n      dup11\n      dup13\n      sub\n      slt\n      iszero\n      tag_775\n      jumpi\n      0x00\n  // return value packer of function (uint256) external\n  // newPushTag tag_624, desc: return value packer of function (uint256) external\n      dup1\n      revert\n    tag_775:\n      0x00\n      tag_776\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      dup13\n      dup3\n      dup14\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_625, desc: return of Yul function abi_decode_tuple_t_uint256\n      add\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      tag_736\n      jump\t// in\n  // end of CompilerUtils::rotateStackUp()\n    tag_776:\n      swap10\n      pop\n      pop\n      0x20\n      dup11\n      add\n      calldataload\n  // return value packer of function (uint256,uint256,uint256) view external returns (uint256[],string[],string[],uint256[],uint256[],uint256[])\n  // newPushTag tag_626, desc: return value packer of function (uint256,uint256,uint256) view external returns (uint256[],string[],string[],uint256[],uint256[],uint256[])\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_777\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      jumpi\n      0x00\n      dup1\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_uint256t_uint256, _inArgs=2, _outArgs=3)\n  // newPushTag tag_627, desc: return of Yul function abi_decode_tuple_t_uint256t_uint256t_uint256\n      revert\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n    tag_777:\n      tag_778\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_628, desc: abi_decode_tuple_t_uint256t_uint256t_uint256\n      dup13\n      dup3\n      dup14\n      add\n      tag_728\n      jump\t// in\n  // CompilerUtils::fetchFreeMemoryPointer()\n    tag_778:\n      swap9\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             uint256[] memory\n  //             string memory[] memory\n  //             string memory[] memory\n  //             uint256[] memory\n  //             uint256[] memory\n  //             uint256[] memory\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed, _inArgs=7, _outArgs=1)\n  // newPushTag tag_629, desc: return of Yul function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed\n      pop\n  // CompilerUtils::moveIntoStack(7, 1)\n  // CompilerUtils::rotateStackUp(8)\n      pop\n      0x40\n      dup11\n      add\n      calldataload\n      0xffffffffffffffff\n      dup2\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_630, desc: abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed\n      gt\n      iszero\n      tag_779\n  // CompilerUtils::fetchFreeMemoryPointer()\n      jumpi\n      0x00\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      dup1\n      revert\n    tag_779:\n      tag_780\n      dup13\n      dup3\n  // return value packer of function (address) external\n  // newPushTag tag_631, desc: return value packer of function (address) external\n      dup14\n      add\n      tag_728\n      jump\t// in\n    tag_780:\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      swap8\n      pop\n      pop\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_address, _inArgs=2, _outArgs=1)\n  // newPushTag tag_632, desc: return of Yul function abi_decode_tuple_t_address\n      0x60\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      tag_781\n      dup13\n  // end of CompilerUtils::rotateStackUp()\n      dup3\n      dup14\n      add\n      tag_736\n      jump\t// in\n    tag_781:\n      swap7\n      pop\n  // return value packer of function (uint256,uint256) view external returns (string,string,address,uint256,uint256,uint256,bytes32[],address[],bytes32[],uint256[])\n  // newPushTag tag_633, desc: return value packer of function (uint256,uint256) view external returns (string,string,address,uint256,uint256,uint256,bytes32[],address[],bytes32[],uint256[])\n      pop\n      0x80\n      tag_782\n      dup13\n      dup3\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      dup14\n      add\n      tag_736\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_uint256, _inArgs=2, _outArgs=2)\n  // newPushTag tag_634, desc: return of Yul function abi_decode_tuple_t_uint256t_uint256\n      jump\t// in\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n    tag_782:\n      swap6\n  // end of CompilerUtils::rotateStackUp()\n      pop\n      pop\n      0xa0\n      tag_783\n      dup13\n      dup3\n  // CompilerUtils::fetchFreeMemoryPointer()\n      dup14\n      add\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             string memory\n  //             string memory\n  //             address\n  //             uint256\n  //             uint256\n  //             uint256\n  //             bytes32[] memory\n  //             address[] memory\n  //             bytes32[] memory\n  //             uint256[] memory\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed, _inArgs=11, _outArgs=1)\n  // newPushTag tag_635, desc: return of Yul function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed\n      tag_736\n  // CompilerUtils::moveIntoStack(11, 1)\n  // CompilerUtils::rotateStackUp(12)\n      jump\t// in\n    tag_783:\n      swap5\n      pop\n      pop\n      0xc0\n      dup11\n      add\n      calldataload\n      0xffffffffffffffff\n      dup2\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_636, desc: abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed\n      gt\n      iszero\n      tag_784\n  // CompilerUtils::fetchFreeMemoryPointer()\n      jumpi\n      0x00\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      dup1\n      revert\n    tag_784:\n      tag_785\n      dup13\n      dup3\n  // return value packer of function (uint256,uint256) view external returns (bool)\n  // newPushTag tag_637, desc: return value packer of function (uint256,uint256) view external returns (bool)\n      dup14\n      add\n      tag_717\n      jump\t// in\n    tag_785:\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      swap4\n      pop\n      pop\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_uint256, _inArgs=2, _outArgs=2)\n  // newPushTag tag_638, desc: return of Yul function abi_decode_tuple_t_uint256t_uint256\n      0xe0\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup11\n      add\n  // end of CompilerUtils::rotateStackUp()\n      calldataload\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_786\n  // CompilerUtils::fetchFreeMemoryPointer()\n      jumpi\n      0x00\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             bool\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_639, desc: return of Yul function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed\n      dup1\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      revert\n    tag_786:\n  // end of CompilerUtils::rotateStackUp()\n      tag_787\n      dup13\n      dup3\n  // CompilerUtils::fetchFreeMemoryPointer()\n      dup14\n      add\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      tag_713\n      jump\t// in\n    tag_787:\n      swap3\n      pop\n      pop\n  // return value packer of function (uint256,address) view external returns (bool)\n  // newPushTag tag_640, desc: return value packer of function (uint256,address) view external returns (bool)\n      0x0100\n      dup11\n      add\n      calldataload\n      0xffffffffffffffff\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      dup2\n      gt\n      iszero\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_address, _inArgs=2, _outArgs=2)\n  // newPushTag tag_641, desc: return of Yul function abi_decode_tuple_t_uint256t_address\n      tag_788\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      jumpi\n      0x00\n  // end of CompilerUtils::rotateStackUp()\n      dup1\n      revert\n    tag_788:\n      tag_789\n      dup13\n      dup3\n  // CompilerUtils::fetchFreeMemoryPointer()\n      dup14\n      add\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             bool\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_642, desc: return of Yul function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed\n      tag_717\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      jump\t// in\n    tag_789:\n  // end of CompilerUtils::rotateStackUp()\n      swap2\n      pop\n      pop\n  // CompilerUtils::fetchFreeMemoryPointer()\n      swap3\n      swap6\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      pop\n  // return value packer of function (address) external\n  // newPushTag tag_643, desc: return value packer of function (address) external\n      swap3\n      swap6\n      swap9\n      jump\t// out\n    tag_561:\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      0x00\n      dup1\n      0x40\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_address, _inArgs=2, _outArgs=1)\n  // newPushTag tag_644, desc: return of Yul function abi_decode_tuple_t_address\n      dup4\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup6\n      sub\n  // end of CompilerUtils::rotateStackUp()\n      slt\n      iszero\n      tag_791\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_791:\n  // return value packer of function (uint256) view external returns (uint256)\n  // newPushTag tag_645, desc: return value packer of function (uint256) view external returns (uint256)\n      0x00\n      tag_792\n      dup6\n      dup3\n      dup7\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      add\n      tag_736\n      jump\t// in\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_646, desc: return of Yul function abi_decode_tuple_t_uint256\n    tag_792:\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      swap3\n      pop\n  // end of CompilerUtils::rotateStackUp()\n      pop\n      0x20\n      tag_793\n      dup6\n      dup3\n      dup7\n  // CompilerUtils::fetchFreeMemoryPointer()\n      add\n      tag_736\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             uint256\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_647, desc: return of Yul function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n      jump\t// in\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n    tag_793:\n      swap2\n  // end of CompilerUtils::rotateStackUp()\n      pop\n      pop\n      swap3\n  // CompilerUtils::fetchFreeMemoryPointer()\n      pop\n      swap3\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      swap1\n      pop\n      jump\t// out\n    tag_573:\n      0x00\n      dup1\n  // return value packer of function (uint256,address) view external returns (bool)\n  // newPushTag tag_648, desc: return value packer of function (uint256,address) view external returns (bool)\n      0x00\n      0x60\n      dup5\n      dup7\n      sub\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      slt\n      iszero\n      tag_795\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_address, _inArgs=2, _outArgs=2)\n  // newPushTag tag_649, desc: return of Yul function abi_decode_tuple_t_uint256t_address\n      jumpi\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      0x00\n      dup1\n  // end of CompilerUtils::rotateStackUp()\n      revert\n    tag_795:\n      0x00\n      tag_796\n      dup7\n      dup3\n  // CompilerUtils::fetchFreeMemoryPointer()\n      dup8\n      add\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             bool\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_650, desc: return of Yul function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed\n      tag_736\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      jump\t// in\n    tag_796:\n  // end of CompilerUtils::rotateStackUp()\n      swap4\n      pop\n      pop\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x20\n      tag_797\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      dup7\n      dup3\n      dup8\n      add\n      tag_736\n      jump\t// in\n  // return value packer of function (uint256,bytes32,string,tokenId,uint256,bytes32,bytes32) external\n  // newPushTag tag_651, desc: return value packer of function (uint256,bytes32,string,tokenId,uint256,bytes32,bytes32) external\n    tag_797:\n      swap3\n      pop\n      pop\n      0x40\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      tag_798\n      dup7\n      dup3\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_bytes32t_string_memory_ptrt_tokenIdt_uint256t_bytes32t_bytes32, _inArgs=2, _outArgs=7)\n  // newPushTag tag_652, desc: return of Yul function abi_decode_tuple_t_uint256t_bytes32t_string_memory_ptrt_tokenIdt_uint256t_bytes32t_bytes32\n      dup8\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      add\n      tag_690\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_653, desc: abi_decode_tuple_t_uint256t_bytes32t_string_memory_ptrt_tokenIdt_uint256t_bytes32t_bytes32\n      jump\t// in\n    tag_798:\n      swap2\n      pop\n      pop\n      swap3\n      pop\n      swap3\n  // return value packer of function () view external returns (uint256)\n  // newPushTag tag_654, desc: return value packer of function () view external returns (uint256)\n      pop\n      swap3\n      jump\t// out\n    tag_581:\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x00\n      dup1\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             uint256\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_655, desc: return of Yul function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n      0x00\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup1\n      0x00\n  // end of CompilerUtils::rotateStackUp()\n      0xa0\n      dup7\n      dup9\n  // CompilerUtils::fetchFreeMemoryPointer()\n      sub\n      slt\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      iszero\n      tag_800\n      jumpi\n      0x00\n      dup1\n      revert\n  // return value packer of function () external\n  // newPushTag tag_656, desc: return value packer of function () external\n    tag_800:\n      0x00\n      tag_801\n      dup9\n      dup3\n      dup10\n  // return value packer of function (bytes32,string,tokenId,bytes32,bytes32,uint256) payable external\n  // newPushTag tag_657, desc: return value packer of function (bytes32,string,tokenId,bytes32,bytes32,uint256) payable external\n      add\n      tag_736\n      jump\t// in\n    tag_801:\n      swap6\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      pop\n      pop\n      0x20\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_bytes32t_string_memory_ptrt_tokenIdt_bytes32t_bytes32t_uint256, _inArgs=2, _outArgs=6)\n  // newPushTag tag_658, desc: return of Yul function abi_decode_tuple_t_bytes32t_string_memory_ptrt_tokenIdt_bytes32t_bytes32t_uint256\n      tag_802\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup9\n      dup3\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_659, desc: abi_decode_tuple_t_bytes32t_string_memory_ptrt_tokenIdt_bytes32t_bytes32t_uint256\n      dup10\n      add\n      tag_736\n      jump\t// in\n    tag_802:\n      swap5\n      pop\n      pop\n  // return value packer of function (uint256,uint256) external\n  // newPushTag tag_660, desc: return value packer of function (uint256,uint256) external\n      0x40\n      tag_803\n      dup9\n      dup3\n      dup10\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      add\n      tag_690\n      jump\t// in\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_uint256, _inArgs=2, _outArgs=2)\n  // newPushTag tag_661, desc: return of Yul function abi_decode_tuple_t_uint256t_uint256\n    tag_803:\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      swap4\n      pop\n  // end of CompilerUtils::rotateStackUp()\n      pop\n      0x60\n      tag_804\n      dup9\n      dup3\n      dup10\n      add\n      tag_736\n  // return value packer of function (uint256,uint256,uint256,uint256) view external returns (address[],uint256[],uint256[])\n  // newPushTag tag_662, desc: return value packer of function (uint256,uint256,uint256,uint256) view external returns (address[],uint256[],uint256[])\n      jump\t// in\n    tag_804:\n      swap3\n      pop\n      pop\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      0x80\n      tag_805\n      dup9\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256, _inArgs=2, _outArgs=4)\n  // newPushTag tag_663, desc: return of Yul function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256\n      dup3\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup10\n      add\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_664, desc: abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256\n      tag_736\n      jump\t// in\n    tag_805:\n      swap2\n      pop\n      pop\n  // CompilerUtils::fetchFreeMemoryPointer()\n      swap3\n      swap6\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             address[] memory\n  //             uint256[] memory\n  //             uint256[] memory\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed, _inArgs=4, _outArgs=1)\n  // newPushTag tag_665, desc: return of Yul function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed\n      pop\n  // CompilerUtils::moveIntoStack(4, 1)\n  // CompilerUtils::rotateStackUp(5)\n      swap3\n      swap6\n      swap1\n      swap4\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_666, desc: abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed\n      pop\n      jump\t// out\n    tag_584:\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x00\n      dup1\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      0x00\n      0x60\n      dup5\n      dup7\n      sub\n      slt\n  // return value packer of function (uint256) view external returns (uint256)\n  // newPushTag tag_667, desc: return value packer of function (uint256) view external returns (uint256)\n      iszero\n      tag_807\n      jumpi\n      0x00\n      dup1\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      revert\n    tag_807:\n      0x00\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_668, desc: return of Yul function abi_decode_tuple_t_uint256\n      tag_808\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup7\n      dup3\n  // end of CompilerUtils::rotateStackUp()\n      dup8\n      add\n      tag_736\n      jump\t// in\n    tag_808:\n      swap4\n  // CompilerUtils::fetchFreeMemoryPointer()\n      pop\n      pop\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             uint256\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_669, desc: return of Yul function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n      0x20\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      tag_809\n      dup7\n  // end of CompilerUtils::rotateStackUp()\n      dup3\n      dup8\n      add\n  // CompilerUtils::fetchFreeMemoryPointer()\n      tag_736\n      jump\t// in\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n    tag_809:\n      swap3\n      pop\n      pop\n      0x40\n      tag_810\n  // return value packer of function (uint256) view external returns (address[])\n  // newPushTag tag_670, desc: return value packer of function (uint256) view external returns (address[])\n      dup7\n      dup3\n      dup8\n      add\n      tag_721\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      jump\t// in\n    tag_810:\n      swap2\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_671, desc: return of Yul function abi_decode_tuple_t_uint256\n      pop\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      pop\n      swap3\n  // end of CompilerUtils::rotateStackUp()\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n    tag_627:\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x00\n      dup1\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             address[] memory\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_672, desc: return of Yul function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed\n      0x00\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      0x60\n      dup5\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_673, desc: abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed\n      dup7\n      sub\n      slt\n  // CompilerUtils::fetchFreeMemoryPointer()\n      iszero\n      tag_812\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_812:\n      0x00\n  // return value packer of function (uint256,uint256) view external returns (bool)\n  // newPushTag tag_674, desc: return value packer of function (uint256,uint256) view external returns (bool)\n      tag_813\n      dup7\n      dup3\n      dup8\n      add\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      tag_736\n      jump\t// in\n    tag_813:\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_uint256, _inArgs=2, _outArgs=2)\n  // newPushTag tag_675, desc: return of Yul function abi_decode_tuple_t_uint256t_uint256\n      swap4\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      pop\n      pop\n  // end of CompilerUtils::rotateStackUp()\n      0x20\n      tag_814\n      dup7\n      dup3\n      dup8\n      add\n  // CompilerUtils::fetchFreeMemoryPointer()\n      tag_736\n      jump\t// in\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             bool\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_676, desc: return of Yul function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed\n    tag_814:\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      swap3\n      pop\n  // end of CompilerUtils::rotateStackUp()\n      pop\n      0x40\n      tag_815\n  // CompilerUtils::fetchFreeMemoryPointer()\n      dup7\n      dup3\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      dup8\n      add\n      tag_736\n      jump\t// in\n    tag_815:\n      swap2\n  // return value packer of function (uint256) external\n  // newPushTag tag_677, desc: return value packer of function (uint256) external\n      pop\n      pop\n      swap3\n      pop\n      swap3\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      pop\n      swap3\n      jump\t// out\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_678, desc: return of Yul function abi_decode_tuple_t_uint256\n    tag_663:\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      0x00\n      dup1\n  // end of CompilerUtils::rotateStackUp()\n      0x00\n      dup1\n      0x80\n      dup6\n      dup8\n      sub\n      slt\n  // CompilerContext::appendYulUtilityFunctions()\n  // newTag tag_679, desc: \n      iszero\n      tag_817\n  // newTag tag_680, desc: abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr\n      jumpi\n      0x00\n  // newTag tag_681, desc: \n  // newTag tag_682, desc: \n      dup1\n  // newTag tag_683, desc: \n      revert\n    tag_817:\n  // newTag tag_684, desc: array_allocation_size_t_array$_t_address_$dyn_memory_ptr\n      0x00\n      tag_818\n      dup8\n  // newTag tag_685, desc: allocate_memory\n      dup3\n      dup9\n      add\n      tag_736\n      jump\t// in\n    tag_818:\n      swap5\n      pop\n      pop\n      0x20\n      tag_819\n      dup8\n      dup3\n      dup9\n      add\n      tag_736\n      jump\t// in\n    tag_819:\n      swap4\n      pop\n      pop\n      0x40\n      tag_820\n  // newTag tag_686, desc: \n      dup8\n      dup3\n      dup9\n      add\n      tag_736\n      jump\t// in\n    tag_820:\n  // newTag tag_687, desc: \n  // newTag tag_688, desc: \n  // newTag tag_689, desc: \n      swap3\n      pop\n      pop\n      0x60\n      tag_821\n      dup8\n      dup3\n      dup9\n  // newTag tag_690, desc: \n      add\n      tag_736\n      jump\t// in\n  // newTag tag_691, desc: abi_decode_t_address\n    tag_821:\n      swap2\n      pop\n      pop\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n    tag_822:\n      0x00\n      tag_824\n      dup4\n      dup4\n      tag_825\n      jump\t// in\n    tag_824:\n      0x20\n      dup4\n      add\n      swap1\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_826:\n      0x00\n      tag_828\n      dup4\n      dup4\n  // newTag tag_692, desc: abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr\n      tag_829\n      jump\t// in\n  // newTag tag_693, desc: \n  // newTag tag_694, desc: \n    tag_828:\n  // newTag tag_695, desc: \n      0x20\n      dup4\n  // newTag tag_696, desc: array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr\n      add\n      swap1\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_830:\n      0x00\n      tag_832\n      dup4\n      dup4\n      tag_833\n      jump\t// in\n    tag_832:\n      swap1\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_834:\n      0x00\n      tag_836\n  // newTag tag_697, desc: \n      dup4\n      dup4\n      tag_837\n      jump\t// in\n    tag_836:\n      0x20\n      dup4\n  // newTag tag_698, desc: \n  // newTag tag_699, desc: \n  // newTag tag_700, desc: \n      add\n      swap1\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n  // newTag tag_701, desc: \n    tag_838:\n      0x00\n      tag_840\n  // newTag tag_702, desc: abi_decode_t_bytes32\n      dup4\n      dup4\n      tag_841\n      jump\t// in\n    tag_840:\n      0x20\n      dup4\n      add\n      swap1\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_825:\n      tag_843\n      dup2\n      tag_844\n      jump\t// in\n    tag_843:\n      dup3\n      mstore\n      pop\n      pop\n      jump\t// out\n    tag_845:\n      tag_847\n      dup2\n      tag_844\n      jump\t// in\n    tag_847:\n      dup3\n      mstore\n      pop\n  // newTag tag_703, desc: abi_decode_available_length_t_string_memory_ptr\n      pop\n      jump\t// out\n  // newTag tag_704, desc: \n  // newTag tag_705, desc: \n    tag_848:\n  // newTag tag_706, desc: \n      0x00\n      tag_850\n  // newTag tag_707, desc: array_allocation_size_t_string_memory_ptr\n      dup3\n      tag_851\n      jump\t// in\n    tag_850:\n      tag_852\n      dup2\n      dup6\n      tag_853\n      jump\t// in\n    tag_852:\n      swap4\n      pop\n      tag_854\n      dup4\n      tag_855\n      jump\t// in\n    tag_854:\n      dup1\n      0x00\n    tag_856:\n  // newTag tag_708, desc: \n      dup4\n      dup2\n      lt\n      iszero\n      tag_858\n      jumpi\n  // newTag tag_709, desc: \n      dup2\n      mload\n      tag_859\n      dup9\n  // newTag tag_710, desc: copy_calldata_to_memory\n      dup3\n      tag_822\n      jump\t// in\n    tag_859:\n      swap8\n      pop\n      tag_860\n      dup4\n      tag_861\n      jump\t// in\n    tag_860:\n      swap3\n      pop\n  // newTag tag_711, desc: \n      pop\n      0x01\n      dup2\n      add\n  // newTag tag_712, desc: \n      swap1\n      pop\n  // newTag tag_713, desc: validator_revert_t_address\n      jump(tag_856)\n    tag_858:\n      pop\n      dup6\n      swap4\n      pop\n      pop\n      pop\n  // newTag tag_714, desc: abi_decode_t_array$_t_address_$dyn_memory_ptr\n      pop\n      swap3\n  // newTag tag_715, desc: \n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_862:\n      0x00\n      tag_864\n  // newTag tag_716, desc: \n      dup3\n      tag_865\n      jump\t// in\n    tag_864:\n      tag_866\n      dup2\n      dup6\n      tag_867\n  // newTag tag_717, desc: \n      jump\t// in\n    tag_866:\n      swap4\n      pop\n      tag_868\n      dup4\n      tag_869\n      jump\t// in\n    tag_868:\n      dup1\n      0x00\n    tag_870:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_872\n      jumpi\n  // newTag tag_718, desc: abi_decode_t_array$_t_bytes32_$dyn_memory_ptr\n      dup2\n      mload\n  // newTag tag_719, desc: \n      tag_873\n      dup9\n      dup3\n      tag_826\n      jump\t// in\n    tag_873:\n      swap8\n  // newTag tag_720, desc: \n      pop\n      tag_874\n      dup4\n      tag_875\n      jump\t// in\n    tag_874:\n      swap3\n      pop\n  // newTag tag_721, desc: \n      pop\n      0x01\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_870)\n    tag_872:\n      pop\n      dup6\n      swap4\n      pop\n      pop\n      pop\n      pop\n      swap3\n      swap2\n  // newTag tag_722, desc: abi_decode_t_bool\n      pop\n      pop\n  // newTag tag_723, desc: \n      jump\t// out\n    tag_876:\n      0x00\n      tag_878\n  // newTag tag_724, desc: \n      dup3\n      tag_879\n  // newTag tag_725, desc: validator_revert_t_bool\n      jump\t// in\n    tag_878:\n      tag_880\n      dup2\n      dup6\n      tag_881\n      jump\t// in\n    tag_880:\n      swap4\n      pop\n      dup4\n  // newTag tag_726, desc: \n      0x20\n      dup3\n      mul\n      dup6\n  // newTag tag_727, desc: \n      add\n      tag_882\n  // newTag tag_728, desc: validator_revert_t_bytes32\n      dup6\n      tag_883\n      jump\t// in\n    tag_882:\n      dup1\n      0x00\n    tag_884:\n      dup6\n      dup2\n  // newTag tag_729, desc: abi_decode_t_string_memory_ptr\n      lt\n      iszero\n  // newTag tag_730, desc: \n      tag_886\n      jumpi\n      dup5\n      dup5\n      sub\n      dup10\n      mstore\n  // newTag tag_731, desc: \n      dup2\n      mload\n      tag_887\n      dup6\n      dup3\n      tag_830\n      jump\t// in\n    tag_887:\n  // newTag tag_732, desc: \n      swap5\n      pop\n      tag_888\n      dup4\n      tag_889\n      jump\t// in\n    tag_888:\n      swap3\n      pop\n      0x20\n      dup11\n      add\n      swap10\n      pop\n      pop\n      0x01\n      dup2\n      add\n  // newTag tag_733, desc: abi_decode_t_tokenId\n      swap1\n      pop\n  // newTag tag_734, desc: \n      jump(tag_884)\n    tag_886:\n      pop\n  // newTag tag_735, desc: \n      dup3\n      swap8\n  // newTag tag_736, desc: validator_revert_t_tokenId\n      pop\n      dup8\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n  // newTag tag_737, desc: abi_decode_t_uint256\n      swap3\n      swap2\n  // newTag tag_738, desc: \n      pop\n      pop\n      jump\t// out\n    tag_890:\n  // newTag tag_739, desc: \n      0x00\n      tag_892\n  // newTag tag_740, desc: validator_revert_t_uint256\n      dup3\n      tag_893\n      jump\t// in\n    tag_892:\n      tag_894\n      dup2\n      dup6\n      tag_895\n      jump\t// in\n    tag_894:\n      swap4\n  // newTag tag_741, desc: \n      pop\n      tag_896\n      dup4\n      tag_897\n      jump\t// in\n    tag_896:\n  // newTag tag_742, desc: \n      dup1\n      0x00\n    tag_898:\n      dup4\n      dup2\n      lt\n      iszero\n  // newTag tag_743, desc: \n      tag_900\n      jumpi\n      dup2\n      mload\n      tag_901\n      dup9\n      dup3\n      tag_834\n      jump\t// in\n    tag_901:\n      swap8\n      pop\n      tag_902\n      dup4\n      tag_903\n      jump\t// in\n    tag_902:\n      swap3\n      pop\n      pop\n      0x01\n      dup2\n      add\n      swap1\n  // newTag tag_744, desc: \n      pop\n      jump(tag_898)\n    tag_900:\n      pop\n      dup6\n  // newTag tag_745, desc: \n      swap4\n      pop\n      pop\n      pop\n      pop\n      swap3\n      swap2\n  // newTag tag_746, desc: \n      pop\n      pop\n      jump\t// out\n    tag_904:\n      0x00\n      tag_906\n      dup3\n      tag_907\n      jump\t// in\n    tag_906:\n      tag_908\n      dup2\n      dup6\n      tag_909\n      jump\t// in\n    tag_908:\n      swap4\n      pop\n      tag_910\n  // newTag tag_747, desc: \n      dup4\n      tag_911\n      jump\t// in\n    tag_910:\n      dup1\n      0x00\n  // newTag tag_748, desc: \n    tag_912:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_914\n      jumpi\n      dup2\n      mload\n      tag_915\n      dup9\n      dup3\n  // newTag tag_749, desc: \n      tag_838\n      jump\t// in\n    tag_915:\n      swap8\n      pop\n      tag_916\n      dup4\n      tag_917\n      jump\t// in\n    tag_916:\n      swap3\n      pop\n  // newTag tag_750, desc: \n      pop\n      0x01\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_912)\n    tag_914:\n      pop\n      dup6\n      swap4\n  // newTag tag_751, desc: \n      pop\n      pop\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_918:\n      tag_920\n      dup2\n  // newTag tag_752, desc: \n      tag_921\n      jump\t// in\n    tag_920:\n      dup3\n      mstore\n      pop\n      pop\n      jump\t// out\n    tag_829:\n      tag_923\n      dup2\n      tag_924\n      jump\t// in\n    tag_923:\n      dup3\n      mstore\n      pop\n      pop\n      jump\t// out\n    tag_925:\n      tag_927\n      dup2\n      tag_924\n  // newTag tag_753, desc: \n      jump\t// in\n    tag_927:\n      dup3\n      mstore\n      pop\n      pop\n  // newTag tag_754, desc: \n      jump\t// out\n    tag_833:\n      0x00\n      tag_929\n      dup3\n      tag_930\n      jump\t// in\n  // newTag tag_755, desc: \n    tag_929:\n      tag_931\n      dup2\n      dup6\n      tag_932\n      jump\t// in\n    tag_931:\n      swap4\n      pop\n      tag_933\n      dup2\n      dup6\n      0x20\n      dup7\n      add\n      tag_934\n      jump\t// in\n    tag_933:\n      tag_935\n      dup2\n  // newTag tag_756, desc: \n      tag_936\n      jump\t// in\n    tag_935:\n      dup5\n      add\n      swap2\n  // newTag tag_757, desc: \n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n  // newTag tag_758, desc: \n    tag_937:\n      0x00\n      tag_939\n      dup3\n      tag_930\n      jump\t// in\n    tag_939:\n      tag_940\n      dup2\n      dup6\n      tag_941\n      jump\t// in\n  // newTag tag_759, desc: \n    tag_940:\n      swap4\n      pop\n      tag_942\n      dup2\n      dup6\n      0x20\n      dup7\n      add\n      tag_934\n      jump\t// in\n    tag_942:\n      tag_943\n      dup2\n      tag_936\n      jump\t// in\n    tag_943:\n      dup5\n      add\n      swap2\n      pop\n  // newTag tag_760, desc: \n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n  // newTag tag_761, desc: \n    tag_944:\n      0x00\n      dup2\n      sload\n      tag_946\n      dup2\n      tag_184\n  // newTag tag_762, desc: \n      jump\t// in\n    tag_946:\n      tag_947\n      dup2\n      dup7\n      tag_941\n      jump\t// in\n    tag_947:\n      swap5\n      pop\n      0x01\n      dup3\n      and\n      0x00\n      dup2\n      eq\n      tag_949\n      jumpi\n      0x01\n  // newTag tag_763, desc: \n      dup2\n      eq\n      tag_950\n      jumpi\n      jump(tag_948)\n  // newTag tag_764, desc: \n    tag_949:\n      0xff\n      not\n      dup4\n      and\n      dup7\n      mstore\n      0x20\n      dup7\n      add\n      swap4\n      pop\n      jump(tag_948)\n    tag_950:\n      tag_951\n      dup6\n      tag_952\n      jump\t// in\n    tag_951:\n      0x00\n    tag_953:\n      dup4\n      dup2\n      lt\n      iszero\n  // newTag tag_765, desc: \n      tag_955\n      jumpi\n      dup2\n      sload\n      dup2\n      dup10\n  // newTag tag_766, desc: \n      add\n      mstore\n      0x01\n      dup3\n      add\n      swap2\n      pop\n  // newTag tag_767, desc: \n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_953)\n    tag_955:\n      dup1\n      dup9\n      add\n      swap6\n  // newTag tag_768, desc: \n      pop\n      pop\n      pop\n    tag_948:\n      pop\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_956:\n      0x00\n      tag_958\n      0x26\n      dup4\n      tag_941\n      jump\t// in\n  // newTag tag_769, desc: \n    tag_958:\n      swap2\n      pop\n      tag_959\n      dup3\n      tag_960\n  // newTag tag_770, desc: \n      jump\t// in\n    tag_959:\n      0x40\n      dup3\n      add\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_961:\n  // newTag tag_771, desc: \n      0x00\n      tag_963\n      0x20\n      dup4\n      tag_941\n      jump\t// in\n    tag_963:\n      swap2\n      pop\n      tag_964\n      dup3\n      tag_965\n  // newTag tag_772, desc: \n      jump\t// in\n    tag_964:\n      0x20\n      dup3\n      add\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_837:\n  // newTag tag_773, desc: \n      tag_967\n      dup2\n      tag_968\n      jump\t// in\n    tag_967:\n      dup3\n      mstore\n      pop\n      pop\n      jump\t// out\n    tag_969:\n      tag_971\n  // newTag tag_774, desc: \n      dup2\n      tag_968\n      jump\t// in\n    tag_971:\n      dup3\n      mstore\n      pop\n      pop\n      jump\t// out\n    tag_841:\n      tag_973\n      dup2\n      tag_974\n      jump\t// in\n    tag_973:\n      dup3\n      mstore\n      pop\n      pop\n      jump\t// out\n    tag_975:\n      tag_977\n      dup2\n      tag_974\n      jump\t// in\n    tag_977:\n      dup3\n      mstore\n      pop\n      pop\n      jump\t// out\n    tag_978:\n      tag_980\n  // newTag tag_775, desc: \n      dup2\n      tag_981\n      jump\t// in\n    tag_980:\n      dup3\n      mstore\n  // newTag tag_776, desc: \n      pop\n      pop\n      jump\t// out\n    tag_595:\n      0x00\n      0x20\n      dup3\n  // newTag tag_777, desc: \n      add\n      swap1\n      pop\n      tag_983\n      0x00\n      dup4\n      add\n      dup5\n      tag_845\n      jump\t// in\n    tag_983:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_672:\n      0x00\n      0x20\n  // newTag tag_778, desc: \n      dup3\n      add\n      swap1\n      pop\n      dup2\n      dup2\n  // newTag tag_779, desc: \n      sub\n      0x00\n      dup4\n      add\n      mstore\n      tag_985\n      dup2\n      dup5\n      tag_848\n      jump\t// in\n    tag_985:\n      swap1\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_665:\n  // newTag tag_780, desc: \n      0x00\n      0x60\n      dup3\n      add\n      swap1\n      pop\n  // newTag tag_781, desc: \n      dup2\n      dup2\n      sub\n      0x00\n      dup4\n      add\n      mstore\n      tag_987\n      dup2\n      dup7\n      tag_848\n      jump\t// in\n  // newTag tag_782, desc: \n    tag_987:\n      swap1\n      pop\n      dup2\n      dup2\n      sub\n      0x20\n      dup4\n      add\n      mstore\n      tag_988\n      dup2\n  // newTag tag_783, desc: \n      dup6\n      tag_904\n      jump\t// in\n    tag_988:\n      swap1\n      pop\n      dup2\n      dup2\n      sub\n      0x40\n      dup4\n      add\n  // newTag tag_784, desc: \n      mstore\n      tag_989\n      dup2\n      dup5\n      tag_904\n      jump\t// in\n    tag_989:\n      swap1\n      pop\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_602:\n      0x00\n      0xa0\n  // newTag tag_785, desc: \n      dup3\n      add\n      swap1\n      pop\n      dup2\n      dup2\n  // newTag tag_786, desc: \n      sub\n      0x00\n      dup4\n      add\n      mstore\n      tag_991\n      dup2\n      dup9\n      tag_862\n      jump\t// in\n    tag_991:\n      swap1\n      pop\n      dup2\n      dup2\n      sub\n      0x20\n      dup4\n      add\n  // newTag tag_787, desc: \n      mstore\n      tag_992\n      dup2\n      dup8\n      tag_890\n      jump\t// in\n  // newTag tag_788, desc: \n    tag_992:\n      swap1\n      pop\n      dup2\n      dup2\n      sub\n      0x40\n      dup4\n      add\n      mstore\n      tag_993\n      dup2\n      dup7\n      tag_862\n      jump\t// in\n    tag_993:\n      swap1\n      pop\n      dup2\n  // newTag tag_789, desc: \n      dup2\n      sub\n      0x60\n      dup4\n      add\n      mstore\n  // newTag tag_790, desc: \n      tag_994\n      dup2\n      dup6\n      tag_862\n      jump\t// in\n    tag_994:\n      swap1\n      pop\n      dup2\n      dup2\n      sub\n      0x80\n      dup4\n      add\n      mstore\n      tag_995\n      dup2\n      dup5\n      tag_904\n      jump\t// in\n    tag_995:\n      swap1\n      pop\n      swap7\n      swap6\n      pop\n      pop\n  // newTag tag_791, desc: \n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_567:\n  // newTag tag_792, desc: \n      0x00\n      0x60\n      dup3\n      add\n      swap1\n      pop\n      dup2\n  // newTag tag_793, desc: \n      dup2\n      sub\n      0x00\n      dup4\n      add\n      mstore\n      tag_997\n      dup2\n      dup7\n      tag_904\n      jump\t// in\n    tag_997:\n  // newTag tag_794, desc: \n      swap1\n      pop\n      dup2\n      dup2\n      sub\n      0x20\n      dup4\n      add\n      mstore\n      tag_998\n      dup2\n      dup6\n      tag_862\n      jump\t// in\n    tag_998:\n      swap1\n      pop\n      dup2\n      dup2\n      sub\n      0x40\n      dup4\n  // newTag tag_795, desc: \n      add\n      mstore\n      tag_999\n      dup2\n      dup5\n      tag_862\n  // newTag tag_796, desc: \n      jump\t// in\n    tag_999:\n      swap1\n      pop\n      swap5\n      swap4\n      pop\n  // newTag tag_797, desc: \n      pop\n      pop\n      pop\n      jump\t// out\n    tag_629:\n      0x00\n      0xc0\n      dup3\n      add\n      swap1\n      pop\n      dup2\n  // newTag tag_798, desc: \n      dup2\n      sub\n      0x00\n      dup4\n      add\n      mstore\n      tag_1001\n      dup2\n      dup10\n      tag_904\n      jump\t// in\n    tag_1001:\n  // newTag tag_799, desc: \n      swap1\n      pop\n      dup2\n      dup2\n      sub\n      0x20\n      dup4\n      add\n      mstore\n      tag_1002\n      dup2\n      dup9\n      tag_876\n      jump\t// in\n    tag_1002:\n      swap1\n      pop\n      dup2\n      dup2\n      sub\n      0x40\n      dup4\n      add\n      mstore\n  // newTag tag_800, desc: \n      tag_1003\n      dup2\n      dup8\n      tag_876\n      jump\t// in\n    tag_1003:\n  // newTag tag_801, desc: \n      swap1\n      pop\n      dup2\n      dup2\n      sub\n      0x60\n      dup4\n  // newTag tag_802, desc: \n      add\n      mstore\n      tag_1004\n      dup2\n      dup7\n      tag_904\n      jump\t// in\n    tag_1004:\n      swap1\n      pop\n      dup2\n      dup2\n  // newTag tag_803, desc: \n      sub\n      0x80\n      dup4\n      add\n      mstore\n      tag_1005\n      dup2\n      dup6\n      tag_904\n      jump\t// in\n    tag_1005:\n      swap1\n  // newTag tag_804, desc: \n      pop\n      dup2\n      dup2\n      sub\n      0xa0\n      dup4\n      add\n      mstore\n      tag_1006\n      dup2\n      dup5\n      tag_904\n  // newTag tag_805, desc: \n      jump\t// in\n    tag_1006:\n      swap1\n      pop\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n  // newTag tag_806, desc: \n      pop\n      jump\t// out\n    tag_575:\n      0x00\n      0x20\n      dup3\n      add\n      swap1\n      pop\n      tag_1008\n      0x00\n      dup4\n      add\n      dup5\n      tag_918\n      jump\t// in\n    tag_1008:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_493:\n      0x00\n      0x20\n  // newTag tag_807, desc: \n      dup3\n      add\n      swap1\n      pop\n      tag_1010\n      0x00\n  // newTag tag_808, desc: \n      dup4\n      add\n      dup5\n      tag_925\n      jump\t// in\n    tag_1010:\n      swap3\n  // newTag tag_809, desc: \n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_353:\n      0x00\n      0x40\n      dup3\n      add\n      swap1\n      pop\n      tag_1012\n  // newTag tag_810, desc: \n      0x00\n      dup4\n      add\n      dup6\n      tag_925\n      jump\t// in\n    tag_1012:\n      dup2\n      dup2\n      sub\n      0x20\n      dup4\n  // newTag tag_811, desc: \n      add\n      mstore\n      tag_1013\n      dup2\n      dup5\n      tag_937\n      jump\t// in\n    tag_1013:\n      swap1\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_606:\n      0x00\n      0xe0\n      dup3\n      add\n      swap1\n  // newTag tag_812, desc: \n      pop\n      tag_1015\n      0x00\n      dup4\n      add\n      dup11\n  // newTag tag_813, desc: \n      tag_925\n      jump\t// in\n    tag_1015:\n      dup2\n      dup2\n      sub\n      0x20\n  // newTag tag_814, desc: \n      dup4\n      add\n      mstore\n      tag_1016\n      dup2\n      dup10\n      tag_937\n      jump\t// in\n    tag_1016:\n      swap1\n      pop\n      tag_1017\n  // newTag tag_815, desc: \n      0x40\n      dup4\n      add\n      dup9\n      tag_969\n      jump\t// in\n    tag_1017:\n      tag_1018\n      0x60\n      dup4\n      add\n      dup8\n  // newTag tag_816, desc: \n      tag_925\n      jump\t// in\n    tag_1018:\n      tag_1019\n      0x80\n      dup4\n      add\n      dup7\n      tag_925\n      jump\t// in\n    tag_1019:\n      tag_1020\n      0xa0\n      dup4\n      add\n      dup6\n      tag_975\n      jump\t// in\n    tag_1020:\n      tag_1021\n      0xc0\n      dup4\n      add\n  // newTag tag_817, desc: \n      dup5\n      tag_975\n      jump\t// in\n    tag_1021:\n      swap9\n      swap8\n  // newTag tag_818, desc: \n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n  // newTag tag_819, desc: \n      pop\n      jump\t// out\n    tag_635:\n      0x00\n      0x0140\n      dup3\n      add\n      swap1\n      pop\n      dup2\n      dup2\n      sub\n  // newTag tag_820, desc: \n      0x00\n      dup4\n      add\n      mstore\n      tag_1023\n      dup2\n      dup14\n      tag_937\n      jump\t// in\n    tag_1023:\n      swap1\n      pop\n  // newTag tag_821, desc: \n      dup2\n      dup2\n      sub\n      0x20\n      dup4\n      add\n      mstore\n      tag_1024\n      dup2\n      dup13\n      tag_937\n      jump\t// in\n  // newTag tag_822, desc: \n    tag_1024:\n      swap1\n      pop\n      tag_1025\n      0x40\n      dup4\n      add\n      dup12\n      tag_845\n      jump\t// in\n    tag_1025:\n      tag_1026\n      0x60\n      dup4\n      add\n      dup11\n      tag_975\n      jump\t// in\n    tag_1026:\n      tag_1027\n  // newTag tag_823, desc: abi_encodeUpdatedPos_t_address_to_t_address\n      0x80\n      dup4\n  // newTag tag_824, desc: \n  // newTag tag_825, desc: \n      add\n      dup10\n      tag_975\n  // newTag tag_826, desc: abi_encode_t_address_to_t_address\n      jump\t// in\n    tag_1027:\n      tag_1028\n      0xa0\n      dup4\n      add\n      dup9\n      tag_975\n      jump\t// in\n    tag_1028:\n      dup2\n      dup2\n      sub\n      0xc0\n  // newTag tag_827, desc: abi_encodeUpdatedPos_t_bytes32_to_t_bytes32\n      dup4\n      add\n  // newTag tag_828, desc: \n  // newTag tag_829, desc: \n      mstore\n      tag_1029\n      dup2\n  // newTag tag_830, desc: abi_encode_t_bytes32_to_t_bytes32\n      dup8\n      tag_862\n      jump\t// in\n    tag_1029:\n      swap1\n      pop\n      dup2\n      dup2\n      sub\n      0xe0\n      dup4\n      add\n      mstore\n      tag_1030\n  // newTag tag_831, desc: abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr\n      dup2\n      dup7\n  // newTag tag_832, desc: \n  // newTag tag_833, desc: \n      tag_848\n      jump\t// in\n    tag_1030:\n  // newTag tag_834, desc: abi_encode_t_string_memory_ptr_to_t_string_memory_ptr\n      swap1\n      pop\n      dup2\n      dup2\n      sub\n      0x0100\n      dup4\n      add\n      mstore\n      tag_1031\n      dup2\n  // newTag tag_835, desc: abi_encodeUpdatedPos_t_tokenId_to_t_tokenId\n      dup6\n      tag_862\n  // newTag tag_836, desc: \n  // newTag tag_837, desc: \n      jump\t// in\n    tag_1031:\n      swap1\n  // newTag tag_838, desc: abi_encode_t_tokenId_to_t_tokenId\n      pop\n      dup2\n      dup2\n      sub\n      0x0120\n      dup4\n      add\n      mstore\n      tag_1032\n      dup2\n      dup5\n      tag_904\n      jump\t// in\n    tag_1032:\n  // newTag tag_839, desc: abi_encodeUpdatedPos_t_uint256_to_t_uint256\n      swap1\n      pop\n  // newTag tag_840, desc: \n  // newTag tag_841, desc: \n      swap12\n      swap11\n      pop\n  // newTag tag_842, desc: abi_encode_t_uint256_to_t_uint256\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_235:\n      0x00\n      0xa0\n      dup3\n  // newTag tag_843, desc: \n  // newTag tag_844, desc: \n      add\n      swap1\n  // newTag tag_845, desc: cleanup_t_address\n      pop\n      dup2\n      dup2\n      sub\n      0x00\n      dup4\n      add\n      mstore\n      tag_1034\n  // newTag tag_846, desc: abi_encode_t_address_to_t_address_fromStack\n      dup2\n  // newTag tag_847, desc: \n  // newTag tag_848, desc: \n      dup9\n      tag_944\n      jump\t// in\n    tag_1034:\n      swap1\n      pop\n      dup2\n      dup2\n      sub\n      0x20\n      dup4\n  // newTag tag_849, desc: abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack\n      add\n      mstore\n  // newTag tag_850, desc: \n  // newTag tag_851, desc: \n      tag_1035\n      dup2\n  // newTag tag_852, desc: array_length_t_array$_t_address_$dyn_memory_ptr\n      dup8\n      tag_944\n      jump\t// in\n  // newTag tag_853, desc: \n    tag_1035:\n      swap1\n      pop\n  // newTag tag_854, desc: array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack\n      tag_1036\n      0x40\n      dup4\n      add\n      dup7\n  // newTag tag_855, desc: \n      tag_978\n      jump\t// in\n  // newTag tag_856, desc: array_dataslot_t_array$_t_address_$dyn_memory_ptr\n    tag_1036:\n      tag_1037\n      0x60\n      dup4\n      add\n  // newTag tag_857, desc: \n  // newTag tag_858, desc: \n  // newTag tag_859, desc: \n      dup6\n      tag_978\n      jump\t// in\n    tag_1037:\n      tag_1038\n      0x80\n      dup4\n      add\n      dup5\n  // newTag tag_860, desc: \n      tag_975\n      jump\t// in\n    tag_1038:\n      swap7\n      swap6\n      pop\n      pop\n      pop\n  // newTag tag_861, desc: \n      pop\n      pop\n  // newTag tag_862, desc: array_nextElement_t_array$_t_address_$dyn_memory_ptr\n      pop\n      jump\t// out\n    tag_243:\n      0x00\n      0x20\n      dup3\n      add\n      swap1\n      pop\n      dup2\n      dup2\n      sub\n      0x00\n      dup4\n      add\n      mstore\n      tag_1040\n      dup2\n      tag_956\n      jump\t// in\n    tag_1040:\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_439:\n  // newTag tag_863, desc: abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack\n      0x00\n      0x20\n  // newTag tag_864, desc: \n  // newTag tag_865, desc: \n      dup3\n      add\n  // newTag tag_866, desc: array_length_t_array$_t_bytes32_$dyn_memory_ptr\n      swap1\n      pop\n      dup2\n  // newTag tag_867, desc: \n      dup2\n      sub\n      0x00\n  // newTag tag_868, desc: array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack\n      dup4\n      add\n      mstore\n      tag_1042\n      dup2\n  // newTag tag_869, desc: \n      tag_961\n      jump\t// in\n  // newTag tag_870, desc: array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr\n    tag_1042:\n      swap1\n      pop\n      swap2\n      swap1\n  // newTag tag_871, desc: \n  // newTag tag_872, desc: \n  // newTag tag_873, desc: \n      pop\n      jump\t// out\n    tag_483:\n      0x00\n      0x20\n      dup3\n      add\n      swap1\n      pop\n  // newTag tag_874, desc: \n      tag_1044\n      0x00\n      dup4\n      add\n      dup5\n      tag_975\n      jump\t// in\n    tag_1044:\n  // newTag tag_875, desc: \n      swap3\n      swap2\n  // newTag tag_876, desc: array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr\n      pop\n      pop\n      jump\t// out\n    tag_592:\n      0x00\n      0x40\n      dup3\n      add\n      swap1\n      pop\n      tag_1046\n      0x00\n      dup4\n      add\n      dup6\n      tag_975\n      jump\t// in\n    tag_1046:\n      tag_1047\n      0x20\n      dup4\n      add\n      dup5\n      tag_918\n      jump\t// in\n    tag_1047:\n      swap4\n      swap3\n  // newTag tag_877, desc: abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack\n      pop\n      pop\n  // newTag tag_878, desc: \n  // newTag tag_879, desc: \n      pop\n      jump\t// out\n  // newTag tag_880, desc: array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr\n    tag_684:\n      0x00\n      tag_1049\n  // newTag tag_881, desc: \n      tag_1050\n      jump\t// in\n    tag_1049:\n  // newTag tag_882, desc: array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack\n      swap1\n      pop\n      tag_1051\n      dup3\n      dup3\n      tag_1052\n      jump\t// in\n    tag_1051:\n      swap2\n      swap1\n      pop\n  // newTag tag_883, desc: \n      jump\t// out\n    tag_1050:\n  // newTag tag_884, desc: array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr\n      0x00\n      0x40\n      mload\n      swap1\n      pop\n  // newTag tag_885, desc: \n  // newTag tag_886, desc: \n  // newTag tag_887, desc: \n      swap1\n      jump\t// out\n    tag_683:\n      0x00\n      0xffffffffffffffff\n      dup3\n      gt\n      iszero\n      tag_1055\n      jumpi\n      tag_1056\n      tag_1057\n      jump\t// in\n    tag_1056:\n  // newTag tag_888, desc: \n    tag_1055:\n      0x20\n      dup3\n      mul\n      swap1\n      pop\n      0x20\n      dup2\n  // newTag tag_889, desc: \n      add\n      swap1\n  // newTag tag_890, desc: array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_695:\n      0x00\n      0xffffffffffffffff\n      dup3\n      gt\n      iszero\n      tag_1059\n      jumpi\n      tag_1060\n      tag_1057\n      jump\t// in\n    tag_1060:\n    tag_1059:\n      0x20\n      dup3\n      mul\n      swap1\n      pop\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_706:\n      0x00\n      0xffffffffffffffff\n      dup3\n      gt\n      iszero\n  // newTag tag_891, desc: abi_encode_t_array$_t_tokenId_$dyn_memory_ptr_to_t_array$_t_tokenId_$dyn_memory_ptr_fromStack\n      tag_1062\n      jumpi\n  // newTag tag_892, desc: \n  // newTag tag_893, desc: \n      tag_1063\n      tag_1057\n  // newTag tag_894, desc: array_length_t_array$_t_tokenId_$dyn_memory_ptr\n      jump\t// in\n    tag_1063:\n    tag_1062:\n  // newTag tag_895, desc: \n      tag_1064\n      dup3\n      tag_936\n  // newTag tag_896, desc: array_storeLengthForEncoding_t_array$_t_tokenId_$dyn_memory_ptr_fromStack\n      jump\t// in\n    tag_1064:\n      swap1\n      pop\n      0x20\n  // newTag tag_897, desc: \n      dup2\n      add\n  // newTag tag_898, desc: array_dataslot_t_array$_t_tokenId_$dyn_memory_ptr\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n  // newTag tag_899, desc: \n  // newTag tag_900, desc: \n  // newTag tag_901, desc: \n      jump\t// out\n    tag_855:\n      0x00\n      dup2\n      swap1\n      pop\n      0x20\n      dup3\n      add\n  // newTag tag_902, desc: \n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_869:\n      0x00\n  // newTag tag_903, desc: \n      dup2\n      swap1\n  // newTag tag_904, desc: array_nextElement_t_array$_t_tokenId_$dyn_memory_ptr\n      pop\n      0x20\n      dup3\n      add\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_883:\n      0x00\n      dup2\n      swap1\n      pop\n      0x20\n      dup3\n      add\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_897:\n      0x00\n      dup2\n      swap1\n  // newTag tag_905, desc: abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack\n      pop\n      0x20\n  // newTag tag_906, desc: \n  // newTag tag_907, desc: \n      dup3\n      add\n  // newTag tag_908, desc: array_length_t_array$_t_uint256_$dyn_memory_ptr\n      swap1\n      pop\n      swap2\n  // newTag tag_909, desc: \n      swap1\n      pop\n      jump\t// out\n  // newTag tag_910, desc: array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack\n    tag_911:\n      0x00\n      dup2\n      swap1\n      pop\n  // newTag tag_911, desc: \n      0x20\n      dup3\n  // newTag tag_912, desc: array_dataslot_t_array$_t_uint256_$dyn_memory_ptr\n      add\n      swap1\n      pop\n      swap2\n      swap1\n  // newTag tag_913, desc: \n  // newTag tag_914, desc: \n  // newTag tag_915, desc: \n      pop\n      jump\t// out\n    tag_952:\n      0x00\n      dup2\n      swap1\n      pop\n      dup2\n      0x00\n  // newTag tag_916, desc: \n      mstore\n      0x20\n      0x00\n      keccak256\n      swap1\n      pop\n      swap2\n      swap1\n  // newTag tag_917, desc: \n      pop\n      jump\t// out\n  // newTag tag_918, desc: array_nextElement_t_array$_t_uint256_$dyn_memory_ptr\n    tag_851:\n      0x00\n      dup2\n      mload\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_865:\n      0x00\n      dup2\n      mload\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_879:\n      0x00\n      dup2\n      mload\n      swap1\n      pop\n      swap2\n      swap1\n  // newTag tag_919, desc: abi_encode_t_bool_to_t_bool_fromStack\n      pop\n  // newTag tag_920, desc: \n  // newTag tag_921, desc: \n      jump\t// out\n    tag_893:\n  // newTag tag_922, desc: cleanup_t_bool\n      0x00\n      dup2\n      mload\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_907:\n  // newTag tag_923, desc: \n  // newTag tag_924, desc: \n      0x00\n      dup2\n  // newTag tag_925, desc: cleanup_t_bytes32\n      mload\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_930:\n      0x00\n  // newTag tag_926, desc: abi_encode_t_bytes32_to_t_bytes32_fromStack\n      dup2\n  // newTag tag_927, desc: \n  // newTag tag_928, desc: \n      mload\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_861:\n      0x00\n      0x20\n      dup3\n      add\n      swap1\n  // newTag tag_929, desc: \n  // newTag tag_930, desc: \n      pop\n      swap2\n  // newTag tag_931, desc: array_length_t_string_memory_ptr\n      swap1\n      pop\n      jump\t// out\n  // newTag tag_932, desc: \n    tag_875:\n      0x00\n      0x20\n  // newTag tag_933, desc: array_storeLengthForEncoding_t_string_memory_ptr\n      dup3\n      add\n      swap1\n      pop\n      swap2\n  // newTag tag_934, desc: \n      swap1\n      pop\n      jump\t// out\n    tag_889:\n      0x00\n      0x20\n  // newTag tag_935, desc: copy_memory_to_memory\n      dup3\n      add\n      swap1\n  // newTag tag_936, desc: \n      pop\n      swap2\n  // newTag tag_937, desc: round_up_to_mul_of_32\n      swap1\n      pop\n      jump\t// out\n    tag_903:\n      0x00\n      0x20\n      dup3\n      add\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n  // newTag tag_938, desc: abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack\n    tag_917:\n      0x00\n  // newTag tag_939, desc: \n  // newTag tag_940, desc: \n      0x20\n      dup3\n      add\n      swap1\n      pop\n  // newTag tag_941, desc: \n      swap2\n      swap1\n      pop\n  // newTag tag_942, desc: array_storeLengthForEncoding_t_string_memory_ptr_fromStack\n      jump\t// out\n    tag_853:\n      0x00\n      dup3\n      dup3\n  // newTag tag_943, desc: \n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      pop\n      swap3\n      swap2\n      pop\n  // newTag tag_944, desc: \n      pop\n      jump\t// out\n    tag_867:\n      0x00\n      dup3\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      pop\n      swap3\n      swap2\n      pop\n      pop\n  // newTag tag_945, desc: abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack\n      jump\t// out\n    tag_881:\n  // newTag tag_946, desc: \n      0x00\n      dup3\n  // newTag tag_947, desc: \n      dup3\n      mstore\n      0x20\n      dup3\n      add\n  // newTag tag_948, desc: \n      swap1\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_895:\n      0x00\n      dup3\n      dup3\n  // newTag tag_949, desc: \n      mstore\n  // newTag tag_950, desc: \n      0x20\n      dup3\n      add\n      swap1\n      pop\n  // newTag tag_951, desc: \n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_909:\n      0x00\n      dup3\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_932:\n  // newTag tag_952, desc: \n      0x00\n      dup3\n  // newTag tag_953, desc: array_dataslot_t_string_storage\n      dup3\n      mstore\n      0x20\n      dup3\n  // newTag tag_954, desc: \n  // newTag tag_955, desc: \n  // newTag tag_956, desc: \n      add\n      swap1\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_941:\n      0x00\n      dup3\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_97:\n      0x00\n      tag_1090\n      dup3\n      tag_974\n      jump\t// in\n    tag_1090:\n      swap2\n      pop\n      tag_1091\n      dup4\n      tag_974\n      jump\t// in\n    tag_1091:\n      swap3\n      pop\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      sub\n      dup3\n      gt\n  // newTag tag_957, desc: abi_encode_t_stringliteral_0ff6cd9d5cae2396a0860cd9d9046debd79d2926a6d9abc06ee4b1a6011cfec4_to_t_string_memory_ptr_fromStack\n      iszero\n      tag_1092\n  // newTag tag_958, desc: \n  // newTag tag_959, desc: \n      jumpi\n      tag_1093\n      tag_1094\n      jump\t// in\n    tag_1093:\n    tag_1092:\n      dup3\n      dup3\n  // newTag tag_960, desc: \n      add\n      swap1\n  // newTag tag_961, desc: store_literal_in_memory_0ff6cd9d5cae2396a0860cd9d9046debd79d2926a6d9abc06ee4b1a6011cfec4\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_1095:\n      0x00\n      dup1\n      dup3\n      swap2\n      pop\n      dup4\n  // newTag tag_962, desc: abi_encode_t_stringliteral_cddd93c73ab4b5d9275f4cce79da0f55e31063d273b20dce0238ee21763dd415_to_t_string_memory_ptr_fromStack\n      swap1\n      pop\n  // newTag tag_963, desc: \n  // newTag tag_964, desc: \n    tag_1097:\n      0x01\n      dup6\n      gt\n      iszero\n      tag_1099\n      jumpi\n      dup1\n  // newTag tag_965, desc: \n      dup7\n      div\n  // newTag tag_966, desc: store_literal_in_memory_cddd93c73ab4b5d9275f4cce79da0f55e31063d273b20dce0238ee21763dd415\n      dup2\n      gt\n      iszero\n      tag_1100\n      jumpi\n      tag_1101\n      tag_1094\n      jump\t// in\n    tag_1101:\n    tag_1100:\n      0x01\n      dup6\n      and\n      iszero\n  // newTag tag_967, desc: \n  // newTag tag_968, desc: \n      tag_1102\n      jumpi\n  // newTag tag_969, desc: cleanup_t_tokenId\n      dup1\n      dup3\n      mul\n      swap2\n      pop\n    tag_1102:\n      dup1\n      dup2\n      mul\n  // newTag tag_970, desc: abi_encode_t_tokenId_to_t_tokenId_fromStack\n      swap1\n  // newTag tag_971, desc: \n  // newTag tag_972, desc: \n      pop\n      tag_1103\n      dup6\n      tag_1104\n      jump\t// in\n    tag_1103:\n      swap5\n      pop\n      jump(tag_1097)\n    tag_1099:\n      swap5\n  // newTag tag_973, desc: \n  // newTag tag_974, desc: \n      pop\n      swap5\n  // newTag tag_975, desc: cleanup_t_uint256\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_207:\n      0x00\n      tag_1106\n      dup3\n  // newTag tag_976, desc: abi_encode_t_uint256_to_t_uint256_fromStack\n      tag_974\n  // newTag tag_977, desc: \n  // newTag tag_978, desc: \n      jump\t// in\n    tag_1106:\n      swap2\n      pop\n      tag_1107\n      dup4\n      tag_974\n      jump\t// in\n    tag_1107:\n      swap3\n      pop\n  // newTag tag_979, desc: abi_encode_t_uint64_to_t_uint256_fromStack\n      tag_1108\n  // newTag tag_980, desc: \n  // newTag tag_981, desc: \n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup5\n  // newTag tag_982, desc: convert_t_uint64_to_t_uint256\n      dup5\n      tag_1109\n      jump\t// in\n    tag_1108:\n      swap1\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n  // newTag tag_983, desc: \n    tag_1109:\n      0x00\n      dup3\n      tag_1111\n      jumpi\n  // newTag tag_984, desc: \n      0x01\n      swap1\n      pop\n      jump(tag_1110)\n    tag_1111:\n      dup2\n      tag_1112\n      jumpi\n      0x00\n      swap1\n      pop\n      jump(tag_1110)\n    tag_1112:\n      dup2\n  // newTag tag_985, desc: \n      0x01\n      dup2\n      eq\n      tag_1114\n      jumpi\n      0x02\n      dup2\n      eq\n      tag_1115\n      jumpi\n      jump(tag_1113)\n  // newTag tag_986, desc: \n    tag_1114:\n      0x01\n      swap2\n      pop\n      pop\n      jump(tag_1110)\n    tag_1115:\n      0xff\n      dup5\n      gt\n      iszero\n      tag_1116\n      jumpi\n      tag_1117\n      tag_1094\n  // newTag tag_987, desc: \n      jump\t// in\n    tag_1117:\n    tag_1116:\n      dup4\n      0x02\n      exp\n      swap2\n      pop\n      dup5\n      dup3\n      gt\n      iszero\n  // newTag tag_988, desc: \n      tag_1118\n      jumpi\n      tag_1119\n      tag_1094\n      jump\t// in\n    tag_1119:\n    tag_1118:\n      pop\n      jump(tag_1110)\n    tag_1113:\n      pop\n      0x20\n      dup4\n      lt\n  // newTag tag_989, desc: \n      0x0133\n      dup4\n      lt\n      and\n      0x4e\n      dup5\n      lt\n      0x0b\n      dup5\n      lt\n      and\n      or\n      iszero\n      tag_1120\n      jumpi\n  // newTag tag_990, desc: \n      dup3\n      dup3\n      exp\n      swap1\n      pop\n      dup4\n      dup2\n      gt\n      iszero\n      tag_1121\n      jumpi\n      tag_1122\n      tag_1094\n      jump\t// in\n    tag_1122:\n    tag_1121:\n      jump(tag_1110)\n  // newTag tag_991, desc: \n    tag_1120:\n      tag_1123\n      dup5\n      dup5\n      dup5\n      0x01\n      tag_1095\n      jump\t// in\n    tag_1123:\n      swap3\n      pop\n      swap1\n  // newTag tag_992, desc: \n      pop\n      dup2\n      dup5\n      div\n      dup2\n      gt\n      iszero\n      tag_1124\n      jumpi\n      tag_1125\n      tag_1094\n      jump\t// in\n    tag_1125:\n    tag_1124:\n      dup2\n  // newTag tag_993, desc: \n      dup2\n      mul\n      swap1\n      pop\n    tag_1110:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_209:\n      0x00\n      tag_1127\n      dup3\n  // newTag tag_994, desc: \n      tag_974\n      jump\t// in\n    tag_1127:\n      swap2\n      pop\n      tag_1128\n      dup4\n      tag_974\n      jump\t// in\n    tag_1128:\n      swap3\n      pop\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      div\n  // newTag tag_995, desc: \n      dup4\n      gt\n      dup3\n      iszero\n      iszero\n      and\n      iszero\n      tag_1129\n      jumpi\n      tag_1130\n      tag_1094\n      jump\t// in\n    tag_1130:\n    tag_1129:\n      dup3\n  // newTag tag_996, desc: \n      dup3\n      mul\n      swap1\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_129:\n      0x00\n      tag_1132\n      dup3\n      tag_974\n      jump\t// in\n    tag_1132:\n      swap2\n      pop\n      tag_1133\n      dup4\n  // newTag tag_997, desc: \n      tag_974\n      jump\t// in\n    tag_1133:\n      swap3\n      pop\n      dup3\n      dup3\n      lt\n      iszero\n      tag_1134\n      jumpi\n      tag_1135\n  // newTag tag_998, desc: \n      tag_1094\n      jump\t// in\n    tag_1135:\n    tag_1134:\n      dup3\n      dup3\n      sub\n      swap1\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_844:\n  // newTag tag_999, desc: \n      0x00\n      tag_1137\n      dup3\n      tag_1138\n      jump\t// in\n    tag_1137:\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_921:\n      0x00\n      dup2\n  // newTag tag_1000, desc: \n      iszero\n      iszero\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_924:\n      0x00\n      dup2\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_968:\n  // newTag tag_1001, desc: \n      0x00\n      tag_1142\n      dup3\n      tag_1143\n      jump\t// in\n    tag_1142:\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n  // newTag tag_1002, desc: \n    tag_1138:\n      0x00\n      0xffffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_974:\n      0x00\n      dup2\n      swap1\n  // newTag tag_1003, desc: \n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_1146:\n      0x00\n      0xffffffffffffffff\n      dup3\n      and\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n  // newTag tag_1004, desc: \n      jump\t// out\n    tag_1143:\n      0x00\n      0xffffffffffffffffffff\n      dup3\n      and\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_981:\n      0x00\n      tag_1150\n  // newTag tag_1005, desc: \n      dup3\n      tag_1146\n      jump\t// in\n    tag_1150:\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_709:\n      dup3\n      dup2\n      dup4\n      calldatacopy\n  // newTag tag_1006, desc: \n      0x00\n      dup4\n      dup4\n      add\n      mstore\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_934:\n      0x00\n    tag_1153:\n      dup4\n      dup2\n      lt\n  // newTag tag_1007, desc: \n      iszero\n      tag_1155\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_1153)\n    tag_1155:\n      dup4\n      dup2\n  // newTag tag_1008, desc: \n      gt\n      iszero\n      tag_1156\n      jumpi\n      0x00\n  // newTag tag_1009, desc: \n      dup5\n      dup5\n      add\n      mstore\n    tag_1156:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_184:\n      0x00\n      0x02\n      dup3\n      div\n      swap1\n  // newTag tag_1010, desc: \n      pop\n      0x01\n      dup3\n      and\n      dup1\n  // newTag tag_1011, desc: \n      tag_1158\n      jumpi\n      0x7f\n      dup3\n      and\n      swap2\n      pop\n    tag_1158:\n      0x20\n      dup3\n      lt\n      dup2\n      eq\n      iszero\n      tag_1159\n      jumpi\n  // newTag tag_1012, desc: \n      tag_1160\n      tag_1161\n      jump\t// in\n    tag_1160:\n    tag_1159:\n  // newTag tag_1013, desc: \n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_1052:\n      tag_1163\n      dup3\n      tag_936\n      jump\t// in\n    tag_1163:\n      dup2\n      add\n      dup2\n      dup2\n  // newTag tag_1014, desc: \n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      iszero\n      tag_1164\n      jumpi\n      tag_1165\n      tag_1057\n      jump\t// in\n    tag_1165:\n    tag_1164:\n      dup1\n      0x40\n      mstore\n      pop\n  // newTag tag_1015, desc: \n      pop\n      pop\n      jump\t// out\n    tag_64:\n      0x00\n  // newTag tag_1016, desc: \n      tag_1167\n      dup3\n      tag_974\n      jump\t// in\n    tag_1167:\n      swap2\n      pop\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup3\n      eq\n      iszero\n      tag_1168\n      jumpi\n      tag_1169\n      tag_1094\n  // newTag tag_1017, desc: \n      jump\t// in\n    tag_1169:\n    tag_1168:\n      0x01\n      dup3\n      add\n      swap1\n      pop\n  // newTag tag_1018, desc: \n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_1094:\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n      mstore\n  // newTag tag_1019, desc: \n      0x11\n      0x04\n      mstore\n      0x24\n      0x00\n      revert\n    tag_1161:\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // newTag tag_1020, desc: \n      0x00\n      mstore\n      0x22\n      0x04\n      mstore\n      0x24\n      0x00\n      revert\n  // newTag tag_1021, desc: \n    tag_1057:\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n      mstore\n      0x41\n      0x04\n      mstore\n      0x24\n  // newTag tag_1022, desc: \n      0x00\n      revert\n    tag_936:\n      0x00\n      0x1f\n      not\n      0x1f\n      dup4\n      add\n      and\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_1104:\n      0x00\n      dup2\n      0x01\n      shr\n      swap1\n  // newTag tag_1023, desc: \n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_960:\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n      0x00\n      dup3\n      add\n      mstore\n      0x6464726573730000000000000000000000000000000000000000000000000000\n  // newTag tag_1024, desc: \n      0x20\n      dup3\n      add\n      mstore\n      pop\n      jump\t// out\n    tag_965:\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x00\n      dup3\n      add\n      mstore\n      pop\n      jump\t// out\n    tag_712:\n  // newTag tag_1025, desc: \n      tag_1178\n      dup2\n      tag_844\n      jump\t// in\n    tag_1178:\n      dup2\n      eq\n      tag_1179\n  // newTag tag_1026, desc: \n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1179:\n      pop\n      jump\t// out\n    tag_724:\n  // newTag tag_1027, desc: \n      tag_1181\n      dup2\n      tag_921\n      jump\t// in\n    tag_1181:\n      dup2\n      eq\n      tag_1182\n  // newTag tag_1028, desc: \n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1182:\n      pop\n      jump\t// out\n    tag_727:\n  // newTag tag_1029, desc: \n      tag_1184\n      dup2\n      tag_924\n      jump\t// in\n    tag_1184:\n      dup2\n      eq\n      tag_1185\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1185:\n      pop\n      jump\t// out\n  // newTag tag_1030, desc: \n    tag_735:\n      tag_1187\n      dup2\n      tag_968\n      jump\t// in\n    tag_1187:\n      dup2\n      eq\n      tag_1188\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1188:\n      pop\n  // newTag tag_1031, desc: \n      jump\t// out\n    tag_739:\n      tag_1190\n      dup2\n      tag_974\n      jump\t// in\n    tag_1190:\n      dup2\n      eq\n      tag_1191\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1191:\n  // newTag tag_1032, desc: \n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582000000000000000000000000000000000000000000000000000000000000000000029\n}\n","bytecode":{"generatedSources":[],"linkReferences":{},"object":"608060405262000015336200001b60201b60201c565b620000e4565b60008060009054906101000a900474ffffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548174ffffffffffffffffffffffffffffffffffffffffff021916908374ffffffffffffffffffffffffffffffffffffffffff1602179055508174ffffffffffffffffffffffffffffffffffffffffff168174ffffffffffffffffffffffffffffffffffffffffff167f9a78605a08fe53b920adfc51344c28abd504bd2378db8d7dcdd50e527cbebe5760405160405180910390a35050565b615f6e80620000f46000396000f3fe6080604052614028565b6000600a6000848152602001908152602001600021600083815260200190815260200160002180549050905092915050565b6060806060600061008b600760008774ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff168152602001908152602001600021613016565b90508067ffffffffffffffff8111156100cd577fe0f8f85500000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156100fb5781602001602082028036833780820191505090505b5093508067ffffffffffffffff81111561013e577fe0f8f85500000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561016c5781602001602082028036833780820191505090505b5092508067ffffffffffffffff8111156101af577fe0f8f85500000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156101dd5781602001602082028036833780820191505090505b50915060005b61022c600760008874ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff168152602001908152602001600021613016565b81101561043a576000600760008874ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002160000182815481106102b1577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002101549050808683815181106102f8577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250506001818154811061033e577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600021906007020160000154858381518110610389577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050600181815481106103cf577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002190600702016001015484838151811061041a577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505050808061043290615d63565b9150506101e3565b50509193909250565b6000806104508484613027565b90506000806000809150915060005b836008018054905081101561051c57828460080182815481106104ab577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002101541115610509578360080181815481106104f8577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600021015492508091505b808061051490615d63565b91505061045f565b5080935050505092915050565b60008060096000868152602001908152602001600021600085815260200190815260200160002160008474ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff168152602001908152602001600021600101541190509392505050565b60006105a9838361308a565b905092915050565b84846105bd82826130f9565b6105c633610ab4565b6105cf57600080fd5b6105d98786612424565b6105e257600080fd5b6105ed878787610529565b156105f757600080fd5b60006106038888613027565b90508060050180549050851061061857600080fd5b600a60008981526020019081526020016000216000888152602001908152602001600021869080600181540180825580915050600190039060005260206000210160009091909190916101000a81548174ffffffffffffffffffffffffffffffffffffffffff021916908374ffffffffffffffffffffffffffffffffffffffffff1602179055506000600960008a8152602001908152602001600021600089815260200190815260200160002160008874ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff168152602001908152602001600021905085816000018190555084816001018190555084826008018781548110610755577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002101600082825461076e91906159c8565b92505081905550505050505050505050565b8261078a81613110565b6000600285815481106107c6577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002190600202019050838160000181905550828160010160006101000a81548160ff0219169083151502179055505050505050565b8161080c81613137565b60005b600560008581526020019081526020016000218054905081101561092157600060066000868152602001908152602001600021600060056000888152602001908152602001600021848154811061088f577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000210160009054906101000a900474ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002160006101000a81548160ff021916908315150217905550808061091990615d63565b91505061080f565b5060005b82518110156109ec57600160066000868152602001908152602001600021600085848151811061097e577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015174ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002160006101000a81548160ff02191690831515021790555080806109e490615d63565b915050610925565b5081600560008581526020019081526020016000219080519060200190610a14929190613df0565b50505050565b600080600060028481548110610a59577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000219060020201905080600001548160010160009054906101000a900460ff169250925050915091565b60008060009054906101000a900474ffffffffffffffffffffffffffffffffffffffffff16905090565b6000600b60008374ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002160009054906101000a900460ff169050919050565b60608060608060606001805490508710156110d35760008688600180549050610b359190615be9565b11610b505787600180549050610b4b9190615be9565b610b52565b865b90508067ffffffffffffffff811115610b94577fe0f8f85500000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610bc25781602001602082028036833780820191505090505b5095508067ffffffffffffffff811115610c05577fe0f8f85500000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610c335781602001602082028036833780820191505090505b5094508067ffffffffffffffff811115610c76577fe0f8f85500000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610ca45781602001602082028036833780820191505090505b5093508067ffffffffffffffff811115610ce7577fe0f8f85500000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610d155781602001602082028036833780820191505090505b5092508067ffffffffffffffff811115610d58577fe0f8f85500000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610d865781602001602082028036833780820191505090505b50915060008890505b60018054905081108015610dad57508789610daa91906159c8565b81105b156110d05760018181548110610dec577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600021906007020160000154878a83610e0b9190615be9565b81518110610e42577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505060018181548110610e88577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600021906007020160040160009054906101000a900469ffffffffffffffffffff16868a83610ebd9190615be9565b81518110610ef4577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001019069ffffffffffffffffffff16908169ffffffffffffffffffff168152505060018181548110610f54577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600021906007020160010154858a83610f739190615be9565b81518110610faa577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505060018181548110610ff0577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600021906007020160020154848a8361100f9190615be9565b81518110611046577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505061106d6004600083815260200190815260200160002161314d565b838a8361107a9190615be9565b815181106110b1577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505080806110c890615d63565b915050610d8f565b50505b9295509295909350565b60006060600080600080600060018881548110611123577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000219060070201600001546001898154811061116f577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600021906007020160030160018a815481106111ba577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600021906007020160040160009054906101000a900469ffffffffffffffffffff1660018b8154811061121c577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002190600702016001015460018c81548110611268577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600021906007020160020154611295600460008f815260200190815260200160002161314d565b60018e815481106112cf577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000219060070201600501548580546112ed90615d00565b80601f016020809104026020016040519081016040528092919081815260200182805461131990615d00565b80156113665780601f1061133b57610100808354040283529160200191611366565b820191906000526020600021905b81548152906001019060200180831161134957829003601f168201915b505050505095509650965096509650965096509650919395979092949650565b60006008600083815260200190815260200160002160009054906101000a900474ffffffffffffffffffffffffffffffffffffffffff169050919050565b60008174ffffffffffffffffffffffffffffffffffffffffff166008600085815260200190815260200160002160009054906101000a900474ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff1614905092915050565b8861143d8161315e565b4669ffffffffffffffffffff1660018b81548110611484577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600021906007020160040160009054906101000a900469ffffffffffffffffffff1669ffffffffffffffffffff16146114c257600080fd5b600060028b815481106114fe577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002190600202019050600061151a8c336124db565b90508160010160009054906101000a900460ff161561153e578061153d57600080fd5b5b80806115b0575060018c8154811061157f577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600021906007020160050154600a61159d9190615a71565b82600001546115ac9190615b8f565b3410155b6115b957600080fd5b87891080156115c757504288115b6115d057600080fd5b60008914806115df5750428910155b6115e857600080fd5b6001805490508c106115f957600080fd5b600086511161160757600080fd5b855185511461161557600080fd5b855184511461162357600080fd5b6000600360008e8152602001908152602001600021805490509050600360008e81526020019081526020016000216001816001815401808255809150500390600052602060002190505060006116798e83613027565b90508c816001019080519060200190611693929190613e7c565b508b8160000190805190602001906116ac929190613e7c565b5060008b146116bb578a6116bd565b425b8160020160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550898160020160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508781600501908051906020019061172a929190613f02565b5086816006019080519060200190611743929190613df0565b508581600701908051906020019061175c929190613f02565b50338160040160006101000a81548174ffffffffffffffffffffffffffffffffffffffffff021916908374ffffffffffffffffffffffffffffffffffffffffff160217905550875167ffffffffffffffff8111156117e3577fe0f8f85500000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156118115781602001602082028036833780820191505090505b50816008019080519060200190611829929190613f4f565b508881600301819055503374ffffffffffffffffffffffffffffffffffffffffff168e837f4dd34088f7b48a18379b03b82c8b41e51a23bc7c71d55ffccc9e705ba491575e84600101856000018660020160009054906101000a900467ffffffffffffffff168760020160089054906101000a900467ffffffffffffffff1688600301546040516118be9594939291906156d6565b60405180910390a43374ffffffffffffffffffffffffffffffffffffffffff164669ffffffffffffffffffff16346040516000604051905080820390838587f1505050505050505050505050505050505050565b61191a613196565b600074ffffffffffffffffffffffffffffffffffffffffff168174ffffffffffffffffffffffffffffffffffffffffff16141561198c576040517f4b2bae7e00000000000000000000000000000000000000000000000000000000815260040161198390615737565b60405180910390fd5b6119958161320f565b50565b678ac7230489e8000081565b6119ad8161315e565b6119d233600460008481526020019081526020016000216132d890919063ffffffff16565b611a2581600760003374ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002161362690919063ffffffff16565b50565b611a328133612424565b15611a3c57600080fd5b611a64336001600460008581526020019081526020016000216137e39092919063ffffffff16565b611aba816001600760003374ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000216139e69092919063ffffffff16565b50565b60608060608060608060008890505b600360008b81526020019081526020016000218054905081108015611afb57508789611af891906159c8565b81105b156120125780878a83611b0e9190615be9565b81518110611b45577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050600360008b81526020019081526020016000218181548110611b9c577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002190600a02016001018054611bb890615d00565b80601f0160208091040260200160405190810160405280929190818152602001828054611be490615d00565b8015611c315780601f10611c0657610100808354040283529160200191611c31565b820191906000526020600021905b815481529060010190602001808311611c1457829003601f168201915b5050505050868a83611c439190615be9565b81518110611c7a577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250600360008b81526020019081526020016000218181548110611cd0577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002190600a02016000018054611cec90615d00565b80601f0160208091040260200160405190810160405280929190818152602001828054611d1890615d00565b8015611d655780601f10611d3a57610100808354040283529160200191611d65565b820191906000526020600021905b815481529060010190602001808311611d4857829003601f168201915b5050505050858a83611d779190615be9565b81518110611dae577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250600360008b81526020019081526020016000218181548110611e04577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002190600a020160020160009054906101000a900467ffffffffffffffff1667ffffffffffffffff16848a83611e419190615be9565b81518110611e78577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050600360008b81526020019081526020016000218181548110611ecf577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002190600a020160020160089054906101000a900467ffffffffffffffff1667ffffffffffffffff16838a83611f0c9190615be9565b81518110611f43577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050600360008b81526020019081526020016000218181548110611f9a577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002190600a020160050180549050828a83611fbc9190615be9565b81518110611ff3577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050808061200a90615d63565b915050611acc565b5093975093979195509350565b612027613196565b6001600b60008374ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002160006101000a81548160ff02191690831515021790555050565b606080600080600080606080606080600061209f8d8d613027565b905080600101816000018260040160009054906101000a900474ffffffffffffffffffffffffffffffffffffffffff168360020160009054906101000a900467ffffffffffffffff168460020160089054906101000a900467ffffffffffffffff1685600301548660050187600601886007018960080189805461212290615d00565b80601f016020809104026020016040519081016040528092919081815260200182805461214e90615d00565b801561219b5780601f106121705761010080835404028352916020019161219b565b820191906000526020600021905b81548152906001019060200180831161217e57829003601f168201915b505050505099508880546121ae90615d00565b80601f01602080910402602001604051908101604052809291908181526020018280546121da90615d00565b80156122275780601f106121fc57610100808354040283529160200191612227565b820191906000526020600021905b81548152906001019060200180831161220a57829003601f168201915b505050505098508667ffffffffffffffff1696508567ffffffffffffffff1695508380548060200260200160405190810160405280929190818152602001828054801561229357602002820191906000526020600021905b81548152602001906001019080831161227f575b505050505093508280548060200260200160405190810160405280929190818152602001828054801561231d57602002820191906000526020600021905b8160009054906101000a900474ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116122d1575b505050505092508180548060200260200160405190810160405280929190818152602001828054801561236f57602002820191906000526020600021905b81548152602001906001019080831161235b575b50505050509150808054806020026020016040519081016040528092919081815260200182805480156123c157602002820191906000526020600021905b8154815260200190600101908083116123ad575b505050505090509a509a509a509a509a509a509a509a509a509a50509295989b9194979a5092959850565b6000426123f98484613027565b60020160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1610905092915050565b6000600161244d8360046000878152602001908152602001600021613ac790919063ffffffff16565b14905092915050565b61245e613196565b6000600b60008374ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002160006101000a81548160ff02191690831515021790555050565b600060036000838152602001908152602001600021805490509050919050565b60006006600084815260200190815260200160002160008374ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002160009054906101000a900460ff168061254e575061254d83836113c4565b5b905092915050565b8661256081613110565b60006001898154811061259c577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002190600702019050878160000181905550868160030190805190602001906125cd929190613e7c565b50858160040160006101000a81548169ffffffffffffffffffff021916908369ffffffffffffffffffff1602179055508460ff168160050181905550838160010181905550828160020181905550505050505050505050565b6000600180549050905090565b61263b613196565b612645600061320f565b565b678ac7230489e800003414801561267f5750695649544520544f4b454e69ffffffffffffffffffff164669ffffffffffffffffffff16145b61268857600080fd5b6000600180549050905061269a613f9c565b8781600001818152505086816060018190525085816080019069ffffffffffffffffffff16908169ffffffffffffffffffff16815250508481602001818152505083816040018181525050828160a0018181525050428160c00181815250506001819080600181540180825580915050600190039060005260206000219060070201600090919091909150600082015181600001556020820151816001015560408201518160020155606082015181600301908051906020019061275f929190613e7c565b5060808201518160040160006101000a81548169ffffffffffffffffffff021916908369ffffffffffffffffffff16021790555060a0820151816005015560c082015181600601555050600260018160018154018082558091505003906000526020600021905050336008600084815260200190815260200160002160006101000a81548174ffffffffffffffffffffffffffffffffffffffffff021916908374ffffffffffffffffffffffffffffffffffffffffff160217905550878669ffffffffffffffffffff16837f92ac3827b776c572e5d72006a513f694b98b56b65e899bbdde95c3b1103b00f2888b60405161285b92919061556a565b60405180910390a461286c82611a28565b5050505050505050565b81816128828282613b15565b838361288e8282612e97565b1561289857600080fd5b60006128a48787610443565b90506128b1878783613b2c565b50505050505050565b6060806060600a6000888152602001908152602001600021600087815260200190815260200160002180549050851015612d955760008486600a60008b815260200190815260200160002160008a8152602001908152602001600021805490506129249190615be9565b116129615785600a60008a815260200190815260200160002160008981526020019081526020016000218054905061295c9190615be9565b612963565b845b90508067ffffffffffffffff8111156129a5577fe0f8f85500000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156129d35781602001602082028036833780820191505090505b5093508067ffffffffffffffff811115612a16577fe0f8f85500000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015612a445781602001602082028036833780820191505090505b5092508067ffffffffffffffff811115612a87577fe0f8f85500000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015612ab55781602001602082028036833780820191505090505b50915060008690505b600a60008a815260200190815260200160002160008981526020019081526020016000218054905081108015612afe57508587612afb91906159c8565b81105b15612d92576000600a60008b815260200190815260200160002160008a81526020019081526020016000218281548110612b61577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000210160009054906101000a900474ffffffffffffffffffffffffffffffffffffffffff16905080868984612b9d9190615be9565b81518110612bd4577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001019074ffffffffffffffffffffffffffffffffffffffffff16908174ffffffffffffffffffffffffffffffffffffffffff1681525050600960008b815260200190815260200160002160008a815260200190815260200160002160008274ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002160010154858984612c849190615be9565b81518110612cbb577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050600960008b815260200190815260200160002160008a815260200190815260200160002160008274ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002160000154848984612d3b9190615be9565b81518110612d72577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050508080612d8a90615d63565b915050612abe565b50505b9450945094915050565b600060018281548110612ddb577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000219060070201600601549050919050565b606060056000838152602001908152602001600021805480602002602001604051908101604052809291908181526020018280548015612e8b57602002820191906000526020600021905b8160009054906101000a900474ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612e3f575b50505050509050919050565b6000600180811115612ed2577fe0f8f85500000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b612edc8484613027565b60090160009054906101000a900460ff166001811115612f25577fe0f8f85500000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14905092915050565b612f3781613cd9565b612f4057600080fd5b600060018281548110612f7c577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000219060070201600601819055506008600082815260200190815260200160002160009054906101000a900474ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16695649544520544f4b454e69ffffffffffffffffffff16678ac7230489e800006040516000604051905080820390838587f15050505050565b600081600001805490509050919050565b6000600360008481526020019081526020016000218281548110613074577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002190600a0201905092915050565b6000426130978484613027565b60020160009054906101000a900467ffffffffffffffff1667ffffffffffffffff16111580156130f15750426130cd8484613027565b60020160089054906101000a900467ffffffffffffffff1667ffffffffffffffff16115b905092915050565b613103828261308a565b61310c57600080fd5b5050565b61311a81336124db565b8061312b575061312a81336113c4565b5b61313457600080fd5b50565b61314181336113c4565b61314a57600080fd5b50565b600081600001805490509050919050565b6131688133612424565b80613179575061317881336124db565b5b8061318a575061318981336113c4565b5b61319357600080fd5b50565b3374ffffffffffffffffffffffffffffffffffffffffff166131b6610a8a565b74ffffffffffffffffffffffffffffffffffffffffff161461320d576040517f4b2bae7e00000000000000000000000000000000000000000000000000000000815260040161320490615757565b60405180910390fd5b565b60008060009054906101000a900474ffffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548174ffffffffffffffffffffffffffffffffffffffffff021916908374ffffffffffffffffffffffffffffffffffffffffff1602179055508174ffffffffffffffffffffffffffffffffffffffffff168174ffffffffffffffffffffffffffffffffffffffffff167f9a78605a08fe53b920adfc51344c28abd504bd2378db8d7dcdd50e527cbebe5760405160405180910390a35050565b8160030160008274ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002160009054906101000a900460ff1661333257613622565b8160030160008274ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002160006101000a81549060ff02191690558160010160008274ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000216000905560008260020160008374ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002154905060006001846000018054905061342a9190615be9565b9050600084600001828154811061346a577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000210160009054906101000a900474ffffffffffffffffffffffffffffffffffffffffff169050828560020160008374ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff168152602001908152602001600021819055508460020160008574ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000216000905580856000018481548110613564577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000210160006101000a81548174ffffffffffffffffffffffffffffffffffffffffff021916908374ffffffffffffffffffffffffffffffffffffffffff160217905550846000018054806135e8577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6001900381819060005260206000210160006101000a81549074ffffffffffffffffffffffffffffffffffffffffff021916905590555050505b5050565b81600301600082815260200190815260200160002160009054906101000a900460ff16613652576137df565b81600301600082815260200190815260200160002160006101000a81549060ff02191690558160010160008281526020019081526020016000216000905560008260020160008381526020019081526020016000215490506000600184600001805490506136c09190615be9565b90506000846000018281548110613700577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600021015490508285600201600083815260200190815260200160002181905550846002016000858152602001908152602001600021600090558085600001848154811061377d577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000210181905550846000018054806137c5577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600190038181906000526020600021016000905590555050505b5050565b8260030160008374ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002160009054906101000a900460ff161561388657808360010160008474ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff168152602001908152602001600021819055506139e1565b60018360030160008474ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002160006101000a81548160ff021916908315150217905550808360010160008474ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000218190555082600001805490508360020160008474ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000218190555082600001829080600181540180825580915050600190039060005260206000210160009091909190916101000a81548174ffffffffffffffffffffffffffffffffffffffffff021916908374ffffffffffffffffffffffffffffffffffffffffff1602179055505b505050565b82600301600083815260200190815260200160002160009054906101000a900460ff1615613a2d578083600101600084815260200190815260200160002181905550613ac2565b600183600301600084815260200190815260200160002160006101000a81548160ff0219169083151502179055508083600101600084815260200190815260200160002181905550826000018054905083600201600084815260200190815260200160002181905550826000018290806001815401808255809150506001900390600052602060002101600090919091909150555b505050565b60008260010160008374ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002154905092915050565b613b1f82826123ec565b613b2857600080fd5b5050565b6000613b388484613027565b905080600501805490508210613b4d57600080fd5b6000816006018381548110613b8b577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000210160009054906101000a900474ffffffffffffffffffffffffffffffffffffffffff1690506000826007018481548110613bf7577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002101549050600074ffffffffffffffffffffffffffffffffffffffffff168274ffffffffffffffffffffffffffffffffffffffffff1614613c4557613c448282613d95565b5b60018360090160006101000a81548160ff02191690836001811115613c93577fe0f8f85500000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555085857f9b6f2cef359ea2598ec10bc9ad9d2d0da42bed0a38d593c22e70fda4c9a38b4486604051613cc99190615777565b60405180910390a3505050505050565b60008060018381548110613d16577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002190600702016006015414158015613d8e5750426276a70060018481548110613d70577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600021906007020160060154613d8c91906159c8565b105b9050919050565b8174ffffffffffffffffffffffffffffffffffffffffff1663b7a61296826040518263ffffffff1660e01b8152600401613dcf919061554f565b60006040519050808203906000695649544520544f4b454e86f15050505050565b828054828255906000526020600021908101928215613e6b579160200282015b82811115613e6a5782518260006101000a81548174ffffffffffffffffffffffffffffffffffffffffff021916908374ffffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190613e10565b5b509050613e789190613fee565b5090565b828054613e8890615d00565b90600052602060002190601f016020900481019282613eaa5760008555613ef1565b82601f10613ec357805160ff1916838001178555613ef1565b82800160010185558215613ef1579182015b82811115613ef0578251825591602001919060010190613ed5565b5b509050613efe9190613fee565b5090565b828054828255906000526020600021908101928215613f3e579160200282015b82811115613f3d578251825591602001919060010190613f22565b5b509050613f4b919061400b565b5090565b828054828255906000526020600021908101928215613f8b579160200282015b82811115613f8a578251825591602001919060010190613f6f565b5b509050613f989190613fee565b5090565b6040518060e0016040528060008019168152602001600080191681526020016000801916815260200160608152602001600069ffffffffffffffffffff16815260200160008152602001600081525090565b5b80821115614007576000816000905550600101613fef565b5090565b5b8082111561402457600081600090555060010161400c565b5090565b600436106141d95760003560e01c8063082f5974146141db57806308b0311c1461420b5780631244b9ea1461423d5780631927510a1461426d5780631c2aa4601461429d578063224cf1c7146142cd5780632518a525146142e95780632b61f5f11461430557806330fbeb911461432157806333613933146143525780633365328914614370578063402993f4146143a0578063555fec4b146143d457806358faf7e61461440a578063758ae6fe1461443a578063777cd61d1461446a5780637bbcbead146144865780637e04aabc146144a25780638264b3c5146144c057806382ab3b2f146144dc57806384edb26d146144f85780639ef90ba31461452d578063b081f69514614549578063bc1b860114614582578063bc32df2d146145b2578063bf9a72cb146145e2578063c19dd0e2146145fe578063c2a9073d1461462e578063c37152331461465e578063c4ca0d251461467a578063cfa286aa14614698578063d2f708ae146146a2578063d36f0336146146be578063de28fd0e146146da578063df0b50991461470c578063e9fede531461473c578063ea5e42e31461476c578063ed3c2f291461479c575b005b6141f560048036038101906141f09190614d2c565b610009565b6040516142029190615777565b60405180910390f35b614225600480360381019061422091906149b5565b61003b565b6040516142349392919061545d565b60405180910390f35b61425760048036038101906142529190614d2c565b610443565b6040516142649190615777565b60405180910390f35b61428760048036038101906142829190614d68565b610529565b6040516142949190615534565b60405180910390f35b6142b760048036038101906142b29190614d2c565b61059d565b6040516142c49190615534565b60405180910390f35b6142e760048036038101906142e29190614db7565b6105b1565b005b61430360048036038101906142fe9190614e2e565b610780565b005b61431f600480360381019061431a9190614ae4565b610802565b005b61433b60048036038101906143369190614a7f565b610a1a565b604051614349929190615792565b60405180910390f35b61435a610a8a565b604051614367919061535e565b60405180910390f35b61438a600480360381019061438591906149b5565b610ab4565b6040516143979190615534565b60405180910390f35b6143ba60048036038101906143b59190614d2c565b610b0c565b6040516143cb9594939291906153e7565b60405180910390f35b6143ee60048036038101906143e99190614a7f565b6110dd565b604051614401979695949392919061559a565b60405180910390f35b614424600480360381019061441f9190614a7f565b611386565b604051614431919061535e565b60405180910390f35b614454600480360381019061444f9190614aa8565b6113c4565b6040516144619190615534565b60405180910390f35b614484600480360381019061447f9190614bee565b611433565b005b6144a0600480360381019061449b91906149b5565b611912565b005b6144aa611998565b6040516144b79190615777565b60405180910390f35b6144da60048036038101906144d59190614a7f565b6119a4565b005b6144f660048036038101906144f19190614a7f565b611a28565b005b614512600480360381019061450d9190614e7d565b611abd565b604051614524969594939291906154a9565b60405180910390f35b614547600480360381019061454291906149b5565b61201f565b005b614563600480360381019061455e9190614d2c565b612084565b6040516145799a99989796959493929190615610565b60405180910390f35b61459c60048036038101906145979190614d2c565b6123ec565b6040516145a99190615534565b60405180910390f35b6145cc60048036038101906145c79190614aa8565b612424565b6040516145d99190615534565b60405180910390f35b6145fc60048036038101906145f791906149b5565b612456565b005b61461860048036038101906146139190614a7f565b6124bb565b6040516146259190615777565b60405180910390f35b61464860048036038101906146439190614aa8565b6124db565b6040516146559190615534565b60405180910390f35b61467860048036038101906146739190614b38565b612556565b005b614682612626565b60405161468f9190615777565b60405180910390f35b6146a0612633565b005b6146bc60048036038101906146b791906149de565b612647565b005b6146d860048036038101906146d39190614d2c565b612876565b005b6146f460048036038101906146ef9190614ecc565b6128ba565b6040516147039392919061539b565b60405180910390f35b61472660048036038101906147219190614a7f565b612d9f565b6040516147339190615777565b60405180910390f35b61475660048036038101906147519190614a7f565b612df4565b6040516147639190615379565b60405180910390f35b61478660048036038101906147819190614d2c565b612e97565b6040516147939190615534565b60405180910390f35b6147b660048036038101906147b19190614a7f565b612f2e565b005b60006147cb6147c6846157e0565b6157bb565b905080838252602082019050828560208602820111156147ea57600080fd5b60005b8581101561481a578161480088826148ce565b8452602084019350602083019250506001810190506147ed565b5050509392505050565b60006148376148328461580c565b6157bb565b9050808382526020820190508285602086028201111561485657600080fd5b60005b85811015614886578161486c888261494c565b845260208401935060208301925050600181019050614859565b5050509392505050565b60006148a361489e84615838565b6157bb565b9050828152602081018484840111156148bb57600080fd5b6148c6848285615cbe565b509392505050565b6000813590506148dd81615ecf565b92915050565b600082601f8301126148f457600080fd5b81356149048482602086016147b8565b91505092915050565b600082601f83011261491e57600080fd5b813561492e848260208601614824565b91505092915050565b60008135905061494681615ee6565b92915050565b60008135905061495b81615efd565b92915050565b600082601f83011261497257600080fd5b8135614982848260208601614890565b91505092915050565b60008135905061499a81615f14565b92915050565b6000813590506149af81615f2b565b92915050565b6000602082840312156149c757600080fd5b60006149d5848285016148ce565b91505092915050565b60008060008060008060c087890312156149f757600080fd5b6000614a0589828a0161494c565b965050602087013567ffffffffffffffff811115614a2257600080fd5b614a2e89828a01614961565b9550506040614a3f89828a0161498b565b9450506060614a5089828a0161494c565b9350506080614a6189828a0161494c565b92505060a0614a7289828a016149a0565b9150509295509295509295565b600060208284031215614a9157600080fd5b6000614a9f848285016149a0565b91505092915050565b60008060408385031215614abb57600080fd5b6000614ac9858286016149a0565b9250506020614ada858286016148ce565b9150509250929050565b60008060408385031215614af757600080fd5b6000614b05858286016149a0565b925050602083013567ffffffffffffffff811115614b2257600080fd5b614b2e858286016148e3565b9150509250929050565b600080600080600080600060e0888a031215614b5357600080fd5b6000614b618a828b016149a0565b9750506020614b728a828b0161494c565b965050604088013567ffffffffffffffff811115614b8f57600080fd5b614b9b8a828b01614961565b9550506060614bac8a828b0161498b565b9450506080614bbd8a828b016149a0565b93505060a0614bce8a828b0161494c565b92505060c0614bdf8a828b0161494c565b91505092959891949750929550565b60008060008060008060008060006101208a8c031215614c0d57600080fd5b6000614c1b8c828d016149a0565b99505060208a013567ffffffffffffffff811115614c3857600080fd5b614c448c828d01614961565b98505060408a013567ffffffffffffffff811115614c6157600080fd5b614c6d8c828d01614961565b9750506060614c7e8c828d016149a0565b9650506080614c8f8c828d016149a0565b95505060a0614ca08c828d016149a0565b94505060c08a013567ffffffffffffffff811115614cbd57600080fd5b614cc98c828d0161490d565b93505060e08a013567ffffffffffffffff811115614ce657600080fd5b614cf28c828d016148e3565b9250506101008a013567ffffffffffffffff811115614d1057600080fd5b614d1c8c828d0161490d565b9150509295985092959850929598565b60008060408385031215614d3f57600080fd5b6000614d4d858286016149a0565b9250506020614d5e858286016149a0565b9150509250929050565b600080600060608486031215614d7d57600080fd5b6000614d8b868287016149a0565b9350506020614d9c868287016149a0565b9250506040614dad868287016148ce565b9150509250925092565b600080600080600060a08688031215614dcf57600080fd5b6000614ddd888289016149a0565b9550506020614dee888289016149a0565b9450506040614dff888289016148ce565b9350506060614e10888289016149a0565b9250506080614e21888289016149a0565b9150509295509295909350565b600080600060608486031215614e4357600080fd5b6000614e51868287016149a0565b9350506020614e62868287016149a0565b9250506040614e7386828701614937565b9150509250925092565b600080600060608486031215614e9257600080fd5b6000614ea0868287016149a0565b9350506020614eb1868287016149a0565b9250506040614ec2868287016149a0565b9150509250925092565b60008060008060808587031215614ee257600080fd5b6000614ef0878288016149a0565b9450506020614f01878288016149a0565b9350506040614f12878288016149a0565b9250506060614f23878288016149a0565b91505092959194509250565b6000614f3b8383614fa3565b60208301905092915050565b6000614f5383836151bd565b60208301905092915050565b6000614f6b83836151db565b905092915050565b6000614f7f8383615313565b60208301905092915050565b6000614f978383615331565b60208301905092915050565b614fac81615c1d565b82525050565b614fbb81615c1d565b82525050565b6000614fcc826158ce565b614fd68185615951565b9350614fe183615869565b8060005b83811015615012578151614ff98882614f2f565b975061500483615910565b925050600181019050614fe5565b5085935050505092915050565b600061502a826158d9565b6150348185615962565b935061503f83615879565b8060005b838110156150705781516150578882614f47565b97506150628361591d565b925050600181019050615043565b5085935050505092915050565b6000615088826158e4565b6150928185615973565b9350836020820285016150a485615889565b8060005b858110156150e057848403895281516150c18582614f5f565b94506150cc8361592a565b925060208a019950506001810190506150a8565b50829750879550505050505092915050565b60006150fd826158ef565b6151078185615984565b935061511283615899565b8060005b8381101561514357815161512a8882614f73565b975061513583615937565b925050600181019050615116565b5085935050505092915050565b600061515b826158fa565b6151658185615995565b9350615170836158a9565b8060005b838110156151a15781516151888882614f8b565b975061519383615944565b925050600181019050615174565b5085935050505092915050565b6151b781615c2f565b82525050565b6151c681615c3b565b82525050565b6151d581615c3b565b82525050565b60006151e682615905565b6151f081856159a6565b9350615200818560208601615ccd565b61520981615e39565b840191505092915050565b600061521f82615905565b61522981856159b7565b9350615239818560208601615ccd565b61524281615e39565b840191505092915050565b6000815461525a81615d00565b61526481866159b7565b9450600182166000811461527f5760018114615291576152c4565b60ff19831686526020860193506152c4565b61529a856158b9565b60005b838110156152bc5781548189015260018201915060208101905061529d565b808801955050505b50505092915050565b60006152da6026836159b7565b91506152e582615e57565b604082019050919050565b60006152fd6020836159b7565b915061530882615ea6565b602082019050919050565b61531c81615c45565b82525050565b61532b81615c45565b82525050565b61533a81615c78565b82525050565b61534981615c78565b82525050565b61535881615cac565b82525050565b60006020820190506153736000830184614fb2565b92915050565b600060208201905081810360008301526153938184614fc1565b905092915050565b600060608201905081810360008301526153b58186614fc1565b905081810360208301526153c98185615150565b905081810360408301526153dd8184615150565b9050949350505050565b600060a0820190508181036000830152615401818861501f565b9050818103602083015261541581876150f2565b90508181036040830152615429818661501f565b9050818103606083015261543d818561501f565b905081810360808301526154518184615150565b90509695505050505050565b600060608201905081810360008301526154778186615150565b9050818103602083015261548b818561501f565b9050818103604083015261549f818461501f565b9050949350505050565b600060c08201905081810360008301526154c38189615150565b905081810360208301526154d7818861507d565b905081810360408301526154eb818761507d565b905081810360608301526154ff8186615150565b905081810360808301526155138185615150565b905081810360a08301526155278184615150565b9050979650505050505050565b600060208201905061554960008301846151ae565b92915050565b600060208201905061556460008301846151cc565b92915050565b600060408201905061557f60008301856151cc565b81810360208301526155918184615214565b90509392505050565b600060e0820190506155af600083018a6151cc565b81810360208301526155c18189615214565b90506155d06040830188615322565b6155dd60608301876151cc565b6155ea60808301866151cc565b6155f760a0830185615340565b61560460c0830184615340565b98975050505050505050565b600061014082019050818103600083015261562b818d615214565b9050818103602083015261563f818c615214565b905061564e604083018b614fb2565b61565b606083018a615340565b6156686080830189615340565b61567560a0830188615340565b81810360c0830152615687818761501f565b905081810360e083015261569b8186614fc1565b90508181036101008301526156b0818561501f565b90508181036101208301526156c58184615150565b90509b9a5050505050505050505050565b600060a08201905081810360008301526156f0818861524d565b90508181036020830152615704818761524d565b9050615713604083018661534f565b615720606083018561534f565b61572d6080830184615340565b9695505050505050565b60006020820190508181036000830152615750816152cd565b9050919050565b60006020820190508181036000830152615770816152f0565b9050919050565b600060208201905061578c6000830184615340565b92915050565b60006040820190506157a76000830185615340565b6157b460208301846151ae565b9392505050565b60006157c56157d6565b90506157d18282615d32565b919050565b6000604051905090565b600067ffffffffffffffff8211156157fb576157fa615e0a565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561582757615826615e0a565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561585357615852615e0a565b5b61585c82615e39565b9050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006159d382615c78565b91506159de83615c78565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115615a1357615a12615dac565b5b828201905092915050565b6000808291508390505b6001851115615a6857808604811115615a4457615a43615dac565b5b6001851615615a535780820291505b8081029050615a6185615e4a565b9450615a28565b94509492505050565b6000615a7c82615c78565b9150615a8783615c78565b9250615ab47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484615abc565b905092915050565b600082615acc5760019050615b88565b81615ada5760009050615b88565b8160018114615af05760028114615afa57615b29565b6001915050615b88565b60ff841115615b0c57615b0b615dac565b5b8360020a915084821115615b2357615b22615dac565b5b50615b88565b5060208310610133831016604e8410600b8410161715615b5e5782820a905083811115615b5957615b58615dac565b5b615b88565b615b6b8484846001615a1e565b92509050818404811115615b8257615b81615dac565b5b81810290505b9392505050565b6000615b9a82615c78565b9150615ba583615c78565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615615bde57615bdd615dac565b5b828202905092915050565b6000615bf482615c78565b9150615bff83615c78565b925082821015615c1257615c11615dac565b5b828203905092915050565b6000615c2882615c57565b9050919050565b60008115159050919050565b6000819050919050565b6000615c5082615c96565b9050919050565b600074ffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b600069ffffffffffffffffffff82169050919050565b6000615cb782615c82565b9050919050565b82818337600083830152505050565b60005b83811015615ceb578082015181840152602081019050615cd0565b83811115615cfa576000848401525b50505050565b60006002820490506001821680615d1857607f821691505b60208210811415615d2c57615d2b615ddb565b5b50919050565b615d3b82615e39565b810181811067ffffffffffffffff82111715615d5a57615d59615e0a565b5b80604052505050565b6000615d6e82615c78565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415615da157615da0615dac565b5b600182019050919050565b7fe0f8f85500000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7fe0f8f85500000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7fe0f8f85500000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b615ed881615c1d565b8114615ee357600080fd5b50565b615eef81615c2f565b8114615efa57600080fd5b50565b615f0681615c3b565b8114615f1157600080fd5b50565b615f1d81615c45565b8114615f2857600080fd5b50565b615f3481615c78565b8114615f3f57600080fd5b5056fea165627a7a7230582000000000000000000000000000000000000000000000000000000000000000000029","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0x15 CALLER PUSH3 0x1B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xE4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9A78605A08FE53B920ADFC51344C28ABD504BD2378DB8D7DCDD50E527CBEBE57 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x5F6E DUP1 PUSH3 0xF4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x4028 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 PUSH1 0x0 PUSH2 0x8B PUSH1 0x7 PUSH1 0x0 DUP8 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH2 0x3016 JUMP JUMPDEST SWAP1 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCD JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP4 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13E JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x16C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AF JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1DD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 JUMPDEST PUSH2 0x22C PUSH1 0x7 PUSH1 0x0 DUP9 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH2 0x3016 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x43A JUMPI PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP9 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2B1 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B ADD SLOAD SWAP1 POP DUP1 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2F8 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x33E JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 ADD SLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x389 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3CF JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x1 ADD SLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x41A JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP DUP1 DUP1 PUSH2 0x432 SWAP1 PUSH2 0x5D63 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1E3 JUMP JUMPDEST POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x450 DUP5 DUP5 PUSH2 0x3027 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP2 POP SWAP2 POP PUSH1 0x0 JUMPDEST DUP4 PUSH1 0x8 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x51C JUMPI DUP3 DUP5 PUSH1 0x8 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4AB JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B ADD SLOAD GT ISZERO PUSH2 0x509 JUMPI DUP4 PUSH1 0x8 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4F8 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B ADD SLOAD SWAP3 POP DUP1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x514 SWAP1 PUSH2 0x5D63 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x45F JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x9 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 DUP5 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x1 ADD SLOAD GT SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A9 DUP4 DUP4 PUSH2 0x308A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP5 DUP5 PUSH2 0x5BD DUP3 DUP3 PUSH2 0x30F9 JUMP JUMPDEST PUSH2 0x5C6 CALLER PUSH2 0xAB4 JUMP JUMPDEST PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5D9 DUP8 DUP7 PUSH2 0x2424 JUMP JUMPDEST PUSH2 0x5E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5ED DUP8 DUP8 DUP8 PUSH2 0x529 JUMP JUMPDEST ISZERO PUSH2 0x5F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x603 DUP9 DUP9 PUSH2 0x3027 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 ADD DUP1 SLOAD SWAP1 POP DUP6 LT PUSH2 0x618 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP7 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 DUP9 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B SWAP1 POP DUP6 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP5 DUP3 PUSH1 0x8 ADD DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x755 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x76E SWAP2 SWAP1 PUSH2 0x59C8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH2 0x78A DUP2 PUSH2 0x3110 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x7C6 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP DUP4 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x80C DUP2 PUSH2 0x3137 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x921 JUMPI PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x88F JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x919 SWAP1 PUSH2 0x5D63 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x80F JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x9EC JUMPI PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x97E JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x9E4 SWAP1 PUSH2 0x5D63 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x925 JUMP JUMPDEST POP DUP2 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xA14 SWAP3 SWAP2 SWAP1 PUSH2 0x3DF0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xA59 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP4 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 DUP1 PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD SWAP1 POP DUP8 LT ISZERO PUSH2 0x10D3 JUMPI PUSH1 0x0 DUP7 DUP9 PUSH1 0x1 DUP1 SLOAD SWAP1 POP PUSH2 0xB35 SWAP2 SWAP1 PUSH2 0x5BE9 JUMP JUMPDEST GT PUSH2 0xB50 JUMPI DUP8 PUSH1 0x1 DUP1 SLOAD SWAP1 POP PUSH2 0xB4B SWAP2 SWAP1 PUSH2 0x5BE9 JUMP JUMPDEST PUSH2 0xB52 JUMP JUMPDEST DUP7 JUMPDEST SWAP1 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB94 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBC2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP6 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC05 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC33 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP5 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC76 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xCA4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP4 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCE7 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD15 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD58 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD86 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 DUP9 SWAP1 POP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 POP DUP2 LT DUP1 ISZERO PUSH2 0xDAD JUMPI POP DUP8 DUP10 PUSH2 0xDAA SWAP2 SWAP1 PUSH2 0x59C8 JUMP JUMPDEST DUP2 LT JUMPDEST ISZERO PUSH2 0x10D0 JUMPI PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xDEC JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 ADD SLOAD DUP8 DUP11 DUP4 PUSH2 0xE0B SWAP2 SWAP1 PUSH2 0x5BE9 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xE42 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE88 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP11 DUP4 PUSH2 0xEBD SWAP2 SWAP1 PUSH2 0x5BE9 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xEF4 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF54 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x1 ADD SLOAD DUP6 DUP11 DUP4 PUSH2 0xF73 SWAP2 SWAP1 PUSH2 0x5BE9 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xFAA JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xFF0 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x2 ADD SLOAD DUP5 DUP11 DUP4 PUSH2 0x100F SWAP2 SWAP1 PUSH2 0x5BE9 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1046 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x106D PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH2 0x314D JUMP JUMPDEST DUP4 DUP11 DUP4 PUSH2 0x107A SWAP2 SWAP1 PUSH2 0x5BE9 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x10B1 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x10C8 SWAP1 PUSH2 0x5D63 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD8F JUMP JUMPDEST POP POP JUMPDEST SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x1123 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 ADD SLOAD PUSH1 0x1 DUP10 DUP2 SLOAD DUP2 LT PUSH2 0x116F JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x3 ADD PUSH1 0x1 DUP11 DUP2 SLOAD DUP2 LT PUSH2 0x11BA JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP12 DUP2 SLOAD DUP2 LT PUSH2 0x121C JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x1 DUP13 DUP2 SLOAD DUP2 LT PUSH2 0x1268 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x2 ADD SLOAD PUSH2 0x1295 PUSH1 0x4 PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH2 0x314D JUMP JUMPDEST PUSH1 0x1 DUP15 DUP2 SLOAD DUP2 LT PUSH2 0x12CF JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x5 ADD SLOAD DUP6 DUP1 SLOAD PUSH2 0x12ED SWAP1 PUSH2 0x5D00 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1319 SWAP1 PUSH2 0x5D00 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1366 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x133B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1366 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1349 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP6 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP1 SWAP3 SWAP5 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP9 PUSH2 0x143D DUP2 PUSH2 0x315E JUMP JUMPDEST TOKENID PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP12 DUP2 SLOAD DUP2 LT PUSH2 0x1484 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP12 DUP2 SLOAD DUP2 LT PUSH2 0x14FE JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP PUSH1 0x0 PUSH2 0x151A DUP13 CALLER PUSH2 0x24DB JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x153E JUMPI DUP1 PUSH2 0x153D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x15B0 JUMPI POP PUSH1 0x1 DUP13 DUP2 SLOAD DUP2 LT PUSH2 0x157F JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x5 ADD SLOAD PUSH1 0xA PUSH2 0x159D SWAP2 SWAP1 PUSH2 0x5A71 JUMP JUMPDEST DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x15AC SWAP2 SWAP1 PUSH2 0x5B8F JUMP JUMPDEST CALLVALUE LT ISZERO JUMPDEST PUSH2 0x15B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 DUP10 LT DUP1 ISZERO PUSH2 0x15C7 JUMPI POP TIMESTAMP DUP9 GT JUMPDEST PUSH2 0x15D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP10 EQ DUP1 PUSH2 0x15DF JUMPI POP TIMESTAMP DUP10 LT ISZERO JUMPDEST PUSH2 0x15E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 POP DUP13 LT PUSH2 0x15F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP7 MLOAD GT PUSH2 0x1607 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 MLOAD DUP6 MLOAD EQ PUSH2 0x1615 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 MLOAD DUP5 MLOAD EQ PUSH2 0x1623 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP15 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x3 PUSH1 0x0 DUP15 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x1 DUP2 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 POP POP PUSH1 0x0 PUSH2 0x1679 DUP15 DUP4 PUSH2 0x3027 JUMP JUMPDEST SWAP1 POP DUP13 DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1693 SWAP3 SWAP2 SWAP1 PUSH2 0x3E7C JUMP JUMPDEST POP DUP12 DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x16AC SWAP3 SWAP2 SWAP1 PUSH2 0x3E7C JUMP JUMPDEST POP PUSH1 0x0 DUP12 EQ PUSH2 0x16BB JUMPI DUP11 PUSH2 0x16BD JUMP JUMPDEST TIMESTAMP JUMPDEST DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP10 DUP2 PUSH1 0x2 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP8 DUP2 PUSH1 0x5 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x172A SWAP3 SWAP2 SWAP1 PUSH2 0x3F02 JUMP JUMPDEST POP DUP7 DUP2 PUSH1 0x6 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1743 SWAP3 SWAP2 SWAP1 PUSH2 0x3DF0 JUMP JUMPDEST POP DUP6 DUP2 PUSH1 0x7 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x175C SWAP3 SWAP2 SWAP1 PUSH2 0x3F02 JUMP JUMPDEST POP CALLER DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP8 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17E3 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1811 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP DUP2 PUSH1 0x8 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1829 SWAP3 SWAP2 SWAP1 PUSH2 0x3F4F JUMP JUMPDEST POP DUP9 DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP15 DUP4 PUSH32 0x4DD34088F7B48A18379B03B82C8B41E51A23BC7C71D55FFCCC9E705BA491575E DUP5 PUSH1 0x1 ADD DUP6 PUSH1 0x0 ADD DUP7 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP8 PUSH1 0x2 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x18BE SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x56D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 CALLER PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND TOKENID PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND CALLVALUE PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP1 DUP3 SUB SWAP1 DUP4 DUP6 DUP8 CALL POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x191A PUSH2 0x3196 JUMP JUMPDEST PUSH1 0x0 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x198C JUMPI PUSH1 0x40 MLOAD PUSH32 0x4B2BAE7E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1983 SWAP1 PUSH2 0x5737 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1995 DUP2 PUSH2 0x320F JUMP JUMPDEST POP JUMP JUMPDEST PUSH8 0x8AC7230489E80000 DUP2 JUMP JUMPDEST PUSH2 0x19AD DUP2 PUSH2 0x315E JUMP JUMPDEST PUSH2 0x19D2 CALLER PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH2 0x32D8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A25 DUP2 PUSH1 0x7 PUSH1 0x0 CALLER PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH2 0x3626 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A32 DUP2 CALLER PUSH2 0x2424 JUMP JUMPDEST ISZERO PUSH2 0x1A3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A64 CALLER PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH2 0x37E3 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1ABA DUP2 PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH2 0x39E6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 DUP1 PUSH1 0x60 DUP1 PUSH1 0x0 DUP9 SWAP1 POP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP1 SLOAD SWAP1 POP DUP2 LT DUP1 ISZERO PUSH2 0x1AFB JUMPI POP DUP8 DUP10 PUSH2 0x1AF8 SWAP2 SWAP1 PUSH2 0x59C8 JUMP JUMPDEST DUP2 LT JUMPDEST ISZERO PUSH2 0x2012 JUMPI DUP1 DUP8 DUP11 DUP4 PUSH2 0x1B0E SWAP2 SWAP1 PUSH2 0x5BE9 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1B45 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x3 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1B9C JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0xA MUL ADD PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1BB8 SWAP1 PUSH2 0x5D00 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1BE4 SWAP1 PUSH2 0x5D00 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1C31 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1C06 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1C31 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1C14 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP7 DUP11 DUP4 PUSH2 0x1C43 SWAP2 SWAP1 PUSH2 0x5BE9 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1C7A JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1CD0 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x1CEC SWAP1 PUSH2 0x5D00 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D18 SWAP1 PUSH2 0x5D00 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D65 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D3A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D65 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D48 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP6 DUP11 DUP4 PUSH2 0x1D77 SWAP2 SWAP1 PUSH2 0x5BE9 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1DAE JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1E04 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0xA MUL ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP5 DUP11 DUP4 PUSH2 0x1E41 SWAP2 SWAP1 PUSH2 0x5BE9 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1E78 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x3 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1ECF JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0xA MUL ADD PUSH1 0x2 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP4 DUP11 DUP4 PUSH2 0x1F0C SWAP2 SWAP1 PUSH2 0x5BE9 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1F43 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x3 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1F9A JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0xA MUL ADD PUSH1 0x5 ADD DUP1 SLOAD SWAP1 POP DUP3 DUP11 DUP4 PUSH2 0x1FBC SWAP2 SWAP1 PUSH2 0x5BE9 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1FF3 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x200A SWAP1 PUSH2 0x5D63 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1ACC JUMP JUMPDEST POP SWAP4 SWAP8 POP SWAP4 SWAP8 SWAP2 SWAP6 POP SWAP4 POP JUMP JUMPDEST PUSH2 0x2027 PUSH2 0x3196 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH1 0x0 DUP4 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP1 PUSH1 0x60 DUP1 PUSH1 0x0 PUSH2 0x209F DUP14 DUP14 PUSH2 0x3027 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD DUP2 PUSH1 0x0 ADD DUP3 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x2 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x3 ADD SLOAD DUP7 PUSH1 0x5 ADD DUP8 PUSH1 0x6 ADD DUP9 PUSH1 0x7 ADD DUP10 PUSH1 0x8 ADD DUP10 DUP1 SLOAD PUSH2 0x2122 SWAP1 PUSH2 0x5D00 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x214E SWAP1 PUSH2 0x5D00 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x219B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2170 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x219B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x217E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP10 POP DUP9 DUP1 SLOAD PUSH2 0x21AE SWAP1 PUSH2 0x5D00 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x21DA SWAP1 PUSH2 0x5D00 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2227 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x21FC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2227 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x220A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP9 POP DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP7 POP DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP6 POP DUP4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2293 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x227F JUMPI JUMPDEST POP POP POP POP POP SWAP4 POP DUP3 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x231D JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x22D1 JUMPI JUMPDEST POP POP POP POP POP SWAP3 POP DUP2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x236F JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x235B JUMPI JUMPDEST POP POP POP POP POP SWAP2 POP DUP1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x23C1 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x23AD JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP2 SWAP5 SWAP8 SWAP11 POP SWAP3 SWAP6 SWAP9 POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP PUSH2 0x23F9 DUP5 DUP5 PUSH2 0x3027 JUMP JUMPDEST PUSH1 0x2 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND LT SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x244D DUP4 PUSH1 0x4 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH2 0x3AC7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST EQ SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x245E PUSH2 0x3196 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP4 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 DUP4 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x254E JUMPI POP PUSH2 0x254D DUP4 DUP4 PUSH2 0x13C4 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP7 PUSH2 0x2560 DUP2 PUSH2 0x3110 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP10 DUP2 SLOAD DUP2 LT PUSH2 0x259C JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP DUP8 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP7 DUP2 PUSH1 0x3 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x25CD SWAP3 SWAP2 SWAP1 PUSH2 0x3E7C JUMP JUMPDEST POP DUP6 DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH10 0xFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0xFF AND DUP2 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x263B PUSH2 0x3196 JUMP JUMPDEST PUSH2 0x2645 PUSH1 0x0 PUSH2 0x320F JUMP JUMPDEST JUMP JUMPDEST PUSH8 0x8AC7230489E80000 CALLVALUE EQ DUP1 ISZERO PUSH2 0x267F JUMPI POP PUSH10 0x5649544520544F4B454E PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND TOKENID PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x2688 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH2 0x269A PUSH2 0x3F9C JUMP JUMPDEST DUP8 DUP2 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP7 DUP2 PUSH1 0x60 ADD DUP2 SWAP1 MSTORE POP DUP6 DUP2 PUSH1 0x80 ADD SWAP1 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP TIMESTAMP DUP2 PUSH1 0xC0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x275F SWAP3 SWAP2 SWAP1 PUSH2 0x3E7C JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH10 0xFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE POP POP PUSH1 0x2 PUSH1 0x1 DUP2 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 POP POP CALLER PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP8 DUP7 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x92AC3827B776C572E5D72006A513F694B98B56B65E899BBDDE95C3B1103B00F2 DUP9 DUP12 PUSH1 0x40 MLOAD PUSH2 0x285B SWAP3 SWAP2 SWAP1 PUSH2 0x556A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x286C DUP3 PUSH2 0x1A28 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 DUP2 PUSH2 0x2882 DUP3 DUP3 PUSH2 0x3B15 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x288E DUP3 DUP3 PUSH2 0x2E97 JUMP JUMPDEST ISZERO PUSH2 0x2898 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x28A4 DUP8 DUP8 PUSH2 0x443 JUMP JUMPDEST SWAP1 POP PUSH2 0x28B1 DUP8 DUP8 DUP4 PUSH2 0x3B2C JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 PUSH1 0xA PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP1 SLOAD SWAP1 POP DUP6 LT ISZERO PUSH2 0x2D95 JUMPI PUSH1 0x0 DUP5 DUP7 PUSH1 0xA PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP1 SLOAD SWAP1 POP PUSH2 0x2924 SWAP2 SWAP1 PUSH2 0x5BE9 JUMP JUMPDEST GT PUSH2 0x2961 JUMPI DUP6 PUSH1 0xA PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP1 SLOAD SWAP1 POP PUSH2 0x295C SWAP2 SWAP1 PUSH2 0x5BE9 JUMP JUMPDEST PUSH2 0x2963 JUMP JUMPDEST DUP5 JUMPDEST SWAP1 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29A5 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x29D3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP4 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A16 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2A44 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A87 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2AB5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 DUP7 SWAP1 POP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP1 SLOAD SWAP1 POP DUP2 LT DUP1 ISZERO PUSH2 0x2AFE JUMPI POP DUP6 DUP8 PUSH2 0x2AFB SWAP2 SWAP1 PUSH2 0x59C8 JUMP JUMPDEST DUP2 LT JUMPDEST ISZERO PUSH2 0x2D92 JUMPI PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2B61 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 DUP7 DUP10 DUP5 PUSH2 0x2B9D SWAP2 SWAP1 PUSH2 0x5BE9 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x2BD4 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x9 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 DUP3 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x1 ADD SLOAD DUP6 DUP10 DUP5 PUSH2 0x2C84 SWAP2 SWAP1 PUSH2 0x5BE9 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x2CBB JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x9 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 DUP3 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 ADD SLOAD DUP5 DUP10 DUP5 PUSH2 0x2D3B SWAP2 SWAP1 PUSH2 0x5BE9 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x2D72 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP DUP1 DUP1 PUSH2 0x2D8A SWAP1 PUSH2 0x5D63 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2ABE JUMP JUMPDEST POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2DDB JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x6 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2E8B JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2E3F JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x2ED2 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2EDC DUP5 DUP5 PUSH2 0x3027 JUMP JUMPDEST PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2F25 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F37 DUP2 PUSH2 0x3CD9 JUMP JUMPDEST PUSH2 0x2F40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2F7C JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH10 0x5649544520544F4B454E PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND PUSH8 0x8AC7230489E80000 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP1 DUP3 SUB SWAP1 DUP4 DUP6 DUP8 CALL POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3074 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0xA MUL ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP PUSH2 0x3097 DUP5 DUP5 PUSH2 0x3027 JUMP JUMPDEST PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO DUP1 ISZERO PUSH2 0x30F1 JUMPI POP TIMESTAMP PUSH2 0x30CD DUP5 DUP5 PUSH2 0x3027 JUMP JUMPDEST PUSH1 0x2 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND GT JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3103 DUP3 DUP3 PUSH2 0x308A JUMP JUMPDEST PUSH2 0x310C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x311A DUP2 CALLER PUSH2 0x24DB JUMP JUMPDEST DUP1 PUSH2 0x312B JUMPI POP PUSH2 0x312A DUP2 CALLER PUSH2 0x13C4 JUMP JUMPDEST JUMPDEST PUSH2 0x3134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3141 DUP2 CALLER PUSH2 0x13C4 JUMP JUMPDEST PUSH2 0x314A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3168 DUP2 CALLER PUSH2 0x2424 JUMP JUMPDEST DUP1 PUSH2 0x3179 JUMPI POP PUSH2 0x3178 DUP2 CALLER PUSH2 0x24DB JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x318A JUMPI POP PUSH2 0x3189 DUP2 CALLER PUSH2 0x13C4 JUMP JUMPDEST JUMPDEST PUSH2 0x3193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST CALLER PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31B6 PUSH2 0xA8A JUMP JUMPDEST PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x320D JUMPI PUSH1 0x40 MLOAD PUSH32 0x4B2BAE7E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3204 SWAP1 PUSH2 0x5757 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9A78605A08FE53B920ADFC51344C28ABD504BD2378DB8D7DCDD50E527CBEBE57 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x3 ADD PUSH1 0x0 DUP3 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3332 JUMPI PUSH2 0x3622 JUMP JUMPDEST DUP2 PUSH1 0x3 ADD PUSH1 0x0 DUP3 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP3 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 SWAP1 SSTORE PUSH1 0x0 DUP3 PUSH1 0x2 ADD PUSH1 0x0 DUP4 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x342A SWAP2 SWAP1 PUSH2 0x5BE9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x346A JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP6 PUSH1 0x2 ADD PUSH1 0x0 DUP4 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x2 ADD PUSH1 0x0 DUP6 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 SWAP1 SSTORE DUP1 DUP6 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x3564 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x35E8 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE POP POP POP JUMPDEST POP POP JUMP JUMPDEST DUP2 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3652 JUMPI PUSH2 0x37DF JUMP JUMPDEST DUP2 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 SWAP1 SSTORE PUSH1 0x0 DUP3 PUSH1 0x2 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x36C0 SWAP2 SWAP1 PUSH2 0x5BE9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3700 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B ADD SLOAD SWAP1 POP DUP3 DUP6 PUSH1 0x2 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x2 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 SWAP1 SSTORE DUP1 DUP6 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x377D JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B ADD DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x37C5 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP JUMPDEST POP POP JUMP JUMPDEST DUP3 PUSH1 0x3 ADD PUSH1 0x0 DUP4 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3886 JUMPI DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP2 SWAP1 SSTORE POP PUSH2 0x39E1 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x3 ADD PUSH1 0x0 DUP5 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x2 ADD PUSH1 0x0 DUP5 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x3 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3A2D JUMPI DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP2 SWAP1 SSTORE POP PUSH2 0x3AC2 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x3 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x2 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP4 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3B1F DUP3 DUP3 PUSH2 0x23EC JUMP JUMPDEST PUSH2 0x3B28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B38 DUP5 DUP5 PUSH2 0x3027 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 ADD DUP1 SLOAD SWAP1 POP DUP3 LT PUSH2 0x3B4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x6 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3B8B JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x7 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x3BF7 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3C45 JUMPI PUSH2 0x3C44 DUP3 DUP3 PUSH2 0x3D95 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3C93 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP DUP6 DUP6 PUSH32 0x9B6F2CEF359EA2598EC10BC9AD9D2D0DA42BED0A38D593C22E70FDA4C9A38B44 DUP7 PUSH1 0x40 MLOAD PUSH2 0x3CC9 SWAP2 SWAP1 PUSH2 0x5777 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3D16 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x6 ADD SLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x3D8E JUMPI POP TIMESTAMP PUSH3 0x76A700 PUSH1 0x1 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x3D70 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x6 ADD SLOAD PUSH2 0x3D8C SWAP2 SWAP1 PUSH2 0x59C8 JUMP JUMPDEST LT JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB7A61296 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DCF SWAP2 SWAP1 PUSH2 0x554F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP1 DUP3 SUB SWAP1 PUSH1 0x0 PUSH10 0x5649544520544F4B454E DUP7 CALL POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x3E6B JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3E6A JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3E10 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x3E78 SWAP2 SWAP1 PUSH2 0x3FEE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x3E88 SWAP1 PUSH2 0x5D00 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x3EAA JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x3EF1 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x3EC3 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x3EF1 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x3EF1 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3EF0 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3ED5 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x3EFE SWAP2 SWAP1 PUSH2 0x3FEE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x3F3E JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3F3D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3F22 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x3F4B SWAP2 SWAP1 PUSH2 0x400B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x3F8B JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3F8A JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3F6F JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x3F98 SWAP2 SWAP1 PUSH2 0x3FEE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x4007 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x3FEF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x4024 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x400C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41D9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82F5974 EQ PUSH2 0x41DB JUMPI DUP1 PUSH4 0x8B0311C EQ PUSH2 0x420B JUMPI DUP1 PUSH4 0x1244B9EA EQ PUSH2 0x423D JUMPI DUP1 PUSH4 0x1927510A EQ PUSH2 0x426D JUMPI DUP1 PUSH4 0x1C2AA460 EQ PUSH2 0x429D JUMPI DUP1 PUSH4 0x224CF1C7 EQ PUSH2 0x42CD JUMPI DUP1 PUSH4 0x2518A525 EQ PUSH2 0x42E9 JUMPI DUP1 PUSH4 0x2B61F5F1 EQ PUSH2 0x4305 JUMPI DUP1 PUSH4 0x30FBEB91 EQ PUSH2 0x4321 JUMPI DUP1 PUSH4 0x33613933 EQ PUSH2 0x4352 JUMPI DUP1 PUSH4 0x33653289 EQ PUSH2 0x4370 JUMPI DUP1 PUSH4 0x402993F4 EQ PUSH2 0x43A0 JUMPI DUP1 PUSH4 0x555FEC4B EQ PUSH2 0x43D4 JUMPI DUP1 PUSH4 0x58FAF7E6 EQ PUSH2 0x440A JUMPI DUP1 PUSH4 0x758AE6FE EQ PUSH2 0x443A JUMPI DUP1 PUSH4 0x777CD61D EQ PUSH2 0x446A JUMPI DUP1 PUSH4 0x7BBCBEAD EQ PUSH2 0x4486 JUMPI DUP1 PUSH4 0x7E04AABC EQ PUSH2 0x44A2 JUMPI DUP1 PUSH4 0x8264B3C5 EQ PUSH2 0x44C0 JUMPI DUP1 PUSH4 0x82AB3B2F EQ PUSH2 0x44DC JUMPI DUP1 PUSH4 0x84EDB26D EQ PUSH2 0x44F8 JUMPI DUP1 PUSH4 0x9EF90BA3 EQ PUSH2 0x452D JUMPI DUP1 PUSH4 0xB081F695 EQ PUSH2 0x4549 JUMPI DUP1 PUSH4 0xBC1B8601 EQ PUSH2 0x4582 JUMPI DUP1 PUSH4 0xBC32DF2D EQ PUSH2 0x45B2 JUMPI DUP1 PUSH4 0xBF9A72CB EQ PUSH2 0x45E2 JUMPI DUP1 PUSH4 0xC19DD0E2 EQ PUSH2 0x45FE JUMPI DUP1 PUSH4 0xC2A9073D EQ PUSH2 0x462E JUMPI DUP1 PUSH4 0xC3715233 EQ PUSH2 0x465E JUMPI DUP1 PUSH4 0xC4CA0D25 EQ PUSH2 0x467A JUMPI DUP1 PUSH4 0xCFA286AA EQ PUSH2 0x4698 JUMPI DUP1 PUSH4 0xD2F708AE EQ PUSH2 0x46A2 JUMPI DUP1 PUSH4 0xD36F0336 EQ PUSH2 0x46BE JUMPI DUP1 PUSH4 0xDE28FD0E EQ PUSH2 0x46DA JUMPI DUP1 PUSH4 0xDF0B5099 EQ PUSH2 0x470C JUMPI DUP1 PUSH4 0xE9FEDE53 EQ PUSH2 0x473C JUMPI DUP1 PUSH4 0xEA5E42E3 EQ PUSH2 0x476C JUMPI DUP1 PUSH4 0xED3C2F29 EQ PUSH2 0x479C JUMPI JUMPDEST STOP JUMPDEST PUSH2 0x41F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41F0 SWAP2 SWAP1 PUSH2 0x4D2C JUMP JUMPDEST PUSH2 0x9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4202 SWAP2 SWAP1 PUSH2 0x5777 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4225 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4220 SWAP2 SWAP1 PUSH2 0x49B5 JUMP JUMPDEST PUSH2 0x3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4234 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x545D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4252 SWAP2 SWAP1 PUSH2 0x4D2C JUMP JUMPDEST PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4264 SWAP2 SWAP1 PUSH2 0x5777 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4287 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4282 SWAP2 SWAP1 PUSH2 0x4D68 JUMP JUMPDEST PUSH2 0x529 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4294 SWAP2 SWAP1 PUSH2 0x5534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42B2 SWAP2 SWAP1 PUSH2 0x4D2C JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42C4 SWAP2 SWAP1 PUSH2 0x5534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42E2 SWAP2 SWAP1 PUSH2 0x4DB7 JUMP JUMPDEST PUSH2 0x5B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4303 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42FE SWAP2 SWAP1 PUSH2 0x4E2E JUMP JUMPDEST PUSH2 0x780 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x431F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x431A SWAP2 SWAP1 PUSH2 0x4AE4 JUMP JUMPDEST PUSH2 0x802 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x433B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4336 SWAP2 SWAP1 PUSH2 0x4A7F JUMP JUMPDEST PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4349 SWAP3 SWAP2 SWAP1 PUSH2 0x5792 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x435A PUSH2 0xA8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4367 SWAP2 SWAP1 PUSH2 0x535E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x438A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4385 SWAP2 SWAP1 PUSH2 0x49B5 JUMP JUMPDEST PUSH2 0xAB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4397 SWAP2 SWAP1 PUSH2 0x5534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43B5 SWAP2 SWAP1 PUSH2 0x4D2C JUMP JUMPDEST PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43CB SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x53E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43E9 SWAP2 SWAP1 PUSH2 0x4A7F JUMP JUMPDEST PUSH2 0x10DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4401 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x559A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4424 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x441F SWAP2 SWAP1 PUSH2 0x4A7F JUMP JUMPDEST PUSH2 0x1386 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4431 SWAP2 SWAP1 PUSH2 0x535E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4454 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x444F SWAP2 SWAP1 PUSH2 0x4AA8 JUMP JUMPDEST PUSH2 0x13C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4461 SWAP2 SWAP1 PUSH2 0x5534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4484 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x447F SWAP2 SWAP1 PUSH2 0x4BEE JUMP JUMPDEST PUSH2 0x1433 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x449B SWAP2 SWAP1 PUSH2 0x49B5 JUMP JUMPDEST PUSH2 0x1912 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44AA PUSH2 0x1998 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44B7 SWAP2 SWAP1 PUSH2 0x5777 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44D5 SWAP2 SWAP1 PUSH2 0x4A7F JUMP JUMPDEST PUSH2 0x19A4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44F1 SWAP2 SWAP1 PUSH2 0x4A7F JUMP JUMPDEST PUSH2 0x1A28 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4512 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x450D SWAP2 SWAP1 PUSH2 0x4E7D JUMP JUMPDEST PUSH2 0x1ABD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4524 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x54A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4547 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4542 SWAP2 SWAP1 PUSH2 0x49B5 JUMP JUMPDEST PUSH2 0x201F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4563 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x455E SWAP2 SWAP1 PUSH2 0x4D2C JUMP JUMPDEST PUSH2 0x2084 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4579 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5610 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x459C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4597 SWAP2 SWAP1 PUSH2 0x4D2C JUMP JUMPDEST PUSH2 0x23EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45A9 SWAP2 SWAP1 PUSH2 0x5534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45C7 SWAP2 SWAP1 PUSH2 0x4AA8 JUMP JUMPDEST PUSH2 0x2424 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45D9 SWAP2 SWAP1 PUSH2 0x5534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45F7 SWAP2 SWAP1 PUSH2 0x49B5 JUMP JUMPDEST PUSH2 0x2456 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4618 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4613 SWAP2 SWAP1 PUSH2 0x4A7F JUMP JUMPDEST PUSH2 0x24BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4625 SWAP2 SWAP1 PUSH2 0x5777 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4648 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4643 SWAP2 SWAP1 PUSH2 0x4AA8 JUMP JUMPDEST PUSH2 0x24DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4655 SWAP2 SWAP1 PUSH2 0x5534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4678 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4673 SWAP2 SWAP1 PUSH2 0x4B38 JUMP JUMPDEST PUSH2 0x2556 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4682 PUSH2 0x2626 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x468F SWAP2 SWAP1 PUSH2 0x5777 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46A0 PUSH2 0x2633 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46B7 SWAP2 SWAP1 PUSH2 0x49DE JUMP JUMPDEST PUSH2 0x2647 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46D3 SWAP2 SWAP1 PUSH2 0x4D2C JUMP JUMPDEST PUSH2 0x2876 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46EF SWAP2 SWAP1 PUSH2 0x4ECC JUMP JUMPDEST PUSH2 0x28BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4703 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x539B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4726 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4721 SWAP2 SWAP1 PUSH2 0x4A7F JUMP JUMPDEST PUSH2 0x2D9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4733 SWAP2 SWAP1 PUSH2 0x5777 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4756 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4751 SWAP2 SWAP1 PUSH2 0x4A7F JUMP JUMPDEST PUSH2 0x2DF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4763 SWAP2 SWAP1 PUSH2 0x5379 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4786 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4781 SWAP2 SWAP1 PUSH2 0x4D2C JUMP JUMPDEST PUSH2 0x2E97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4793 SWAP2 SWAP1 PUSH2 0x5534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47B1 SWAP2 SWAP1 PUSH2 0x4A7F JUMP JUMPDEST PUSH2 0x2F2E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x47CB PUSH2 0x47C6 DUP5 PUSH2 0x57E0 JUMP JUMPDEST PUSH2 0x57BB JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x47EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x481A JUMPI DUP2 PUSH2 0x4800 DUP9 DUP3 PUSH2 0x48CE JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x47ED JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4837 PUSH2 0x4832 DUP5 PUSH2 0x580C JUMP JUMPDEST PUSH2 0x57BB JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x4856 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x4886 JUMPI DUP2 PUSH2 0x486C DUP9 DUP3 PUSH2 0x494C JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4859 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A3 PUSH2 0x489E DUP5 PUSH2 0x5838 JUMP JUMPDEST PUSH2 0x57BB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x48BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x48C6 DUP5 DUP3 DUP6 PUSH2 0x5CBE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x48DD DUP2 PUSH2 0x5ECF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x48F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4904 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x47B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x491E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x492E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4824 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4946 DUP2 PUSH2 0x5EE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x495B DUP2 PUSH2 0x5EFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4972 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4982 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4890 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x499A DUP2 PUSH2 0x5F14 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x49AF DUP2 PUSH2 0x5F2B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x49C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x49D5 DUP5 DUP3 DUP6 ADD PUSH2 0x48CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x49F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4A05 DUP10 DUP3 DUP11 ADD PUSH2 0x494C JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4A22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A2E DUP10 DUP3 DUP11 ADD PUSH2 0x4961 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x4A3F DUP10 DUP3 DUP11 ADD PUSH2 0x498B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x4A50 DUP10 DUP3 DUP11 ADD PUSH2 0x494C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x4A61 DUP10 DUP3 DUP11 ADD PUSH2 0x494C JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x4A72 DUP10 DUP3 DUP11 ADD PUSH2 0x49A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4A9F DUP5 DUP3 DUP6 ADD PUSH2 0x49A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4ABB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4AC9 DUP6 DUP3 DUP7 ADD PUSH2 0x49A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4ADA DUP6 DUP3 DUP7 ADD PUSH2 0x48CE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4AF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4B05 DUP6 DUP3 DUP7 ADD PUSH2 0x49A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4B22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4B2E DUP6 DUP3 DUP7 ADD PUSH2 0x48E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x4B53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4B61 DUP11 DUP3 DUP12 ADD PUSH2 0x49A0 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x4B72 DUP11 DUP3 DUP12 ADD PUSH2 0x494C JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4B8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4B9B DUP11 DUP3 DUP12 ADD PUSH2 0x4961 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x4BAC DUP11 DUP3 DUP12 ADD PUSH2 0x498B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x4BBD DUP11 DUP3 DUP12 ADD PUSH2 0x49A0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x4BCE DUP11 DUP3 DUP12 ADD PUSH2 0x494C JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x4BDF DUP11 DUP3 DUP12 ADD PUSH2 0x494C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x4C0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4C1B DUP13 DUP3 DUP14 ADD PUSH2 0x49A0 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x20 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4C38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C44 DUP13 DUP3 DUP14 ADD PUSH2 0x4961 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x40 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4C61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C6D DUP13 DUP3 DUP14 ADD PUSH2 0x4961 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x60 PUSH2 0x4C7E DUP13 DUP3 DUP14 ADD PUSH2 0x49A0 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x80 PUSH2 0x4C8F DUP13 DUP3 DUP14 ADD PUSH2 0x49A0 JUMP JUMPDEST SWAP6 POP POP PUSH1 0xA0 PUSH2 0x4CA0 DUP13 DUP3 DUP14 ADD PUSH2 0x49A0 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4CBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4CC9 DUP13 DUP3 DUP14 ADD PUSH2 0x490D JUMP JUMPDEST SWAP4 POP POP PUSH1 0xE0 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4CE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4CF2 DUP13 DUP3 DUP14 ADD PUSH2 0x48E3 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x100 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4D10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4D1C DUP13 DUP3 DUP14 ADD PUSH2 0x490D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4D3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4D4D DUP6 DUP3 DUP7 ADD PUSH2 0x49A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4D5E DUP6 DUP3 DUP7 ADD PUSH2 0x49A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4D7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4D8B DUP7 DUP3 DUP8 ADD PUSH2 0x49A0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4D9C DUP7 DUP3 DUP8 ADD PUSH2 0x49A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x4DAD DUP7 DUP3 DUP8 ADD PUSH2 0x48CE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4DCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4DDD DUP9 DUP3 DUP10 ADD PUSH2 0x49A0 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x4DEE DUP9 DUP3 DUP10 ADD PUSH2 0x49A0 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x4DFF DUP9 DUP3 DUP10 ADD PUSH2 0x48CE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x4E10 DUP9 DUP3 DUP10 ADD PUSH2 0x49A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x4E21 DUP9 DUP3 DUP10 ADD PUSH2 0x49A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4E43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4E51 DUP7 DUP3 DUP8 ADD PUSH2 0x49A0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4E62 DUP7 DUP3 DUP8 ADD PUSH2 0x49A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x4E73 DUP7 DUP3 DUP8 ADD PUSH2 0x4937 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4E92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4EA0 DUP7 DUP3 DUP8 ADD PUSH2 0x49A0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4EB1 DUP7 DUP3 DUP8 ADD PUSH2 0x49A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x4EC2 DUP7 DUP3 DUP8 ADD PUSH2 0x49A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4EE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4EF0 DUP8 DUP3 DUP9 ADD PUSH2 0x49A0 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4F01 DUP8 DUP3 DUP9 ADD PUSH2 0x49A0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x4F12 DUP8 DUP3 DUP9 ADD PUSH2 0x49A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x4F23 DUP8 DUP3 DUP9 ADD PUSH2 0x49A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F3B DUP4 DUP4 PUSH2 0x4FA3 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F53 DUP4 DUP4 PUSH2 0x51BD JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F6B DUP4 DUP4 PUSH2 0x51DB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F7F DUP4 DUP4 PUSH2 0x5313 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F97 DUP4 DUP4 PUSH2 0x5331 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4FAC DUP2 PUSH2 0x5C1D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4FBB DUP2 PUSH2 0x5C1D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FCC DUP3 PUSH2 0x58CE JUMP JUMPDEST PUSH2 0x4FD6 DUP2 DUP6 PUSH2 0x5951 JUMP JUMPDEST SWAP4 POP PUSH2 0x4FE1 DUP4 PUSH2 0x5869 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5012 JUMPI DUP2 MLOAD PUSH2 0x4FF9 DUP9 DUP3 PUSH2 0x4F2F JUMP JUMPDEST SWAP8 POP PUSH2 0x5004 DUP4 PUSH2 0x5910 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4FE5 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x502A DUP3 PUSH2 0x58D9 JUMP JUMPDEST PUSH2 0x5034 DUP2 DUP6 PUSH2 0x5962 JUMP JUMPDEST SWAP4 POP PUSH2 0x503F DUP4 PUSH2 0x5879 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5070 JUMPI DUP2 MLOAD PUSH2 0x5057 DUP9 DUP3 PUSH2 0x4F47 JUMP JUMPDEST SWAP8 POP PUSH2 0x5062 DUP4 PUSH2 0x591D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5043 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5088 DUP3 PUSH2 0x58E4 JUMP JUMPDEST PUSH2 0x5092 DUP2 DUP6 PUSH2 0x5973 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x50A4 DUP6 PUSH2 0x5889 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x50E0 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x50C1 DUP6 DUP3 PUSH2 0x4F5F JUMP JUMPDEST SWAP5 POP PUSH2 0x50CC DUP4 PUSH2 0x592A JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x50A8 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50FD DUP3 PUSH2 0x58EF JUMP JUMPDEST PUSH2 0x5107 DUP2 DUP6 PUSH2 0x5984 JUMP JUMPDEST SWAP4 POP PUSH2 0x5112 DUP4 PUSH2 0x5899 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5143 JUMPI DUP2 MLOAD PUSH2 0x512A DUP9 DUP3 PUSH2 0x4F73 JUMP JUMPDEST SWAP8 POP PUSH2 0x5135 DUP4 PUSH2 0x5937 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5116 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x515B DUP3 PUSH2 0x58FA JUMP JUMPDEST PUSH2 0x5165 DUP2 DUP6 PUSH2 0x5995 JUMP JUMPDEST SWAP4 POP PUSH2 0x5170 DUP4 PUSH2 0x58A9 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x51A1 JUMPI DUP2 MLOAD PUSH2 0x5188 DUP9 DUP3 PUSH2 0x4F8B JUMP JUMPDEST SWAP8 POP PUSH2 0x5193 DUP4 PUSH2 0x5944 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5174 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x51B7 DUP2 PUSH2 0x5C2F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x51C6 DUP2 PUSH2 0x5C3B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x51D5 DUP2 PUSH2 0x5C3B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51E6 DUP3 PUSH2 0x5905 JUMP JUMPDEST PUSH2 0x51F0 DUP2 DUP6 PUSH2 0x59A6 JUMP JUMPDEST SWAP4 POP PUSH2 0x5200 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5CCD JUMP JUMPDEST PUSH2 0x5209 DUP2 PUSH2 0x5E39 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x521F DUP3 PUSH2 0x5905 JUMP JUMPDEST PUSH2 0x5229 DUP2 DUP6 PUSH2 0x59B7 JUMP JUMPDEST SWAP4 POP PUSH2 0x5239 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5CCD JUMP JUMPDEST PUSH2 0x5242 DUP2 PUSH2 0x5E39 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x525A DUP2 PUSH2 0x5D00 JUMP JUMPDEST PUSH2 0x5264 DUP2 DUP7 PUSH2 0x59B7 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x527F JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x5291 JUMPI PUSH2 0x52C4 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP4 POP PUSH2 0x52C4 JUMP JUMPDEST PUSH2 0x529A DUP6 PUSH2 0x58B9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x52BC JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x529D JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52DA PUSH1 0x26 DUP4 PUSH2 0x59B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x52E5 DUP3 PUSH2 0x5E57 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52FD PUSH1 0x20 DUP4 PUSH2 0x59B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x5308 DUP3 PUSH2 0x5EA6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x531C DUP2 PUSH2 0x5C45 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x532B DUP2 PUSH2 0x5C45 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x533A DUP2 PUSH2 0x5C78 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5349 DUP2 PUSH2 0x5C78 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5358 DUP2 PUSH2 0x5CAC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5373 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4FB2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5393 DUP2 DUP5 PUSH2 0x4FC1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x53B5 DUP2 DUP7 PUSH2 0x4FC1 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x53C9 DUP2 DUP6 PUSH2 0x5150 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x53DD DUP2 DUP5 PUSH2 0x5150 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5401 DUP2 DUP9 PUSH2 0x501F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x5415 DUP2 DUP8 PUSH2 0x50F2 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x5429 DUP2 DUP7 PUSH2 0x501F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x543D DUP2 DUP6 PUSH2 0x501F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x5451 DUP2 DUP5 PUSH2 0x5150 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5477 DUP2 DUP7 PUSH2 0x5150 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x548B DUP2 DUP6 PUSH2 0x501F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x549F DUP2 DUP5 PUSH2 0x501F JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x54C3 DUP2 DUP10 PUSH2 0x5150 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x54D7 DUP2 DUP9 PUSH2 0x507D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x54EB DUP2 DUP8 PUSH2 0x507D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x54FF DUP2 DUP7 PUSH2 0x5150 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x5513 DUP2 DUP6 PUSH2 0x5150 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x5527 DUP2 DUP5 PUSH2 0x5150 JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5549 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x51AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5564 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x51CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x557F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x51CC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x5591 DUP2 DUP5 PUSH2 0x5214 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x55AF PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x51CC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x55C1 DUP2 DUP10 PUSH2 0x5214 JUMP JUMPDEST SWAP1 POP PUSH2 0x55D0 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x5322 JUMP JUMPDEST PUSH2 0x55DD PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x51CC JUMP JUMPDEST PUSH2 0x55EA PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x51CC JUMP JUMPDEST PUSH2 0x55F7 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x5340 JUMP JUMPDEST PUSH2 0x5604 PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x5340 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x562B DUP2 DUP14 PUSH2 0x5214 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x563F DUP2 DUP13 PUSH2 0x5214 JUMP JUMPDEST SWAP1 POP PUSH2 0x564E PUSH1 0x40 DUP4 ADD DUP12 PUSH2 0x4FB2 JUMP JUMPDEST PUSH2 0x565B PUSH1 0x60 DUP4 ADD DUP11 PUSH2 0x5340 JUMP JUMPDEST PUSH2 0x5668 PUSH1 0x80 DUP4 ADD DUP10 PUSH2 0x5340 JUMP JUMPDEST PUSH2 0x5675 PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x5340 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x5687 DUP2 DUP8 PUSH2 0x501F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x569B DUP2 DUP7 PUSH2 0x4FC1 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x56B0 DUP2 DUP6 PUSH2 0x501F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x56C5 DUP2 DUP5 PUSH2 0x5150 JUMP JUMPDEST SWAP1 POP SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x56F0 DUP2 DUP9 PUSH2 0x524D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x5704 DUP2 DUP8 PUSH2 0x524D JUMP JUMPDEST SWAP1 POP PUSH2 0x5713 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x534F JUMP JUMPDEST PUSH2 0x5720 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x534F JUMP JUMPDEST PUSH2 0x572D PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x5340 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5750 DUP2 PUSH2 0x52CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5770 DUP2 PUSH2 0x52F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x578C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5340 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x57A7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x5340 JUMP JUMPDEST PUSH2 0x57B4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x51AE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57C5 PUSH2 0x57D6 JUMP JUMPDEST SWAP1 POP PUSH2 0x57D1 DUP3 DUP3 PUSH2 0x5D32 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x57FB JUMPI PUSH2 0x57FA PUSH2 0x5E0A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x5827 JUMPI PUSH2 0x5826 PUSH2 0x5E0A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x5853 JUMPI PUSH2 0x5852 PUSH2 0x5E0A JUMP JUMPDEST JUMPDEST PUSH2 0x585C DUP3 PUSH2 0x5E39 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x59D3 DUP3 PUSH2 0x5C78 JUMP JUMPDEST SWAP2 POP PUSH2 0x59DE DUP4 PUSH2 0x5C78 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x5A13 JUMPI PUSH2 0x5A12 PUSH2 0x5DAC JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x5A68 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x5A44 JUMPI PUSH2 0x5A43 PUSH2 0x5DAC JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x5A53 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x5A61 DUP6 PUSH2 0x5E4A JUMP JUMPDEST SWAP5 POP PUSH2 0x5A28 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A7C DUP3 PUSH2 0x5C78 JUMP JUMPDEST SWAP2 POP PUSH2 0x5A87 DUP4 PUSH2 0x5C78 JUMP JUMPDEST SWAP3 POP PUSH2 0x5AB4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x5ABC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x5ACC JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x5B88 JUMP JUMPDEST DUP2 PUSH2 0x5ADA JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x5B88 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x5AF0 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x5AFA JUMPI PUSH2 0x5B29 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x5B88 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x5B0C JUMPI PUSH2 0x5B0B PUSH2 0x5DAC JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x5B23 JUMPI PUSH2 0x5B22 PUSH2 0x5DAC JUMP JUMPDEST JUMPDEST POP PUSH2 0x5B88 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x5B5E JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x5B59 JUMPI PUSH2 0x5B58 PUSH2 0x5DAC JUMP JUMPDEST JUMPDEST PUSH2 0x5B88 JUMP JUMPDEST PUSH2 0x5B6B DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x5A1E JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x5B82 JUMPI PUSH2 0x5B81 PUSH2 0x5DAC JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B9A DUP3 PUSH2 0x5C78 JUMP JUMPDEST SWAP2 POP PUSH2 0x5BA5 DUP4 PUSH2 0x5C78 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x5BDE JUMPI PUSH2 0x5BDD PUSH2 0x5DAC JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BF4 DUP3 PUSH2 0x5C78 JUMP JUMPDEST SWAP2 POP PUSH2 0x5BFF DUP4 PUSH2 0x5C78 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x5C12 JUMPI PUSH2 0x5C11 PUSH2 0x5DAC JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C28 DUP3 PUSH2 0x5C57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C50 DUP3 PUSH2 0x5C96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CB7 DUP3 PUSH2 0x5C82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5CEB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5CD0 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x5CFA JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x5D18 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x5D2C JUMPI PUSH2 0x5D2B PUSH2 0x5DDB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5D3B DUP3 PUSH2 0x5E39 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x5D5A JUMPI PUSH2 0x5D59 PUSH2 0x5E0A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D6E DUP3 PUSH2 0x5C78 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x5DA1 JUMPI PUSH2 0x5DA0 PUSH2 0x5DAC JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x5ED8 DUP2 PUSH2 0x5C1D JUMP JUMPDEST DUP2 EQ PUSH2 0x5EE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5EEF DUP2 PUSH2 0x5C2F JUMP JUMPDEST DUP2 EQ PUSH2 0x5EFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5F06 DUP2 PUSH2 0x5C3B JUMP JUMPDEST DUP2 EQ PUSH2 0x5F11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5F1D DUP2 PUSH2 0x5C45 JUMP JUMPDEST DUP2 EQ PUSH2 0x5F28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5F34 DUP2 PUSH2 0x5C78 JUMP JUMPDEST DUP2 EQ PUSH2 0x5F3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP 0x29 ","sourceMap":"168:18015:2:-:0;;;893:30:1;912:10;893:18;;;:30;;:::i;:::-;168:18015:2;;2386:187:1;2459:16;2478:6;;;;;;;;;;;2459:25;;2503:8;2494:6;;:17;;;;;;;;;;;;;;;;;;2557:8;2526:40;;2547:8;2526:40;;;;;;;;;;;;2386:187;;:::o;168:18015:2:-;;;;;;;"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.6eb4927f.mod\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"JoinedSpace\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"LeftSpace\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"snapshot\",\"type\":\"uint256\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"choiceId\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"tokenId\",\"name\":\"token\",\"type\":\"tokenId\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"avatar\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"SpaceCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SPACE_CREATION_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator_\",\"type\":\"address\"}],\"name\":\"addOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"snapshot\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"choices\",\"type\":\"bytes32[]\"},{\"internalType\":\"address[]\",\"name\":\"choicesExecutors\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"choicesData\",\"type\":\"bytes32[]\"}],\"name\":\"createProposal\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"tokenId\",\"name\":\"spaceToken\",\"type\":\"tokenId\"},{\"internalType\":\"bytes32\",\"name\":\"avatar\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"website\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"spaceTokenDecimals\",\"type\":\"uint256\"}],\"name\":\"createSpace\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"executeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"}],\"name\":\"getCreationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"}],\"name\":\"getSpaceAdmins\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"}],\"name\":\"getSpaceExternal\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"tokenId\",\"name\":\"token\",\"type\":\"tokenId\"},{\"internalType\":\"bytes32\",\"name\":\"avatar\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"website\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"memberCounts\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenDecimals\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"}],\"name\":\"getSpaceOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getSpaceProposal\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"snapshot\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"choices\",\"type\":\"bytes32[]\"},{\"internalType\":\"address[]\",\"name\":\"choicesExecutors\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"choicesData\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"votes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getSpaceProposalVotersCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"skip\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"getSpaceProposalVotes\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"voters\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"votes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"choices\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"skip\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"getSpaceProposals\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalIds\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"titles\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"descriptions\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"startTimes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"endTimes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"choicesCount\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"}],\"name\":\"getSpaceProposalsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"}],\"name\":\"getSpaceSettings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalThreshold\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"onlyAdminCreateProposal\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"skip\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"getSpaces\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"names\",\"type\":\"bytes32[]\"},{\"internalType\":\"tokenId[]\",\"name\":\"tokens\",\"type\":\"tokenId[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"avatars\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"websites\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"memberCounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSpacesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserSpaces\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"spaceIds\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"names\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"avatars\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getWinningChoiceIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"isProposalActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"isProposalClosed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"isProposalExecuted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isSpaceAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isSpaceMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isSpaceOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"}],\"name\":\"joinSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"}],\"name\":\"leaveSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"}],\"name\":\"redeemSpaceCreationFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator_\",\"type\":\"address\"}],\"name\":\"removeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"newAdmins\",\"type\":\"address[]\"}],\"name\":\"setSpaceAdmins\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"tokenId\",\"name\":\"spaceToken\",\"type\":\"tokenId\"},{\"internalType\":\"uint256\",\"name\":\"spaceTokenDecimals\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"avatar\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"website\",\"type\":\"bytes32\"}],\"name\":\"updateSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"adminCreateProposal\",\"type\":\"bool\"}],\"name\":\"updateSpaceCreateProposalThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"choiceIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"name\":\"voteOnProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Vitasensus.solpp\":\"Vitasensus\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IterableMapping.solpp\":{\"keccak256\":\"0x23d597e141982624f4a1db139f7e83a70e590e0fcbfc56896730a4c7e5b4b02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52c6dab08c23869072f1c217d63ee9810034cf30e577431316fdfa4f0d04c98f\",\"dweb:/ipfs/QmeoAFd5hy8RKLz4ZimcbG943VyTzzcNXVEK7Lrx2jNRwL\"]},\"contracts/Ownable.sol\":{\"keccak256\":\"0xa972e39f1d2fe07867a66f8b55596f8ddb3425503d7d7871faa01ee1468f311a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8350f7f6cc9e7485cef21f5ebe364a589285933846d75989c019b1f2043d0556\",\"dweb:/ipfs/QmWKoFjsiFtb4yt7UJG7iT7HR9Ey5fPaX8c5TyY4yfugV9\"]},\"contracts/Vitasensus.solpp\":{\"keccak256\":\"0xc405e230d2cd77429e3cb8e1089a3c7d3e7afa643b164d6cbc66367d1d72f576\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://09113c736796c2612e03d3cc6adf882014230473058d29a7fc2e2f35411b6c0b\",\"dweb:/ipfs/QmacCvJNdospyWT1EbWKber5CwQMDWc2XHQVgAPYFR9hRF\"]},\"contracts/VitasensusProposalExecutor.solpp\":{\"keccak256\":\"0x4fc0aae9874ca213bf7f8fa6b311950c8b341ac9db1f79b1f32bd05110da9ded\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://31f6137faa66f2c93402107f8df05f80ec206f82484128a890764be51b11eadf\",\"dweb:/ipfs/QmSut867o7nYgpf6tSRuQ7hUaUx1womGuwFTRwGuXRCmXE\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":2676,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":134,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"_spaces","offset":0,"slot":"1","type":"t_array(t_struct(Space)92_storage)dyn_storage"},{"astId":138,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"_spaceSettings","offset":0,"slot":"2","type":"t_array(t_struct(SpaceSettings)97_storage)dyn_storage"},{"astId":144,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"_spacesProposals","offset":0,"slot":"3","type":"t_mapping(t_uint256,t_array(t_struct(Proposal)125_storage)dyn_storage)"},{"astId":149,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"_spacesMembers","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_struct(Map)2283_storage)"},{"astId":154,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"_spacesAdmins","offset":0,"slot":"5","type":"t_mapping(t_uint256,t_array(t_address)dyn_storage)"},{"astId":160,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"_spacesIsAdmin","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_mapping(t_address,t_bool))"},{"astId":165,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"_userSpaces","offset":0,"slot":"7","type":"t_mapping(t_address,t_struct(Map)2485_storage)"},{"astId":169,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"_spacesOwners","offset":0,"slot":"8","type":"t_mapping(t_uint256,t_address)"},{"astId":178,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"_spacesProposalsVotes","offset":0,"slot":"9","type":"t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_struct(Vote)130_storage)))"},{"astId":185,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"_spacesProposalsVoters","offset":0,"slot":"10","type":"t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_address)dyn_storage))"},{"astId":189,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"_isOperator","offset":0,"slot":"11","type":"t_mapping(t_address,t_bool)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"21"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_array(t_struct(Proposal)125_storage)dyn_storage":{"base":"t_struct(Proposal)125_storage","encoding":"dynamic_array","label":"struct Vitasensus.Proposal[]","numberOfBytes":"32"},"t_array(t_struct(Space)92_storage)dyn_storage":{"base":"t_struct(Space)92_storage","encoding":"dynamic_array","label":"struct Vitasensus.Space[]","numberOfBytes":"32"},"t_array(t_struct(SpaceSettings)97_storage)dyn_storage":{"base":"t_struct(SpaceSettings)97_storage","encoding":"dynamic_array","label":"struct Vitasensus.SpaceSettings[]","numberOfBytes":"32"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_enum(ProposalState)77":{"encoding":"inplace","label":"enum Vitasensus.ProposalState","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_struct(Map)2485_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct UintKeyedIterableMapping.Map)","numberOfBytes":"32","value":"t_struct(Map)2485_storage"},"t_mapping(t_address,t_struct(Vote)130_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct Vitasensus.Vote)","numberOfBytes":"32","value":"t_struct(Vote)130_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_array(t_address)dyn_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address[])","numberOfBytes":"32","value":"t_array(t_address)dyn_storage"},"t_mapping(t_uint256,t_array(t_struct(Proposal)125_storage)dyn_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Vitasensus.Proposal[])","numberOfBytes":"32","value":"t_array(t_struct(Proposal)125_storage)dyn_storage"},"t_mapping(t_uint256,t_bool)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_uint256,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_uint256,t_mapping(t_address,t_struct(Vote)130_storage))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => struct Vitasensus.Vote))","numberOfBytes":"32","value":"t_mapping(t_address,t_struct(Vote)130_storage)"},"t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_address)dyn_storage))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(uint256 => address[]))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_array(t_address)dyn_storage)"},"t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_struct(Vote)130_storage)))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(uint256 => mapping(address => struct Vitasensus.Vote)))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_mapping(t_address,t_struct(Vote)130_storage))"},"t_mapping(t_uint256,t_struct(Map)2283_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct IterableMapping.Map)","numberOfBytes":"32","value":"t_struct(Map)2283_storage"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Map)2283_storage":{"encoding":"inplace","label":"struct IterableMapping.Map","members":[{"astId":2270,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"keys","offset":0,"slot":"0","type":"t_array(t_address)dyn_storage"},{"astId":2274,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"values","offset":0,"slot":"1","type":"t_mapping(t_address,t_uint256)"},{"astId":2278,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"indexOf","offset":0,"slot":"2","type":"t_mapping(t_address,t_uint256)"},{"astId":2282,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"inserted","offset":0,"slot":"3","type":"t_mapping(t_address,t_bool)"}],"numberOfBytes":"128"},"t_struct(Map)2485_storage":{"encoding":"inplace","label":"struct UintKeyedIterableMapping.Map","members":[{"astId":2472,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"keys","offset":0,"slot":"0","type":"t_array(t_uint256)dyn_storage"},{"astId":2476,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"values","offset":0,"slot":"1","type":"t_mapping(t_uint256,t_uint256)"},{"astId":2480,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"indexOf","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_uint256)"},{"astId":2484,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"inserted","offset":0,"slot":"3","type":"t_mapping(t_uint256,t_bool)"}],"numberOfBytes":"128"},"t_struct(Proposal)125_storage":{"encoding":"inplace","label":"struct Vitasensus.Proposal","members":[{"astId":99,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"body","offset":0,"slot":"0","type":"t_string_storage"},{"astId":101,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"title","offset":0,"slot":"1","type":"t_string_storage"},{"astId":103,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"startTime","offset":0,"slot":"2","type":"t_uint64"},{"astId":105,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"endTime","offset":8,"slot":"2","type":"t_uint64"},{"astId":107,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"snapshotHeight","offset":0,"slot":"3","type":"t_uint256"},{"astId":109,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"author","offset":0,"slot":"4","type":"t_address"},{"astId":112,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"choices","offset":0,"slot":"5","type":"t_array(t_bytes32)dyn_storage"},{"astId":115,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"choicesExecutors","offset":0,"slot":"6","type":"t_array(t_address)dyn_storage"},{"astId":118,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"choicesData","offset":0,"slot":"7","type":"t_array(t_bytes32)dyn_storage"},{"astId":121,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"votes","offset":0,"slot":"8","type":"t_array(t_uint256)dyn_storage"},{"astId":124,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"state","offset":0,"slot":"9","type":"t_enum(ProposalState)77"}],"numberOfBytes":"320"},"t_struct(Space)92_storage":{"encoding":"inplace","label":"struct Vitasensus.Space","members":[{"astId":79,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"name","offset":0,"slot":"0","type":"t_bytes32"},{"astId":81,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"avatar","offset":0,"slot":"1","type":"t_bytes32"},{"astId":83,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"website","offset":0,"slot":"2","type":"t_bytes32"},{"astId":85,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"description","offset":0,"slot":"3","type":"t_string_storage"},{"astId":87,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"token","offset":0,"slot":"4","type":"t_tokenId"},{"astId":89,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"tokenDecimals","offset":0,"slot":"5","type":"t_uint256"},{"astId":91,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"createdTimestamp","offset":0,"slot":"6","type":"t_uint256"}],"numberOfBytes":"224"},"t_struct(SpaceSettings)97_storage":{"encoding":"inplace","label":"struct Vitasensus.SpaceSettings","members":[{"astId":94,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"createProposalThreshold","offset":0,"slot":"0","type":"t_uint256"},{"astId":96,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"onlyAdminsCanCreateProposals","offset":0,"slot":"1","type":"t_bool"}],"numberOfBytes":"64"},"t_struct(Vote)130_storage":{"encoding":"inplace","label":"struct Vitasensus.Vote","members":[{"astId":127,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"choiceIndex","offset":0,"slot":"0","type":"t_uint256"},{"astId":129,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"votes","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_tokenId":{"encoding":"inplace","label":"tokenId","numberOfBytes":"10"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"}}}}},"contracts/VitasensusProposalExecutor.solpp":{"ExternalCallTestContract":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"data","type":"bytes32"}],"name":"EventA","type":"event"},{"inputs":[],"name":"data","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"data_","type":"bytes32"}],"name":"executeVitasensusProposal","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"assembly":"  // newTag tag_2, desc: function selector\n  // ContractCompiler::initializeContext()\n  // ContractCompiler::registerImmutableVariables()\n  // end of ContractCompiler::registerImmutableVariables()\n    /* \"contracts/VitasensusProposalExecutor.solpp\":166:405   */\n  0x80\n  // CompilerUtils::storeFreeMemoryPointer()\n  0x40\n  mstore\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // ContractCompiler::registerStateVariables()\n  // end of ContractCompiler::registerStateVariables()\n  // ContractCompiler::initializeStateVariables()\n  // end of ContractCompiler::initializeStateVariables()\n  // ContractCompiler::initializeStateVariables()\n  // end of ContractCompiler::initializeStateVariables()\n  // newPushTag tag_3, desc: \n  dataSize(sub_0)\n  dup1\n  // CompilerContext::appendYulUtilityFunctions()\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n  // newTag tag_2, desc: function selector\n  // ContractCompiler::initializeContext()\n        /* \"contracts/VitasensusProposalExecutor.solpp\":166:405   */\n      0x80\n  // CompilerUtils::storeFreeMemoryPointer()\n      0x40\n      mstore\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // ContractCompiler::registerStateVariables()\n  // end of ContractCompiler::registerStateVariables()\n  // newTag tag_3, desc: declaration of function data\n  // newTag tag_4, desc: declaration of function executeVitasensusProposal\n      jump(tag_1)\n        /* \"contracts/VitasensusProposalExecutor.solpp\":270:289   */\n    tag_2:  // declaration of function data\n  // ExpressionCompiler::appendStateVariableAccessor(data)\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/VitasensusProposalExecutor.solpp\":293:403   */\n    tag_3:  // declaration of function executeVitasensusProposal\n        /* \"contracts/VitasensusProposalExecutor.solpp\":372:377   */\n      dup1\n  // end of ExpressionCompiler::appendStateVariableAccessor()\n        /* \"contracts/VitasensusProposalExecutor.solpp\":365:369   */\n      0x00\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function executeVitasensusProposal(bytes32 data_) external override {\n\t\tdata = data_;\n\t\temit EventA(data_);\n\t}\n  // newTag tag_5, desc: return tag of executeVitasensusProposal\n  // start of code block of executeVitasensusProposal\n  // ExpressionCompiler::appendVariable(data_, data_)\n        /* \"contracts/VitasensusProposalExecutor.solpp\":365:377   */\n      dup2\n  // ExpressionCompiler::appendVariable(data, data)\n      swap1\n      sstore\n      pop\n        /* \"contracts/VitasensusProposalExecutor.solpp\":393:398   */\n      dup1\n        /* \"contracts/VitasensusProposalExecutor.solpp\":386:399   */\n      0x22dfb6557724ee17312e1fab7ba79be2f7a1555d8e4de64babbb64281352f645\n      0x40\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      mload\n      mload(0x40)\n  // end of CompilerUtils::convertType()\n      dup1\n      swap2\n  // CompilerUtils::popStackSlots(1)\n      sub\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(data_, data_)\n      swap1\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      log2\n        /* \"contracts/VitasensusProposalExecutor.solpp\":293:403   */\n      pop\n      jump\t// out\n  // end of CompilerUtils::convertType()\n    tag_1:  // function selector\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x04\n      calldatasize\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             ]\n  // CompilerUtils::fetchFreeMemoryPointer()\n      lt\n      tag_5\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      jumpi\n      shr(0xe0, calldataload(0x00))\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      dup1\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 0 return parameters\n  //  current stackLayout [0 -1 ]\n      0x0fabfc53\n      eq\n      tag_6\n  // newTag tag_6, desc: notFoundOrReceiveEther\n  // jump to fallback or ether receiver if the data is too short to contain a function selector\n      jumpi\n      dup1\n      0xb7a61296\n      eq\n      tag_7\n  // retrieve the function signature hash from the calldata\n  // CompilerUtils::loadFromMemory(offset=0, type=uint32, fromCalldata=1, padToWordBoundaries=0)\n      jumpi\n  // CompilerUtils::loadFromMemoryHelper()\n    tag_5:  // notFoundOrReceiveEther\n  // CompilerUtils::rightShiftNumberOnStack(bits=224)\n      stop\n        /* \"contracts/VitasensusProposalExecutor.solpp\":270:289   */\n    tag_6:  // calldata unpacker of function () view external returns (bytes32)\n  // end of CompilerUtils::rightShiftNumberOnStack()\n  // newTag tag_7, desc: calldata unpacker of function () view external returns (bytes32)\n  // newTag tag_8, desc: calldata unpacker of function (bytes32) external\n  // ContractCompiler::appendInternalSelector()\n  // function selector\n      tag_8\n      tag_2\n      jump\t// in\n    tag_8:  // return value packer of function () view external returns (bytes32)\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n  // callback selector\n  // not found\n      jump\t// in\n    tag_9:  // return of Yul function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed\n  // end of ContractCompiler::appendInternalSelector()\n      mload(0x40)\n      dup1\n  // return value packer of function () view external returns (bytes32)\n  // newPushTag tag_9, desc: return value packer of function () view external returns (bytes32)\n      swap2\n      sub\n      swap1\n      return\n  // CompilerUtils::fetchFreeMemoryPointer()\n        /* \"contracts/VitasensusProposalExecutor.solpp\":293:403   */\n    tag_7:  // calldata unpacker of function (bytes32) external\n      tag_11\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             bytes32\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_10, desc: return of Yul function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed\n      0x04\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup1\n      calldatasize\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_11, desc: abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed\n      sub\n      dup2\n      add\n  // CompilerUtils::fetchFreeMemoryPointer()\n      swap1\n      tag_12\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:  // return of Yul function abi_decode_tuple_t_bytes32\n      tag_3\n  // return value packer of function (bytes32) external\n  // newPushTag tag_12, desc: return value packer of function (bytes32) external\n      jump\t// in\n    tag_11:  // return value packer of function (bytes32) external\n      stop\n    tag_15:\n      0x00\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      dup2\n      calldataload\n      swap1\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_bytes32, _inArgs=2, _outArgs=1)\n  // newPushTag tag_13, desc: return of Yul function abi_decode_tuple_t_bytes32\n      pop\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      tag_17\n      dup2\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_14, desc: abi_decode_tuple_t_bytes32\n      tag_18\n      jump\t// in\n    tag_17:\n      swap3\n      swap2\n      pop\n      pop\n  // CompilerContext::appendYulUtilityFunctions()\n  // newTag tag_15, desc: \n      jump\t// out\n    tag_13:\n  // newTag tag_16, desc: abi_decode_t_bytes32\n      0x00\n      0x20\n  // newTag tag_17, desc: \n      dup3\n      dup5\n      sub\n      slt\n  // newTag tag_18, desc: \n      iszero\n      tag_20\n  // newTag tag_19, desc: validator_revert_t_bytes32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      0x00\n      tag_21\n      dup5\n      dup3\n      dup6\n      add\n  // newTag tag_20, desc: \n      tag_15\n      jump\t// in\n    tag_21:\n      swap2\n      pop\n      pop\n  // newTag tag_21, desc: \n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_22:\n      tag_24\n  // newTag tag_22, desc: \n      dup2\n      tag_25\n      jump\t// in\n    tag_24:\n      dup3\n      mstore\n      pop\n      pop\n      jump\t// out\n    tag_10:\n      0x00\n      0x20\n      dup3\n      add\n      swap1\n      pop\n      tag_27\n  // newTag tag_23, desc: abi_encode_t_bytes32_to_t_bytes32_fromStack\n      0x00\n  // newTag tag_24, desc: \n  // newTag tag_25, desc: \n      dup4\n      add\n  // newTag tag_26, desc: cleanup_t_bytes32\n      dup5\n      tag_22\n      jump\t// in\n    tag_27:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_25:\n      0x00\n  // newTag tag_27, desc: \n      dup2\n      swap1\n      pop\n      swap2\n      swap1\n  // newTag tag_28, desc: \n      pop\n      jump\t// out\n    tag_18:\n      tag_30\n      dup2\n      tag_25\n      jump\t// in\n    tag_30:\n      dup2\n      eq\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n  // newTag tag_29, desc: \n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582000000000000000000000000000000000000000000000000000000000000000000029\n}\n","bytecode":{"generatedSources":[],"linkReferences":{},"object":"608060405261015c806100136000396000f3fe6080604052610046565b60005481565b80600081905550807f22dfb6557724ee17312e1fab7ba79be2f7a1555d8e4de64babbb64281352f64560405160405180910390a250565b6004361061006b5760003560e01c80630fabfc531461006d578063b7a612961461008b575b005b610075610009565b60405161008291906100f4565b60405180910390f35b6100a560048036038101906100a091906100bc565b61000f565b005b6000813590506100b681610119565b92915050565b6000602082840312156100ce57600080fd5b60006100dc848285016100a7565b91505092915050565b6100ee8161010f565b82525050565b600060208201905061010960008301846100e5565b92915050565b6000819050919050565b6101228161010f565b811461012d57600080fd5b5056fea165627a7a7230582000000000000000000000000000000000000000000000000000000000000000000029","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x15C DUP1 PUSH2 0x13 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x46 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP1 PUSH32 0x22DFB6557724EE17312E1FAB7BA79BE2F7A1555D8E4DE64BABBB64281352F645 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xFABFC53 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0xB7A61296 EQ PUSH2 0x8B JUMPI JUMPDEST STOP JUMPDEST PUSH2 0x75 PUSH2 0x9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x82 SWAP2 SWAP1 PUSH2 0xF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0xBC JUMP JUMPDEST PUSH2 0xF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB6 DUP2 PUSH2 0x119 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDC DUP5 DUP3 DUP6 ADD PUSH2 0xA7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEE DUP2 PUSH2 0x10F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x109 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x122 DUP2 PUSH2 0x10F JUMP JUMPDEST DUP2 EQ PUSH2 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP 0x29 ","sourceMap":"166:239:3:-:0;;;;;;;;;"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.6eb4927f.mod\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"EventA\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"data_\",\"type\":\"bytes32\"}],\"name\":\"executeVitasensusProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VitasensusProposalExecutor.solpp\":\"ExternalCallTestContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/VitasensusProposalExecutor.solpp\":{\"keccak256\":\"0x4fc0aae9874ca213bf7f8fa6b311950c8b341ac9db1f79b1f32bd05110da9ded\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://31f6137faa66f2c93402107f8df05f80ec206f82484128a890764be51b11eadf\",\"dweb:/ipfs/QmSut867o7nYgpf6tSRuQ7hUaUx1womGuwFTRwGuXRCmXE\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":2797,"contract":"contracts/VitasensusProposalExecutor.solpp:ExternalCallTestContract","label":"data","offset":0,"slot":"0","type":"t_bytes32"}],"types":{"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"}}}},"VitasensusProposalExecutor":{"abi":[{"inputs":[{"internalType":"bytes32","name":"data","type":"bytes32"}],"name":"executeVitasensusProposal","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"assembly":"","bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.6eb4927f.mod\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"executeVitasensusProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VitasensusProposalExecutor.solpp\":\"VitasensusProposalExecutor\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/VitasensusProposalExecutor.solpp\":{\"keccak256\":\"0x4fc0aae9874ca213bf7f8fa6b311950c8b341ac9db1f79b1f32bd05110da9ded\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://31f6137faa66f2c93402107f8df05f80ec206f82484128a890764be51b11eadf\",\"dweb:/ipfs/QmSut867o7nYgpf6tSRuQ7hUaUx1womGuwFTRwGuXRCmXE\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}}},"sources":{"contracts/IterableMapping.solpp":{"id":0},"contracts/Ownable.sol":{"id":1},"contracts/Vitasensus.solpp":{"id":2},"contracts/VitasensusProposalExecutor.solpp":{"id":3}}}
