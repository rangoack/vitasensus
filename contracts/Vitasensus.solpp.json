{"contracts":{"contracts/IterableMapping.solpp":{"IterableMapping":{"abi":[],"evm":{"assembly":"  // newTag tag_2, desc: function selector\n  // CompilerContext::appendYulUtilityFunctions()\n    /* \"contracts/IterableMapping.solpp\":58:1497   */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0a\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x74\n  eq\n  tag_2\n  jumpi\n  // newTag tag_3, desc: \n  mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_2:\n  mstore(0x00, address)\n  0x74\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n  // newTag tag_2, desc: function selector\n        /* \"contracts/IterableMapping.solpp\":58:1497   */\n      eq(address, deployTimeAddress())\n  // ContractCompiler::initializeContext()\n      0x80\n  // CompilerUtils::storeFreeMemoryPointer()\n      0x40\n      mstore\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // ContractCompiler::registerStateVariables()\n  // end of ContractCompiler::registerStateVariables()\n      stop\n\n    auxdata: 0xa165627a7a7230582000000000000000000000000000000000000000000000000000000000000000000029\n}\n","bytecode":{"generatedSources":[],"linkReferences":{},"object":"604a6050600a82828239805160001a6074146043577fe0f8f85500000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607481538281f3fe740000000000000000000000000000000000000000003014608060405200fea165627a7a7230582000000000000000000000000000000000000000000000000000000000000000000029","opcodes":"PUSH1 0x4A PUSH1 0x50 PUSH1 0xA DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x74 EQ PUSH1 0x43 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x74 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH21 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE STOP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP 0x29 ","sourceMap":"58:1439:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.6eb4927f.mod\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IterableMapping.solpp\":\"IterableMapping\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IterableMapping.solpp\":{\"keccak256\":\"0x23d597e141982624f4a1db139f7e83a70e590e0fcbfc56896730a4c7e5b4b02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52c6dab08c23869072f1c217d63ee9810034cf30e577431316fdfa4f0d04c98f\",\"dweb:/ipfs/QmeoAFd5hy8RKLz4ZimcbG943VyTzzcNXVEK7Lrx2jNRwL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"UintKeyedIterableMapping":{"abi":[],"evm":{"assembly":"  // newTag tag_2, desc: function selector\n  // CompilerContext::appendYulUtilityFunctions()\n    /* \"contracts/IterableMapping.solpp\":1499:2920   */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0a\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x74\n  eq\n  tag_2\n  jumpi\n  // newTag tag_3, desc: \n  mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_2:\n  mstore(0x00, address)\n  0x74\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n  // newTag tag_2, desc: function selector\n        /* \"contracts/IterableMapping.solpp\":1499:2920   */\n      eq(address, deployTimeAddress())\n  // ContractCompiler::initializeContext()\n      0x80\n  // CompilerUtils::storeFreeMemoryPointer()\n      0x40\n      mstore\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // ContractCompiler::registerStateVariables()\n  // end of ContractCompiler::registerStateVariables()\n      stop\n\n    auxdata: 0xa165627a7a7230582000000000000000000000000000000000000000000000000000000000000000000029\n}\n","bytecode":{"generatedSources":[],"linkReferences":{},"object":"604a6050600a82828239805160001a6074146043577fe0f8f85500000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607481538281f3fe740000000000000000000000000000000000000000003014608060405200fea165627a7a7230582000000000000000000000000000000000000000000000000000000000000000000029","opcodes":"PUSH1 0x4A PUSH1 0x50 PUSH1 0xA DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x74 EQ PUSH1 0x43 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x74 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH21 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE STOP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP 0x29 ","sourceMap":"1499:1421:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.6eb4927f.mod\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IterableMapping.solpp\":\"UintKeyedIterableMapping\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IterableMapping.solpp\":{\"keccak256\":\"0x23d597e141982624f4a1db139f7e83a70e590e0fcbfc56896730a4c7e5b4b02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52c6dab08c23869072f1c217d63ee9810034cf30e577431316fdfa4f0d04c98f\",\"dweb:/ipfs/QmeoAFd5hy8RKLz4ZimcbG943VyTzzcNXVEK7Lrx2jNRwL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"assembly":"","bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.6eb4927f.mod\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ownable.sol\":{\"keccak256\":\"0xa972e39f1d2fe07867a66f8b55596f8ddb3425503d7d7871faa01ee1468f311a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8350f7f6cc9e7485cef21f5ebe364a589285933846d75989c019b1f2043d0556\",\"dweb:/ipfs/QmWKoFjsiFtb4yt7UJG7iT7HR9Ey5fPaX8c5TyY4yfugV9\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":2676,"contract":"contracts/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"21"}}}}},"contracts/Vitasensus.solpp":{"Vitasensus":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"spaceId","type":"uint256"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"JoinedSpace","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"spaceId","type":"uint256"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"LeftSpace","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"spaceId","type":"uint256"},{"indexed":true,"internalType":"address","name":"author","type":"address"},{"indexed":false,"internalType":"string","name":"title","type":"string"},{"indexed":false,"internalType":"string","name":"description","type":"string"},{"indexed":false,"internalType":"uint256","name":"startTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"snapshot","type":"uint256"}],"name":"ProposalCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proposalId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"spaceId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"choiceId","type":"uint256"}],"name":"ProposalExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":true,"internalType":"tokenId","name":"token","type":"tokenId"},{"indexed":true,"internalType":"bytes32","name":"name","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"avatar","type":"bytes32"},{"indexed":false,"internalType":"string","name":"description","type":"string"}],"name":"SpaceCreated","type":"event"},{"inputs":[],"name":"SPACE_CREATION_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator_","type":"address"}],"name":"addOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"uint256","name":"snapshot","type":"uint256"},{"internalType":"bytes32[]","name":"choices","type":"bytes32[]"},{"internalType":"address[]","name":"choicesExecutors","type":"address[]"},{"internalType":"bytes32[]","name":"choicesData","type":"bytes32[]"}],"name":"createProposal","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"name","type":"bytes32"},{"internalType":"string","name":"description","type":"string"},{"internalType":"tokenId","name":"spaceToken","type":"tokenId"},{"internalType":"bytes32","name":"avatar","type":"bytes32"},{"internalType":"bytes32","name":"website","type":"bytes32"},{"internalType":"uint256","name":"spaceTokenDecimals","type":"uint256"}],"name":"createSpace","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"executeProposal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"}],"name":"getCreationTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"}],"name":"getSpaceAdmins","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"}],"name":"getSpaceExternal","outputs":[{"internalType":"bytes32","name":"name","type":"bytes32"},{"internalType":"string","name":"description","type":"string"},{"internalType":"tokenId","name":"token","type":"tokenId"},{"internalType":"bytes32","name":"avatar","type":"bytes32"},{"internalType":"bytes32","name":"website","type":"bytes32"},{"internalType":"uint256","name":"memberCounts","type":"uint256"},{"internalType":"uint256","name":"tokenDecimals","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"}],"name":"getSpaceOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"getSpaceProposal","outputs":[{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"address","name":"author","type":"address"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"uint256","name":"snapshot","type":"uint256"},{"internalType":"bytes32[]","name":"choices","type":"bytes32[]"},{"internalType":"address[]","name":"choicesExecutors","type":"address[]"},{"internalType":"bytes32[]","name":"choicesData","type":"bytes32[]"},{"internalType":"uint256[]","name":"votes","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"getSpaceProposalVotersCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"uint256","name":"skip","type":"uint256"},{"internalType":"uint256","name":"limit","type":"uint256"}],"name":"getSpaceProposalVotes","outputs":[{"internalType":"address[]","name":"voters","type":"address[]"},{"internalType":"uint256[]","name":"votes","type":"uint256[]"},{"internalType":"uint256[]","name":"choices","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"uint256","name":"skip","type":"uint256"},{"internalType":"uint256","name":"limit","type":"uint256"}],"name":"getSpaceProposals","outputs":[{"internalType":"uint256[]","name":"proposalIds","type":"uint256[]"},{"internalType":"string[]","name":"titles","type":"string[]"},{"internalType":"string[]","name":"descriptions","type":"string[]"},{"internalType":"uint256[]","name":"startTimes","type":"uint256[]"},{"internalType":"uint256[]","name":"endTimes","type":"uint256[]"},{"internalType":"uint256[]","name":"choicesCount","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"}],"name":"getSpaceProposalsCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"}],"name":"getSpaceSettings","outputs":[{"internalType":"uint256","name":"proposalThreshold","type":"uint256"},{"internalType":"bool","name":"onlyAdminCreateProposal","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"skip","type":"uint256"},{"internalType":"uint256","name":"limit","type":"uint256"}],"name":"getSpaces","outputs":[{"internalType":"bytes32[]","name":"names","type":"bytes32[]"},{"internalType":"tokenId[]","name":"tokens","type":"tokenId[]"},{"internalType":"bytes32[]","name":"avatars","type":"bytes32[]"},{"internalType":"bytes32[]","name":"websites","type":"bytes32[]"},{"internalType":"uint256[]","name":"memberCounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSpacesCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserSpaces","outputs":[{"internalType":"uint256[]","name":"spaceIds","type":"uint256[]"},{"internalType":"bytes32[]","name":"names","type":"bytes32[]"},{"internalType":"bytes32[]","name":"avatars","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"getWinningChoiceIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"address","name":"user_","type":"address"}],"name":"hasVoted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_addr","type":"address"}],"name":"isOperator","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"isProposalActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"isProposalClosed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"uint256","name":"proposalId","type":"uint256"}],"name":"isProposalExecuted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"isSpaceAdmin","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"isSpaceMember","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"isSpaceOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"}],"name":"joinSpace","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"}],"name":"leaveSpace","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"}],"name":"redeemSpaceCreationFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator_","type":"address"}],"name":"removeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"address[]","name":"newAdmins","type":"address[]"}],"name":"setSpaceAdmins","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"bytes32","name":"name","type":"bytes32"},{"internalType":"string","name":"description","type":"string"},{"internalType":"tokenId","name":"spaceToken","type":"tokenId"},{"internalType":"uint256","name":"spaceTokenDecimals","type":"uint256"},{"internalType":"bytes32","name":"avatar","type":"bytes32"},{"internalType":"bytes32","name":"website","type":"bytes32"}],"name":"updateSpace","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"uint256","name":"threshold","type":"uint256"},{"internalType":"bool","name":"adminCreateProposal","type":"bool"}],"name":"updateSpaceCreateProposalThreshold","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"spaceId","type":"uint256"},{"internalType":"uint256","name":"proposalId","type":"uint256"},{"internalType":"address","name":"voter","type":"address"},{"internalType":"uint256","name":"choiceIndex","type":"uint256"},{"internalType":"uint256","name":"votes","type":"uint256"}],"name":"voteOnProposal","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"assembly":"  // newTag tag_2, desc: function selector\n  // ContractCompiler::initializeContext()\n  // ContractCompiler::registerImmutableVariables()\n  // end of ContractCompiler::registerImmutableVariables()\n    /* \"contracts/Vitasensus.solpp\":168:18187  contract Vitasensus is Ownable {... */\n  0x80\n  // CompilerUtils::storeFreeMemoryPointer()\n  0x40\n  mstore\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // ContractCompiler::registerStateVariables()\n  // end of ContractCompiler::registerStateVariables()\n  // ContractCompiler::initializeStateVariables()\n  // end of ContractCompiler::initializeStateVariables()\n  // ContractCompiler::initializeStateVariables()\n  // end of ContractCompiler::initializeStateVariables()\n  // newTag tag_3, desc: declaration of function \n    /* \"contracts/Ownable.sol\":893:923   */\n  tag_4\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for constructor() {\n        _transferOwnership(msg.sender);\n    }\n  // newTag tag_4, desc: return tag of \n  // start of code block of \n  // newPushTag tag_5, desc: return of function function (address)\n    /* \"contracts/Ownable.sol\":912:922   */\n  caller\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n    /* \"contracts/Ownable.sol\":893:911   */\n  tag_5\n  // newTag tag_6, desc: declaration of function _transferOwnership\n  0x20\n  // CompilerUtils::leftShiftNumberOnStack(bits=32)\n  shl\n    /* \"contracts/Ownable.sol\":893:923   */\n  0x20\n  // end of CompilerUtils::leftShiftNumberOnStack()\n  // CompilerUtils::rightShiftNumberOnStack(bits=32)\n  shr\n  jump\t// in\n  // end of CompilerUtils::rightShiftNumberOnStack()\ntag_4:  // return of function function (address)\n    /* \"contracts/Vitasensus.solpp\":168:18187  contract Vitasensus is Ownable {... */\n  tag_6\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n  jump\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 0 parameters and 0 return parameters\n  // newPushTag tag_7, desc: \n    /* \"contracts/Ownable.sol\":2386:2573   */\ntag_5:  // declaration of function _transferOwnership\n    /* \"contracts/Ownable.sol\":2459:2475   */\n  0x00\n    /* \"contracts/Ownable.sol\":2478:2484   */\n  dup1\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n  // newTag tag_8, desc: return tag of _transferOwnership\n  // start of code block of _transferOwnership\n  // ContractCompiler::appendStackVariableInitialisation(address oldOwner)\n  0x00\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::appendVariable(_owner, _owner)\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Ownable.sol\":2459:2484   */\n  swap1\n  pop\n  // CompilerUtils::moveToStackVariable(oldOwner)\n    /* \"contracts/Ownable.sol\":2503:2511   */\n  dup2\n    /* \"contracts/Ownable.sol\":2494:2500   */\n  0x00\n  // ExpressionCompiler::appendVariable(newOwner, newOwner)\n  dup1\n  // ExpressionCompiler::appendVariable(_owner, _owner)\n    /* \"contracts/Ownable.sol\":2494:2511   */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffffff\n  // CompilerUtils::copyToStackTop(4, 1)\n  and\n  // CompilerUtils::convertType(): address -> address\n  mul\n  or\n  // end of CompilerUtils::convertType()\n  swap1\n  sstore\n  pop\n    /* \"contracts/Ownable.sol\":2557:2565   */\n  dup2\n  // CompilerUtils::popStackSlots(1)\n    /* \"contracts/Ownable.sol\":2526:2566   */\n  0xffffffffffffffffffffffffffffffffffffffffff\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(newOwner, newOwner)\n  and\n  // CompilerUtils::convertType(): address -> address\n    /* \"contracts/Ownable.sol\":2547:2555   */\n  dup2\n    /* \"contracts/Ownable.sol\":2526:2566   */\n  0xffffffffffffffffffffffffffffffffffffffffff\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(oldOwner, oldOwner)\n  and\n  // CompilerUtils::convertType(): address -> address\n  0x9a78605a08fe53b920adfc51344c28abd504bd2378db8d7dcdd50e527cbebe57\n  0x40\n  // end of CompilerUtils::convertType()\n  mload\n  // CompilerUtils::fetchFreeMemoryPointer()\n  mload(0x40)\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             ]\n  // CompilerUtils::fetchFreeMemoryPointer()\n  dup1\n  swap2\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  sub\n  swap1\n  log3\n    /* \"contracts/Ownable.sol\":2386:2573   */\n  pop\n  pop\n  // CompilerUtils::popStackSlots(1)\n  jump\t// out\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n    /* \"contracts/Vitasensus.solpp\":168:18187  contract Vitasensus is Ownable {... */\ntag_6:\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 0 return parameters\n  //  current stackLayout [0 -1 ]\n  dataSize(sub_0)\n  dup1\n  // CompilerContext::appendYulUtilityFunctions()\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n  // newTag tag_2, desc: function selector\n  // ContractCompiler::initializeContext()\n        /* \"contracts/Vitasensus.solpp\":168:18187  contract Vitasensus is Ownable {... */\n      0x80\n  // CompilerUtils::storeFreeMemoryPointer()\n      0x40\n      mstore\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // ContractCompiler::registerStateVariables()\n  // end of ContractCompiler::registerStateVariables()\n  // newTag tag_3, desc: declaration of function getSpaceProposalVotersCount\n  // newTag tag_4, desc: declaration of function getUserSpaces\n  // newTag tag_5, desc: declaration of function getWinningChoiceIndex\n  // newTag tag_6, desc: declaration of function hasVoted\n  // newTag tag_7, desc: declaration of function isProposalActive\n  // newTag tag_8, desc: declaration of function voteOnProposal\n  // newTag tag_9, desc: declaration of function updateSpaceCreateProposalThreshold\n  // newTag tag_10, desc: declaration of function setSpaceAdmins\n  // newTag tag_11, desc: declaration of function getSpaceSettings\n  // newTag tag_12, desc: declaration of function owner\n  // newTag tag_13, desc: declaration of function isOperator\n  // newTag tag_14, desc: declaration of function getSpaces\n  // newTag tag_15, desc: declaration of function getSpaceExternal\n  // newTag tag_16, desc: declaration of function getSpaceOwner\n  // newTag tag_17, desc: declaration of function isSpaceOwner\n  // newTag tag_18, desc: declaration of function createProposal\n  // newTag tag_19, desc: declaration of function transferOwnership\n  // newTag tag_20, desc: declaration of function SPACE_CREATION_FEE\n  // newTag tag_21, desc: declaration of function leaveSpace\n  // newTag tag_22, desc: declaration of function joinSpace\n  // newTag tag_23, desc: declaration of function getSpaceProposals\n  // newTag tag_24, desc: declaration of function addOperator\n  // newTag tag_25, desc: declaration of function getSpaceProposal\n  // newTag tag_26, desc: declaration of function isProposalClosed\n  // newTag tag_27, desc: declaration of function isSpaceMember\n  // newTag tag_28, desc: declaration of function removeOperator\n  // newTag tag_29, desc: declaration of function getSpaceProposalsCount\n  // newTag tag_30, desc: declaration of function isSpaceAdmin\n  // newTag tag_31, desc: declaration of function updateSpace\n  // newTag tag_32, desc: declaration of function getSpacesCount\n  // newTag tag_33, desc: declaration of function renounceOwnership\n  // newTag tag_34, desc: declaration of function createSpace\n  // newTag tag_35, desc: declaration of function executeProposal\n  // newTag tag_36, desc: declaration of function getSpaceProposalVotes\n  // newTag tag_37, desc: declaration of function getCreationTimestamp\n  // newTag tag_38, desc: declaration of function getSpaceAdmins\n  // newTag tag_39, desc: declaration of function isProposalExecuted\n  // newTag tag_40, desc: declaration of function redeemSpaceCreationFee\n      jump(tag_1)\n        /* \"contracts/Vitasensus.solpp\":12941:13119  function getSpaceProposalVotersCount(uint256 spaceId, uint256 proposalId)... */\n    tag_2:  // declaration of function getSpaceProposalVotersCount\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(uint256)\n        /* \"contracts/Vitasensus.solpp\":13044:13051  uint256 */\n      0x00\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function getSpaceProposalVotersCount(uint256 spaceId, uint256 proposalId)\n\t\texternal\n\t\tview\n\t\treturns (uint256)\n\t{\n\t\treturn _spacesProposalsVoters[spaceId][proposalId].length;\n\t}\n  // newTag tag_41, desc: return tag of getSpaceProposalVotersCount\n  // start of code block of getSpaceProposalVotersCount\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposalsVoters[spaceId][proposalId].length)\n  // ExpressionCompiler::appendVariable(_spacesProposalsVoters, _spacesProposalsVoters)\n        /* \"contracts/Vitasensus.solpp\":13065:13087  _spacesProposalsVoters */\n      0x0a\n        /* \"contracts/Vitasensus.solpp\":13065:13096  _spacesProposalsVoters[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":13088:13095  spaceId */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":13065:13096  _spacesProposalsVoters[spaceId] */\n      dup2\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      mstore\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x20\n      add\n  // bytes of type uint256: 32\n      swap1\n      dup2\n  // end of CompilerUtils::storeInMemoryDynamic()\n      mstore\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x20\n      add\n  // bytes of type uint256: 32\n      0x00\n      blake2b\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":13065:13108  _spacesProposalsVoters[spaceId][proposalId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":13097:13107  proposalId */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":13065:13108  _spacesProposalsVoters[spaceId][proposalId] */\n      dup2\n      mstore\n      0x20\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      add\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      dup2\n  // bytes of type uint256: 32\n      mstore\n      0x20\n  // end of CompilerUtils::storeInMemoryDynamic()\n      add\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x00\n      blake2b\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":13065:13115  _spacesProposalsVoters[spaceId][proposalId].length */\n      dup1\n      sload\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":13058:13115  return _spacesProposalsVoters[spaceId][proposalId].length */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":12941:13119  function getSpaceProposalVotersCount(uint256 spaceId, uint256 proposalId)... */\n      swap3\n      swap2\n      pop\n      pop\n  // CompilerUtils::moveToStackVariable()\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":13122:13655  function getUserSpaces(address user)... */\n    tag_3:  // declaration of function getUserSpaces\n  // CompilerUtils::popAndJump(toHeight=4, jumpTo=tag_40:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n        /* \"contracts/Vitasensus.solpp\":13192:13217  uint256[] memory spaceIds */\n      0x60\n        /* \"contracts/Vitasensus.solpp\":13222:13244  bytes32[] memory names */\n      dup1\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n        /* \"contracts/Vitasensus.solpp\":13249:13273  bytes32[] memory avatars */\n      0x60\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 1 return parameters\n  //  current stackLayout [1 -1 -1 0 ]\n        /* \"contracts/Vitasensus.solpp\":13283:13297  uint256 length */\n      0x00\n  //  current stackLayout [0 -1 -1 1 ]\n        /* \"contracts/Vitasensus.solpp\":13300:13324  _userSpaces[user].size() */\n      tag_42\n  //  current stackLayout [0 1 -1 -1 ]\n        /* \"contracts/Vitasensus.solpp\":13300:13311  _userSpaces */\n      0x07\n  //  current stackLayout [0 1 -1 ]\n        /* \"contracts/Vitasensus.solpp\":13300:13317  _userSpaces[user] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":13312:13316  user */\n      dup8\n        /* \"contracts/Vitasensus.solpp\":13300:13317  _userSpaces[user] */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(uint256[] memory spaceIds)\n  // CompilerUtils::pushZeroPointer()\n      and\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(bytes32[] memory names)\n  // CompilerUtils::pushZeroPointer()\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(bytes32[] memory avatars)\n  // CompilerUtils::pushZeroPointer()\n      and\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function getUserSpaces(address user)\n\t\texternal\n\t\tview\n\t\treturns (\n\t\t\tuint256[] memory spaceIds,\n\t\t\tbytes32[] memory names,\n\t\t\tbytes32[] memory avatars\n\t\t)\n\t{\n\t\tuint256 length = _userSpaces[user].size();\n\t\tspaceIds = new uint256[](length);\n\t\tnames = new bytes32[](length);\n\t\tavatars = new bytes32[](length);\n\t\tfor (uint256 index = 0; index < _userSpaces[user].size(); index++) {\n\t\t\tuint256 id = _userSpaces[user].keys[index];\n\t\t\tspaceIds[index] = id;\n\t\t\tnames[index] = _spaces[id].name;\n\t\t\tavatars[index] = _spaces[id].avatar;\n\t\t}\n\t}\n  // newTag tag_42, desc: return tag of getUserSpaces\n  // start of code block of getUserSpaces\n  // ContractCompiler::appendStackVariableInitialisation(uint256 length)\n      dup2\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // newPushTag tag_43, desc: return of function function (struct UintKeyedIterableMapping.Map) view returns (uint256)\n      mstore\n  // ExpressionCompiler::visit(_memberAccess=_userSpaces[user].size)\n  // ExpressionCompiler::appendVariable(_userSpaces, _userSpaces)\n      0x20\n      add\n      swap1\n      dup2\n  // ExpressionCompiler::appendVariable(user, user)\n      mstore\n  // CompilerUtils::convertType(): address -> address\n      0x20\n      add\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      0x00\n      blake2b\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":13300:13322  _userSpaces[user].size */\n      tag_43\n        /* \"contracts/Vitasensus.solpp\":13300:13324  _userSpaces[user].size() */\n      jump\t// in\n  // bytes of type address: 32\n    tag_42:  // return of function function (struct UintKeyedIterableMapping.Map) view returns (uint256)\n        /* \"contracts/Vitasensus.solpp\":13283:13324  uint256 length = _userSpaces[user].size() */\n      swap1\n  // end of CompilerUtils::storeInMemoryDynamic()\n      pop\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":13353:13359  length */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":13339:13360  new uint256[](length) */\n      0xffffffffffffffff\n  // bytes of type uint256: 32\n      dup2\n      gt\n  // end of CompilerUtils::storeInMemoryDynamic()\n      iszero\n      tag_44\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // CompilerUtils::convertType(): struct UintKeyedIterableMapping.Map storage ref -> struct UintKeyedIterableMapping.Map storage pointer\n  // end of CompilerUtils::convertType()\n  // newTag tag_44, desc: declaration of function size\n      0x00\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      mstore\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      0x41\n  // end of CompilerUtils::rotateStackDown()\n      0x04\n      mstore\n      0x24\n      0x00\n  // CompilerUtils::moveToStackVariable(length)\n      revert\n    tag_44:\n  // ExpressionCompiler::appendVariable(length, length)\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n  // newPushTag tag_45, desc: \n      mstore\n      dup1\n  // Jump to tag_44\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n  // CompilerUtils::fetchFreeMemoryPointer()\n      tag_45\n      jumpi\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n  // CompilerUtils::storeFreeMemoryPointer()\n      dup3\n      add\n  // end of CompilerUtils::storeFreeMemoryPointer()\n      swap2\n      pop\n  // newPushTag tag_46, desc: \n      pop\n      swap1\n  // Jump to tag_45\n      pop\n    tag_45:\n      pop\n        /* \"contracts/Vitasensus.solpp\":13328:13360  spaceIds = new uint256[](length) */\n      swap4\n      pop\n        /* \"contracts/Vitasensus.solpp\":13386:13392  length */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":13372:13393  new bytes32[](length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_46\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x41)\n      0x24\n      0x00\n  // ExpressionCompiler::appendVariable(spaceIds, spaceIds)\n      revert\n    tag_46:\n      0x40\n  // CompilerUtils::popStackSlots(1)\n      mload\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(length, length)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n  // newPushTag tag_47, desc: \n      0x20\n      mul\n  // Jump to tag_46\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_47\n      jumpi\n  // CompilerUtils::fetchFreeMemoryPointer()\n      dup2\n      0x20\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n  // CompilerUtils::storeFreeMemoryPointer()\n      swap2\n      pop\n  // end of CompilerUtils::storeFreeMemoryPointer()\n      pop\n      swap1\n  // newPushTag tag_48, desc: \n      pop\n    tag_47:\n  // Jump to tag_47\n      pop\n        /* \"contracts/Vitasensus.solpp\":13364:13393  names = new bytes32[](length) */\n      swap3\n      pop\n        /* \"contracts/Vitasensus.solpp\":13421:13427  length */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":13407:13428  new bytes32[](length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_48\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_48:\n  // ExpressionCompiler::appendVariable(names, names)\n      mload(0x40)\n      swap1\n  // CompilerUtils::popStackSlots(1)\n      dup1\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(length, length)\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n  // newPushTag tag_49, desc: \n      0x20\n      add\n  // Jump to tag_48\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_49\n      jumpi\n      dup2\n      0x20\n  // CompilerUtils::fetchFreeMemoryPointer()\n      add\n      0x20\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n  // CompilerUtils::storeFreeMemoryPointer()\n      pop\n      swap1\n  // end of CompilerUtils::storeFreeMemoryPointer()\n      pop\n    tag_49:\n  // newPushTag tag_50, desc: \n      pop\n        /* \"contracts/Vitasensus.solpp\":13397:13428  avatars = new bytes32[](length) */\n      swap2\n  // Jump to tag_49\n      pop\n        /* \"contracts/Vitasensus.solpp\":13437:13450  uint256 index */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":13432:13652  for (uint256 index = 0; index < _userSpaces[user].size(); index++) {... */\n    tag_50:\n        /* \"contracts/Vitasensus.solpp\":13464:13488  _userSpaces[user].size() */\n      tag_53\n        /* \"contracts/Vitasensus.solpp\":13464:13475  _userSpaces */\n      0x07\n        /* \"contracts/Vitasensus.solpp\":13464:13481  _userSpaces[user] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":13476:13480  user */\n      dup9\n        /* \"contracts/Vitasensus.solpp\":13464:13481  _userSpaces[user] */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n  // ExpressionCompiler::appendVariable(avatars, avatars)\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":13464:13486  _userSpaces[user].size */\n      tag_43\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/Vitasensus.solpp\":13464:13488  _userSpaces[user].size() */\n      jump\t// in\n  // end of CompilerUtils::popStackSlots()\n  // newTag tag_51, desc: \n  // newTag tag_52, desc: \n  // newTag tag_53, desc: \n  // ContractCompiler::appendStackVariableInitialisation(uint256 index)\n    tag_53:  // return of function function (struct UintKeyedIterableMapping.Map) view returns (uint256)\n  // end of ContractCompiler::appendStackVariableInitialisation()\n        /* \"contracts/Vitasensus.solpp\":13456:13461  index */\n      dup2\n  // CompilerUtils::convertType(): int_const 0 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackVariable(index)\n        /* \"contracts/Vitasensus.solpp\":13456:13488  index < _userSpaces[user].size() */\n      lt\n        /* \"contracts/Vitasensus.solpp\":13432:13652  for (uint256 index = 0; index < _userSpaces[user].size(); index++) {... */\n      iszero\n      tag_51\n  // newPushTag tag_54, desc: return of function function (struct UintKeyedIterableMapping.Map) view returns (uint256)\n      jumpi\n  // ExpressionCompiler::visit(_memberAccess=_userSpaces[user].size)\n  // ExpressionCompiler::appendVariable(_userSpaces, _userSpaces)\n        /* \"contracts/Vitasensus.solpp\":13504:13514  uint256 id */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":13517:13528  _userSpaces */\n      0x07\n        /* \"contracts/Vitasensus.solpp\":13517:13534  _userSpaces[user] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":13529:13533  user */\n      dup9\n  // ExpressionCompiler::appendVariable(user, user)\n        /* \"contracts/Vitasensus.solpp\":13517:13534  _userSpaces[user] */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // CompilerUtils::convertType(): address -> address\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      and\n      dup2\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mstore\n      0x20\n  // bytes of type address: 32\n      add\n      swap1\n  // end of CompilerUtils::storeInMemoryDynamic()\n      dup2\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mstore\n      0x20\n  // bytes of type uint256: 32\n      add\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":13517:13539  _userSpaces[user].keys */\n      0x00\n      add\n        /* \"contracts/Vitasensus.solpp\":13540:13545  index */\n      dup3\n  // CompilerUtils::convertType(): struct UintKeyedIterableMapping.Map storage ref -> struct UintKeyedIterableMapping.Map storage pointer\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":13517:13546  _userSpaces[user].keys[index] */\n      dup2\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      sload\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      dup2\n  // end of CompilerUtils::rotateStackDown()\n      lt\n      tag_54\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(index, index)\n      0x00\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mstore\n      mstore(0x04, 0x32)\n  // ContractCompiler::appendStackVariableInitialisation(uint256 id)\n      0x24\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::visit(_memberAccess=_userSpaces[user].keys)\n  // ExpressionCompiler::appendVariable(_userSpaces, _userSpaces)\n      0x00\n      revert\n    tag_54:\n      swap1\n  // ExpressionCompiler::appendVariable(user, user)\n      0x00\n  // CompilerUtils::convertType(): address -> address\n      mstore\n      0x20\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      0x00\n      blake2b\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      sload\n  // bytes of type address: 32\n        /* \"contracts/Vitasensus.solpp\":13504:13546  uint256 id = _userSpaces[user].keys[index] */\n      swap1\n      pop\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":13569:13571  id */\n      dup1\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":13551:13559  spaceIds */\n      dup7\n        /* \"contracts/Vitasensus.solpp\":13560:13565  index */\n      dup4\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":13551:13566  spaceIds[index] */\n      dup2\n      mload\n  // end of CompilerUtils::storeInMemoryDynamic()\n      dup2\n      lt\n      tag_56\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      0x32\n  // ExpressionCompiler::appendVariable(index, index)\n      0x04\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mstore\n      revert(0x00, 0x24)\n    tag_56:\n      0x20\n  // newPushTag tag_55, desc: \n      mul\n      0x20\n  // Jump to tag_54\n      add\n      add\n        /* \"contracts/Vitasensus.solpp\":13551:13571  spaceIds[index] = id */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":13591:13598  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":13599:13601  id */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":13591:13602  _spaces[id] */\n      dup2\n      sload\n  // newTag tag_56, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup2\n      lt\n  // end of CompilerUtils::storeInMemory()\n      tag_57\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      0x24\n  // CompilerUtils::moveToStackVariable(id)\n      0x00\n      revert\n  // ExpressionCompiler::appendVariable(id, id)\n    tag_57:\n  // ExpressionCompiler::appendVariable(spaceIds, spaceIds)\n      swap1\n  // ExpressionCompiler::appendVariable(index, index)\n      0x00\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mstore\n      blake2b(0x00, 0x20)\n      swap1\n      0x07\n  // newPushTag tag_57, desc: \n      mul\n      add\n  // Jump to tag_56\n        /* \"contracts/Vitasensus.solpp\":13591:13607  _spaces[id].name */\n      0x00\n      add\n      sload\n        /* \"contracts/Vitasensus.solpp\":13576:13581  names */\n      dup6\n        /* \"contracts/Vitasensus.solpp\":13582:13587  index */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":13576:13588  names[index] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_59\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      0x32\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      0x04\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      mstore\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n      0x24\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x00\n      revert\n  // bytes of type uint256: 32\n    tag_59:\n      0x20\n  // end of CompilerUtils::storeInMemoryDynamic()\n      mul\n  // CompilerUtils::popStackSlots(1)\n      0x20\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=_spaces[id].name)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      add\n      add\n        /* \"contracts/Vitasensus.solpp\":13576:13607  names[index] = _spaces[id].name */\n      dup2\n  // ExpressionCompiler::appendVariable(id, id)\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mstore\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":13629:13636  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":13637:13639  id */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":13629:13640  _spaces[id] */\n      dup2\n  // newPushTag tag_58, desc: \n      sload\n      dup2\n  // Jump to tag_57\n      lt\n      tag_60\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      0x24\n      0x00\n  // newTag tag_59, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      revert\n    tag_60:\n  // end of CompilerUtils::storeInMemory()\n      swap1\n      0x00\n      mstore\n      blake2b(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n        /* \"contracts/Vitasensus.solpp\":13629:13647  _spaces[id].avatar */\n      0x01\n      add\n      sload\n        /* \"contracts/Vitasensus.solpp\":13612:13619  avatars */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":13620:13625  index */\n      dup4\n  // ExpressionCompiler::appendVariable(names, names)\n        /* \"contracts/Vitasensus.solpp\":13612:13626  avatars[index] */\n      dup2\n  // ExpressionCompiler::appendVariable(index, index)\n      mload\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      dup2\n      lt\n      tag_62\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n  // newPushTag tag_60, desc: \n      mstore\n      0x32\n  // Jump to tag_59\n      0x04\n      mstore\n      revert(0x00, 0x24)\n    tag_62:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Vitasensus.solpp\":13612:13647  avatars[index] = _spaces[id].avatar */\n      dup2\n      dup2\n      mstore\n      pop\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      pop\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n        /* \"contracts/Vitasensus.solpp\":13432:13652  for (uint256 index = 0; index < _userSpaces[user].size(); index++) {... */\n      pop\n        /* \"contracts/Vitasensus.solpp\":13490:13497  index++ */\n      dup1\n      dup1\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      tag_63\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n      swap1\n  // CompilerUtils::storeInMemoryDynamic(type=bytes32, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=bytes32, ...)\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      tag_64\n      jump\t// in\n    tag_63:  // return of Yul function increment_t_uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap2\n      pop\n  // bytes of type bytes32: 32\n      pop\n        /* \"contracts/Vitasensus.solpp\":13432:13652  for (uint256 index = 0; index < _userSpaces[user].size(); index++) {... */\n      tag_50\n  // end of CompilerUtils::storeInMemoryDynamic()\n      jump\n  // CompilerUtils::popStackSlots(1)\n    tag_51:\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=_spaces[id].avatar)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      pop\n        /* \"contracts/Vitasensus.solpp\":13122:13655  function getUserSpaces(address user)... */\n      pop\n      swap2\n  // ExpressionCompiler::appendVariable(id, id)\n      swap4\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      swap1\n      swap3\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":5834:6250  function getWinningChoiceIndex(uint256 spaceId, uint256 proposalId)... */\n    tag_4:  // declaration of function getWinningChoiceIndex\n        /* \"contracts/Vitasensus.solpp\":5929:5936  uint256 */\n      0x00\n  // newPushTag tag_61, desc: \n        /* \"contracts/Vitasensus.solpp\":5943:5968  Proposal storage proposal */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":5971:6004  _getProposal(spaceId, proposalId) */\n      tag_66\n  // Jump to tag_60\n        /* \"contracts/Vitasensus.solpp\":5984:5991  spaceId */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":5993:6003  proposalId */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":5971:5983  _getProposal */\n      tag_67\n        /* \"contracts/Vitasensus.solpp\":5971:6004  _getProposal(spaceId, proposalId) */\n      jump\t// in\n    tag_66:  // return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n        /* \"contracts/Vitasensus.solpp\":5943:6004  Proposal storage proposal = _getProposal(spaceId, proposalId) */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":6009:6023  uint256 maxVal */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":6025:6041  uint256 maxIndex */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":6046:6047  0 */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":6049:6050  0 */\n      dup1\n  // newTag tag_62, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":6008:6051  (uint256 maxVal, uint256 maxIndex) = (0, 0) */\n      swap2\n      pop\n  // end of CompilerUtils::storeInMemory()\n      swap2\n      pop\n        /* \"contracts/Vitasensus.solpp\":6060:6073  uint256 index */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":6055:6228  for (uint256 index = 0; index < proposal.votes.length; index++) {... */\n    tag_68:\n        /* \"contracts/Vitasensus.solpp\":6087:6095  proposal */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":6087:6101  proposal.votes */\n      0x08\n      add\n        /* \"contracts/Vitasensus.solpp\":6087:6108  proposal.votes.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":6079:6084  index */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":6079:6108  index < proposal.votes.length */\n      lt\n        /* \"contracts/Vitasensus.solpp\":6055:6228  for (uint256 index = 0; index < proposal.votes.length; index++) {... */\n      iszero\n      tag_69\n  // ExpressionCompiler::appendVariable(avatars, avatars)\n      jumpi\n  // ExpressionCompiler::appendVariable(index, index)\n        /* \"contracts/Vitasensus.solpp\":6152:6158  maxVal */\n      dup3\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":6128:6136  proposal */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":6128:6142  proposal.votes */\n      0x08\n      add\n        /* \"contracts/Vitasensus.solpp\":6143:6148  index */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":6128:6149  proposal.votes[index] */\n      dup2\n      sload\n  // newPushTag tag_63, desc: \n      dup2\n      lt\n  // Jump to tag_62\n      tag_71\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_71:\n      swap1\n      0x00\n      mstore\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      0x20\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      0x00\n      blake2b\n      add\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      sload\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n        /* \"contracts/Vitasensus.solpp\":6128:6158  proposal.votes[index] > maxVal */\n      gt\n  // CompilerUtils::storeInMemoryDynamic(type=bytes32, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=bytes32, ...)\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n        /* \"contracts/Vitasensus.solpp\":6124:6224  if (proposal.votes[index] > maxVal) {... */\n      iszero\n      tag_73\n      jumpi\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":6175:6183  proposal */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":6175:6189  proposal.votes */\n      0x08\n  // bytes of type bytes32: 32\n      add\n        /* \"contracts/Vitasensus.solpp\":6190:6195  index */\n      dup2\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":6175:6196  proposal.votes[index] */\n      dup2\n  // CompilerUtils::popStackSlots(1)\n      sload\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(1)\n      dup2\n  // end of CompilerUtils::popStackSlots()\n      lt\n  // ExpressionCompiler::appendVariable(index, index)\n      tag_74\n      jumpi\n  // CompilerContext::callYulFunction(name=increment_t_uint256, _inArgs=1, _outArgs=1)\n  // newPushTag tag_64, desc: return of Yul function increment_t_uint256\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      0x00\n  // end of CompilerUtils::rotateStackDown()\n  // newTag tag_65, desc: increment_t_uint256\n      mstore\n      mstore(0x04, 0x32)\n      0x24\n  // CompilerUtils::popStackSlots(1)\n      0x00\n  // end of CompilerUtils::popStackSlots()\n      revert\n    tag_74:\n      swap1\n  // CompilerUtils::popStackSlots(1)\n      0x00\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(1)\n      mstore\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      0x20\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 3 return parameters\n  //  current stackLayout [3 -1 0 1 2 ]\n      0x00\n  //  current stackLayout [3 -1 2 1 0 ]\n      blake2b\n  //  current stackLayout [0 -1 2 1 3 ]\n      add\n  //  current stackLayout [0 -1 2 3 1 ]\n      sload\n  //  current stackLayout [0 1 2 3 -1 ]\n        /* \"contracts/Vitasensus.solpp\":6166:6196  maxVal = proposal.votes[index] */\n      swap3\n      pop\n        /* \"contracts/Vitasensus.solpp\":6213:6218  index */\n      dup1\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(uint256)\n        /* \"contracts/Vitasensus.solpp\":6202:6218  maxIndex = index */\n      swap2\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function getWinningChoiceIndex(uint256 spaceId, uint256 proposalId)\n\t\tpublic\n\t\tview\n\t\treturns (uint256)\n\t{\n\t\tProposal storage proposal = _getProposal(spaceId, proposalId);\n\t\t(uint256 maxVal, uint256 maxIndex) = (0, 0);\n\t\tfor (uint256 index = 0; index < proposal.votes.length; index++) {\n\t\t\tif (proposal.votes[index] > maxVal) {\n\t\t\t\tmaxVal = proposal.votes[index];\n\t\t\t\tmaxIndex = index;\n\t\t\t}\n\t\t}\n\t\treturn maxIndex;\n\t}\n  // newTag tag_66, desc: return tag of getWinningChoiceIndex\n  // start of code block of getWinningChoiceIndex\n  // ContractCompiler::appendStackVariableInitialisation(Proposal storage proposal)\n      pop\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // newPushTag tag_67, desc: return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n        /* \"contracts/Vitasensus.solpp\":6124:6224  if (proposal.votes[index] > maxVal) {... */\n    tag_73:\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":6110:6117  index++ */\n      dup1\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      dup1\n  // newTag tag_68, desc: declaration of function _getProposal\n      tag_76\n      swap1\n      tag_64\n      jump\t// in\n    tag_76:  // return of Yul function increment_t_uint256\n  // CompilerUtils::moveToStackVariable(proposal)\n      swap2\n      pop\n  // ContractCompiler::appendStackVariableInitialisation(uint256 maxVal)\n      pop\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(uint256 maxIndex)\n        /* \"contracts/Vitasensus.solpp\":6055:6228  for (uint256 index = 0; index < proposal.votes.length; index++) {... */\n      tag_68\n  // end of ContractCompiler::appendStackVariableInitialisation()\n      jump\n    tag_69:\n  // CompilerUtils::convertType(): int_const 0 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackVariable(maxIndex)\n      pop\n        /* \"contracts/Vitasensus.solpp\":6238:6246  maxIndex */\n      dup1\n  // CompilerUtils::convertType(): int_const 0 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackVariable(maxVal)\n        /* \"contracts/Vitasensus.solpp\":6231:6246  return maxIndex */\n      swap4\n      pop\n  // newTag tag_69, desc: \n  // newTag tag_70, desc: \n  // newTag tag_71, desc: \n  // ContractCompiler::appendStackVariableInitialisation(uint256 index)\n      pop\n  // end of ContractCompiler::appendStackVariableInitialisation()\n      pop\n  // CompilerUtils::convertType(): int_const 0 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackVariable(index)\n      pop\n        /* \"contracts/Vitasensus.solpp\":5834:6250  function getWinningChoiceIndex(uint256 spaceId, uint256 proposalId)... */\n      swap3\n      swap2\n  // ExpressionCompiler::visit(_memberAccess=proposal.votes.length)\n  // ExpressionCompiler::visit(_memberAccess=proposal.votes)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":4543:4714  function hasVoted(uint256 spaceId, uint256 proposalId, address user_) public view returns (bool) {... */\n    tag_5:  // declaration of function hasVoted\n        /* \"contracts/Vitasensus.solpp\":4634:4638  bool */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":4709:4710  0 */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":4651:4672  _spacesProposalsVotes */\n      0x09\n        /* \"contracts/Vitasensus.solpp\":4651:4681  _spacesProposalsVotes[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":4673:4680  spaceId */\n      dup7\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(index, index)\n        /* \"contracts/Vitasensus.solpp\":4651:4681  _spacesProposalsVotes[spaceId] */\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mstore\n      0x20\n      add\n      swap1\n  // ExpressionCompiler::appendVariable(maxVal, maxVal)\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=proposal.votes)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n  // ExpressionCompiler::appendVariable(index, index)\n        /* \"contracts/Vitasensus.solpp\":4651:4693  _spacesProposalsVotes[spaceId][proposalId] */\n      0x00\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":4682:4692  proposalId */\n      dup6\n        /* \"contracts/Vitasensus.solpp\":4651:4693  _spacesProposalsVotes[spaceId][proposalId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n  // newPushTag tag_72, desc: \n      dup2\n      mstore\n  // Jump to tag_71\n      0x20\n      add\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":4651:4700  _spacesProposalsVotes[spaceId][proposalId][user_] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":4694:4699  user_ */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":4651:4700  _spacesProposalsVotes[spaceId][proposalId][user_] */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n  // newTag tag_73, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mstore\n      0x20\n  // end of CompilerUtils::storeInMemory()\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":4651:4706  _spacesProposalsVotes[spaceId][proposalId][user_].votes */\n      0x01\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      add\n      sload\n  // newPushTag tag_74, desc: \n        /* \"contracts/Vitasensus.solpp\":4651:4710  _spacesProposalsVotes[spaceId][proposalId][user_].votes > 0 */\n      gt\n        /* \"contracts/Vitasensus.solpp\":4644:4710  return _spacesProposalsVotes[spaceId][proposalId][user_].votes > 0 */\n      swap1\n  // Jump to tag_73\n  // ExpressionCompiler::visit(_memberAccess=proposal.votes)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      pop\n        /* \"contracts/Vitasensus.solpp\":4543:4714  function hasVoted(uint256 spaceId, uint256 proposalId, address user_) public view returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n  // ExpressionCompiler::appendVariable(index, index)\n      pop\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":4959:5104  function isProposalActive(uint256 spaceId, uint256 proposalId) external view returns (bool) {... */\n    tag_6:  // declaration of function isProposalActive\n        /* \"contracts/Vitasensus.solpp\":5045:5049  bool */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":5062:5100  _isProposalActive(spaceId, proposalId) */\n      tag_79\n        /* \"contracts/Vitasensus.solpp\":5080:5087  spaceId */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":5089:5099  proposalId */\n      dup4\n  // newPushTag tag_75, desc: \n        /* \"contracts/Vitasensus.solpp\":5062:5079  _isProposalActive */\n      tag_80\n        /* \"contracts/Vitasensus.solpp\":5062:5100  _isProposalActive(spaceId, proposalId) */\n      jump\t// in\n  // Jump to tag_74\n    tag_79:  // return of function function (uint256,uint256) view returns (bool)\n        /* \"contracts/Vitasensus.solpp\":5055:5100  return _isProposalActive(spaceId, proposalId) */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":4959:5104  function isProposalActive(uint256 spaceId, uint256 proposalId) external view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":7253:7916  function voteOnProposal(... */\n    tag_7:  // declaration of function voteOnProposal\n        /* \"contracts/Vitasensus.solpp\":7413:7420  spaceId */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":7422:7432  proposalId */\n      dup5\n  // newTag tag_76, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":3485:3528  _requireProposalActive(spaceId, proposalId) */\n      tag_82\n        /* \"contracts/Vitasensus.solpp\":3508:3515  spaceId */\n      dup3\n  // end of CompilerUtils::storeInMemory()\n        /* \"contracts/Vitasensus.solpp\":3517:3527  proposalId */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":3485:3507  _requireProposalActive */\n      tag_83\n        /* \"contracts/Vitasensus.solpp\":3485:3528  _requireProposalActive(spaceId, proposalId) */\n      jump\t// in\n    tag_82:  // return of function function (uint256,uint256) view\n        /* \"contracts/Vitasensus.solpp\":7447:7469  isOperator(msg.sender) */\n      tag_85\n        /* \"contracts/Vitasensus.solpp\":7458:7468  msg.sender */\n      caller\n        /* \"contracts/Vitasensus.solpp\":7447:7457  isOperator */\n      tag_12\n        /* \"contracts/Vitasensus.solpp\":7447:7469  isOperator(msg.sender) */\n      jump\t// in\n    tag_85:  // return of function function (address) view returns (bool)\n  // ExpressionCompiler::appendVariable(maxVal, maxVal)\n        /* \"contracts/Vitasensus.solpp\":7439:7470  require(isOperator(msg.sender)) */\n      tag_86\n      jumpi\n      0x00\n  // CompilerUtils::popStackSlots(1)\n      dup1\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(index, index)\n      revert\n  // ExpressionCompiler::appendVariable(maxIndex, maxIndex)\n    tag_86:\n        /* \"contracts/Vitasensus.solpp\":7482:7511  isSpaceMember(spaceId, voter) */\n      tag_87\n        /* \"contracts/Vitasensus.solpp\":7496:7503  spaceId */\n      dup8\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/Vitasensus.solpp\":7505:7510  voter */\n      dup7\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n        /* \"contracts/Vitasensus.solpp\":7482:7495  isSpaceMember */\n      tag_26\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n        /* \"contracts/Vitasensus.solpp\":7482:7511  isSpaceMember(spaceId, voter) */\n      jump\t// in\n  // ExpressionCompiler::appendVariable(index, index)\n    tag_87:  // return of function function (uint256,address) view returns (bool)\n        /* \"contracts/Vitasensus.solpp\":7474:7512  require(isSpaceMember(spaceId, voter)) */\n      tag_88\n  // CompilerContext::callYulFunction(name=increment_t_uint256, _inArgs=1, _outArgs=1)\n  // newPushTag tag_77, desc: return of Yul function increment_t_uint256\n      jumpi\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      0x00\n  // end of CompilerUtils::rotateStackDown()\n      dup1\n      revert\n    tag_88:\n        /* \"contracts/Vitasensus.solpp\":7525:7561  hasVoted(spaceId, proposalId, voter) */\n      tag_89\n        /* \"contracts/Vitasensus.solpp\":7534:7541  spaceId */\n      dup8\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/Vitasensus.solpp\":7543:7553  proposalId */\n      dup8\n  // end of CompilerUtils::popStackSlots()\n        /* \"contracts/Vitasensus.solpp\":7555:7560  voter */\n      dup8\n        /* \"contracts/Vitasensus.solpp\":7525:7533  hasVoted */\n      tag_5\n        /* \"contracts/Vitasensus.solpp\":7525:7561  hasVoted(spaceId, proposalId, voter) */\n      jump\t// in\n  // CompilerUtils::popStackSlots(1)\n    tag_89:  // return of function function (uint256,uint256,address) view returns (bool)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::appendVariable(maxIndex, maxIndex)\n        /* \"contracts/Vitasensus.solpp\":7524:7561  !hasVoted(spaceId, proposalId, voter) */\n      iszero\n  // CompilerUtils::moveToStackVariable()\n        /* \"contracts/Vitasensus.solpp\":7516:7562  require(!hasVoted(spaceId, proposalId, voter)) */\n      tag_90\n      jumpi\n  // CompilerUtils::popAndJump(toHeight=4, jumpTo=tag_65:)\n  // CompilerUtils::popStackSlots(3)\n      0x00\n      dup1\n      revert\n  // end of CompilerUtils::popStackSlots()\n    tag_90:\n        /* \"contracts/Vitasensus.solpp\":7566:7591  Proposal storage proposal */\n      0x00\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(3)\n        /* \"contracts/Vitasensus.solpp\":7594:7627  _getProposal(spaceId, proposalId) */\n      tag_91\n        /* \"contracts/Vitasensus.solpp\":7607:7614  spaceId */\n      dup9\n        /* \"contracts/Vitasensus.solpp\":7616:7626  proposalId */\n      dup9\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n        /* \"contracts/Vitasensus.solpp\":7594:7606  _getProposal */\n      tag_67\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 1 return parameters\n  //  current stackLayout [1 -1 -1 0 ]\n        /* \"contracts/Vitasensus.solpp\":7594:7627  _getProposal(spaceId, proposalId) */\n      jump\t// in\n  //  current stackLayout [0 -1 -1 1 ]\n    tag_91:  // return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n  //  current stackLayout [0 1 -1 -1 ]\n        /* \"contracts/Vitasensus.solpp\":7566:7627  Proposal storage proposal = _getProposal(spaceId, proposalId) */\n      swap1\n  //  current stackLayout [0 1 -1 ]\n      pop\n        /* \"contracts/Vitasensus.solpp\":7653:7661  proposal */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":7653:7669  proposal.choices */\n      0x05\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(bool)\n      add\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function hasVoted(uint256 spaceId, uint256 proposalId, address user_) public view returns (bool) {\n\t\treturn _spacesProposalsVotes[spaceId][proposalId][user_].votes > 0;\n\t}\n  // newTag tag_78, desc: return tag of hasVoted\n  // start of code block of hasVoted\n  // ContractCompiler::visit(return)\n        /* \"contracts/Vitasensus.solpp\":7653:7676  proposal.choices.length */\n      dup1\n  // CompilerUtils::convertType(): int_const 0 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposalsVotes[spaceId][proposalId][user_].votes)\n  // ExpressionCompiler::appendVariable(_spacesProposalsVotes, _spacesProposalsVotes)\n      sload\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":7639:7650  choiceIndex */\n      dup6\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":7639:7676  choiceIndex < proposal.choices.length */\n      lt\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":7631:7677  require(choiceIndex < proposal.choices.length) */\n      tag_92\n      jumpi\n  // bytes of type uint256: 32\n      0x00\n      dup1\n  // end of CompilerUtils::storeInMemoryDynamic()\n      revert\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n    tag_92:\n        /* \"contracts/Vitasensus.solpp\":7682:7704  _spacesProposalsVoters */\n      0x0a\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":7682:7713  _spacesProposalsVoters[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":7705:7712  spaceId */\n      dup10\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":7682:7713  _spacesProposalsVoters[spaceId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mstore\n      0x20\n  // bytes of type uint256: 32\n      add\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n      blake2b\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":7682:7725  _spacesProposalsVoters[spaceId][proposalId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":7714:7724  proposalId */\n      dup9\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":7682:7725  _spacesProposalsVoters[spaceId][proposalId] */\n      dup2\n      mstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n  // ExpressionCompiler::appendVariable(user_, user_)\n      0x20\n  // CompilerUtils::convertType(): address -> address\n      add\n      0x00\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":7731:7736  voter */\n      dup7\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":7682:7737  _spacesProposalsVoters[spaceId][proposalId].push(voter) */\n      swap1\n      dup1\n  // bytes of type address: 32\n      0x01\n      dup2\n  // end of CompilerUtils::storeInMemoryDynamic()\n      sload\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      dup1\n  // bytes of type uint256: 32\n      dup3\n      sstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mstore\n  // CompilerUtils::moveToStackVariable()\n      0x20\n      0x00\n  // CompilerUtils::popAndJump(toHeight=5, jumpTo=tag_77:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      blake2b\n      add\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 3 parameters and 1 return parameters\n  //  current stackLayout [1 -1 -1 -1 0 ]\n      swap1\n  //  current stackLayout [0 -1 -1 -1 1 ]\n      swap2\n  //  current stackLayout [0 1 -1 -1 -1 ]\n      swap1\n  //  current stackLayout [0 1 -1 -1 ]\n      swap2\n  //  current stackLayout [0 1 -1 ]\n      swap1\n      swap2\n      0x0100\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(bool)\n      exp\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function isProposalActive(uint256 spaceId, uint256 proposalId) external view returns (bool) {\n\t\treturn _isProposalActive(spaceId, proposalId);\n\t}\n  // newTag tag_79, desc: return tag of isProposalActive\n  // start of code block of isProposalActive\n  // ContractCompiler::visit(return)\n  // newPushTag tag_80, desc: return of function function (uint256,uint256) view returns (bool)\n      dup2\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      sload\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      dup2\n  // newTag tag_81, desc: declaration of function _isProposalActive\n      0xffffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n  // CompilerUtils::moveToStackVariable()\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // CompilerUtils::popAndJump(toHeight=4, jumpTo=tag_78:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      and\n      mul\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      or\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 1 return parameters\n  //  current stackLayout [1 -1 -1 0 ]\n      swap1\n  //  current stackLayout [0 -1 -1 1 ]\n      sstore\n  //  current stackLayout [0 1 -1 -1 ]\n      pop\n  //  current stackLayout [0 1 -1 ]\n        /* \"contracts/Vitasensus.solpp\":7744:7761  Vote storage vote */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":7764:7785  _spacesProposalsVotes */\n      0x09\n        /* \"contracts/Vitasensus.solpp\":7764:7794  _spacesProposalsVotes[spaceId] */\n      0x00\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function voteOnProposal(\n\t\tuint256 spaceId,\n\t\tuint256 proposalId,\n\t\taddress voter,\n\t\tuint256 choiceIndex,\n\t\tuint256 votes\n\t)\n\t\texternal\n\t\trequireProposalActive(spaceId, proposalId)\n\t{\n\t\trequire(isOperator(msg.sender));\n\t\trequire(isSpaceMember(spaceId, voter));\n\t\trequire(!hasVoted(spaceId, proposalId, voter));\n\t\tProposal storage proposal = _getProposal(spaceId, proposalId);\n\t\trequire(choiceIndex < proposal.choices.length);\n\n\t\t_spacesProposalsVoters[spaceId][proposalId].push(voter);\n\t\t\n\t\tVote storage vote = _spacesProposalsVotes[spaceId][proposalId][voter];\n\t\tvote.choiceIndex = choiceIndex;\n\t\tvote.votes = votes;\n\t\tproposal.votes[choiceIndex] += votes;\n\t\t\n\t}\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":7786:7793  spaceId */\n      dup11\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n        /* \"contracts/Vitasensus.solpp\":7764:7794  _spacesProposalsVotes[spaceId] */\n      dup2\n  // newTag tag_82, desc: return tag of voteOnProposal\n  // start of code block of voteOnProposal\n  // newPushTag tag_83, desc: return of function function (uint256,uint256) view\n      mstore\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      0x20\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      add\n  // newTag tag_84, desc: declaration of function _requireProposalActive\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendModifierOrFunctionCode() for function voteOnProposal(\n\t\tuint256 spaceId,\n\t\tuint256 proposalId,\n\t\taddress voter,\n\t\tuint256 choiceIndex,\n\t\tuint256 votes\n\t)\n\t\texternal\n\t\trequireProposalActive(spaceId, proposalId)\n\t{\n\t\trequire(isOperator(msg.sender));\n\t\trequire(isSpaceMember(spaceId, voter));\n\t\trequire(!hasVoted(spaceId, proposalId, voter));\n\t\tProposal storage proposal = _getProposal(spaceId, proposalId);\n\t\trequire(choiceIndex < proposal.choices.length);\n\n\t\t_spacesProposalsVoters[spaceId][proposalId].push(voter);\n\t\t\n\t\tVote storage vote = _spacesProposalsVotes[spaceId][proposalId][voter];\n\t\tvote.choiceIndex = choiceIndex;\n\t\tvote.votes = votes;\n\t\tproposal.votes[choiceIndex] += votes;\n\t\t\n\t}\n  // newTag tag_85, desc: return tag of voteOnProposal\n  // start of code block of voteOnProposal\n  // newPushTag tag_86, desc: return of function function (address) view returns (bool)\n      0x00\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":7764:7806  _spacesProposalsVotes[spaceId][proposalId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":7795:7805  proposalId */\n      dup10\n        /* \"contracts/Vitasensus.solpp\":7764:7806  _spacesProposalsVotes[spaceId][proposalId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n  // newPushTag tag_87, desc: \n      dup2\n      mstore\n  // Jump to tag_86\n      0x20\n      add\n      0x00\n      blake2b\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // newPushTag tag_88, desc: return of function function (uint256,address) view returns (bool)\n        /* \"contracts/Vitasensus.solpp\":7764:7813  _spacesProposalsVotes[spaceId][proposalId][voter] */\n      0x00\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":7807:7812  voter */\n      dup9\n  // ExpressionCompiler::appendVariable(voter, voter)\n        /* \"contracts/Vitasensus.solpp\":7764:7813  _spacesProposalsVotes[spaceId][proposalId][voter] */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n  // newPushTag tag_89, desc: \n      swap1\n      dup2\n  // Jump to tag_88\n      mstore\n      0x20\n      add\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // newPushTag tag_90, desc: return of function function (uint256,uint256,address) view returns (bool)\n      blake2b\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":7744:7813  Vote storage vote = _spacesProposalsVotes[spaceId][proposalId][voter] */\n      swap1\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      pop\n  // ExpressionCompiler::appendVariable(voter, voter)\n        /* \"contracts/Vitasensus.solpp\":7836:7847  choiceIndex */\n      dup6\n        /* \"contracts/Vitasensus.solpp\":7817:7821  vote */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":7817:7833  vote.choiceIndex */\n      0x00\n      add\n        /* \"contracts/Vitasensus.solpp\":7817:7847  vote.choiceIndex = choiceIndex */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Vitasensus.solpp\":7864:7869  votes */\n      dup5\n  // newPushTag tag_91, desc: \n        /* \"contracts/Vitasensus.solpp\":7851:7855  vote */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":7851:7861  vote.votes */\n      0x01\n  // Jump to tag_90\n      add\n        /* \"contracts/Vitasensus.solpp\":7851:7869  vote.votes = votes */\n      dup2\n      swap1\n      sstore\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendStackVariableInitialisation(Proposal storage proposal)\n      pop\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // newPushTag tag_92, desc: return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n        /* \"contracts/Vitasensus.solpp\":7904:7909  votes */\n      dup5\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":7873:7881  proposal */\n      dup3\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n        /* \"contracts/Vitasensus.solpp\":7873:7887  proposal.votes */\n      0x08\n      add\n        /* \"contracts/Vitasensus.solpp\":7888:7899  choiceIndex */\n      dup8\n        /* \"contracts/Vitasensus.solpp\":7873:7900  proposal.votes[choiceIndex] */\n      dup2\n      sload\n      dup2\n  // CompilerUtils::moveToStackVariable(proposal)\n      lt\n      tag_94\n  // ExpressionCompiler::visit(_memberAccess=proposal.choices.length)\n  // ExpressionCompiler::visit(_memberAccess=proposal.choices)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      0x24\n      0x00\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(choiceIndex, choiceIndex)\n      revert\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n    tag_94:\n      swap1\n      0x00\n  // newPushTag tag_93, desc: \n      mstore\n      0x20\n  // Jump to tag_92\n      0x00\n      blake2b\n      add\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposalsVoters[spaceId][proposalId].push)\n  // ExpressionCompiler::appendVariable(_spacesProposalsVoters, _spacesProposalsVoters)\n        /* \"contracts/Vitasensus.solpp\":7873:7909  proposal.votes[choiceIndex] += votes */\n      dup3\n      dup3\n      sload\n      tag_96\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      swap2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      tag_97\n  // bytes of type uint256: 32\n      jump\t// in\n    tag_96:  // return of Yul function checked_add_t_uint256\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap3\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      pop\n      pop\n  // bytes of type uint256: 32\n      dup2\n      swap1\n  // end of CompilerUtils::storeInMemoryDynamic()\n      sstore\n      pop\n        /* \"contracts/Vitasensus.solpp\":3532:3533  _ */\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":7253:7916  function voteOnProposal(... */\n      pop\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      pop\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      pop\n      pop\n  // bytes of type uint256: 32\n      pop\n      pop\n  // end of CompilerUtils::storeInMemoryDynamic()\n      pop\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":12358:12699  function updateSpaceCreateProposalThreshold(... */\n    tag_8:  // declaration of function updateSpaceCreateProposalThreshold\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":12500:12507  spaceId */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":2803:2830  _requireSpaceAdmin(spaceId) */\n      tag_99\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":2822:2829  spaceId */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":2803:2821  _requireSpaceAdmin */\n      tag_100\n        /* \"contracts/Vitasensus.solpp\":2803:2830  _requireSpaceAdmin(spaceId) */\n      jump\t// in\n    tag_99:  // return of function function (uint256) view\n  // ExpressionCompiler::appendVariable(voter, voter)\n        /* \"contracts/Vitasensus.solpp\":12513:12548  SpaceSettings storage spaceSettings */\n      0x00\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n        /* \"contracts/Vitasensus.solpp\":12551:12565  _spaceSettings */\n      0x02\n  // end of CompilerUtils::rotateStackDown()\n        /* \"contracts/Vitasensus.solpp\":12566:12573  spaceId */\n      dup6\n        /* \"contracts/Vitasensus.solpp\":12551:12574  _spaceSettings[spaceId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_102\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n  // newTag tag_94, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n    tag_102:\n      swap1\n  // end of CompilerUtils::storeInMemory()\n      0x00\n      mstore\n      blake2b(0x00, 0x20)\n      swap1\n      0x02\n  // CompilerUtils::moveToStackTop(2, 1)\n  // CompilerUtils::moveIntoStack(1, 2)\n  // CompilerUtils::rotateStackDown(3)\n      mul\n      add\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::moveToStackTop(2, 1)\n  // CompilerUtils::moveIntoStack(1, 2)\n  // CompilerUtils::rotateStackDown(3)\n        /* \"contracts/Vitasensus.solpp\":12513:12574  SpaceSettings storage spaceSettings = _spaceSettings[spaceId] */\n      swap1\n      pop\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::moveToStackTop(2, 1)\n  // CompilerUtils::moveIntoStack(1, 2)\n  // CompilerUtils::rotateStackDown(3)\n        /* \"contracts/Vitasensus.solpp\":12618:12627  threshold */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":12578:12591  spaceSettings */\n      dup2\n  // end of CompilerUtils::rotateStackDown()\n        /* \"contracts/Vitasensus.solpp\":12578:12615  spaceSettings.createProposalThreshold */\n      0x00\n      add\n        /* \"contracts/Vitasensus.solpp\":12578:12627  spaceSettings.createProposalThreshold = threshold */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Vitasensus.solpp\":12676:12695  adminCreateProposal */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":12631:12644  spaceSettings */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":12631:12673  spaceSettings.onlyAdminsCanCreateProposals */\n      0x01\n      add\n  // CompilerUtils::copyToStackTop(4, 1)\n      0x00\n  // CompilerUtils::convertType(): address -> address\n        /* \"contracts/Vitasensus.solpp\":12631:12695  spaceSettings.onlyAdminsCanCreateProposals = adminCreateProposal */\n      0x0100\n      exp\n  // end of CompilerUtils::convertType()\n      dup2\n      sload\n      dup2\n      0xff\n  // CompilerUtils::popStackSlots(1)\n      mul\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendStackVariableInitialisation(Vote storage vote)\n      not\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::appendVariable(_spacesProposalsVotes, _spacesProposalsVotes)\n      and\n      swap1\n      dup4\n      iszero\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      iszero\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mul\n      or\n  // bytes of type uint256: 32\n      swap1\n      sstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      pop\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":2834:2835  _ */\n      pop\n        /* \"contracts/Vitasensus.solpp\":12358:12699  function updateSpaceCreateProposalThreshold(... */\n      pop\n  // bytes of type uint256: 32\n      pop\n      pop\n  // end of CompilerUtils::storeInMemoryDynamic()\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":10090:10509  function setSpaceAdmins(uint256 spaceId, address[] memory newAdmins)... */\n    tag_9:  // declaration of function setSpaceAdmins\n        /* \"contracts/Vitasensus.solpp\":10190:10197  spaceId */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":2568:2595  _requireSpaceOwner(spaceId) */\n      tag_105\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n        /* \"contracts/Vitasensus.solpp\":2587:2594  spaceId */\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":2568:2586  _requireSpaceOwner */\n      tag_106\n        /* \"contracts/Vitasensus.solpp\":2568:2595  _requireSpaceOwner(spaceId) */\n      jump\t// in\n  // bytes of type uint256: 32\n    tag_105:  // return of function function (uint256) view\n        /* \"contracts/Vitasensus.solpp\":10209:10222  uint256 index */\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":10204:10348  for (uint256 index = 0; index < _spacesAdmins[spaceId].length; index++) {... */\n    tag_108:\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":10236:10249  _spacesAdmins */\n      0x05\n        /* \"contracts/Vitasensus.solpp\":10236:10258  _spacesAdmins[spaceId] */\n      0x00\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":10250:10257  spaceId */\n      dup6\n        /* \"contracts/Vitasensus.solpp\":10236:10258  _spacesAdmins[spaceId] */\n      dup2\n  // end of CompilerUtils::storeInMemoryDynamic()\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n  // ExpressionCompiler::appendVariable(voter, voter)\n      mstore\n  // CompilerUtils::convertType(): address -> address\n      0x20\n      add\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      0x00\n      blake2b\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":10236:10265  _spacesAdmins[spaceId].length */\n      dup1\n      sload\n  // bytes of type address: 32\n      swap1\n      pop\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":10228:10233  index */\n      dup2\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":10228:10265  index < _spacesAdmins[spaceId].length */\n      lt\n        /* \"contracts/Vitasensus.solpp\":10204:10348  for (uint256 index = 0; index < _spacesAdmins[spaceId].length; index++) {... */\n      iszero\n  // bytes of type uint256: 32\n      tag_109\n      jumpi\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":10338:10343  false */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":10281:10295  _spacesIsAdmin */\n      0x06\n        /* \"contracts/Vitasensus.solpp\":10281:10304  _spacesIsAdmin[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":10296:10303  spaceId */\n      dup7\n  // CompilerUtils::convertType(): struct Vitasensus.Vote storage ref -> struct Vitasensus.Vote storage pointer\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackVariable(vote)\n        /* \"contracts/Vitasensus.solpp\":10281:10304  _spacesIsAdmin[spaceId] */\n      dup2\n      mstore\n  // ExpressionCompiler::appendVariable(choiceIndex, choiceIndex)\n      0x20\n  // ExpressionCompiler::visit(_memberAccess=vote.choiceIndex)\n  // ExpressionCompiler::appendVariable(vote, vote)\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":10281:10335  _spacesIsAdmin[spaceId][_spacesAdmins[spaceId][index]] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":10305:10318  _spacesAdmins */\n      0x05\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/Vitasensus.solpp\":10305:10327  _spacesAdmins[spaceId] */\n      0x00\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(votes, votes)\n        /* \"contracts/Vitasensus.solpp\":10319:10326  spaceId */\n      dup9\n  // ExpressionCompiler::visit(_memberAccess=vote.votes)\n  // ExpressionCompiler::appendVariable(vote, vote)\n        /* \"contracts/Vitasensus.solpp\":10305:10327  _spacesAdmins[spaceId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      add\n      0x00\n  // CompilerUtils::popStackSlots(1)\n      blake2b\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(votes, votes)\n        /* \"contracts/Vitasensus.solpp\":10328:10333  index */\n      dup5\n  // ExpressionCompiler::visit(_memberAccess=proposal.votes)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n        /* \"contracts/Vitasensus.solpp\":10305:10334  _spacesAdmins[spaceId][index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_111\n  // ExpressionCompiler::appendVariable(choiceIndex, choiceIndex)\n      jumpi\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n  // newPushTag tag_95, desc: \n      0x24\n      0x00\n  // Jump to tag_94\n      revert\n    tag_111:\n      swap1\n      0x00\n      mstore\n      blake2b(0x00, 0x20)\n      add\n      0x00\n      swap1\n  // newTag tag_96, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      sload\n      swap1\n  // end of CompilerUtils::storeInMemory()\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Vitasensus.solpp\":10281:10335  _spacesIsAdmin[spaceId][_spacesAdmins[spaceId][index]] */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // CompilerUtils::copyToStackTop(3, 1)\n      and\n  // CompilerUtils::copyToStackTop(3, 2)\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n  // CompilerContext::callYulFunction(name=checked_add_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_97, desc: return of Yul function checked_add_t_uint256\n      0x20\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      add\n      swap1\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_98, desc: checked_add_t_uint256\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n      0x00\n        /* \"contracts/Vitasensus.solpp\":10281:10343  _spacesIsAdmin[spaceId][_spacesAdmins[spaceId][index]] = false */\n      0x0100\n      exp\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      dup2\n      sload\n  // CompilerUtils::popStackSlots(1)\n      dup2\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(2)\n      0xff\n      mul\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      not\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      and\n  // CompilerUtils::popStackSlots(2)\n      swap1\n      dup4\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 5 parameters and 0 return parameters\n  //  current stackLayout [0 -1 -1 -1 -1 -1 ]\n      iszero\n  //  current stackLayout [0 -1 -1 -1 -1 ]\n      iszero\n  //  current stackLayout [0 -1 -1 -1 ]\n      mul\n  //  current stackLayout [0 -1 -1 ]\n      or\n  //  current stackLayout [0 -1 ]\n      swap1\n      sstore\n      pop\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function updateSpaceCreateProposalThreshold(\n\t\tuint256 spaceId,\n\t\tuint256 threshold,\n\t\tbool adminCreateProposal\n\t) external requireSpaceAdmin(spaceId) {\n\t\tSpaceSettings storage spaceSettings = _spaceSettings[spaceId];\n\t\tspaceSettings.createProposalThreshold = threshold;\n\t\tspaceSettings.onlyAdminsCanCreateProposals = adminCreateProposal;\n\t}\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":10267:10274  index++ */\n      dup1\n  // newTag tag_99, desc: return tag of updateSpaceCreateProposalThreshold\n  // start of code block of updateSpaceCreateProposalThreshold\n  // newPushTag tag_100, desc: return of function function (uint256) view\n      dup1\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      tag_113\n  // newTag tag_101, desc: declaration of function _requireSpaceAdmin\n      swap1\n      tag_64\n      jump\t// in\n    tag_113:  // return of Yul function increment_t_uint256\n      swap2\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendModifierOrFunctionCode() for function updateSpaceCreateProposalThreshold(\n\t\tuint256 spaceId,\n\t\tuint256 threshold,\n\t\tbool adminCreateProposal\n\t) external requireSpaceAdmin(spaceId) {\n\t\tSpaceSettings storage spaceSettings = _spaceSettings[spaceId];\n\t\tspaceSettings.createProposalThreshold = threshold;\n\t\tspaceSettings.onlyAdminsCanCreateProposals = adminCreateProposal;\n\t}\n  // newTag tag_102, desc: return tag of updateSpaceCreateProposalThreshold\n  // start of code block of updateSpaceCreateProposalThreshold\n  // ContractCompiler::appendStackVariableInitialisation(SpaceSettings storage spaceSettings)\n      pop\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::appendVariable(_spaceSettings, _spaceSettings)\n      pop\n        /* \"contracts/Vitasensus.solpp\":10204:10348  for (uint256 index = 0; index < _spacesAdmins[spaceId].length; index++) {... */\n      jump(tag_108)\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n    tag_109:\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      pop\n        /* \"contracts/Vitasensus.solpp\":10356:10369  uint256 index */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":10351:10468  for (uint256 index = 0; index < newAdmins.length; index++) {... */\n    tag_114:\n        /* \"contracts/Vitasensus.solpp\":10383:10392  newAdmins */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":10383:10399  newAdmins.length */\n      mload\n        /* \"contracts/Vitasensus.solpp\":10375:10380  index */\n      dup2\n  // newPushTag tag_103, desc: \n        /* \"contracts/Vitasensus.solpp\":10375:10399  index < newAdmins.length */\n      lt\n        /* \"contracts/Vitasensus.solpp\":10351:10468  for (uint256 index = 0; index < newAdmins.length; index++) {... */\n      iszero\n  // Jump to tag_102\n      tag_115\n      jumpi\n        /* \"contracts/Vitasensus.solpp\":10459:10463  true */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":10415:10429  _spacesIsAdmin */\n      0x06\n        /* \"contracts/Vitasensus.solpp\":10415:10438  _spacesIsAdmin[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":10430:10437  spaceId */\n      dup7\n        /* \"contracts/Vitasensus.solpp\":10415:10438  _spacesIsAdmin[spaceId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n  // newTag tag_104, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup2\n      mstore\n  // end of CompilerUtils::storeInMemory()\n      0x20\n      add\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":10415:10456  _spacesIsAdmin[spaceId][newAdmins[index]] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":10439:10448  newAdmins */\n      dup6\n        /* \"contracts/Vitasensus.solpp\":10449:10454  index */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":10439:10455  newAdmins[index] */\n      dup2\n      mload\n      dup2\n  // CompilerUtils::convertType(): struct Vitasensus.SpaceSettings storage ref -> struct Vitasensus.SpaceSettings storage pointer\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackVariable(spaceSettings)\n      lt\n      tag_117\n  // ExpressionCompiler::appendVariable(threshold, threshold)\n      jumpi\n  // ExpressionCompiler::visit(_memberAccess=spaceSettings.createProposalThreshold)\n  // ExpressionCompiler::appendVariable(spaceSettings, spaceSettings)\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      0x24\n      0x00\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      revert\n    tag_117:\n  // CompilerUtils::popStackSlots(1)\n      0x20\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(adminCreateProposal, adminCreateProposal)\n      mul\n  // ExpressionCompiler::visit(_memberAccess=spaceSettings.onlyAdminsCanCreateProposals)\n  // ExpressionCompiler::appendVariable(spaceSettings, spaceSettings)\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Vitasensus.solpp\":10415:10456  _spacesIsAdmin[spaceId][newAdmins[index]] */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n  // CompilerUtils::copyToStackTop(4, 1)\n      mstore\n  // CompilerUtils::convertType(): bool -> bool\n      0x20\n      add\n  // end of CompilerUtils::convertType()\n      0x00\n      blake2b\n      0x00\n        /* \"contracts/Vitasensus.solpp\":10415:10463  _spacesIsAdmin[spaceId][newAdmins[index]] = true */\n      0x0100\n  // CompilerUtils::popStackSlots(1)\n      exp\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(1)\n      dup2\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      sload\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      dup2\n  // CompilerUtils::popStackSlots(1)\n      0xff\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 3 parameters and 0 return parameters\n  //  current stackLayout [0 -1 -1 -1 ]\n      mul\n  //  current stackLayout [0 -1 -1 ]\n      not\n  //  current stackLayout [0 -1 ]\n      and\n      swap1\n      dup4\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function setSpaceAdmins(uint256 spaceId, address[] memory newAdmins)\n\t\texternal\n\t\trequireSpaceOwner(spaceId)\n\t{\n\t\tfor (uint256 index = 0; index < _spacesAdmins[spaceId].length; index++) {\n\t\t\t_spacesIsAdmin[spaceId][_spacesAdmins[spaceId][index]] = false;\n\t\t}\n\t\tfor (uint256 index = 0; index < newAdmins.length; index++) {\n\t\t\t_spacesIsAdmin[spaceId][newAdmins[index]] = true;\n\t\t}\n\t\t_spacesAdmins[spaceId] = newAdmins;\n\t}\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      iszero\n  // newTag tag_105, desc: return tag of setSpaceAdmins\n  // start of code block of setSpaceAdmins\n  // newPushTag tag_106, desc: return of function function (uint256) view\n      iszero\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      mul\n  // newTag tag_107, desc: declaration of function _requireSpaceOwner\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Vitasensus.solpp\":10401:10408  index++ */\n      dup1\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendModifierOrFunctionCode() for function setSpaceAdmins(uint256 spaceId, address[] memory newAdmins)\n\t\texternal\n\t\trequireSpaceOwner(spaceId)\n\t{\n\t\tfor (uint256 index = 0; index < _spacesAdmins[spaceId].length; index++) {\n\t\t\t_spacesIsAdmin[spaceId][_spacesAdmins[spaceId][index]] = false;\n\t\t}\n\t\tfor (uint256 index = 0; index < newAdmins.length; index++) {\n\t\t\t_spacesIsAdmin[spaceId][newAdmins[index]] = true;\n\t\t}\n\t\t_spacesAdmins[spaceId] = newAdmins;\n\t}\n  // newTag tag_108, desc: return tag of setSpaceAdmins\n  // start of code block of setSpaceAdmins\n  // newTag tag_109, desc: \n  // newTag tag_110, desc: \n  // newTag tag_111, desc: \n  // ContractCompiler::appendStackVariableInitialisation(uint256 index)\n      dup1\n  // end of ContractCompiler::appendStackVariableInitialisation()\n      tag_118\n  // CompilerUtils::convertType(): int_const 0 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackVariable(index)\n      swap1\n      tag_64\n      jump\t// in\n  // ExpressionCompiler::visit(_memberAccess=_spacesAdmins[spaceId].length)\n  // ExpressionCompiler::appendVariable(_spacesAdmins, _spacesAdmins)\n    tag_118:  // return of Yul function increment_t_uint256\n      swap2\n      pop\n      pop\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":10351:10468  for (uint256 index = 0; index < newAdmins.length; index++) {... */\n      tag_114\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jump\n    tag_115:\n  // bytes of type uint256: 32\n      pop\n        /* \"contracts/Vitasensus.solpp\":10496:10505  newAdmins */\n      dup2\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":10471:10484  _spacesAdmins */\n      0x05\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":10471:10493  _spacesAdmins[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":10485:10492  spaceId */\n      dup6\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":10471:10493  _spacesAdmins[spaceId] */\n      dup2\n      mstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(index, index)\n      blake2b\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":10471:10505  _spacesAdmins[spaceId] = newAdmins */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n  // ExpressionCompiler::appendVariable(_spacesIsAdmin, _spacesIsAdmin)\n      add\n      swap1\n      tag_119\n      swap3\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      swap2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      tag_120\n  // bytes of type uint256: 32\n      jump\t// in\n    tag_119:\n  // end of CompilerUtils::storeInMemoryDynamic()\n      pop\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":10090:10509  function setSpaceAdmins(uint256 spaceId, address[] memory newAdmins)... */\n      pop\n      pop\n  // bytes of type uint256: 32\n      pop\n      jump\t// out\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":14416:14694  function getSpaceSettings(uint256 spaceId)... */\n    tag_10:  // declaration of function getSpaceSettings\n        /* \"contracts/Vitasensus.solpp\":14488:14513  uint256 proposalThreshold */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":14515:14543  bool onlyAdminCreateProposal */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":14550:14580  SpaceSettings storage settings */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":14583:14597  _spaceSettings */\n      0x02\n  // ExpressionCompiler::appendVariable(_spacesAdmins, _spacesAdmins)\n        /* \"contracts/Vitasensus.solpp\":14598:14605  spaceId */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":14583:14606  _spaceSettings[spaceId] */\n      dup2\n      sload\n      dup2\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      lt\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      tag_122\n      jumpi\n  // bytes of type uint256: 32\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n      mstore\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x32\n      0x04\n  // bytes of type uint256: 32\n      mstore\n      0x24\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x00\n      revert\n    tag_122:\n      swap1\n  // ExpressionCompiler::appendVariable(index, index)\n      0x00\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mstore\n      blake2b(0x00, 0x20)\n      swap1\n      0x02\n  // newPushTag tag_112, desc: \n      mul\n      add\n  // Jump to tag_111\n        /* \"contracts/Vitasensus.solpp\":14550:14606  SpaceSettings storage settings = _spaceSettings[spaceId] */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":14618:14626  settings */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":14618:14650  settings.createProposalThreshold */\n      0x00\n      add\n      sload\n        /* \"contracts/Vitasensus.solpp\":14652:14660  settings */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":14652:14689  settings.onlyAdminsCanCreateProposals */\n      0x01\n      add\n      0x00\n      swap1\n  // newTag tag_113, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      sload\n      swap1\n  // end of CompilerUtils::storeInMemory()\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Vitasensus.solpp\":14610:14690  return (settings.createProposalThreshold, settings.onlyAdminsCanCreateProposals) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":14416:14694  function getSpaceSettings(uint256 spaceId)... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1156:1241   */\n    tag_11:  // declaration of function owner\n  // CompilerUtils::convertType(): address -> address\n        /* \"contracts/Ownable.sol\":1202:1209   */\n      0x00\n        /* \"contracts/Ownable.sol\":1228:1234   */\n      dup1\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      0x00\n      swap1\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      sload\n      swap1\n  // bytes of type address: 32\n      0x0100\n      exp\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap1\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      div\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // bytes of type uint256: 32\n      and\n        /* \"contracts/Ownable.sol\":1221:1234   */\n      swap1\n  // end of CompilerUtils::storeInMemoryDynamic()\n      pop\n        /* \"contracts/Ownable.sol\":1156:1241   */\n      swap1\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":4445:4540  function isOperator(address _addr) public view returns (bool) {... */\n    tag_12:  // declaration of function isOperator\n        /* \"contracts/Vitasensus.solpp\":4501:4505  bool */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":4518:4529  _isOperator */\n      0x0b\n        /* \"contracts/Vitasensus.solpp\":4518:4536  _isOperator[_addr] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":4530:4535  _addr */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":4518:4536  _isOperator[_addr] */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n  // CompilerUtils::copyToStackTop(4, 1)\n      mstore\n  // CompilerUtils::convertType(): bool -> bool\n      0x20\n      add\n  // end of CompilerUtils::convertType()\n      swap1\n      dup2\n      mstore\n      0x20\n  // CompilerUtils::popStackSlots(1)\n      add\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      0x00\n  // ExpressionCompiler::appendVariable(index, index)\n      blake2b\n      0x00\n  // CompilerContext::callYulFunction(name=increment_t_uint256, _inArgs=1, _outArgs=1)\n  // newPushTag tag_114, desc: return of Yul function increment_t_uint256\n      swap1\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      sload\n  // end of CompilerUtils::rotateStackDown()\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n  // CompilerUtils::popStackSlots(1)\n      0xff\n  // end of CompilerUtils::popStackSlots()\n      and\n        /* \"contracts/Vitasensus.solpp\":4511:4536  return _isOperator[_addr] */\n      swap1\n      pop\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/Vitasensus.solpp\":4445:4540  function isOperator(address _addr) public view returns (bool) {... */\n      swap2\n  // end of CompilerUtils::popStackSlots()\n  // newTag tag_115, desc: \n  // newTag tag_116, desc: \n  // newTag tag_117, desc: \n  // ContractCompiler::appendStackVariableInitialisation(uint256 index)\n      swap1\n  // end of ContractCompiler::appendStackVariableInitialisation()\n      pop\n  // CompilerUtils::convertType(): int_const 0 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackVariable(index)\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":14712:15613  function getSpaces(uint256 skip, uint256 limit)... */\n    tag_13:  // declaration of function getSpaces\n        /* \"contracts/Vitasensus.solpp\":14793:14815  bytes32[] memory names */\n      0x60\n  // ExpressionCompiler::visit(_memberAccess=newAdmins.length)\n  // ExpressionCompiler::appendVariable(newAdmins, newAdmins)\n        /* \"contracts/Vitasensus.solpp\":14820:14845  vitetoken[] memory tokens */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":14850:14874  bytes32[] memory avatars */\n      0x60\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(index, index)\n        /* \"contracts/Vitasensus.solpp\":14879:14904  bytes32[] memory websites */\n      dup1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":14909:14938  uint256[] memory memberCounts */\n      0x60\n        /* \"contracts/Vitasensus.solpp\":14959:14966  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":14959:14973  _spaces.length */\n      dup1\n      sload\n      swap1\n  // ExpressionCompiler::appendVariable(_spacesIsAdmin, _spacesIsAdmin)\n      pop\n        /* \"contracts/Vitasensus.solpp\":14952:14956  skip */\n      dup8\n        /* \"contracts/Vitasensus.solpp\":14952:14973  skip < _spaces.length */\n      lt\n        /* \"contracts/Vitasensus.solpp\":14948:15610  if (skip < _spaces.length) {... */\n      iszero\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      tag_127\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jumpi\n        /* \"contracts/Vitasensus.solpp\":14980:14994  uint256 length */\n      0x00\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":15023:15028  limit */\n      dup7\n        /* \"contracts/Vitasensus.solpp\":15015:15019  skip */\n      dup9\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":14998:15005  _spaces */\n      0x01\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":14998:15012  _spaces.length */\n      dup1\n      sload\n  // bytes of type uint256: 32\n      swap1\n      pop\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":14998:15019  _spaces.length - skip */\n      tag_128\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n  // ExpressionCompiler::appendVariable(newAdmins, newAdmins)\n    tag_128:  // return of Yul function checked_sub_t_uint256\n  // ExpressionCompiler::appendVariable(index, index)\n        /* \"contracts/Vitasensus.solpp\":14997:15028  (_spaces.length - skip) > limit */\n      gt\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":14997:15060  (_spaces.length - skip) > limit ? limit : _spaces.length - skip */\n      tag_130\n      jumpi\n        /* \"contracts/Vitasensus.solpp\":15056:15060  skip */\n      dup8\n        /* \"contracts/Vitasensus.solpp\":15039:15046  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":15039:15053  _spaces.length */\n      dup1\n      sload\n  // newPushTag tag_118, desc: \n      swap1\n      pop\n  // Jump to tag_117\n        /* \"contracts/Vitasensus.solpp\":15039:15060  _spaces.length - skip */\n      tag_131\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_131:  // return of Yul function checked_sub_t_uint256\n        /* \"contracts/Vitasensus.solpp\":14997:15060  (_spaces.length - skip) > limit ? limit : _spaces.length - skip */\n      jump(tag_132)\n    tag_130:\n        /* \"contracts/Vitasensus.solpp\":15031:15036  limit */\n      dup7\n        /* \"contracts/Vitasensus.solpp\":14997:15060  (_spaces.length - skip) > limit ? limit : _spaces.length - skip */\n    tag_132:\n        /* \"contracts/Vitasensus.solpp\":14980:15060  uint256 length = (_spaces.length - skip) > limit ? limit : _spaces.length - skip */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":15087:15093  length */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":15073:15094  new bytes32[](length) */\n      0xffffffffffffffff\n  // CompilerUtils::loadFromMemoryHelper()\n      dup2\n  // CompilerUtils::convertType(): address -> address\n      gt\n      iszero\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      tag_133\n      jumpi\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n  // bytes of type address: 32\n      mstore\n      0x41\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x04\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mstore\n      0x24\n  // bytes of type uint256: 32\n      0x00\n      revert\n  // end of CompilerUtils::storeInMemoryDynamic()\n    tag_133:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n  // CompilerUtils::copyToStackTop(4, 1)\n      add\n  // CompilerUtils::convertType(): bool -> bool\n      0x40\n      mstore\n  // end of CompilerUtils::convertType()\n      dup1\n      iszero\n      tag_134\n      jumpi\n  // CompilerUtils::popStackSlots(1)\n      dup2\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      0x20\n  // ExpressionCompiler::appendVariable(index, index)\n      add\n      0x20\n  // CompilerContext::callYulFunction(name=increment_t_uint256, _inArgs=1, _outArgs=1)\n  // newPushTag tag_119, desc: return of Yul function increment_t_uint256\n      dup3\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      mul\n  // end of CompilerUtils::rotateStackDown()\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n  // CompilerUtils::popStackSlots(1)\n      dup3\n  // end of CompilerUtils::popStackSlots()\n      add\n      swap2\n      pop\n  // CompilerUtils::popStackSlots(1)\n      pop\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(newAdmins, newAdmins)\n      swap1\n  // ExpressionCompiler::appendVariable(_spacesAdmins, _spacesAdmins)\n      pop\n    tag_134:\n      pop\n        /* \"contracts/Vitasensus.solpp\":15065:15094  names = new bytes32[](length) */\n      swap6\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      pop\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":15124:15130  length */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":15108:15131  new vitetoken[](length) */\n      0xffffffffffffffff\n  // bytes of type uint256: 32\n      dup2\n      gt\n  // end of CompilerUtils::storeInMemoryDynamic()\n      iszero\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      tag_135\n      jumpi\n  // bytes of type uint256: 32\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n      mstore\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_135:\n      mload(0x40)\n      swap1\n  // CompilerContext::callLowLevelFunction($copyArrayToStorage_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_storage)\n  // newPushTag tag_120, desc: \n      dup1\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      dup3\n      mstore\n      dup1\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_121, desc: $copyArrayToStorage_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_storage\n      0x20\n      mul\n      0x20\n  // CompilerUtils::popStackSlots(1)\n      add\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      dup3\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      add\n  // CompilerUtils::popStackSlots(1)\n      0x40\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 0 return parameters\n  //  current stackLayout [0 -1 -1 ]\n      mstore\n  //  current stackLayout [0 -1 ]\n      dup1\n      iszero\n      tag_136\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(uint256 proposalThreshold)\n      jumpi\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(bool onlyAdminCreateProposal)\n      dup2\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function getSpaceSettings(uint256 spaceId)\n\t\texternal\n\t\tview\n\t\treturns (uint256 proposalThreshold, bool onlyAdminCreateProposal)\n\t{\n\t\tSpaceSettings storage settings = _spaceSettings[spaceId];\n\t\treturn (settings.createProposalThreshold, settings.onlyAdminsCanCreateProposals);\n\t}\n  // newTag tag_122, desc: return tag of getSpaceSettings\n  // start of code block of getSpaceSettings\n  // ContractCompiler::appendStackVariableInitialisation(SpaceSettings storage settings)\n      0x20\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::appendVariable(_spaceSettings, _spaceSettings)\n      add\n      0x20\n      dup3\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      mul\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n  // newPushTag tag_123, desc: \n      add\n      swap2\n  // Jump to tag_122\n      pop\n      pop\n      swap1\n      pop\n    tag_136:\n      pop\n        /* \"contracts/Vitasensus.solpp\":15099:15131  tokens = new vitetoken[](length) */\n      swap5\n      pop\n        /* \"contracts/Vitasensus.solpp\":15160:15166  length */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":15146:15167  new bytes32[](length) */\n      0xffffffffffffffff\n      dup2\n  // newTag tag_124, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      gt\n      iszero\n  // end of CompilerUtils::storeInMemory()\n      tag_137\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x41)\n      0x24\n      0x00\n  // CompilerUtils::convertType(): struct Vitasensus.SpaceSettings storage ref -> struct Vitasensus.SpaceSettings storage pointer\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackVariable(settings)\n      revert\n    tag_137:\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::visit(_memberAccess=settings.createProposalThreshold)\n  // ExpressionCompiler::appendVariable(settings, settings)\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n  // ExpressionCompiler::visit(_memberAccess=settings.onlyAdminsCanCreateProposals)\n  // ExpressionCompiler::appendVariable(settings, settings)\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_138\n      jumpi\n  // CompilerUtils::moveToStackVariable(onlyAdminCreateProposal)\n      dup2\n      0x20\n  // CompilerUtils::moveToStackVariable(proposalThreshold)\n      add\n      0x20\n  // CompilerUtils::popAndJump(toHeight=4, jumpTo=tag_121:)\n  // CompilerUtils::popStackSlots(1)\n      dup3\n  // end of CompilerUtils::popStackSlots()\n      mul\n      dup1\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(1)\n      calldatasize\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      dup4\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 2 return parameters\n  //  current stackLayout [2 -1 0 1 ]\n      calldatacopy\n  //  current stackLayout [2 1 0 -1 ]\n      dup1\n  //  current stackLayout [2 1 0 ]\n      dup3\n      add\n      swap2\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(address)\n      pop\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function owner() public view virtual returns (address) {\n        return _owner;\n    }\n  // newTag tag_125, desc: return tag of owner\n  // start of code block of owner\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::appendVariable(_owner, _owner)\n      pop\n      swap1\n      pop\n    tag_138:\n      pop\n        /* \"contracts/Vitasensus.solpp\":15136:15167  avatars = new bytes32[](length) */\n      swap4\n      pop\n        /* \"contracts/Vitasensus.solpp\":15197:15203  length */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":15183:15204  new bytes32[](length) */\n      0xffffffffffffffff\n      dup2\n      gt\n  // CompilerUtils::moveToStackVariable()\n      iszero\n      tag_139\n  // CompilerUtils::popAndJump(toHeight=2, jumpTo=tag_124:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 0 parameters and 1 return parameters\n  //  current stackLayout [1 0 ]\n      mstore\n      0x41\n      0x04\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(bool)\n      mstore\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function isOperator(address _addr) public view returns (bool) {\n\t\treturn _isOperator[_addr];\n\t}\n  // newTag tag_126, desc: return tag of isOperator\n  // start of code block of isOperator\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::appendVariable(_isOperator, _isOperator)\n      revert(0x00, 0x24)\n    tag_139:\n  // ExpressionCompiler::appendVariable(_addr, _addr)\n      0x40\n  // CompilerUtils::convertType(): address -> address\n      mload\n      swap1\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      dup1\n      dup3\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mstore\n      dup1\n  // bytes of type address: 32\n      0x20\n      mul\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x20\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      dup3\n  // bytes of type uint256: 32\n      add\n      0x40\n  // end of CompilerUtils::storeInMemoryDynamic()\n      mstore\n      dup1\n      iszero\n      tag_140\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n  // CompilerUtils::moveToStackVariable()\n      calldatasize\n      dup4\n  // CompilerUtils::popAndJump(toHeight=3, jumpTo=tag_125:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      calldatacopy\n      dup1\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      dup3\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 1 return parameters\n  //  current stackLayout [1 -1 0 ]\n      add\n  //  current stackLayout [0 -1 1 ]\n      swap2\n  //  current stackLayout [0 1 -1 ]\n      pop\n      pop\n      swap1\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(bytes32[] memory names)\n  // CompilerUtils::pushZeroPointer()\n      pop\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(vitetoken[] memory tokens)\n  // CompilerUtils::pushZeroPointer()\n    tag_140:\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(bytes32[] memory avatars)\n  // CompilerUtils::pushZeroPointer()\n      pop\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(bytes32[] memory websites)\n  // CompilerUtils::pushZeroPointer()\n        /* \"contracts/Vitasensus.solpp\":15172:15204  websites = new bytes32[](length) */\n      swap3\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(uint256[] memory memberCounts)\n  // CompilerUtils::pushZeroPointer()\n      pop\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function getSpaces(uint256 skip, uint256 limit)\n\t\texternal\n\t\tview\n\t\treturns (\n\t\t\tbytes32[] memory names,\n\t\t\tvitetoken[] memory tokens,\n\t\t\tbytes32[] memory avatars,\n\t\t\tbytes32[] memory websites,\n\t\t\tuint256[] memory memberCounts\n\t\t)\n\t{\n\t\tif (skip < _spaces.length) {\n\t\t\tuint256 length = (_spaces.length - skip) > limit ? limit : _spaces.length - skip;\n\t\t\tnames = new bytes32[](length);\n\t\t\ttokens = new vitetoken[](length);\n\t\t\tavatars = new bytes32[](length);\n\t\t\twebsites = new bytes32[](length);\n\t\t\tmemberCounts = new uint256[](length);\n\n\t\t\tfor (uint256 index = skip; index < _spaces.length && index < (skip + limit); index++) {\n\t\t\t\tnames[index - skip] = _spaces[index].name;\n\t\t\t\ttokens[index - skip] = _spaces[index].token;\n\t\t\t\tavatars[index - skip] = _spaces[index].avatar;\n\t\t\t\twebsites[index - skip] = _spaces[index].website;\n\t\t\t\tmemberCounts[index - skip] = _spacesMembers[index].size();\n\t\t\t}\n\t\t}\n\t}\n  // newTag tag_127, desc: return tag of getSpaces\n  // start of code block of getSpaces\n  // ExpressionCompiler::visit(_memberAccess=_spaces.length)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n        /* \"contracts/Vitasensus.solpp\":15238:15244  length */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":15224:15245  new uint256[](length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_141\n      jumpi\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(skip, skip)\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      0x00\n      mstore\n  // newPushTag tag_128, desc: \n      0x41\n      0x04\n  // Jump to tag_127\n  // ContractCompiler::appendStackVariableInitialisation(uint256 length)\n      mstore\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::appendVariable(limit, limit)\n      0x24\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(skip, skip)\n      0x00\n  // ExpressionCompiler::visit(_memberAccess=_spaces.length)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      revert\n    tag_141:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_129, desc: return of Yul function checked_sub_t_uint256\n      mstore\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup1\n      0x20\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_130, desc: checked_sub_t_uint256\n      mul\n      0x20\n      add\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      dup3\n  // newPushTag tag_131, desc: \n      add\n      0x40\n  // Jump to tag_130\n  // ExpressionCompiler::appendVariable(skip, skip)\n      mstore\n  // ExpressionCompiler::visit(_memberAccess=_spaces.length)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      dup1\n      iszero\n      tag_142\n      jumpi\n      dup2\n      0x20\n      add\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_132, desc: return of Yul function checked_sub_t_uint256\n      0x20\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup3\n      mul\n  // end of CompilerUtils::rotateStackUp()\n      dup1\n      calldatasize\n      dup4\n  // newPushTag tag_133, desc: \n      calldatacopy\n      dup1\n      dup3\n  // ExpressionCompiler::appendVariable(limit, limit)\n      add\n      swap2\n  // CompilerUtils::moveToStackVariable(length)\n      pop\n      pop\n  // ExpressionCompiler::appendVariable(length, length)\n      swap1\n      pop\n    tag_142:\n      pop\n        /* \"contracts/Vitasensus.solpp\":15209:15245  memberCounts = new uint256[](length) */\n      swap2\n  // newPushTag tag_134, desc: \n      pop\n        /* \"contracts/Vitasensus.solpp\":15256:15269  uint256 index */\n      0x00\n  // Jump to tag_133\n        /* \"contracts/Vitasensus.solpp\":15272:15276  skip */\n      dup9\n        /* \"contracts/Vitasensus.solpp\":15256:15276  uint256 index = skip */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":15251:15606  for (uint256 index = skip; index < _spaces.length && index < (skip + limit); index++) {... */\n    tag_143:\n        /* \"contracts/Vitasensus.solpp\":15286:15293  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":15286:15300  _spaces.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":15278:15283  index */\n      dup2\n  // CompilerUtils::fetchFreeMemoryPointer()\n        /* \"contracts/Vitasensus.solpp\":15278:15300  index < _spaces.length */\n      lt\n        /* \"contracts/Vitasensus.solpp\":15278:15326  index < _spaces.length && index < (skip + limit) */\n      dup1\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      iszero\n      tag_146\n      jumpi\n      pop\n        /* \"contracts/Vitasensus.solpp\":15320:15325  limit */\n      dup8\n        /* \"contracts/Vitasensus.solpp\":15313:15317  skip */\n      dup10\n        /* \"contracts/Vitasensus.solpp\":15313:15325  skip + limit */\n      tag_147\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n  // CompilerUtils::storeFreeMemoryPointer()\n    tag_147:  // return of Yul function checked_add_t_uint256\n        /* \"contracts/Vitasensus.solpp\":15304:15309  index */\n      dup2\n  // end of CompilerUtils::storeFreeMemoryPointer()\n        /* \"contracts/Vitasensus.solpp\":15304:15326  index < (skip + limit) */\n      lt\n        /* \"contracts/Vitasensus.solpp\":15278:15326  index < _spaces.length && index < (skip + limit) */\n    tag_146:\n  // newPushTag tag_135, desc: \n        /* \"contracts/Vitasensus.solpp\":15251:15606  for (uint256 index = skip; index < _spaces.length && index < (skip + limit); index++) {... */\n      iszero\n      tag_144\n  // Jump to tag_134\n      jumpi\n        /* \"contracts/Vitasensus.solpp\":15365:15372  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":15373:15378  index */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":15365:15379  _spaces[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_148\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_148:\n      swap1\n  // ExpressionCompiler::appendVariable(names, names)\n      0x00\n      mstore\n      0x20\n  // CompilerUtils::popStackSlots(1)\n      0x00\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(length, length)\n      blake2b\n      swap1\n      0x07\n      mul\n      add\n  // newPushTag tag_136, desc: \n        /* \"contracts/Vitasensus.solpp\":15365:15384  _spaces[index].name */\n      0x00\n      add\n  // Jump to tag_135\n      sload\n        /* \"contracts/Vitasensus.solpp\":15343:15348  names */\n      dup8\n        /* \"contracts/Vitasensus.solpp\":15357:15361  skip */\n      dup11\n        /* \"contracts/Vitasensus.solpp\":15349:15354  index */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":15349:15361  index - skip */\n      tag_150\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_150:  // return of Yul function checked_sub_t_uint256\n  // CompilerUtils::fetchFreeMemoryPointer()\n        /* \"contracts/Vitasensus.solpp\":15343:15362  names[index - skip] */\n      dup2\n      mload\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      dup2\n      lt\n      tag_151\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      0x24\n  // CompilerUtils::storeFreeMemoryPointer()\n      0x00\n      revert\n  // end of CompilerUtils::storeFreeMemoryPointer()\n    tag_151:\n      0x20\n  // newPushTag tag_137, desc: \n      mul\n      0x20\n  // Jump to tag_136\n      add\n      add\n        /* \"contracts/Vitasensus.solpp\":15343:15384  names[index - skip] = _spaces[index].name */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":15413:15420  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":15421:15426  index */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":15413:15427  _spaces[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_152\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      0x32\n      0x04\n  // ExpressionCompiler::appendVariable(tokens, tokens)\n      mstore\n      0x24\n      0x00\n  // CompilerUtils::popStackSlots(1)\n      revert\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(length, length)\n    tag_152:\n      swap1\n      0x00\n      mstore\n      0x20\n  // newPushTag tag_138, desc: \n      0x00\n      blake2b\n  // Jump to tag_137\n      swap1\n      0x07\n      mul\n      add\n        /* \"contracts/Vitasensus.solpp\":15413:15433  _spaces[index].token */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x0100\n      exp\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      swap1\n      div\n      0xffffffffffffffffffff\n      and\n        /* \"contracts/Vitasensus.solpp\":15390:15396  tokens */\n      dup7\n        /* \"contracts/Vitasensus.solpp\":15405:15409  skip */\n      dup11\n        /* \"contracts/Vitasensus.solpp\":15397:15402  index */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":15397:15409  index - skip */\n      tag_154\n      swap2\n      swap1\n      tag_129\n  // CompilerUtils::storeFreeMemoryPointer()\n      jump\t// in\n    tag_154:  // return of Yul function checked_sub_t_uint256\n  // end of CompilerUtils::storeFreeMemoryPointer()\n        /* \"contracts/Vitasensus.solpp\":15390:15410  tokens[index - skip] */\n      dup2\n      mload\n  // newPushTag tag_139, desc: \n      dup2\n      lt\n  // Jump to tag_138\n      tag_155\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_155:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Vitasensus.solpp\":15390:15433  tokens[index - skip] = _spaces[index].token */\n      swap1\n      0xffffffffffffffffffff\n      and\n  // ExpressionCompiler::appendVariable(avatars, avatars)\n      swap1\n      dup2\n      0xffffffffffffffffffff\n  // CompilerUtils::popStackSlots(1)\n      and\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(length, length)\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":15463:15470  _spaces */\n      0x01\n  // newPushTag tag_140, desc: \n        /* \"contracts/Vitasensus.solpp\":15471:15476  index */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":15463:15477  _spaces[index] */\n      dup2\n  // Jump to tag_139\n      sload\n      dup2\n      lt\n      tag_156\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      0x32\n      0x04\n  // CompilerUtils::fetchFreeMemoryPointer()\n      mstore\n      0x24\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      0x00\n      revert\n    tag_156:\n      swap1\n      0x00\n      mstore\n      blake2b(0x00, 0x20)\n      swap1\n      0x07\n  // CompilerUtils::storeFreeMemoryPointer()\n      mul\n      add\n  // end of CompilerUtils::storeFreeMemoryPointer()\n        /* \"contracts/Vitasensus.solpp\":15463:15484  _spaces[index].avatar */\n      0x01\n      add\n  // newPushTag tag_141, desc: \n      sload\n        /* \"contracts/Vitasensus.solpp\":15439:15446  avatars */\n      dup6\n  // Jump to tag_140\n        /* \"contracts/Vitasensus.solpp\":15455:15459  skip */\n      dup11\n        /* \"contracts/Vitasensus.solpp\":15447:15452  index */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":15447:15459  index - skip */\n      tag_158\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_158:  // return of Yul function checked_sub_t_uint256\n        /* \"contracts/Vitasensus.solpp\":15439:15460  avatars[index - skip] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_159\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n  // ExpressionCompiler::appendVariable(websites, websites)\n      revert(0x00, 0x24)\n  // CompilerUtils::popStackSlots(1)\n    tag_159:\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(length, length)\n      0x20\n      mul\n      0x20\n      add\n      add\n  // newPushTag tag_142, desc: \n        /* \"contracts/Vitasensus.solpp\":15439:15484  avatars[index - skip] = _spaces[index].avatar */\n      dup2\n      dup2\n  // Jump to tag_141\n      mstore\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":15515:15522  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":15523:15528  index */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":15515:15529  _spaces[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_160\n  // CompilerUtils::fetchFreeMemoryPointer()\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      0x00\n      mstore\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_160:\n      swap1\n      0x00\n  // CompilerUtils::storeFreeMemoryPointer()\n      mstore\n      0x20\n  // end of CompilerUtils::storeFreeMemoryPointer()\n      0x00\n      blake2b\n  // newPushTag tag_143, desc: \n      swap1\n      0x07\n  // Jump to tag_142\n      mul\n      add\n        /* \"contracts/Vitasensus.solpp\":15515:15537  _spaces[index].website */\n      0x02\n      add\n      sload\n        /* \"contracts/Vitasensus.solpp\":15490:15498  websites */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":15507:15511  skip */\n      dup11\n        /* \"contracts/Vitasensus.solpp\":15499:15504  index */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":15499:15511  index - skip */\n      tag_162\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_162:  // return of Yul function checked_sub_t_uint256\n        /* \"contracts/Vitasensus.solpp\":15490:15512  websites[index - skip] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_163\n      jumpi\n  // ExpressionCompiler::appendVariable(memberCounts, memberCounts)\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n  // CompilerUtils::popStackSlots(1)\n      0x32\n  // end of CompilerUtils::popStackSlots()\n  // newTag tag_144, desc: \n  // newTag tag_145, desc: \n  // newTag tag_146, desc: \n  // ContractCompiler::appendStackVariableInitialisation(uint256 index)\n      0x04\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::appendVariable(skip, skip)\n      mstore\n  // CompilerUtils::moveToStackVariable(index)\n      revert(0x00, 0x24)\n  // ExpressionCompiler::visit(_memberAccess=_spaces.length)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n    tag_163:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Vitasensus.solpp\":15490:15537  websites[index - skip] = _spaces[index].website */\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(index, index)\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mstore\n      pop\n      pop\n  // newPushTag tag_147, desc: \n        /* \"contracts/Vitasensus.solpp\":15572:15600  _spacesMembers[index].size() */\n      tag_164\n        /* \"contracts/Vitasensus.solpp\":15572:15586  _spacesMembers */\n      0x04\n  // Jump to tag_146\n        /* \"contracts/Vitasensus.solpp\":15572:15593  _spacesMembers[index] */\n      0x00\n  // ExpressionCompiler::appendVariable(limit, limit)\n        /* \"contracts/Vitasensus.solpp\":15587:15592  index */\n      dup4\n  // ExpressionCompiler::appendVariable(skip, skip)\n        /* \"contracts/Vitasensus.solpp\":15572:15593  _spacesMembers[index] */\n      dup2\n  // CompilerContext::callYulFunction(name=checked_add_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_148, desc: return of Yul function checked_add_t_uint256\n      mstore\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      0x20\n      add\n  // end of CompilerUtils::rotateStackUp()\n      swap1\n      dup2\n      mstore\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(index, index)\n      0x20\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      add\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":15572:15598  _spacesMembers[index].size */\n      tag_165\n        /* \"contracts/Vitasensus.solpp\":15572:15600  _spacesMembers[index].size() */\n      jump\t// in\n  // ExpressionCompiler::visit(_memberAccess=_spaces[index].name)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n    tag_164:  // return of function function (struct IterableMapping.Map) view returns (uint256)\n        /* \"contracts/Vitasensus.solpp\":15543:15555  memberCounts */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":15564:15568  skip */\n      dup11\n  // ExpressionCompiler::appendVariable(index, index)\n        /* \"contracts/Vitasensus.solpp\":15556:15561  index */\n      dup4\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":15556:15568  index - skip */\n      tag_166\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_166:  // return of Yul function checked_sub_t_uint256\n  // newPushTag tag_149, desc: \n        /* \"contracts/Vitasensus.solpp\":15543:15569  memberCounts[index - skip] */\n      dup2\n      mload\n  // Jump to tag_148\n      dup2\n      lt\n      tag_167\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      0x24\n  // newTag tag_150, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x00\n      revert\n  // end of CompilerUtils::storeInMemory()\n    tag_167:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Vitasensus.solpp\":15543:15600  memberCounts[index - skip] = _spacesMembers[index].size() */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":15328:15335  index++ */\n      dup1\n      dup1\n      tag_168\n      swap1\n  // ExpressionCompiler::appendVariable(names, names)\n      tag_64\n  // ExpressionCompiler::appendVariable(skip, skip)\n      jump\t// in\n  // ExpressionCompiler::appendVariable(index, index)\n    tag_168:  // return of Yul function increment_t_uint256\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_151, desc: return of Yul function checked_sub_t_uint256\n      swap2\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      pop\n      pop\n  // end of CompilerUtils::rotateStackUp()\n        /* \"contracts/Vitasensus.solpp\":15251:15606  for (uint256 index = skip; index < _spaces.length && index < (skip + limit); index++) {... */\n      jump(tag_143)\n    tag_144:\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      pop\n        /* \"contracts/Vitasensus.solpp\":14948:15610  if (skip < _spaces.length) {... */\n      pop\n    tag_127:\n        /* \"contracts/Vitasensus.solpp\":14712:15613  function getSpaces(uint256 skip, uint256 limit)... */\n      swap3\n      swap6\n      pop\n  // newPushTag tag_152, desc: \n      swap3\n      swap6\n  // Jump to tag_151\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":13924:14390  function getSpaceExternal(uint256 spaceId)... */\n    tag_14:  // declaration of function getSpaceExternal\n        /* \"contracts/Vitasensus.solpp\":14000:14012  bytes32 name */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":14017:14042  string memory description */\n      0x60\n        /* \"contracts/Vitasensus.solpp\":14047:14062  vitetoken token */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":14067:14081  bytes32 avatar */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":14086:14101  bytes32 website */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":14106:14126  uint256 memberCounts */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":14131:14152  uint256 tokenDecimals */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":14174:14181  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":14182:14189  spaceId */\n      dup9\n        /* \"contracts/Vitasensus.solpp\":14174:14190  _spaces[spaceId] */\n      dup2\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      sload\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      dup2\n      lt\n      tag_170\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      jumpi\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // CompilerUtils::storeInMemoryDynamic(type=bytes32, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=bytes32, ...)\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      0x00\n      mstore\n      0x32\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x04\n      mstore\n  // bytes of type bytes32: 32\n      0x24\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n      revert\n  // CompilerUtils::popStackSlots(1)\n    tag_170:\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=_spaces[index].token)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      swap1\n      0x00\n      mstore\n  // ExpressionCompiler::appendVariable(index, index)\n      0x20\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      0x00\n      blake2b\n      swap1\n      0x07\n      mul\n      add\n  // newPushTag tag_153, desc: \n        /* \"contracts/Vitasensus.solpp\":14174:14195  _spaces[spaceId].name */\n      0x00\n      add\n  // Jump to tag_152\n      sload\n        /* \"contracts/Vitasensus.solpp\":14200:14207  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":14208:14215  spaceId */\n      dup10\n        /* \"contracts/Vitasensus.solpp\":14200:14216  _spaces[spaceId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_172\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n  // newTag tag_154, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mstore\n      0x32\n  // end of CompilerUtils::storeInMemory()\n      0x04\n      mstore\n      revert(0x00, 0x24)\n    tag_172:\n      swap1\n      0x00\n      mstore\n      blake2b(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n        /* \"contracts/Vitasensus.solpp\":14200:14228  _spaces[spaceId].description */\n      0x03\n      add\n        /* \"contracts/Vitasensus.solpp\":14233:14240  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":14241:14248  spaceId */\n      dup11\n        /* \"contracts/Vitasensus.solpp\":14233:14249  _spaces[spaceId] */\n      dup2\n      sload\n  // ExpressionCompiler::appendVariable(tokens, tokens)\n      dup2\n  // ExpressionCompiler::appendVariable(skip, skip)\n      lt\n  // ExpressionCompiler::appendVariable(index, index)\n      tag_174\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_155, desc: return of Yul function checked_sub_t_uint256\n      jumpi\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n  // end of CompilerUtils::rotateStackUp()\n      mstore\n      0x32\n      0x04\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mstore\n      revert(0x00, 0x24)\n    tag_174:\n      swap1\n  // newPushTag tag_156, desc: \n      0x00\n      mstore\n  // Jump to tag_155\n      blake2b(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n        /* \"contracts/Vitasensus.solpp\":14233:14255  _spaces[spaceId].token */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      swap1\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): tokenId -> tokenId\n      div\n      0xffffffffffffffffffff\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      and\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n        /* \"contracts/Vitasensus.solpp\":14260:14267  _spaces */\n      0x01\n  // CompilerUtils::storeInMemoryDynamic(type=tokenId, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=tokenId, ...)\n  // CompilerUtils::convertType(): tokenId -> tokenId\n        /* \"contracts/Vitasensus.solpp\":14268:14275  spaceId */\n      dup12\n        /* \"contracts/Vitasensus.solpp\":14260:14276  _spaces[spaceId] */\n      dup2\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      sload\n      dup2\n  // bytes of type tokenId: 32\n      lt\n      tag_176\n  // end of CompilerUtils::storeInMemoryDynamic()\n      jumpi\n  // CompilerUtils::popStackSlots(1)\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=_spaces[index].avatar)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      0x00\n      mstore\n      0x32\n  // ExpressionCompiler::appendVariable(index, index)\n      0x04\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mstore\n      revert(0x00, 0x24)\n    tag_176:\n      swap1\n  // newPushTag tag_157, desc: \n      0x00\n      mstore\n  // Jump to tag_156\n      blake2b(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n        /* \"contracts/Vitasensus.solpp\":14260:14283  _spaces[spaceId].avatar */\n      0x01\n      add\n      sload\n        /* \"contracts/Vitasensus.solpp\":14288:14295  _spaces */\n      0x01\n  // newTag tag_158, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":14296:14303  spaceId */\n      dup13\n        /* \"contracts/Vitasensus.solpp\":14288:14304  _spaces[spaceId] */\n      dup2\n  // end of CompilerUtils::storeInMemory()\n      sload\n      dup2\n      lt\n      tag_178\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_178:\n  // ExpressionCompiler::appendVariable(avatars, avatars)\n      swap1\n  // ExpressionCompiler::appendVariable(skip, skip)\n      0x00\n  // ExpressionCompiler::appendVariable(index, index)\n      mstore\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_159, desc: return of Yul function checked_sub_t_uint256\n      0x20\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      0x00\n      blake2b\n  // end of CompilerUtils::rotateStackUp()\n      swap1\n      0x07\n      mul\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      add\n        /* \"contracts/Vitasensus.solpp\":14288:14312  _spaces[spaceId].website */\n      0x02\n      add\n      sload\n        /* \"contracts/Vitasensus.solpp\":14317:14347  _spacesMembers[spaceId].size() */\n      tag_180\n        /* \"contracts/Vitasensus.solpp\":14317:14331  _spacesMembers */\n      0x04\n  // newPushTag tag_160, desc: \n        /* \"contracts/Vitasensus.solpp\":14317:14340  _spacesMembers[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":14332:14339  spaceId */\n      dup16\n  // Jump to tag_159\n        /* \"contracts/Vitasensus.solpp\":14317:14340  _spacesMembers[spaceId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":14317:14345  _spacesMembers[spaceId].size */\n      tag_165\n        /* \"contracts/Vitasensus.solpp\":14317:14347  _spacesMembers[spaceId].size() */\n      jump\t// in\n    tag_180:  // return of function function (struct IterableMapping.Map) view returns (uint256)\n        /* \"contracts/Vitasensus.solpp\":14352:14359  _spaces */\n      0x01\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n        /* \"contracts/Vitasensus.solpp\":14360:14367  spaceId */\n      dup15\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n        /* \"contracts/Vitasensus.solpp\":14352:14368  _spaces[spaceId] */\n      dup2\n      sload\n      dup2\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      lt\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n      tag_181\n  // CompilerUtils::storeInMemoryDynamic(type=bytes32, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=bytes32, ...)\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mstore\n      0x32\n  // bytes of type bytes32: 32\n      0x04\n      mstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x24\n  // CompilerUtils::popStackSlots(1)\n      0x00\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=_spaces[index].website)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      revert\n    tag_181:\n      swap1\n  // ExpressionCompiler::appendVariable(index, index)\n      0x00\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mstore\n      blake2b(0x00, 0x20)\n      swap1\n      0x07\n  // newPushTag tag_161, desc: \n      mul\n      add\n  // Jump to tag_160\n        /* \"contracts/Vitasensus.solpp\":14352:14382  _spaces[spaceId].tokenDecimals */\n      0x05\n      add\n      sload\n        /* \"contracts/Vitasensus.solpp\":14162:14386  return (... */\n      dup6\n      dup1\n      sload\n      tag_183\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:  // return of Yul function extract_byte_array_length\n  // newTag tag_162, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup1\n      0x1f\n  // end of CompilerUtils::storeInMemory()\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n  // ExpressionCompiler::appendVariable(websites, websites)\n      dup1\n  // ExpressionCompiler::appendVariable(skip, skip)\n      swap3\n  // ExpressionCompiler::appendVariable(index, index)\n      swap2\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_163, desc: return of Yul function checked_sub_t_uint256\n      swap1\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup2\n      dup2\n  // end of CompilerUtils::rotateStackUp()\n      mstore\n      0x20\n      add\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      dup3\n      dup1\n      sload\n      tag_185\n      swap1\n      tag_184\n  // newPushTag tag_164, desc: \n      jump\t// in\n    tag_185:  // return of Yul function extract_byte_array_length\n  // Jump to tag_163\n      dup1\n      iszero\n      tag_186\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_187\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      dup4\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      mstore\n      swap2\n      0x20\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      add\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n      swap2\n  // CompilerUtils::storeInMemoryDynamic(type=bytes32, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=bytes32, ...)\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      jump(tag_186)\n    tag_187:\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup3\n      add\n  // bytes of type bytes32: 32\n      swap2\n      swap1\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x00\n  // CompilerUtils::popStackSlots(1)\n      mstore\n  // end of CompilerUtils::popStackSlots()\n  // newPushTag tag_165, desc: return of function function (struct IterableMapping.Map) view returns (uint256)\n      0x20\n  // ExpressionCompiler::visit(_memberAccess=_spacesMembers[index].size)\n  // ExpressionCompiler::appendVariable(_spacesMembers, _spacesMembers)\n      0x00\n      blake2b\n      swap1\n    tag_188:\n  // ExpressionCompiler::appendVariable(index, index)\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      sload\n      dup2\n  // bytes of type uint256: 32\n      mstore\n      swap1\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x01\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      swap1\n  // bytes of type uint256: 32\n      0x20\n      add\n  // end of CompilerUtils::storeInMemoryDynamic()\n      dup1\n      dup4\n      gt\n      tag_188\n  // CompilerUtils::convertType(): struct IterableMapping.Map storage ref -> struct IterableMapping.Map storage pointer\n  // end of CompilerUtils::convertType()\n  // newTag tag_166, desc: declaration of function size\n      jumpi\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      dup3\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      swap1\n  // end of CompilerUtils::rotateStackDown()\n      sub\n      0x1f\n      and\n      dup3\n  // ExpressionCompiler::appendVariable(memberCounts, memberCounts)\n      add\n  // ExpressionCompiler::appendVariable(skip, skip)\n      swap2\n  // ExpressionCompiler::appendVariable(index, index)\n    tag_186:\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_167, desc: return of Yul function checked_sub_t_uint256\n      pop\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      pop\n      pop\n  // end of CompilerUtils::rotateStackUp()\n      pop\n      pop\n      swap6\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n  // newPushTag tag_168, desc: \n      pop\n      swap7\n  // Jump to tag_167\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n        /* \"contracts/Vitasensus.solpp\":13924:14390  function getSpaceExternal(uint256 spaceId)... */\n      swap2\n      swap4\n      swap6\n      swap8\n      swap1\n      swap3\n      swap5\n      swap7\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      pop\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      jump\t// out\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n        /* \"contracts/Vitasensus.solpp\":13800:13907  function getSpaceOwner(uint256 spaceId) public view returns (address) {... */\n    tag_15:  // declaration of function getSpaceOwner\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":13861:13868  address */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":13881:13894  _spacesOwners */\n      0x08\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":13881:13903  _spacesOwners[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":13895:13902  spaceId */\n      dup4\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":13881:13903  _spacesOwners[spaceId] */\n      dup2\n  // CompilerUtils::popStackSlots(1)\n      mstore\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      0x20\n  // ExpressionCompiler::appendVariable(index, index)\n      add\n      swap1\n  // CompilerContext::callYulFunction(name=increment_t_uint256, _inArgs=1, _outArgs=1)\n  // newPushTag tag_169, desc: return of Yul function increment_t_uint256\n      dup2\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      mstore\n  // end of CompilerUtils::rotateStackDown()\n      0x20\n      add\n      0x00\n      blake2b\n      0x00\n  // CompilerUtils::popStackSlots(1)\n      swap1\n  // end of CompilerUtils::popStackSlots()\n      sload\n      swap1\n      0x0100\n  // CompilerUtils::popStackSlots(1)\n      exp\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(1)\n      swap1\n  // end of CompilerUtils::popStackSlots()\n      div\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 5 return parameters\n  //  current stackLayout [5 -1 -1 0 1 2 3 4 ]\n      and\n  //  current stackLayout [5 -1 -1 0 4 2 3 1 ]\n        /* \"contracts/Vitasensus.solpp\":13874:13903  return _spacesOwners[spaceId] */\n      swap1\n  //  current stackLayout [5 1 -1 0 4 2 3 -1 ]\n      pop\n  //  current stackLayout [5 1 -1 0 4 2 3 ]\n        /* \"contracts/Vitasensus.solpp\":13800:13907  function getSpaceOwner(uint256 spaceId) public view returns (address) {... */\n      swap2\n  //  current stackLayout [5 1 -1 3 4 2 0 ]\n      swap1\n  //  current stackLayout [0 1 -1 3 4 2 5 ]\n      pop\n  //  current stackLayout [0 1 -1 3 4 5 2 ]\n      jump\t// out\n  //  current stackLayout [0 1 2 3 4 5 -1 ]\n        /* \"contracts/Vitasensus.solpp\":4317:4442  function isSpaceOwner(uint256 spaceId, address user) public view returns (bool) {... */\n    tag_16:  // declaration of function isSpaceOwner\n        /* \"contracts/Vitasensus.solpp\":4391:4395  bool */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":4434:4438  user */\n      dup2\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(bytes32 name)\n        /* \"contracts/Vitasensus.solpp\":4408:4438  _spacesOwners[spaceId] == user */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(string memory description)\n  // CompilerUtils::pushZeroPointer()\n      and\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(vitetoken token)\n        /* \"contracts/Vitasensus.solpp\":4408:4421  _spacesOwners */\n      0x08\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(bytes32 avatar)\n        /* \"contracts/Vitasensus.solpp\":4408:4430  _spacesOwners[spaceId] */\n      0x00\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(bytes32 website)\n        /* \"contracts/Vitasensus.solpp\":4422:4429  spaceId */\n      dup6\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(uint256 memberCounts)\n        /* \"contracts/Vitasensus.solpp\":4408:4430  _spacesOwners[spaceId] */\n      dup2\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(uint256 tokenDecimals)\n      mstore\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function getSpaceExternal(uint256 spaceId)\n\t\texternal\n\t\tview\n\t\treturns (\n\t\t\tbytes32 name,\n\t\t\tstring memory description,\n\t\t\tvitetoken token,\n\t\t\tbytes32 avatar,\n\t\t\tbytes32 website,\n\t\t\tuint256 memberCounts,\n\t\t\tuint256 tokenDecimals\n\t\t)\n\t{\n\t\treturn (\n\t\t\t_spaces[spaceId].name,\n\t\t\t_spaces[spaceId].description,\n\t\t\t_spaces[spaceId].token,\n\t\t\t_spaces[spaceId].avatar,\n\t\t\t_spaces[spaceId].website,\n\t\t\t_spacesMembers[spaceId].size(),\n\t\t\t_spaces[spaceId].tokenDecimals\n\t\t);\n\t}\n  // newTag tag_170, desc: return tag of getSpaceExternal\n  // start of code block of getSpaceExternal\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::visit(_memberAccess=_spaces[spaceId].name)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      0x20\n      add\n      swap1\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n      0x00\n  // newPushTag tag_171, desc: \n      swap1\n      sload\n  // Jump to tag_170\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Vitasensus.solpp\":4408:4438  _spacesOwners[spaceId] == user */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Vitasensus.solpp\":4401:4438  return _spacesOwners[spaceId] == user */\n      swap1\n  // newTag tag_172, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      pop\n        /* \"contracts/Vitasensus.solpp\":4317:4442  function isSpaceOwner(uint256 spaceId, address user) public view returns (bool) {... */\n      swap3\n  // end of CompilerUtils::storeInMemory()\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":7919:9701  function createProposal(... */\n    tag_17:  // declaration of function createProposal\n        /* \"contracts/Vitasensus.solpp\":8210:8217  spaceId */\n      dup9\n        /* \"contracts/Vitasensus.solpp\":3094:3122  _requireSpaceMember(spaceId) */\n      tag_192\n        /* \"contracts/Vitasensus.solpp\":3114:3121  spaceId */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":3094:3113  _requireSpaceMember */\n      tag_193\n        /* \"contracts/Vitasensus.solpp\":3094:3122  _requireSpaceMember(spaceId) */\n      jump\t// in\n    tag_192:  // return of function function (uint256) view\n        /* \"contracts/Vitasensus.solpp\":8257:8266  msg.token */\n      tokenid\n        /* \"contracts/Vitasensus.solpp\":8231:8266  _spaces[spaceId].token == msg.token */\n      0xffffffffffffffffffff\n      and\n        /* \"contracts/Vitasensus.solpp\":8231:8238  _spaces */\n      0x01\n  // ExpressionCompiler::visit(_memberAccess=_spaces[spaceId].description)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n        /* \"contracts/Vitasensus.solpp\":8239:8246  spaceId */\n      dup12\n        /* \"contracts/Vitasensus.solpp\":8231:8247  _spaces[spaceId] */\n      dup2\n      sload\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      lt\n      tag_195\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n  // newPushTag tag_173, desc: \n      0x32\n      0x04\n  // Jump to tag_172\n      mstore\n      revert(0x00, 0x24)\n    tag_195:\n      swap1\n      0x00\n      mstore\n      blake2b(0x00, 0x20)\n  // newTag tag_174, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      0x07\n  // end of CompilerUtils::storeInMemory()\n      mul\n      add\n        /* \"contracts/Vitasensus.solpp\":8231:8253  _spaces[spaceId].token */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffff\n      and\n  // ExpressionCompiler::visit(_memberAccess=_spaces[spaceId].token)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n        /* \"contracts/Vitasensus.solpp\":8231:8266  _spaces[spaceId].token == msg.token */\n      0xffffffffffffffffffff\n      and\n      eq\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":8223:8267  require(_spaces[spaceId].token == msg.token) */\n      tag_197\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_197:\n        /* \"contracts/Vitasensus.solpp\":8271:8306  SpaceSettings storage spaceSettings */\n      0x00\n  // newPushTag tag_175, desc: \n        /* \"contracts/Vitasensus.solpp\":8309:8323  _spaceSettings */\n      0x02\n        /* \"contracts/Vitasensus.solpp\":8324:8331  spaceId */\n      dup12\n  // Jump to tag_174\n        /* \"contracts/Vitasensus.solpp\":8309:8332  _spaceSettings[spaceId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_198\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      0x32\n      0x04\n  // newTag tag_176, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mstore\n      0x24\n  // end of CompilerUtils::storeInMemory()\n      0x00\n      revert\n    tag_198:\n      swap1\n      0x00\n      mstore\n      blake2b(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/Vitasensus.solpp\":8271:8332  SpaceSettings storage spaceSettings = _spaceSettings[spaceId] */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":8336:8348  bool isAdmin */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":8351:8384  isSpaceAdmin(spaceId, msg.sender) */\n      tag_200\n        /* \"contracts/Vitasensus.solpp\":8364:8371  spaceId */\n      dup13\n        /* \"contracts/Vitasensus.solpp\":8373:8383  msg.sender */\n      caller\n        /* \"contracts/Vitasensus.solpp\":8351:8363  isSpaceAdmin */\n      tag_29\n        /* \"contracts/Vitasensus.solpp\":8351:8384  isSpaceAdmin(spaceId, msg.sender) */\n      jump\t// in\n    tag_200:  // return of function function (uint256,address) view returns (bool)\n  // ExpressionCompiler::visit(_memberAccess=_spaces[spaceId].avatar)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n        /* \"contracts/Vitasensus.solpp\":8336:8384  bool isAdmin = isSpaceAdmin(spaceId, msg.sender) */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":8392:8405  spaceSettings */\n      dup2\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":8392:8434  spaceSettings.onlyAdminsCanCreateProposals */\n      0x01\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n  // newPushTag tag_177, desc: \n      exp\n      swap1\n  // Jump to tag_176\n      div\n      0xff\n      and\n        /* \"contracts/Vitasensus.solpp\":8388:8462  if (spaceSettings.onlyAdminsCanCreateProposals) {... */\n      iszero\n      tag_201\n      jumpi\n        /* \"contracts/Vitasensus.solpp\":8449:8456  isAdmin */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":8441:8457  require(isAdmin) */\n      tag_202\n      jumpi\n      0x00\n      dup1\n  // newTag tag_178, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      revert\n    tag_202:\n  // end of CompilerUtils::storeInMemory()\n        /* \"contracts/Vitasensus.solpp\":8388:8462  if (spaceSettings.onlyAdminsCanCreateProposals) {... */\n    tag_201:\n        /* \"contracts/Vitasensus.solpp\":8473:8480  isAdmin */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":8473:8578  isAdmin ||... */\n      dup1\n      tag_203\n      jumpi\n      pop\n        /* \"contracts/Vitasensus.solpp\":8548:8555  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":8556:8563  spaceId */\n      dup13\n        /* \"contracts/Vitasensus.solpp\":8548:8564  _spaces[spaceId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_204\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // ExpressionCompiler::visit(_memberAccess=_spaces[spaceId].website)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      0x00\n      mstore\n      0x32\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      0x04\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mstore\n      revert(0x00, 0x24)\n    tag_204:\n      swap1\n  // newPushTag tag_179, desc: \n      0x00\n      mstore\n  // Jump to tag_178\n      blake2b(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n        /* \"contracts/Vitasensus.solpp\":8548:8578  _spaces[spaceId].tokenDecimals */\n      0x05\n      add\n      sload\n        /* \"contracts/Vitasensus.solpp\":8544:8546  10 */\n      0x0a\n  // newTag tag_180, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":8544:8578  10**_spaces[spaceId].tokenDecimals */\n      tag_206\n      swap2\n  // end of CompilerUtils::storeInMemory()\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:  // return of Yul function checked_exp_t_uint256_t_uint256\n        /* \"contracts/Vitasensus.solpp\":8504:8517  spaceSettings */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":8504:8541  spaceSettings.createProposalThreshold */\n      0x00\n      add\n      sload\n        /* \"contracts/Vitasensus.solpp\":8504:8578  spaceSettings.createProposalThreshold * 10**_spaces[spaceId].tokenDecimals */\n      tag_208\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:  // return of Yul function checked_mul_t_uint256\n        /* \"contracts/Vitasensus.solpp\":8487:8496  msg.value */\n      callvalue\n  // newPushTag tag_181, desc: return of function function (struct IterableMapping.Map) view returns (uint256)\n        /* \"contracts/Vitasensus.solpp\":8487:8578  msg.value >=... */\n      lt\n  // ExpressionCompiler::visit(_memberAccess=_spacesMembers[spaceId].size)\n  // ExpressionCompiler::appendVariable(_spacesMembers, _spacesMembers)\n      iszero\n        /* \"contracts/Vitasensus.solpp\":8473:8578  isAdmin ||... */\n    tag_203:\n        /* \"contracts/Vitasensus.solpp\":8465:8582  require(isAdmin ||... */\n      tag_210\n      jumpi\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      0x00\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup1\n      revert\n  // bytes of type uint256: 32\n    tag_210:\n        /* \"contracts/Vitasensus.solpp\":8606:8613  endTime */\n      dup8\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":8594:8603  startTime */\n      dup10\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":8594:8613  startTime < endTime */\n      lt\n        /* \"contracts/Vitasensus.solpp\":8594:8642  startTime < endTime && endTime > block.timestamp */\n      dup1\n  // bytes of type uint256: 32\n      iszero\n      tag_211\n  // end of CompilerUtils::storeInMemoryDynamic()\n      jumpi\n      pop\n        /* \"contracts/Vitasensus.solpp\":8627:8642  block.timestamp */\n      timestamp\n        /* \"contracts/Vitasensus.solpp\":8617:8624  endTime */\n      dup9\n  // CompilerUtils::convertType(): struct IterableMapping.Map storage ref -> struct IterableMapping.Map storage pointer\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":8617:8642  endTime > block.timestamp */\n      gt\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n        /* \"contracts/Vitasensus.solpp\":8594:8642  startTime < endTime && endTime > block.timestamp */\n    tag_211:\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n        /* \"contracts/Vitasensus.solpp\":8586:8643  require(startTime < endTime && endTime > block.timestamp) */\n      tag_212\n  // end of CompilerUtils::rotateStackDown()\n      jumpi\n      0x00\n      dup1\n      revert\n  // ExpressionCompiler::visit(_memberAccess=_spaces[spaceId].tokenDecimals)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n    tag_212:\n        /* \"contracts/Vitasensus.solpp\":8668:8669  0 */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":8655:8664  startTime */\n      dup10\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":8655:8669  startTime == 0 */\n      eq\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":8655:8701  startTime == 0 || startTime >= block.timestamp */\n      dup1\n      tag_213\n      jumpi\n      pop\n        /* \"contracts/Vitasensus.solpp\":8686:8701  block.timestamp */\n      timestamp\n        /* \"contracts/Vitasensus.solpp\":8673:8682  startTime */\n      dup10\n  // newPushTag tag_182, desc: \n        /* \"contracts/Vitasensus.solpp\":8673:8701  startTime >= block.timestamp */\n      lt\n      iszero\n  // Jump to tag_181\n        /* \"contracts/Vitasensus.solpp\":8655:8701  startTime == 0 || startTime >= block.timestamp */\n    tag_213:\n        /* \"contracts/Vitasensus.solpp\":8647:8702  require(startTime == 0 || startTime >= block.timestamp) */\n      tag_214\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_214:\n        /* \"contracts/Vitasensus.solpp\":8724:8731  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":8724:8738  _spaces.length */\n      dup1\n      sload\n      swap1\n  // newTag tag_183, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      pop\n        /* \"contracts/Vitasensus.solpp\":8714:8721  spaceId */\n      dup13\n  // end of CompilerUtils::storeInMemory()\n        /* \"contracts/Vitasensus.solpp\":8714:8738  spaceId < _spaces.length */\n      lt\n        /* \"contracts/Vitasensus.solpp\":8706:8739  require(spaceId < _spaces.length) */\n      tag_215\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_215:\n        /* \"contracts/Vitasensus.solpp\":8768:8769  0 */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":8751:8758  choices */\n      dup7\n        /* \"contracts/Vitasensus.solpp\":8751:8765  choices.length */\n      mload\n        /* \"contracts/Vitasensus.solpp\":8751:8769  choices.length > 0 */\n      gt\n        /* \"contracts/Vitasensus.solpp\":8743:8770  require(choices.length > 0) */\n      tag_216\n      jumpi\n      0x00\n      dup1\n  // CompilerUtils::convertType(): tuple(bytes32,string storage ref,tokenId,bytes32,bytes32,uint256,uint256) -> tuple(bytes32,string memory,tokenId,bytes32,bytes32,uint256,uint256)\n  // CompilerUtils::copyToStackTop(6, 1)\n      revert\n  // CompilerUtils::convertType(): string storage ref -> string memory\n    tag_216:\n        /* \"contracts/Vitasensus.solpp\":8809:8816  choices */\n      dup6\n  // CompilerContext::callYulFunction(name=extract_byte_array_length, _inArgs=1, _outArgs=1)\n  // newPushTag tag_184, desc: return of Yul function extract_byte_array_length\n        /* \"contracts/Vitasensus.solpp\":8809:8823  choices.length */\n      mload\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n        /* \"contracts/Vitasensus.solpp\":8782:8798  choicesExecutors */\n      dup6\n  // end of CompilerUtils::rotateStackDown()\n  // newTag tag_185, desc: extract_byte_array_length\n        /* \"contracts/Vitasensus.solpp\":8782:8805  choicesExecutors.length */\n      mload\n        /* \"contracts/Vitasensus.solpp\":8782:8823  choicesExecutors.length == choices.length */\n      eq\n        /* \"contracts/Vitasensus.solpp\":8774:8824  require(choicesExecutors.length == choices.length) */\n      tag_217\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_217:\n        /* \"contracts/Vitasensus.solpp\":8858:8865  choices */\n      dup6\n        /* \"contracts/Vitasensus.solpp\":8858:8872  choices.length */\n      mload\n        /* \"contracts/Vitasensus.solpp\":8836:8847  choicesData */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":8836:8854  choicesData.length */\n      mload\n        /* \"contracts/Vitasensus.solpp\":8836:8872  choicesData.length == choices.length */\n      eq\n  // CompilerUtils::allocateMemory()\n  // CompilerUtils::fetchFreeMemoryPointer()\n        /* \"contracts/Vitasensus.solpp\":8828:8873  require(choicesData.length == choices.length) */\n      tag_218\n      jumpi\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      0x00\n      dup1\n      revert\n  // CompilerUtils::storeFreeMemoryPointer()\n    tag_218:\n        /* \"contracts/Vitasensus.solpp\":8878:8896  uint256 proposalId */\n      0x00\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // end of CompilerUtils::allocateMemory()\n        /* \"contracts/Vitasensus.solpp\":8899:8915  _spacesProposals */\n      0x03\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n        /* \"contracts/Vitasensus.solpp\":8899:8924  _spacesProposals[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":8916:8923  spaceId */\n      dup15\n        /* \"contracts/Vitasensus.solpp\":8899:8924  _spacesProposals[spaceId] */\n      dup2\n  // end of CompilerUtils::rotateStackUp()\n      mstore\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x20\n      add\n  // bytes of type uint256: 32\n      swap1\n      dup2\n  // end of CompilerUtils::storeInMemoryDynamic()\n  // CompilerUtils::copyToStackTop(3, 1)\n      mstore\n      0x20\n      add\n  // CompilerContext::callYulFunction(name=extract_byte_array_length, _inArgs=1, _outArgs=1)\n  // newPushTag tag_186, desc: return of Yul function extract_byte_array_length\n      0x00\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      blake2b\n  // end of CompilerUtils::rotateStackDown()\n        /* \"contracts/Vitasensus.solpp\":8899:8931  _spacesProposals[spaceId].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":8878:8931  uint256 proposalId = _spacesProposals[spaceId].length */\n      swap1\n  // newPushTag tag_187, desc: \n      pop\n        /* \"contracts/Vitasensus.solpp\":8935:8951  _spacesProposals */\n      0x03\n  // Jump to tag_186\n        /* \"contracts/Vitasensus.solpp\":8935:8960  _spacesProposals[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":8952:8959  spaceId */\n      dup15\n        /* \"contracts/Vitasensus.solpp\":8935:8960  _spacesProposals[spaceId] */\n      dup2\n  // newPushTag tag_188, desc: \n      mstore\n      0x20\n  // Jump to tag_187\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":8935:8967  _spacesProposals[spaceId].push() */\n      0x01\n      dup2\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      pop\n      pop\n  // end of CompilerUtils::storeInMemory()\n      sub\n      swap1\n      0x00\n      mstore\n  // newTag tag_189, desc: \n      blake2b(0x00, 0x20)\n      swap1\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":8971:8996  Proposal storage proposal */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":8999:9032  _getProposal(spaceId, proposalId) */\n      tag_220\n        /* \"contracts/Vitasensus.solpp\":9012:9019  spaceId */\n      dup15\n        /* \"contracts/Vitasensus.solpp\":9021:9031  proposalId */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":8999:9011  _getProposal */\n      tag_67\n        /* \"contracts/Vitasensus.solpp\":8999:9032  _getProposal(spaceId, proposalId) */\n      jump\t// in\n    tag_220:  // return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n        /* \"contracts/Vitasensus.solpp\":8971:9032  Proposal storage proposal = _getProposal(spaceId, proposalId) */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":9053:9058  title */\n      dup13\n        /* \"contracts/Vitasensus.solpp\":9036:9044  proposal */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":9036:9050  proposal.title */\n      0x01\n      add\n        /* \"contracts/Vitasensus.solpp\":9036:9058  proposal.title = title */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_221\n  // CompilerUtils::popStackSlots(3)\n      swap3\n      swap2\n      swap1\n  // end of CompilerUtils::popStackSlots()\n  // end of CompilerUtils::convertType()\n      tag_222\n      jump\t// in\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackVariable(tokenDecimals)\n    tag_221:\n      pop\n  // CompilerUtils::moveToStackVariable(memberCounts)\n        /* \"contracts/Vitasensus.solpp\":9078:9089  description */\n      dup12\n        /* \"contracts/Vitasensus.solpp\":9062:9070  proposal */\n      dup2\n  // CompilerUtils::moveToStackVariable(website)\n        /* \"contracts/Vitasensus.solpp\":9062:9075  proposal.body */\n      0x00\n      add\n  // CompilerUtils::moveToStackVariable(avatar)\n        /* \"contracts/Vitasensus.solpp\":9062:9089  proposal.body = description */\n      swap1\n      dup1\n  // CompilerUtils::moveToStackVariable(token)\n      mload\n      swap1\n  // CompilerUtils::moveToStackVariable(description)\n      0x20\n      add\n  // CompilerUtils::moveToStackVariable(name)\n      swap1\n      tag_223\n  // CompilerUtils::popAndJump(toHeight=9, jumpTo=tag_169:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      swap3\n      swap2\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      swap1\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 7 return parameters\n  //  current stackLayout [7 -1 0 1 2 3 4 5 6 ]\n      tag_222\n  //  current stackLayout [7 -1 0 1 2 3 6 5 4 ]\n      jump\t// in\n  //  current stackLayout [7 -1 0 1 4 3 6 5 2 ]\n    tag_223:\n  //  current stackLayout [7 -1 2 1 4 3 6 5 0 ]\n      pop\n  //  current stackLayout [0 -1 2 1 4 3 6 5 7 ]\n        /* \"contracts/Vitasensus.solpp\":9134:9135  0 */\n      0x00\n  //  current stackLayout [0 -1 2 1 4 3 6 7 5 ]\n        /* \"contracts/Vitasensus.solpp\":9121:9130  startTime */\n      dup12\n  //  current stackLayout [0 -1 2 1 4 5 6 7 3 ]\n        /* \"contracts/Vitasensus.solpp\":9121:9135  startTime == 0 */\n      eq\n  //  current stackLayout [0 -1 2 3 4 5 6 7 1 ]\n        /* \"contracts/Vitasensus.solpp\":9121:9165  startTime == 0 ? block.timestamp : startTime */\n      tag_224\n  //  current stackLayout [0 1 2 3 4 5 6 7 -1 ]\n      jumpi\n        /* \"contracts/Vitasensus.solpp\":9156:9165  startTime */\n      dup11\n        /* \"contracts/Vitasensus.solpp\":9121:9165  startTime == 0 ? block.timestamp : startTime */\n      tag_225\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(address)\n      jump\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function getSpaceOwner(uint256 spaceId) public view returns (address) {\n\t\treturn _spacesOwners[spaceId];\n\t}\n  // newTag tag_190, desc: return tag of getSpaceOwner\n  // start of code block of getSpaceOwner\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::appendVariable(_spacesOwners, _spacesOwners)\n    tag_224:\n        /* \"contracts/Vitasensus.solpp\":9138:9153  block.timestamp */\n      timestamp\n        /* \"contracts/Vitasensus.solpp\":9121:9165  startTime == 0 ? block.timestamp : startTime */\n    tag_225:\n        /* \"contracts/Vitasensus.solpp\":9093:9101  proposal */\n      dup2\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":9093:9111  proposal.startTime */\n      0x02\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      0x00\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":9093:9166  proposal.startTime = uint64(startTime == 0 ? block.timestamp : startTime) */\n      0x0100\n      exp\n  // end of CompilerUtils::storeInMemoryDynamic()\n      dup2\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      sload\n      dup2\n  // bytes of type uint256: 32\n      0xffffffffffffffff\n      mul\n  // end of CompilerUtils::storeInMemoryDynamic()\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Vitasensus.solpp\":9196:9203  endTime */\n      dup10\n  // CompilerUtils::moveToStackVariable()\n        /* \"contracts/Vitasensus.solpp\":9170:9178  proposal */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":9170:9186  proposal.endTime */\n      0x02\n  // CompilerUtils::popAndJump(toHeight=3, jumpTo=tag_189:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      add\n      0x08\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n        /* \"contracts/Vitasensus.solpp\":9170:9204  proposal.endTime = uint64(endTime) */\n      0x0100\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 1 return parameters\n  //  current stackLayout [1 -1 0 ]\n      exp\n  //  current stackLayout [0 -1 1 ]\n      dup2\n  //  current stackLayout [0 1 -1 ]\n      sload\n      dup2\n      0xffffffffffffffff\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(bool)\n      mul\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function isSpaceOwner(uint256 spaceId, address user) public view returns (bool) {\n\t\treturn _spacesOwners[spaceId] == user;\n\t}\n  // newTag tag_191, desc: return tag of isSpaceOwner\n  // start of code block of isSpaceOwner\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::appendVariable(user, user)\n      not\n  // CompilerUtils::convertType(): address -> address\n      and\n      swap1\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(_spacesOwners, _spacesOwners)\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      or\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      sstore\n  // bytes of type uint256: 32\n      pop\n        /* \"contracts/Vitasensus.solpp\":9227:9234  choices */\n      dup8\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":9208:9216  proposal */\n      dup2\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":9208:9224  proposal.choices */\n      0x05\n      add\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":9208:9234  proposal.choices = choices */\n      swap1\n      dup1\n  // end of CompilerUtils::storeInMemoryDynamic()\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_226\n      swap3\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_226:\n  // CompilerUtils::convertType(): address -> address\n      pop\n        /* \"contracts/Vitasensus.solpp\":9266:9282  choicesExecutors */\n      dup7\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":9238:9246  proposal */\n      dup2\n  // CompilerUtils::moveToStackVariable()\n        /* \"contracts/Vitasensus.solpp\":9238:9263  proposal.choicesExecutors */\n      0x06\n      add\n  // CompilerUtils::popAndJump(toHeight=4, jumpTo=tag_190:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n        /* \"contracts/Vitasensus.solpp\":9238:9282  proposal.choicesExecutors = choicesExecutors */\n      swap1\n      dup1\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      mload\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 1 return parameters\n  //  current stackLayout [1 -1 -1 0 ]\n      swap1\n  //  current stackLayout [0 -1 -1 1 ]\n      0x20\n  //  current stackLayout [0 1 -1 -1 ]\n      add\n  //  current stackLayout [0 1 -1 ]\n      swap1\n      tag_228\n      swap3\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function createProposal(\n\t\tuint256 spaceId,\n\t\tstring memory title,\n\t\tstring memory description,\n\t\tuint256 startTime,\n\t\tuint256 endTime,\n\t\tuint256 snapshot,\n\t\tbytes32[] memory choices,\n\t\taddress[] memory choicesExecutors,\n\t\tbytes32[] memory choicesData\n\t) external payable requireSpaceMember(spaceId) {\n\t\trequire(_spaces[spaceId].token == msg.token);\n\t\tSpaceSettings storage spaceSettings = _spaceSettings[spaceId];\n\t\tbool isAdmin = isSpaceAdmin(spaceId, msg.sender);\n\t\tif (spaceSettings.onlyAdminsCanCreateProposals) {\n\t\t\trequire(isAdmin);\n\t\t}\n\t\trequire(isAdmin ||\n\t\t\tmsg.value >=\n\t\t\t\tspaceSettings.createProposalThreshold * 10**_spaces[spaceId].tokenDecimals\n\t\t);\n\t\trequire(startTime < endTime && endTime > block.timestamp);\n\t\trequire(startTime == 0 || startTime >= block.timestamp);\n\t\trequire(spaceId < _spaces.length);\n\t\trequire(choices.length > 0);\n\t\trequire(choicesExecutors.length == choices.length);\n\t\trequire(choicesData.length == choices.length);\n\n\t\tuint256 proposalId = _spacesProposals[spaceId].length;\n\t\t_spacesProposals[spaceId].push();\n\t\tProposal storage proposal = _getProposal(spaceId, proposalId);\n\t\tproposal.title = title;\n\t\tproposal.body = description;\n\t\tproposal.startTime = uint64(startTime == 0 ? block.timestamp : startTime);\n\t\tproposal.endTime = uint64(endTime);\n\t\tproposal.choices = choices;\n\t\tproposal.choicesExecutors = choicesExecutors;\n\t\tproposal.choicesData = choicesData;\n\t\tproposal.author = msg.sender;\n\t\tproposal.votes = new uint256[](choices.length);\n\t\tproposal.snapshotHeight = snapshot;\n\n\t\temit ProposalCreated(\n\t\t\tproposalId,\n\t\t\tspaceId,\n\t\t\tmsg.sender,\n\t\t\tproposal.title,\n\t\t\tproposal.body,\n\t\t\tproposal.startTime,\n\t\t\tproposal.endTime,\n\t\t\tproposal.snapshotHeight\n\t\t);\n\n\t\t// Refund msg value\n\t\tpayable(msg.sender).transfer(msg.token, msg.value);\n\t}\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      swap2\n  // newTag tag_192, desc: return tag of createProposal\n  // start of code block of createProposal\n  // newPushTag tag_193, desc: return of function function (uint256) view\n      swap1\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      tag_120\n  // newTag tag_194, desc: declaration of function _requireSpaceMember\n      jump\t// in\n    tag_228:\n      pop\n        /* \"contracts/Vitasensus.solpp\":9309:9320  choicesData */\n      dup6\n        /* \"contracts/Vitasensus.solpp\":9286:9294  proposal */\n      dup2\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendModifierOrFunctionCode() for function createProposal(\n\t\tuint256 spaceId,\n\t\tstring memory title,\n\t\tstring memory description,\n\t\tuint256 startTime,\n\t\tuint256 endTime,\n\t\tuint256 snapshot,\n\t\tbytes32[] memory choices,\n\t\taddress[] memory choicesExecutors,\n\t\tbytes32[] memory choicesData\n\t) external payable requireSpaceMember(spaceId) {\n\t\trequire(_spaces[spaceId].token == msg.token);\n\t\tSpaceSettings storage spaceSettings = _spaceSettings[spaceId];\n\t\tbool isAdmin = isSpaceAdmin(spaceId, msg.sender);\n\t\tif (spaceSettings.onlyAdminsCanCreateProposals) {\n\t\t\trequire(isAdmin);\n\t\t}\n\t\trequire(isAdmin ||\n\t\t\tmsg.value >=\n\t\t\t\tspaceSettings.createProposalThreshold * 10**_spaces[spaceId].tokenDecimals\n\t\t);\n\t\trequire(startTime < endTime && endTime > block.timestamp);\n\t\trequire(startTime == 0 || startTime >= block.timestamp);\n\t\trequire(spaceId < _spaces.length);\n\t\trequire(choices.length > 0);\n\t\trequire(choicesExecutors.length == choices.length);\n\t\trequire(choicesData.length == choices.length);\n\n\t\tuint256 proposalId = _spacesProposals[spaceId].length;\n\t\t_spacesProposals[spaceId].push();\n\t\tProposal storage proposal = _getProposal(spaceId, proposalId);\n\t\tproposal.title = title;\n\t\tproposal.body = description;\n\t\tproposal.startTime = uint64(startTime == 0 ? block.timestamp : startTime);\n\t\tproposal.endTime = uint64(endTime);\n\t\tproposal.choices = choices;\n\t\tproposal.choicesExecutors = choicesExecutors;\n\t\tproposal.choicesData = choicesData;\n\t\tproposal.author = msg.sender;\n\t\tproposal.votes = new uint256[](choices.length);\n\t\tproposal.snapshotHeight = snapshot;\n\n\t\temit ProposalCreated(\n\t\t\tproposalId,\n\t\t\tspaceId,\n\t\t\tmsg.sender,\n\t\t\tproposal.title,\n\t\t\tproposal.body,\n\t\t\tproposal.startTime,\n\t\t\tproposal.endTime,\n\t\t\tproposal.snapshotHeight\n\t\t);\n\n\t\t// Refund msg value\n\t\tpayable(msg.sender).transfer(msg.token, msg.value);\n\t}\n  // newTag tag_195, desc: return tag of createProposal\n  // start of code block of createProposal\n  // ExpressionCompiler::visit(_memberAccess=msg.token)\n        /* \"contracts/Vitasensus.solpp\":9286:9306  proposal.choicesData */\n      0x07\n  // CompilerUtils::convertType(): tokenId -> tokenId\n      add\n        /* \"contracts/Vitasensus.solpp\":9286:9320  proposal.choicesData = choicesData */\n      swap1\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=_spaces[spaceId].token)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      dup1\n      mload\n      swap1\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      0x20\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      add\n      swap1\n      tag_229\n      swap3\n      swap2\n      swap1\n  // newPushTag tag_196, desc: \n      tag_227\n      jump\t// in\n  // Jump to tag_195\n    tag_229:\n      pop\n        /* \"contracts/Vitasensus.solpp\":9342:9352  msg.sender */\n      caller\n        /* \"contracts/Vitasensus.solpp\":9324:9332  proposal */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":9324:9339  proposal.author */\n      0x04\n      add\n      0x00\n        /* \"contracts/Vitasensus.solpp\":9324:9352  proposal.author = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n  // newTag tag_197, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // end of CompilerUtils::storeInMemory()\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Vitasensus.solpp\":9387:9394  choices */\n      dup8\n        /* \"contracts/Vitasensus.solpp\":9387:9401  choices.length */\n      mload\n        /* \"contracts/Vitasensus.solpp\":9373:9402  new uint256[](choices.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_230\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n  // CompilerUtils::convertType(): tokenId -> tokenId\n      mstore\n      0x41\n  // end of CompilerUtils::convertType()\n      0x04\n      mstore\n      0x24\n  // newPushTag tag_198, desc: \n      0x00\n      revert\n  // Jump to tag_197\n    tag_230:\n      mload(0x40)\n      swap1\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendStackVariableInitialisation(SpaceSettings storage spaceSettings)\n      dup1\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::appendVariable(_spaceSettings, _spaceSettings)\n      dup3\n      mstore\n      dup1\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      0x20\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n  // newPushTag tag_199, desc: \n      mstore\n      dup1\n  // Jump to tag_198\n      iszero\n      tag_231\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n  // newTag tag_200, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup4\n      calldatacopy\n  // end of CompilerUtils::storeInMemory()\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_231:\n      pop\n  // CompilerUtils::convertType(): struct Vitasensus.SpaceSettings storage ref -> struct Vitasensus.SpaceSettings storage pointer\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackVariable(spaceSettings)\n        /* \"contracts/Vitasensus.solpp\":9356:9364  proposal */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":9356:9370  proposal.votes */\n      0x08\n  // ContractCompiler::appendStackVariableInitialisation(bool isAdmin)\n      add\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // newPushTag tag_201, desc: return of function function (uint256,address) view returns (bool)\n        /* \"contracts/Vitasensus.solpp\":9356:9402  proposal.votes = new uint256[](choices.length) */\n      swap1\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      dup1\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_232\n  // CompilerUtils::moveToStackVariable(isAdmin)\n      swap3\n      swap2\n  // ExpressionCompiler::visit(_memberAccess=spaceSettings.onlyAdminsCanCreateProposals)\n  // ExpressionCompiler::appendVariable(spaceSettings, spaceSettings)\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n      pop\n        /* \"contracts/Vitasensus.solpp\":9432:9440  snapshot */\n      dup9\n        /* \"contracts/Vitasensus.solpp\":9406:9414  proposal */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":9406:9429  proposal.snapshotHeight */\n      0x03\n      add\n        /* \"contracts/Vitasensus.solpp\":9406:9440  proposal.snapshotHeight = snapshot */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Vitasensus.solpp\":9497:9507  msg.sender */\n      caller\n  // newPushTag tag_202, desc: \n        /* \"contracts/Vitasensus.solpp\":9450:9620  ProposalCreated(... */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n  // Jump to tag_201\n  // ExpressionCompiler::appendVariable(isAdmin, isAdmin)\n        /* \"contracts/Vitasensus.solpp\":9485:9492  spaceId */\n      dup15\n        /* \"contracts/Vitasensus.solpp\":9470:9480  proposalId */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":9450:9620  ProposalCreated(... */\n      0x4dd34088f7b48a18379b03b82c8b41e51a23bc7c71d55ffccc9e705ba491575e\n  // newPushTag tag_203, desc: \n        /* \"contracts/Vitasensus.solpp\":9512:9520  proposal */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":9512:9526  proposal.title */\n      0x01\n  // Jump to tag_202\n      add\n        /* \"contracts/Vitasensus.solpp\":9531:9539  proposal */\n      dup6\n        /* \"contracts/Vitasensus.solpp\":9531:9544  proposal.body */\n      0x00\n      add\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n        /* \"contracts/Vitasensus.solpp\":9549:9557  proposal */\n      dup7\n  // ExpressionCompiler::appendVariable(isAdmin, isAdmin)\n        /* \"contracts/Vitasensus.solpp\":9549:9567  proposal.startTime */\n      0x02\n      add\n  // newPushTag tag_204, desc: \n      0x00\n      swap1\n  // Jump to tag_203\n      sload\n  // ExpressionCompiler::visit(_memberAccess=_spaces[spaceId].tokenDecimals)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      swap1\n      0x0100\n      exp\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      swap1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/Vitasensus.solpp\":9572:9580  proposal */\n      dup8\n        /* \"contracts/Vitasensus.solpp\":9572:9588  proposal.endTime */\n      0x02\n      add\n  // newPushTag tag_205, desc: \n      0x08\n      swap1\n  // Jump to tag_204\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/Vitasensus.solpp\":9593:9601  proposal */\n      dup9\n        /* \"contracts/Vitasensus.solpp\":9593:9616  proposal.snapshotHeight */\n      0x03\n      add\n  // newTag tag_206, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      sload\n        /* \"contracts/Vitasensus.solpp\":9450:9620  ProposalCreated(... */\n      0x40\n  // end of CompilerUtils::storeInMemory()\n      mload\n      tag_234\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n    tag_234:  // return of Yul function abi_encode_tuple_t_string_storage_t_string_storage_t_uint64_t_uint64_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed\n      mload(0x40)\n      dup1\n      swap2\n      sub\n  // CompilerUtils::convertType(): int_const 10 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerContext::callYulFunction(name=checked_exp_t_uint256_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_207, desc: return of Yul function checked_exp_t_uint256_t_uint256\n      swap1\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      log4\n        /* \"contracts/Vitasensus.solpp\":9655:9665  msg.sender */\n      caller\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_208, desc: checked_exp_t_uint256_t_uint256\n        /* \"contracts/Vitasensus.solpp\":9647:9675  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Vitasensus.solpp\":9676:9685  msg.token */\n      tokenid\n  // ExpressionCompiler::visit(_memberAccess=spaceSettings.createProposalThreshold)\n  // ExpressionCompiler::appendVariable(spaceSettings, spaceSettings)\n        /* \"contracts/Vitasensus.solpp\":9647:9697  payable(msg.sender).transfer(msg.token, msg.value) */\n      0xffffffffffffffffffff\n      and\n        /* \"contracts/Vitasensus.solpp\":9687:9696  msg.value */\n      callvalue\n        /* \"contracts/Vitasensus.solpp\":9647:9697  payable(msg.sender).transfer(msg.token, msg.value) */\n      mload(0x40)\n      0x00\n  // CompilerContext::callYulFunction(name=checked_mul_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_209, desc: return of Yul function checked_mul_t_uint256\n      0x40\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      mload\n      swap1\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_210, desc: checked_mul_t_uint256\n      pop\n      dup1\n      dup3\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=msg.value)\n      sub\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      swap1\n      dup4\n      dup6\n      dup8\n      call\n  // newPushTag tag_211, desc: \n      pop\n      pop\n  // Jump to tag_210\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":3126:3127  _ */\n      pop\n      pop\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(endTime, endTime)\n      pop\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(startTime, startTime)\n      pop\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":7919:9701  function createProposal(... */\n      pop\n      pop\n      pop\n  // newPushTag tag_212, desc: \n      pop\n      pop\n  // Jump to tag_211\n      pop\n  // ExpressionCompiler::visit(_memberAccess=block.timestamp)\n      pop\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(endTime, endTime)\n      pop\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":2034:2232   */\n    tag_18:  // declaration of function transferOwnership\n  // newPushTag tag_213, desc: \n        /* \"contracts/Ownable.sol\":1049:1062   */\n      tag_238\n        /* \"contracts/Ownable.sol\":1049:1060   */\n      tag_239\n  // Jump to tag_212\n        /* \"contracts/Ownable.sol\":1049:1062   */\n      jump\t// in\n    tag_238:  // return of function function () view\n        /* \"contracts/Ownable.sol\":2142:2143   */\n      0x00\n        /* \"contracts/Ownable.sol\":2122:2144   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      and\n  // CompilerUtils::convertType(): int_const 0 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(startTime, startTime)\n        /* \"contracts/Ownable.sol\":2122:2130   */\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Ownable.sol\":2122:2144   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n  // newPushTag tag_214, desc: \n      eq\n      iszero\n  // Jump to tag_213\n        /* \"contracts/Ownable.sol\":2114:2187   */\n      tag_241\n  // ExpressionCompiler::visit(_memberAccess=block.timestamp)\n      jumpi\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(startTime, startTime)\n      0x40\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mload\n      0x4b2bae7e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n  // newPushTag tag_215, desc: \n      add\n      tag_242\n  // Jump to tag_214\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:  // return of Yul function abi_encode_tuple_t_stringliteral_0ff6cd9d5cae2396a0860cd9d9046debd79d2926a6d9abc06ee4b1a6011cfec4__to_t_string_memory_ptr__fromStack_reversed\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=_spaces.length)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n    tag_241:\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Ownable.sol\":2197:2225   */\n      tag_244\n        /* \"contracts/Ownable.sol\":2216:2224   */\n      dup2\n        /* \"contracts/Ownable.sol\":2197:2215   */\n      tag_245\n  // newPushTag tag_216, desc: \n        /* \"contracts/Ownable.sol\":2197:2225   */\n      jump\t// in\n    tag_244:  // return of function function (address)\n  // Jump to tag_215\n        /* \"contracts/Ownable.sol\":2034:2232   */\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":984:1044  uint256 public constant SPACE_CREATION_FEE = 100000 * 10**18 */\n    tag_19:  // declaration of function SPACE_CREATION_FEE\n        /* \"contracts/Vitasensus.solpp\":1029:1044  100000 * 10**18 */\n      0x152d02c7e14af6800000\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n        /* \"contracts/Vitasensus.solpp\":984:1044  uint256 public constant SPACE_CREATION_FEE = 100000 * 10**18 */\n      dup2\n  // CompilerUtils::convertType(): int_const 0 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=choices.length)\n  // ExpressionCompiler::appendVariable(choices, choices)\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":9891:10063  function leaveSpace(uint256 spaceId) external {... */\n    tag_20:  // declaration of function leaveSpace\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":9942:9970  _requireSpaceMember(spaceId) */\n      tag_247\n        /* \"contracts/Vitasensus.solpp\":9962:9969  spaceId */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":9942:9961  _requireSpaceMember */\n      tag_193\n  // newPushTag tag_217, desc: \n        /* \"contracts/Vitasensus.solpp\":9942:9970  _requireSpaceMember(spaceId) */\n      jump\t// in\n    tag_247:  // return of function function (uint256) view\n  // Jump to tag_216\n        /* \"contracts/Vitasensus.solpp\":9974:10016  _spacesMembers[spaceId].remove(msg.sender) */\n      tag_248\n        /* \"contracts/Vitasensus.solpp\":10005:10015  msg.sender */\n      caller\n        /* \"contracts/Vitasensus.solpp\":9974:9988  _spacesMembers */\n      0x04\n        /* \"contracts/Vitasensus.solpp\":9974:9997  _spacesMembers[spaceId] */\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=choices.length)\n  // ExpressionCompiler::appendVariable(choices, choices)\n        /* \"contracts/Vitasensus.solpp\":9989:9996  spaceId */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":9974:9997  _spacesMembers[spaceId] */\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=choicesExecutors.length)\n  // ExpressionCompiler::appendVariable(choicesExecutors, choicesExecutors)\n      mstore\n      0x20\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      add\n      swap1\n      dup2\n  // newPushTag tag_218, desc: \n      mstore\n      0x20\n  // Jump to tag_217\n      add\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":9974:10004  _spacesMembers[spaceId].remove */\n      tag_249\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=choices.length)\n  // ExpressionCompiler::appendVariable(choices, choices)\n      swap1\n        /* \"contracts/Vitasensus.solpp\":9974:10016  _spacesMembers[spaceId].remove(msg.sender) */\n      swap2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=choicesData.length)\n  // ExpressionCompiler::appendVariable(choicesData, choicesData)\n      swap1\n      0xffffffff\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      and\n      jump\t// in\n    tag_248:  // return of function function (struct IterableMapping.Map,address)\n  // newPushTag tag_219, desc: \n        /* \"contracts/Vitasensus.solpp\":10020:10059  _userSpaces[msg.sender].remove(spaceId) */\n      tag_250\n        /* \"contracts/Vitasensus.solpp\":10051:10058  spaceId */\n      dup2\n  // Jump to tag_218\n        /* \"contracts/Vitasensus.solpp\":10020:10031  _userSpaces */\n      0x07\n        /* \"contracts/Vitasensus.solpp\":10020:10043  _userSpaces[msg.sender] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":10032:10042  msg.sender */\n      caller\n        /* \"contracts/Vitasensus.solpp\":10020:10043  _userSpaces[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendStackVariableInitialisation(uint256 proposalId)\n      and\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposals[spaceId].length)\n  // ExpressionCompiler::appendVariable(_spacesProposals, _spacesProposals)\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      0x20\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      swap1\n  // bytes of type uint256: 32\n      dup2\n      mstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x20\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      0x00\n  // bytes of type uint256: 32\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":10020:10050  _userSpaces[msg.sender].remove */\n      tag_251\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap1\n        /* \"contracts/Vitasensus.solpp\":10020:10059  _userSpaces[msg.sender].remove(spaceId) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_250:  // return of function function (struct UintKeyedIterableMapping.Map,uint256)\n        /* \"contracts/Vitasensus.solpp\":9891:10063  function leaveSpace(uint256 spaceId) external {... */\n      pop\n  // CompilerUtils::moveToStackVariable(proposalId)\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":9704:9888  function joinSpace(uint256 spaceId) public {... */\n    tag_21:  // declaration of function joinSpace\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposals[spaceId].push)\n  // ExpressionCompiler::appendVariable(_spacesProposals, _spacesProposals)\n        /* \"contracts/Vitasensus.solpp\":9760:9794  isSpaceMember(spaceId, msg.sender) */\n      tag_253\n        /* \"contracts/Vitasensus.solpp\":9774:9781  spaceId */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":9783:9793  msg.sender */\n      caller\n        /* \"contracts/Vitasensus.solpp\":9760:9773  isSpaceMember */\n      tag_26\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":9760:9794  isSpaceMember(spaceId, msg.sender) */\n      jump\t// in\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n    tag_253:  // return of function function (uint256,address) view returns (bool)\n        /* \"contracts/Vitasensus.solpp\":9759:9794  !isSpaceMember(spaceId, msg.sender) */\n      iszero\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":9751:9795  require(!isSpaceMember(spaceId, msg.sender)) */\n      tag_254\n      jumpi\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x00\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup1\n      revert\n  // bytes of type uint256: 32\n    tag_254:\n        /* \"contracts/Vitasensus.solpp\":9799:9841  _spacesMembers[spaceId].set(msg.sender, 1) */\n      tag_255\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":9827:9837  msg.sender */\n      caller\n        /* \"contracts/Vitasensus.solpp\":9839:9840  1 */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":9799:9813  _spacesMembers */\n      0x04\n        /* \"contracts/Vitasensus.solpp\":9799:9822  _spacesMembers[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":9814:9821  spaceId */\n      dup6\n        /* \"contracts/Vitasensus.solpp\":9799:9822  _spacesMembers[spaceId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":9799:9826  _spacesMembers[spaceId].set */\n      tag_256\n      swap1\n        /* \"contracts/Vitasensus.solpp\":9799:9841  _spacesMembers[spaceId].set(msg.sender, 1) */\n      swap3\n  // newTag tag_220, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap2\n      swap1\n  // end of CompilerUtils::storeInMemory()\n      0xffffffff\n      and\n      jump\t// in\n    tag_255:  // return of function function (struct IterableMapping.Map,address,uint256)\n        /* \"contracts/Vitasensus.solpp\":9845:9884  _userSpaces[msg.sender].set(spaceId, 1) */\n      tag_257\n        /* \"contracts/Vitasensus.solpp\":9873:9880  spaceId */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":9882:9883  1 */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":9845:9856  _userSpaces */\n      0x07\n        /* \"contracts/Vitasensus.solpp\":9845:9868  _userSpaces[msg.sender] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":9857:9867  msg.sender */\n      caller\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/Vitasensus.solpp\":9845:9868  _userSpaces[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendStackVariableInitialisation(Proposal storage proposal)\n      and\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // newPushTag tag_221, desc: return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      and\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n  // CompilerUtils::moveToStackVariable(proposal)\n      mstore\n      0x20\n  // ExpressionCompiler::appendVariable(title, title)\n      add\n  // ExpressionCompiler::visit(_memberAccess=proposal.title)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":9845:9872  _userSpaces[msg.sender].set */\n      tag_258\n      swap1\n        /* \"contracts/Vitasensus.solpp\":9845:9884  _userSpaces[msg.sender].set(spaceId, 1) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_257:  // return of function function (struct UintKeyedIterableMapping.Map,uint256,uint256)\n        /* \"contracts/Vitasensus.solpp\":9704:9888  function joinSpace(uint256 spaceId) public {... */\n      pop\n  // CompilerContext::callLowLevelFunction($copyArrayToStorage_t_string_memory_ptr_to_t_string_storage)\n  // newPushTag tag_222, desc: \n      jump\t// out\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n        /* \"contracts/Vitasensus.solpp\":15640:16474  function getSpaceProposals(... */\n    tag_22:  // declaration of function getSpaceProposals\n        /* \"contracts/Vitasensus.solpp\":15755:15783  uint256[] memory proposalIds */\n      0x60\n        /* \"contracts/Vitasensus.solpp\":15788:15810  string[] memory titles */\n      dup1\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_223, desc: $copyArrayToStorage_t_string_memory_ptr_to_t_string_storage\n        /* \"contracts/Vitasensus.solpp\":15815:15843  string[] memory descriptions */\n      0x60\n        /* \"contracts/Vitasensus.solpp\":15848:15875  uint256[] memory startTimes */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":15880:15905  uint256[] memory endTimes */\n      0x60\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/Vitasensus.solpp\":15910:15939  uint256[] memory choicesCount */\n      dup1\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(description, description)\n        /* \"contracts/Vitasensus.solpp\":15958:15971  uint256 index */\n      0x00\n  // ExpressionCompiler::visit(_memberAccess=proposal.body)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n        /* \"contracts/Vitasensus.solpp\":15974:15978  skip */\n      dup9\n        /* \"contracts/Vitasensus.solpp\":15958:15978  uint256 index = skip */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":15949:16471  for (... */\n    tag_260:\n        /* \"contracts/Vitasensus.solpp\":15991:16007  _spacesProposals */\n      0x03\n        /* \"contracts/Vitasensus.solpp\":15991:16016  _spacesProposals[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":16008:16015  spaceId */\n      dup12\n        /* \"contracts/Vitasensus.solpp\":15991:16016  _spacesProposals[spaceId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n  // CompilerContext::callLowLevelFunction($copyArrayToStorage_t_string_memory_ptr_to_t_string_storage)\n  // newPushTag tag_224, desc: \n      dup2\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      mstore\n      0x20\n      add\n  // end of CompilerUtils::rotateStackUp()\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":15991:16023  _spacesProposals[spaceId].length */\n      dup1\n  // CompilerUtils::popStackSlots(1)\n      sload\n  // end of CompilerUtils::popStackSlots()\n      swap1\n  // CompilerUtils::convertType(): int_const 0 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(startTime, startTime)\n      pop\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":15983:15988  index */\n      dup2\n  // newPushTag tag_225, desc: \n        /* \"contracts/Vitasensus.solpp\":15983:16023  index < _spacesProposals[spaceId].length */\n      lt\n        /* \"contracts/Vitasensus.solpp\":15983:16049  index < _spacesProposals[spaceId].length && index < (skip + limit) */\n      dup1\n  // Jump to tag_224\n  // ExpressionCompiler::appendVariable(startTime, startTime)\n      iszero\n  // newPushTag tag_226, desc: \n      tag_263\n      jumpi\n      pop\n  // ExpressionCompiler::visit(_memberAccess=block.timestamp)\n        /* \"contracts/Vitasensus.solpp\":16043:16048  limit */\n      dup8\n        /* \"contracts/Vitasensus.solpp\":16036:16040  skip */\n      dup10\n  // CompilerUtils::convertType(): uint256 -> uint64\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=proposal.startTime)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n        /* \"contracts/Vitasensus.solpp\":16036:16048  skip + limit */\n      tag_264\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_264:  // return of Yul function checked_add_t_uint256\n        /* \"contracts/Vitasensus.solpp\":16027:16032  index */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":16027:16049  index < (skip + limit) */\n      lt\n        /* \"contracts/Vitasensus.solpp\":15983:16049  index < _spacesProposals[spaceId].length && index < (skip + limit) */\n    tag_263:\n        /* \"contracts/Vitasensus.solpp\":15949:16471  for (... */\n      iszero\n      tag_261\n      jumpi\n        /* \"contracts/Vitasensus.solpp\":16099:16104  index */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":16071:16082  proposalIds */\n      dup8\n  // CompilerUtils::copyToStackTop(4, 1)\n        /* \"contracts/Vitasensus.solpp\":16091:16095  skip */\n      dup11\n  // CompilerUtils::convertType(): uint64 -> uint64\n        /* \"contracts/Vitasensus.solpp\":16083:16088  index */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":16083:16095  index - skip */\n      tag_265\n  // end of CompilerUtils::convertType()\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n  // CompilerUtils::popStackSlots(1)\n    tag_265:  // return of Yul function checked_sub_t_uint256\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(endTime, endTime)\n        /* \"contracts/Vitasensus.solpp\":16071:16096  proposalIds[index - skip] */\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint64\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=proposal.endTime)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      mload\n      dup2\n      lt\n      tag_266\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n  // CompilerUtils::copyToStackTop(4, 1)\n    tag_266:\n  // CompilerUtils::convertType(): uint64 -> uint64\n      0x20\n      mul\n  // end of CompilerUtils::convertType()\n      0x20\n      add\n      add\n        /* \"contracts/Vitasensus.solpp\":16071:16104  proposalIds[index - skip] = index */\n      dup2\n  // CompilerUtils::popStackSlots(1)\n      dup2\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(choices, choices)\n      mstore\n  // ExpressionCompiler::visit(_memberAccess=proposal.choices)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":16132:16148  _spacesProposals */\n      0x03\n        /* \"contracts/Vitasensus.solpp\":16132:16157  _spacesProposals[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":16149:16156  spaceId */\n      dup12\n        /* \"contracts/Vitasensus.solpp\":16132:16157  _spacesProposals[spaceId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n  // CompilerContext::callLowLevelFunction($copyArrayToStorage_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_storage)\n  // newPushTag tag_227, desc: \n      0x20\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      add\n      0x00\n      blake2b\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_228, desc: $copyArrayToStorage_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_storage\n        /* \"contracts/Vitasensus.solpp\":16158:16163  index */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":16132:16164  _spacesProposals[spaceId][index] */\n      dup2\n      sload\n  // CompilerUtils::popStackSlots(1)\n      dup2\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(choicesExecutors, choicesExecutors)\n      lt\n  // ExpressionCompiler::visit(_memberAccess=proposal.choicesExecutors)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      tag_267\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_267:\n  // CompilerContext::callLowLevelFunction($copyArrayToStorage_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_storage)\n  // newPushTag tag_229, desc: \n      swap1\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      0x00\n      mstore\n      0x20\n  // end of CompilerUtils::rotateStackUp()\n      0x00\n      blake2b\n      swap1\n  // CompilerUtils::popStackSlots(1)\n      0x0a\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(choicesData, choicesData)\n      mul\n  // ExpressionCompiler::visit(_memberAccess=proposal.choicesData)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      add\n        /* \"contracts/Vitasensus.solpp\":16132:16170  _spacesProposals[spaceId][index].title */\n      0x01\n      add\n        /* \"contracts/Vitasensus.solpp\":16109:16170  titles[index - skip] = _spacesProposals[spaceId][index].title */\n      dup1\n      sload\n      tag_269\n      swap1\n      tag_184\n      jump\t// in\n    tag_269:  // return of Yul function extract_byte_array_length\n      dup1\n      0x1f\n  // CompilerContext::callLowLevelFunction($copyArrayToStorage_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_storage)\n  // newPushTag tag_230, desc: \n      add\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      0x20\n      dup1\n      swap2\n  // end of CompilerUtils::rotateStackUp()\n      div\n      mul\n      0x20\n  // CompilerUtils::popStackSlots(1)\n      add\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n      0x40\n  // ExpressionCompiler::visit(_memberAccess=proposal.author)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      mload\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n  // CompilerUtils::copyToStackTop(4, 1)\n      add\n  // CompilerUtils::convertType(): address -> address\n      dup3\n      dup1\n  // end of CompilerUtils::convertType()\n      sload\n      tag_270\n      swap1\n      tag_184\n  // CompilerUtils::popStackSlots(1)\n      jump\t// in\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=choices.length)\n  // ExpressionCompiler::appendVariable(choices, choices)\n    tag_270:  // return of Yul function extract_byte_array_length\n      dup1\n      iszero\n      tag_271\n      jumpi\n      dup1\n  // newPushTag tag_231, desc: \n      0x1f\n      lt\n  // Jump to tag_230\n      tag_272\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n  // CompilerUtils::fetchFreeMemoryPointer()\n      swap2\n      0x20\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      add\n      swap2\n      jump(tag_271)\n    tag_272:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n  // CompilerUtils::storeFreeMemoryPointer()\n      0x20\n      0x00\n  // end of CompilerUtils::storeFreeMemoryPointer()\n      blake2b\n      swap1\n  // newPushTag tag_232, desc: \n    tag_273:\n      dup2\n  // Jump to tag_231\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_273\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n  // ExpressionCompiler::visit(_memberAccess=proposal.votes)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      add\n      swap2\n    tag_271:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":16109:16115  titles */\n      dup7\n        /* \"contracts/Vitasensus.solpp\":16124:16128  skip */\n      dup11\n        /* \"contracts/Vitasensus.solpp\":16116:16121  index */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":16116:16128  index - skip */\n      tag_274\n  // CompilerContext::callLowLevelFunction($copyArrayToStorage_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_storage)\n  // newPushTag tag_233, desc: \n      swap2\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      swap1\n      tag_129\n      jump\t// in\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_234, desc: $copyArrayToStorage_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_storage\n    tag_274:  // return of Yul function checked_sub_t_uint256\n        /* \"contracts/Vitasensus.solpp\":16109:16129  titles[index - skip] */\n      dup2\n      mload\n  // CompilerUtils::popStackSlots(1)\n      dup2\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(snapshot, snapshot)\n      lt\n  // ExpressionCompiler::visit(_memberAccess=proposal.snapshotHeight)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      tag_275\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      0x24\n      0x00\n  // CompilerUtils::popStackSlots(1)\n      revert\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n    tag_275:\n  // CompilerUtils::convertType(): address -> address\n      0x20\n      mul\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      0x20\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      add\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      add\n  // ExpressionCompiler::visit(_memberAccess=proposal.title)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n        /* \"contracts/Vitasensus.solpp\":16109:16170  titles[index - skip] = _spacesProposals[spaceId][index].title */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contracts/Vitasensus.solpp\":16204:16220  _spacesProposals */\n      0x03\n  // ExpressionCompiler::visit(_memberAccess=proposal.body)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n        /* \"contracts/Vitasensus.solpp\":16204:16229  _spacesProposals[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":16221:16228  spaceId */\n      dup12\n        /* \"contracts/Vitasensus.solpp\":16204:16229  _spacesProposals[spaceId] */\n      dup2\n      mstore\n      0x20\n  // ExpressionCompiler::visit(_memberAccess=proposal.startTime)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":16230:16235  index */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":16204:16236  _spacesProposals[spaceId][index] */\n      dup2\n      sload\n      dup2\n      lt\n  // ExpressionCompiler::visit(_memberAccess=proposal.endTime)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      tag_276\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_276:\n      swap1\n  // ExpressionCompiler::visit(_memberAccess=proposal.snapshotHeight)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      0x00\n      mstore\n      blake2b(0x00, 0x20)\n      swap1\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x0a\n      mul\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             string storage ref\n  //             string storage ref\n  //             uint64\n  //             uint64\n  //             uint256\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_string_storage_t_string_storage_t_uint64_t_uint64_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed, _inArgs=6, _outArgs=1)\n  // newPushTag tag_235, desc: return of Yul function abi_encode_tuple_t_string_storage_t_string_storage_t_uint64_t_uint64_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed\n      add\n  // CompilerUtils::moveIntoStack(6, 1)\n  // CompilerUtils::rotateStackUp(7)\n        /* \"contracts/Vitasensus.solpp\":16204:16241  _spacesProposals[spaceId][index].body */\n      0x00\n      add\n        /* \"contracts/Vitasensus.solpp\":16175:16241  descriptions[index - skip] = _spacesProposals[spaceId][index].body */\n      dup1\n      sload\n      tag_278\n      swap1\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_236, desc: abi_encode_tuple_t_string_storage_t_string_storage_t_uint64_t_uint64_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed\n      tag_184\n      jump\t// in\n    tag_278:  // return of Yul function extract_byte_array_length\n  // CompilerUtils::fetchFreeMemoryPointer()\n      dup1\n      0x1f\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      add\n      0x20\n      dup1\n      swap2\n      div\n  // ExpressionCompiler::visit(_memberAccess=payable(msg.sender).transfer)\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n      mul\n  // CompilerUtils::convertType(): address -> address payable\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::convertType(): address payable -> address payable\n      0x20\n      add\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=msg.token)\n      0x40\n  // CompilerUtils::convertType(): tokenId -> tokenId\n      mload\n      swap1\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=msg.value)\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendExternalFunctionCall(function (),\n  //       args: [\n  //             ]\n  // )\n  // evaluate arguments\n  // CompilerUtils::fetchFreeMemoryPointer()\n      add\n      0x40\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // move arguments to memory\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             ]\n      mstore\n  // CompilerUtils::fetchFreeMemoryPointer()\n      dup1\n      swap3\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n  // value to send\n      add\n  // vite token\n      dup3\n  // contract address\n      dup1\n      sload\n  // newTag tag_237, desc: \n  // pop stack slots 4\n  // CompilerUtils::popStackSlots(4)\n      tag_279\n      swap1\n      tag_184\n      jump\t// in\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(4)\n    tag_279:  // return of Yul function extract_byte_array_length\n      dup1\n      iszero\n      tag_280\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      jumpi\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      dup1\n  // CompilerUtils::popStackSlots(1)\n      0x1f\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 9 parameters and 0 return parameters\n  //  current stackLayout [0 -1 -1 -1 -1 -1 -1 -1 -1 -1 ]\n      lt\n  //  current stackLayout [0 -1 -1 -1 -1 -1 -1 -1 -1 ]\n      tag_281\n  //  current stackLayout [0 -1 -1 -1 -1 -1 -1 -1 ]\n      jumpi\n  //  current stackLayout [0 -1 -1 -1 -1 -1 -1 ]\n      0x0100\n  //  current stackLayout [0 -1 -1 -1 -1 -1 ]\n      dup1\n  //  current stackLayout [0 -1 -1 -1 -1 ]\n      dup4\n  //  current stackLayout [0 -1 -1 -1 ]\n      sload\n  //  current stackLayout [0 -1 -1 ]\n      div\n  //  current stackLayout [0 -1 ]\n      mul\n      dup4\n      mstore\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n  // newTag tag_238, desc: return tag of transferOwnership\n  // start of code block of transferOwnership\n  // newPushTag tag_239, desc: return of function function () view\n      swap2\n  // newTag tag_240, desc: declaration of function _checkOwner\n      0x20\n      add\n      swap2\n      jump(tag_280)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendModifierOrFunctionCode() for function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n  // newTag tag_241, desc: return tag of transferOwnership\n  // start of code block of transferOwnership\n    tag_281:\n  // CompilerUtils::convertType(): int_const 0 -> address\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::convertType(): address -> address\n      dup3\n      add\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(newOwner, newOwner)\n      swap2\n  // CompilerUtils::convertType(): address -> address\n      swap1\n      0x00\n  // end of CompilerUtils::convertType()\n      mstore\n      0x20\n  // CompilerUtils::moveIntoStack(1, 0)\n      0x00\n      blake2b\n  // newPushTag tag_242, desc: \n      swap1\n    tag_282:\n  // Jump to tag_241\n  // CompilerUtils::fetchFreeMemoryPointer()\n      dup2\n      sload\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             literal_string \"Ownable: new owner is the zero address\"\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_stringliteral_0ff6cd9d5cae2396a0860cd9d9046debd79d2926a6d9abc06ee4b1a6011cfec4__to_t_string_memory_ptr__fromStack_reversed, _inArgs=1, _outArgs=1)\n  // newPushTag tag_243, desc: return of Yul function abi_encode_tuple_t_stringliteral_0ff6cd9d5cae2396a0860cd9d9046debd79d2926a6d9abc06ee4b1a6011cfec4__to_t_string_memory_ptr__fromStack_reversed\n      swap1\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      0x20\n  // end of CompilerUtils::rotateStackDown()\n  // newTag tag_244, desc: abi_encode_tuple_t_stringliteral_0ff6cd9d5cae2396a0860cd9d9046debd79d2926a6d9abc06ee4b1a6011cfec4__to_t_string_memory_ptr__fromStack_reversed\n      add\n      dup1\n      dup4\n  // CompilerUtils::fetchFreeMemoryPointer()\n      gt\n      tag_282\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // newPushTag tag_245, desc: return of function function (address)\n      dup3\n  // ExpressionCompiler::appendVariable(newOwner, newOwner)\n      add\n  // newTag tag_246, desc: declaration of function _transferOwnership\n      swap2\n    tag_280:\n      pop\n      pop\n      pop\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      pop\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      pop\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 0 return parameters\n  //  current stackLayout [0 -1 ]\n        /* \"contracts/Vitasensus.solpp\":16175:16187  descriptions */\n      dup6\n        /* \"contracts/Vitasensus.solpp\":16196:16200  skip */\n      dup11\n        /* \"contracts/Vitasensus.solpp\":16188:16193  index */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":16188:16200  index - skip */\n      tag_283\n  // CompilerUtils::convertType(): int_const 100000000000000000000000 -> uint256\n  // end of CompilerUtils::convertType()\n      swap2\n      swap1\n      tag_129\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function leaveSpace(uint256 spaceId) external {\n\t\t _requireSpaceMember(spaceId);\n\t\t_spacesMembers[spaceId].remove(msg.sender);\n\t\t_userSpaces[msg.sender].remove(spaceId);\n\t}\n  // newTag tag_247, desc: return tag of leaveSpace\n  // start of code block of leaveSpace\n  // newPushTag tag_248, desc: return of function function (uint256) view\n      jump\t// in\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n    tag_283:  // return of Yul function checked_sub_t_uint256\n        /* \"contracts/Vitasensus.solpp\":16175:16201  descriptions[index - skip] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_284\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // newPushTag tag_249, desc: return of function function (struct IterableMapping.Map,address)\n      jumpi\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // ExpressionCompiler::visit(_memberAccess=_spacesMembers[spaceId].remove)\n  // ExpressionCompiler::appendVariable(_spacesMembers, _spacesMembers)\n      0x00\n      mstore\n      0x32\n      0x04\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      mstore\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x24\n      0x00\n  // bytes of type uint256: 32\n      revert\n    tag_284:\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x20\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mul\n      0x20\n  // bytes of type uint256: 32\n      add\n      add\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":16175:16241  descriptions[index - skip] = _spacesProposals[spaceId][index].body */\n      dup2\n      swap1\n      mstore\n      pop\n  // CompilerUtils::convertType(): struct IterableMapping.Map storage ref -> struct IterableMapping.Map storage pointer\n  // end of CompilerUtils::convertType()\n  // newTag tag_250, desc: declaration of function remove\n        /* \"contracts/Vitasensus.solpp\":16273:16289  _spacesProposals */\n      0x03\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n        /* \"contracts/Vitasensus.solpp\":16273:16298  _spacesProposals[spaceId] */\n      0x00\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n        /* \"contracts/Vitasensus.solpp\":16290:16297  spaceId */\n      dup12\n        /* \"contracts/Vitasensus.solpp\":16273:16298  _spacesProposals[spaceId] */\n      dup2\n  // end of CompilerUtils::rotateStackUp()\n      mstore\n      0x20\n      add\n      swap1\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // newPushTag tag_251, desc: return of function function (struct UintKeyedIterableMapping.Map,uint256)\n      dup2\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      mstore\n  // ExpressionCompiler::visit(_memberAccess=_userSpaces[msg.sender].remove)\n  // ExpressionCompiler::appendVariable(_userSpaces, _userSpaces)\n      0x20\n      add\n      0x00\n      blake2b\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n        /* \"contracts/Vitasensus.solpp\":16299:16304  index */\n      dup2\n  // CompilerUtils::convertType(): address -> address\n        /* \"contracts/Vitasensus.solpp\":16273:16305  _spacesProposals[spaceId][index] */\n      dup2\n      sload\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      dup2\n      lt\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      tag_285\n      jumpi\n  // bytes of type address: 32\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n      mstore\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x32\n      0x04\n  // bytes of type uint256: 32\n      mstore\n      0x24\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x00\n      revert\n    tag_285:\n      swap1\n  // CompilerUtils::convertType(): struct UintKeyedIterableMapping.Map storage ref -> struct UintKeyedIterableMapping.Map storage pointer\n  // end of CompilerUtils::convertType()\n  // newTag tag_252, desc: declaration of function remove\n      0x00\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      mstore\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      0x20\n      0x00\n  // end of CompilerUtils::rotateStackUp()\n      blake2b\n      swap1\n      0x0a\n      mul\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      add\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 0 return parameters\n  //  current stackLayout [0 -1 ]\n        /* \"contracts/Vitasensus.solpp\":16273:16315  _spacesProposals[spaceId][index].startTime */\n      0x02\n      add\n      0x00\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function joinSpace(uint256 spaceId) public {\n\t\trequire(!isSpaceMember(spaceId, msg.sender));\n\t\t_spacesMembers[spaceId].set(msg.sender, 1);\n\t\t_userSpaces[msg.sender].set(spaceId, 1);\n\t}\n  // newTag tag_253, desc: return tag of joinSpace\n  // start of code block of joinSpace\n  // newPushTag tag_254, desc: return of function function (uint256,address) view returns (bool)\n      swap1\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      sload\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/Vitasensus.solpp\":16246:16315  startTimes[index - skip] = _spacesProposals[spaceId][index].startTime */\n      0xffffffffffffffff\n      and\n  // newPushTag tag_255, desc: \n        /* \"contracts/Vitasensus.solpp\":16246:16256  startTimes */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":16265:16269  skip */\n      dup11\n  // Jump to tag_254\n        /* \"contracts/Vitasensus.solpp\":16257:16262  index */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":16257:16269  index - skip */\n      tag_287\n      swap2\n      swap1\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // newPushTag tag_256, desc: return of function function (struct IterableMapping.Map,address,uint256)\n      tag_129\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n      jump\t// in\n    tag_287:  // return of Yul function checked_sub_t_uint256\n  // CompilerUtils::convertType(): int_const 1 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=_spacesMembers[spaceId].set)\n  // ExpressionCompiler::appendVariable(_spacesMembers, _spacesMembers)\n        /* \"contracts/Vitasensus.solpp\":16246:16270  startTimes[index - skip] */\n      dup2\n      mload\n      dup2\n      lt\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      tag_288\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // bytes of type uint256: 32\n      0x00\n      mstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x32\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x04\n      mstore\n  // bytes of type uint256: 32\n      0x24\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n      revert\n    tag_288:\n      0x20\n      mul\n  // CompilerUtils::convertType(): struct IterableMapping.Map storage ref -> struct IterableMapping.Map storage pointer\n  // end of CompilerUtils::convertType()\n  // newTag tag_257, desc: declaration of function set\n      0x20\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      add\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      add\n        /* \"contracts/Vitasensus.solpp\":16246:16315  startTimes[index - skip] = _spacesProposals[spaceId][index].startTime */\n      dup2\n      dup2\n  // end of CompilerUtils::rotateStackUp()\n      mstore\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":16345:16361  _spacesProposals */\n      0x03\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // newPushTag tag_258, desc: return of function function (struct UintKeyedIterableMapping.Map,uint256,uint256)\n        /* \"contracts/Vitasensus.solpp\":16345:16370  _spacesProposals[spaceId] */\n      0x00\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":16362:16369  spaceId */\n      dup12\n        /* \"contracts/Vitasensus.solpp\":16345:16370  _spacesProposals[spaceId] */\n      dup2\n  // CompilerUtils::convertType(): int_const 1 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=_userSpaces[msg.sender].set)\n  // ExpressionCompiler::appendVariable(_userSpaces, _userSpaces)\n      mstore\n      0x20\n      add\n      swap1\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n      dup2\n  // CompilerUtils::convertType(): address -> address\n      mstore\n      0x20\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      add\n      0x00\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":16371:16376  index */\n      dup2\n  // bytes of type address: 32\n        /* \"contracts/Vitasensus.solpp\":16345:16377  _spacesProposals[spaceId][index] */\n      dup2\n      sload\n  // end of CompilerUtils::storeInMemoryDynamic()\n      dup2\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      lt\n      tag_289\n  // bytes of type uint256: 32\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x00\n      mstore\n      0x32\n      0x04\n  // CompilerUtils::convertType(): struct UintKeyedIterableMapping.Map storage ref -> struct UintKeyedIterableMapping.Map storage pointer\n  // end of CompilerUtils::convertType()\n  // newTag tag_259, desc: declaration of function set\n      mstore\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      0x24\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      0x00\n      revert\n    tag_289:\n  // end of CompilerUtils::rotateStackUp()\n      swap1\n      0x00\n      mstore\n      0x20\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 0 return parameters\n  //  current stackLayout [0 -1 ]\n      blake2b\n      swap1\n      0x0a\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(uint256[] memory proposalIds)\n  // CompilerUtils::pushZeroPointer()\n      mul\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(string[] memory titles)\n  // CompilerUtils::pushZeroPointer()\n      add\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(string[] memory descriptions)\n  // CompilerUtils::pushZeroPointer()\n        /* \"contracts/Vitasensus.solpp\":16345:16385  _spacesProposals[spaceId][index].endTime */\n      0x02\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(uint256[] memory startTimes)\n  // CompilerUtils::pushZeroPointer()\n      add\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(uint256[] memory endTimes)\n  // CompilerUtils::pushZeroPointer()\n      0x08\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(uint256[] memory choicesCount)\n  // CompilerUtils::pushZeroPointer()\n      swap1\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function getSpaceProposals(\n\t\tuint256 spaceId,\n\t\tuint256 skip,\n\t\tuint256 limit\n\t)\n\t\texternal\n\t\tview\n\t\treturns (\n\t\t\tuint256[] memory proposalIds,\n\t\t\tstring[] memory titles,\n\t\t\tstring[] memory descriptions,\n\t\t\tuint256[] memory startTimes,\n\t\t\tuint256[] memory endTimes,\n\t\t\tuint256[] memory choicesCount\n\t\t)\n\t{\n\t\tfor (\n\t\t\tuint256 index = skip;\n\t\t\tindex < _spacesProposals[spaceId].length && index < (skip + limit);\n\t\t\tindex++\n\t\t) {\n\t\t\tproposalIds[index - skip] = index;\n\t\t\ttitles[index - skip] = _spacesProposals[spaceId][index].title;\n\t\t\tdescriptions[index - skip] = _spacesProposals[spaceId][index].body;\n\t\t\tstartTimes[index - skip] = _spacesProposals[spaceId][index].startTime;\n\t\t\tendTimes[index - skip] = _spacesProposals[spaceId][index].endTime;\n\t\t\tchoicesCount[index - skip] = _spacesProposals[spaceId][index].choices.length;\n\t\t}\n\t}\n  // newTag tag_260, desc: return tag of getSpaceProposals\n  // start of code block of getSpaceProposals\n  // newTag tag_261, desc: \n  // newTag tag_262, desc: \n  // newTag tag_263, desc: \n  // ContractCompiler::appendStackVariableInitialisation(uint256 index)\n      sload\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::appendVariable(skip, skip)\n      swap1\n  // CompilerUtils::moveToStackVariable(index)\n      0x0100\n      exp\n      swap1\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposals[spaceId].length)\n  // ExpressionCompiler::appendVariable(_spacesProposals, _spacesProposals)\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/Vitasensus.solpp\":16320:16385  endTimes[index - skip] = _spacesProposals[spaceId][index].endTime */\n      0xffffffffffffffff\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      and\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":16320:16328  endTimes */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":16337:16341  skip */\n      dup11\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":16329:16334  index */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":16329:16341  index - skip */\n      tag_291\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap2\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      tag_129\n  // bytes of type uint256: 32\n      jump\t// in\n    tag_291:  // return of Yul function checked_sub_t_uint256\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":16320:16342  endTimes[index - skip] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_292\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(index, index)\n      mstore\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mstore(0x04, 0x32)\n  // newPushTag tag_264, desc: \n      0x24\n      0x00\n  // Jump to tag_263\n      revert\n  // ExpressionCompiler::appendVariable(limit, limit)\n    tag_292:\n  // ExpressionCompiler::appendVariable(skip, skip)\n      0x20\n  // CompilerContext::callYulFunction(name=checked_add_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_265, desc: return of Yul function checked_add_t_uint256\n      mul\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      0x20\n      add\n  // end of CompilerUtils::rotateStackUp()\n      add\n        /* \"contracts/Vitasensus.solpp\":16320:16385  endTimes[index - skip] = _spacesProposals[spaceId][index].endTime */\n      dup2\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(index, index)\n      mstore\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":16419:16435  _spacesProposals */\n      0x03\n        /* \"contracts/Vitasensus.solpp\":16419:16444  _spacesProposals[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":16436:16443  spaceId */\n      dup12\n  // ExpressionCompiler::appendVariable(index, index)\n        /* \"contracts/Vitasensus.solpp\":16419:16444  _spacesProposals[spaceId] */\n      dup2\n  // ExpressionCompiler::appendVariable(proposalIds, proposalIds)\n      mstore\n  // ExpressionCompiler::appendVariable(skip, skip)\n      0x20\n  // ExpressionCompiler::appendVariable(index, index)\n      add\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_266, desc: return of Yul function checked_sub_t_uint256\n      swap1\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup2\n      mstore\n  // end of CompilerUtils::rotateStackUp()\n      0x20\n      add\n      0x00\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":16445:16450  index */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":16419:16451  _spacesProposals[spaceId][index] */\n      dup2\n      sload\n      dup2\n      lt\n  // newPushTag tag_267, desc: \n      tag_293\n      jumpi\n  // Jump to tag_266\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_293:\n      swap1\n      0x00\n      mstore\n      0x20\n      0x00\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      blake2b\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      swap1\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n      0x0a\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mul\n      add\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":16419:16459  _spacesProposals[spaceId][index].choices */\n      0x05\n      add\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":16419:16466  _spacesProposals[spaceId][index].choices.length */\n      dup1\n  // CompilerUtils::popStackSlots(1)\n      sload\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposals[spaceId][index].title)\n  // ExpressionCompiler::appendVariable(_spacesProposals, _spacesProposals)\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":16390:16402  choicesCount */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":16411:16415  skip */\n      dup11\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":16403:16408  index */\n      dup4\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":16403:16415  index - skip */\n      tag_295\n      swap2\n  // bytes of type uint256: 32\n      swap1\n      tag_129\n  // end of CompilerUtils::storeInMemoryDynamic()\n      jump\t// in\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n    tag_295:  // return of Yul function checked_sub_t_uint256\n        /* \"contracts/Vitasensus.solpp\":16390:16416  choicesCount[index - skip] */\n      dup2\n  // bytes of type uint256: 32\n      mload\n      dup2\n  // end of CompilerUtils::storeInMemoryDynamic()\n      lt\n      tag_296\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // ExpressionCompiler::appendVariable(index, index)\n      0x00\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mstore\n      mstore(0x04, 0x32)\n      0x24\n      0x00\n  // newPushTag tag_268, desc: \n      revert\n    tag_296:\n  // Jump to tag_267\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Vitasensus.solpp\":16390:16466  choicesCount[index - skip] = _spacesProposals[spaceId][index].choices.length */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":16054:16061  index++ */\n      dup1\n  // newTag tag_269, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup1\n      tag_297\n  // end of CompilerUtils::storeInMemory()\n      swap1\n      tag_64\n      jump\t// in\n    tag_297:  // return of Yul function increment_t_uint256\n      swap2\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":15949:16471  for (... */\n      jump(tag_260)\n    tag_261:\n      pop\n        /* \"contracts/Vitasensus.solpp\":15640:16474  function getSpaceProposals(... */\n      swap4\n      swap8\n      pop\n  // CompilerUtils::convertType(): string storage ref -> string memory\n      swap4\n      swap8\n  // CompilerContext::callYulFunction(name=extract_byte_array_length, _inArgs=1, _outArgs=1)\n  // newPushTag tag_270, desc: return of Yul function extract_byte_array_length\n      swap2\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      swap6\n  // end of CompilerUtils::rotateStackDown()\n      pop\n      swap4\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":5608:5704  function addOperator(address operator_) external onlyOwner {... */\n    tag_23:  // declaration of function addOperator\n        /* \"contracts/Ownable.sol\":1049:1062   */\n      tag_299\n        /* \"contracts/Ownable.sol\":1049:1060   */\n      tag_239\n        /* \"contracts/Ownable.sol\":1049:1062   */\n      jump\t// in\n    tag_299:  // return of function function () view\n        /* \"contracts/Vitasensus.solpp\":5696:5700  true */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":5671:5682  _isOperator */\n      0x0b\n        /* \"contracts/Vitasensus.solpp\":5671:5693  _isOperator[operator_] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":5683:5692  operator_ */\n      dup4\n  // CompilerUtils::allocateMemory()\n  // CompilerUtils::fetchFreeMemoryPointer()\n        /* \"contracts/Vitasensus.solpp\":5671:5693  _isOperator[operator_] */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n  // CompilerUtils::storeFreeMemoryPointer()\n      mstore\n      0x20\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // end of CompilerUtils::allocateMemory()\n      add\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      swap1\n      dup2\n      mstore\n  // end of CompilerUtils::rotateStackUp()\n      0x20\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      0x00\n  // bytes of type uint256: 32\n      blake2b\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n  // CompilerUtils::copyToStackTop(3, 1)\n        /* \"contracts/Vitasensus.solpp\":5671:5700  _isOperator[operator_] = true */\n      0x0100\n      exp\n      dup2\n  // CompilerContext::callYulFunction(name=extract_byte_array_length, _inArgs=1, _outArgs=1)\n  // newPushTag tag_271, desc: return of Yul function extract_byte_array_length\n      sload\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      dup2\n  // end of CompilerUtils::rotateStackDown()\n      0xff\n      mul\n      not\n      and\n      swap1\n  // newPushTag tag_272, desc: \n      dup4\n      iszero\n  // Jump to tag_271\n      iszero\n      mul\n      or\n  // newPushTag tag_273, desc: \n      swap1\n      sstore\n  // Jump to tag_272\n      pop\n        /* \"contracts/Vitasensus.solpp\":5608:5704  function addOperator(address operator_) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":16500:17168  function getSpaceProposal(uint256 spaceId, uint256 proposalId)... */\n    tag_24:  // declaration of function getSpaceProposal\n        /* \"contracts/Vitasensus.solpp\":16596:16615  string memory title */\n      0x60\n        /* \"contracts/Vitasensus.solpp\":16620:16645  string memory description */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":16650:16664  address author */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":16669:16686  uint256 startTime */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":16691:16706  uint256 endTime */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":16711:16727  uint256 snapshot */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":16732:16756  bytes32[] memory choices */\n      0x60\n        /* \"contracts/Vitasensus.solpp\":16761:16794  address[] memory choicesExecutors */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":16799:16827  bytes32[] memory choicesData */\n      0x60\n        /* \"contracts/Vitasensus.solpp\":16832:16854  uint256[] memory votes */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":16864:16889  Proposal storage proposal */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":16892:16925  _getProposal(spaceId, proposalId) */\n      tag_302\n        /* \"contracts/Vitasensus.solpp\":16905:16912  spaceId */\n      dup14\n        /* \"contracts/Vitasensus.solpp\":16914:16924  proposalId */\n      dup14\n        /* \"contracts/Vitasensus.solpp\":16892:16904  _getProposal */\n      tag_67\n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":16892:16925  _getProposal(spaceId, proposalId) */\n      jump\t// in\n    tag_302:  // return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n  // end of CompilerUtils::storeInMemory()\n        /* \"contracts/Vitasensus.solpp\":16864:16925  Proposal storage proposal = _getProposal(spaceId, proposalId) */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":16941:16949  proposal */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":16941:16955  proposal.title */\n      0x01\n  // newTag tag_274, desc: \n      add\n        /* \"contracts/Vitasensus.solpp\":16960:16968  proposal */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":16960:16973  proposal.body */\n      0x00\n      add\n        /* \"contracts/Vitasensus.solpp\":16978:16986  proposal */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":16978:16993  proposal.author */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Vitasensus.solpp\":16998:17006  proposal */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":16998:17016  proposal.startTime */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n  // CompilerUtils::popStackSlots(3)\n      div\n      0xffffffffffffffff\n      and\n  // end of CompilerUtils::popStackSlots()\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(titles, titles)\n        /* \"contracts/Vitasensus.solpp\":17021:17029  proposal */\n      dup5\n  // ExpressionCompiler::appendVariable(skip, skip)\n        /* \"contracts/Vitasensus.solpp\":17021:17037  proposal.endTime */\n      0x02\n  // ExpressionCompiler::appendVariable(index, index)\n      add\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_275, desc: return of Yul function checked_sub_t_uint256\n      0x08\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      swap1\n      sload\n  // end of CompilerUtils::rotateStackUp()\n      swap1\n      0x0100\n      exp\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/Vitasensus.solpp\":17042:17050  proposal */\n      dup6\n        /* \"contracts/Vitasensus.solpp\":17042:17065  proposal.snapshotHeight */\n      0x03\n  // newPushTag tag_276, desc: \n      add\n      sload\n  // Jump to tag_275\n        /* \"contracts/Vitasensus.solpp\":17070:17078  proposal */\n      dup7\n        /* \"contracts/Vitasensus.solpp\":17070:17086  proposal.choices */\n      0x05\n      add\n        /* \"contracts/Vitasensus.solpp\":17091:17099  proposal */\n      dup8\n        /* \"contracts/Vitasensus.solpp\":17091:17116  proposal.choicesExecutors */\n      0x06\n      add\n        /* \"contracts/Vitasensus.solpp\":17121:17129  proposal */\n      dup9\n        /* \"contracts/Vitasensus.solpp\":17121:17141  proposal.choicesData */\n      0x07\n      add\n        /* \"contracts/Vitasensus.solpp\":17146:17154  proposal */\n      dup10\n        /* \"contracts/Vitasensus.solpp\":17146:17160  proposal.votes */\n      0x08\n      add\n        /* \"contracts/Vitasensus.solpp\":16929:17164  return (... */\n      dup10\n      dup1\n      sload\n      tag_303\n      swap1\n      tag_184\n  // CompilerUtils::popStackSlots(1)\n      jump\t// in\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposals[spaceId][index].body)\n  // ExpressionCompiler::appendVariable(_spacesProposals, _spacesProposals)\n    tag_303:  // return of Yul function extract_byte_array_length\n      dup1\n      0x1f\n      add\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      0x20\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup1\n      swap2\n  // bytes of type uint256: 32\n      div\n      mul\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x20\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      0x40\n  // bytes of type uint256: 32\n      mload\n      swap1\n  // end of CompilerUtils::storeInMemoryDynamic()\n      dup2\n      add\n      0x40\n      mstore\n  // ExpressionCompiler::appendVariable(index, index)\n      dup1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n  // newPushTag tag_277, desc: \n      0x20\n      add\n  // Jump to tag_276\n      dup3\n      dup1\n      sload\n      tag_304\n      swap1\n      tag_184\n      jump\t// in\n    tag_304:  // return of Yul function extract_byte_array_length\n      dup1\n      iszero\n      tag_305\n  // newTag tag_278, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jumpi\n      dup1\n  // end of CompilerUtils::storeInMemory()\n      0x1f\n      lt\n      tag_306\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n  // CompilerUtils::convertType(): string storage ref -> string memory\n      add\n      swap2\n  // CompilerContext::callYulFunction(name=extract_byte_array_length, _inArgs=1, _outArgs=1)\n  // newPushTag tag_279, desc: return of Yul function extract_byte_array_length\n      tag_305\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      jump\n  // end of CompilerUtils::rotateStackDown()\n    tag_306:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      blake2b(0x00, 0x20)\n      swap1\n    tag_307:\n      dup2\n  // CompilerUtils::allocateMemory()\n  // CompilerUtils::fetchFreeMemoryPointer()\n      sload\n      dup2\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      mstore\n      swap1\n      0x01\n  // CompilerUtils::storeFreeMemoryPointer()\n      add\n      swap1\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // end of CompilerUtils::allocateMemory()\n      0x20\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      add\n      dup1\n      dup4\n  // end of CompilerUtils::rotateStackUp()\n      gt\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      tag_307\n      jumpi\n  // bytes of type uint256: 32\n      dup3\n      swap1\n  // end of CompilerUtils::storeInMemoryDynamic()\n  // CompilerUtils::copyToStackTop(3, 1)\n      sub\n      0x1f\n      and\n  // CompilerContext::callYulFunction(name=extract_byte_array_length, _inArgs=1, _outArgs=1)\n  // newPushTag tag_280, desc: return of Yul function extract_byte_array_length\n      dup3\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      add\n  // end of CompilerUtils::rotateStackDown()\n      swap2\n    tag_305:\n      pop\n      pop\n      pop\n  // newPushTag tag_281, desc: \n      pop\n      pop\n  // Jump to tag_280\n      swap10\n      pop\n      dup9\n  // newPushTag tag_282, desc: \n      dup1\n      sload\n  // Jump to tag_281\n      tag_308\n      swap1\n      tag_184\n      jump\t// in\n    tag_308:  // return of Yul function extract_byte_array_length\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      0x40\n  // end of CompilerUtils::storeInMemory()\n      mstore\n      dup1\n      swap3\n      swap2\n  // newTag tag_283, desc: \n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_309\n      swap1\n      tag_184\n      jump\t// in\n    tag_309:  // return of Yul function extract_byte_array_length\n      dup1\n      iszero\n      tag_310\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_311\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n  // CompilerUtils::popStackSlots(3)\n      div\n      mul\n      dup4\n  // end of CompilerUtils::popStackSlots()\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(descriptions, descriptions)\n      mstore\n  // ExpressionCompiler::appendVariable(skip, skip)\n      swap2\n  // ExpressionCompiler::appendVariable(index, index)\n      0x20\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_284, desc: return of Yul function checked_sub_t_uint256\n      add\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      swap2\n      tag_310\n  // end of CompilerUtils::rotateStackUp()\n      jump\n    tag_311:\n      dup3\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      0x20\n  // newPushTag tag_285, desc: \n      0x00\n      blake2b\n  // Jump to tag_284\n      swap1\n    tag_312:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_312\n      jumpi\n      dup3\n  // CompilerUtils::popStackSlots(1)\n      swap1\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposals[spaceId][index].startTime)\n  // ExpressionCompiler::appendVariable(_spacesProposals, _spacesProposals)\n      sub\n      0x1f\n      and\n      dup3\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      add\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap2\n    tag_310:\n  // bytes of type uint256: 32\n      pop\n      pop\n  // end of CompilerUtils::storeInMemoryDynamic()\n      pop\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      pop\n      pop\n  // bytes of type uint256: 32\n      swap9\n      pop\n  // end of CompilerUtils::storeInMemoryDynamic()\n      dup7\n      0xffffffffffffffff\n      and\n      swap7\n  // ExpressionCompiler::appendVariable(index, index)\n      pop\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      dup6\n      0xffffffffffffffff\n      and\n      swap6\n      pop\n      dup4\n  // newPushTag tag_286, desc: \n      dup1\n      sload\n  // Jump to tag_285\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n  // newTag tag_287, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mstore\n      dup1\n  // end of CompilerUtils::storeInMemory()\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_313\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n  // CompilerUtils::convertType(): uint64 -> uint256\n      mstore\n      0x20\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(startTimes, startTimes)\n      0x00\n  // ExpressionCompiler::appendVariable(skip, skip)\n      blake2b\n  // ExpressionCompiler::appendVariable(index, index)\n      swap1\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_288, desc: return of Yul function checked_sub_t_uint256\n    tag_314:\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup2\n      sload\n  // end of CompilerUtils::rotateStackUp()\n      dup2\n      mstore\n      0x20\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n  // newPushTag tag_289, desc: \n      dup4\n      gt\n  // Jump to tag_288\n      tag_314\n      jumpi\n    tag_313:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap4\n      pop\n      dup3\n      dup1\n      sload\n      dup1\n      0x20\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      mul\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      0x20\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n      add\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mload(0x40)\n  // bytes of type uint256: 32\n      swap1\n      dup2\n  // end of CompilerUtils::storeInMemoryDynamic()\n      add\n  // CompilerUtils::popStackSlots(1)\n      0x40\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposals[spaceId][index].endTime)\n  // ExpressionCompiler::appendVariable(_spacesProposals, _spacesProposals)\n      mstore\n      dup1\n      swap3\n      swap2\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      swap1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup2\n      dup2\n  // bytes of type uint256: 32\n      mstore\n      0x20\n  // end of CompilerUtils::storeInMemoryDynamic()\n      add\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup3\n      dup1\n  // bytes of type uint256: 32\n      sload\n      dup1\n  // end of CompilerUtils::storeInMemoryDynamic()\n      iszero\n      tag_315\n      jumpi\n      0x20\n  // ExpressionCompiler::appendVariable(index, index)\n      mul\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n  // newPushTag tag_290, desc: \n      0x20\n      0x00\n  // Jump to tag_289\n      blake2b\n      swap1\n    tag_316:\n      dup2\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n  // newTag tag_291, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      div\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // end of CompilerUtils::storeInMemory()\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_316\n      jumpi\n    tag_315:\n      pop\n      pop\n      pop\n      pop\n      pop\n  // CompilerUtils::convertType(): uint64 -> uint256\n      swap3\n      pop\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(endTimes, endTimes)\n      dup2\n  // ExpressionCompiler::appendVariable(skip, skip)\n      dup1\n  // ExpressionCompiler::appendVariable(index, index)\n      sload\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_292, desc: return of Yul function checked_sub_t_uint256\n      dup1\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      0x20\n      mul\n  // end of CompilerUtils::rotateStackUp()\n      0x20\n      add\n      0x40\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mload\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n  // newPushTag tag_293, desc: \n      dup1\n      swap3\n  // Jump to tag_292\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_317\n      jumpi\n      0x20\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      mul\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      dup3\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n      add\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap2\n      swap1\n  // bytes of type uint256: 32\n      0x00\n      mstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x20\n  // CompilerUtils::popStackSlots(1)\n      0x00\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposals[spaceId][index].choices.length)\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposals[spaceId][index].choices)\n  // ExpressionCompiler::appendVariable(_spacesProposals, _spacesProposals)\n      blake2b\n      swap1\n    tag_318:\n      dup2\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      sload\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup2\n      mstore\n  // bytes of type uint256: 32\n      0x20\n      add\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap1\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x01\n      add\n  // bytes of type uint256: 32\n      swap1\n      dup1\n  // end of CompilerUtils::storeInMemoryDynamic()\n      dup4\n      gt\n      tag_318\n      jumpi\n  // ExpressionCompiler::appendVariable(index, index)\n    tag_317:\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n  // newPushTag tag_294, desc: \n      pop\n      dup1\n  // Jump to tag_293\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n  // newTag tag_295, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      0x40\n  // end of CompilerUtils::storeInMemory()\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_319\n      jumpi\n      0x20\n  // ExpressionCompiler::appendVariable(choicesCount, choicesCount)\n      mul\n  // ExpressionCompiler::appendVariable(skip, skip)\n      dup3\n  // ExpressionCompiler::appendVariable(index, index)\n      add\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_296, desc: return of Yul function checked_sub_t_uint256\n      swap2\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      swap1\n      0x00\n  // end of CompilerUtils::rotateStackUp()\n      mstore\n      0x20\n      0x00\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      blake2b\n      swap1\n    tag_320:\n      dup2\n      sload\n      dup2\n  // newPushTag tag_297, desc: \n      mstore\n      0x20\n  // Jump to tag_296\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_320\n      jumpi\n    tag_319:\n      pop\n      pop\n      pop\n      pop\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      pop\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      swap1\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n      pop\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap11\n      pop\n  // bytes of type uint256: 32\n      swap11\n      pop\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap11\n  // CompilerUtils::popStackSlots(1)\n      pop\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      swap11\n  // ExpressionCompiler::appendVariable(index, index)\n      pop\n      swap11\n  // CompilerContext::callYulFunction(name=increment_t_uint256, _inArgs=1, _outArgs=1)\n  // newPushTag tag_298, desc: return of Yul function increment_t_uint256\n      pop\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      swap11\n  // end of CompilerUtils::rotateStackDown()\n      pop\n      swap11\n      pop\n      swap11\n      pop\n  // CompilerUtils::popStackSlots(1)\n      swap11\n  // end of CompilerUtils::popStackSlots()\n      pop\n      swap11\n      pop\n  // CompilerUtils::popStackSlots(1)\n      pop\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n        /* \"contracts/Vitasensus.solpp\":16500:17168  function getSpaceProposal(uint256 spaceId, uint256 proposalId)... */\n      swap3\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 3 parameters and 6 return parameters\n  //  current stackLayout [6 -1 -1 -1 0 1 2 3 4 5 ]\n      swap6\n  //  current stackLayout [6 -1 -1 -1 0 5 2 3 4 1 ]\n      swap9\n  //  current stackLayout [6 1 -1 -1 0 5 2 3 4 -1 ]\n      swap12\n  //  current stackLayout [6 1 -1 -1 0 5 2 3 4 ]\n      swap2\n  //  current stackLayout [6 1 -1 -1 4 5 2 3 0 ]\n      swap5\n  //  current stackLayout [0 1 -1 -1 4 5 2 3 6 ]\n      swap8\n  //  current stackLayout [0 1 -1 -1 4 5 6 3 2 ]\n      swap11\n  //  current stackLayout [0 1 2 -1 4 5 6 3 -1 ]\n      pop\n  //  current stackLayout [0 1 2 -1 4 5 6 3 ]\n      swap3\n  //  current stackLayout [0 1 2 3 4 5 6 -1 ]\n      swap6\n      swap9\n      pop\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function addOperator(address operator_) external onlyOwner {\n\t\t_isOperator[operator_] = true;\n\t}\n  // newTag tag_299, desc: return tag of addOperator\n  // start of code block of addOperator\n  // newPushTag tag_300, desc: return of function function () view\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":5107:5271  function isProposalClosed(uint256 spaceId, uint256 proposalId) public view returns (bool) {... */\n    tag_25:  // declaration of function isProposalClosed\n        /* \"contracts/Vitasensus.solpp\":5191:5195  bool */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":5252:5267  block.timestamp */\n      timestamp\n        /* \"contracts/Vitasensus.solpp\":5208:5241  _getProposal(spaceId, proposalId) */\n      tag_322\n        /* \"contracts/Vitasensus.solpp\":5221:5228  spaceId */\n      dup5\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendModifierOrFunctionCode() for function addOperator(address operator_) external onlyOwner {\n\t\t_isOperator[operator_] = true;\n\t}\n  // newTag tag_301, desc: return tag of addOperator\n  // start of code block of addOperator\n        /* \"contracts/Vitasensus.solpp\":5230:5240  proposalId */\n      dup5\n  // ExpressionCompiler::appendVariable(_isOperator, _isOperator)\n        /* \"contracts/Vitasensus.solpp\":5208:5220  _getProposal */\n      tag_67\n        /* \"contracts/Vitasensus.solpp\":5208:5241  _getProposal(spaceId, proposalId) */\n      jump\t// in\n    tag_322:  // return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n        /* \"contracts/Vitasensus.solpp\":5208:5249  _getProposal(spaceId, proposalId).endTime */\n      0x02\n  // ExpressionCompiler::appendVariable(operator_, operator_)\n      add\n  // CompilerUtils::convertType(): address -> address\n      0x08\n      swap1\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      sload\n      swap1\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x0100\n      exp\n  // bytes of type address: 32\n      swap1\n      div\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0xffffffffffffffff\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      and\n        /* \"contracts/Vitasensus.solpp\":5208:5267  _getProposal(spaceId, proposalId).endTime < block.timestamp */\n      0xffffffffffffffff\n  // bytes of type uint256: 32\n      and\n      lt\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":5201:5267  return _getProposal(spaceId, proposalId).endTime < block.timestamp */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":5107:5271  function isProposalClosed(uint256 spaceId, uint256 proposalId) public view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":4022:4156  function isSpaceMember(uint256 spaceId, address user) public view returns (bool) {... */\n    tag_26:  // declaration of function isSpaceMember\n        /* \"contracts/Vitasensus.solpp\":4097:4101  bool */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":4151:4152  1 */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":4114:4147  _spacesMembers[spaceId].get(user) */\n      tag_324\n        /* \"contracts/Vitasensus.solpp\":4142:4146  user */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":4114:4128  _spacesMembers */\n      0x04\n  // CompilerUtils::copyToStackTop(4, 1)\n        /* \"contracts/Vitasensus.solpp\":4114:4137  _spacesMembers[spaceId] */\n      0x00\n  // CompilerUtils::convertType(): bool -> bool\n        /* \"contracts/Vitasensus.solpp\":4129:4136  spaceId */\n      dup8\n        /* \"contracts/Vitasensus.solpp\":4114:4137  _spacesMembers[spaceId] */\n      dup2\n  // end of CompilerUtils::convertType()\n      mstore\n      0x20\n      add\n      swap1\n  // CompilerUtils::popStackSlots(1)\n      dup2\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      mstore\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      0x20\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 0 return parameters\n  //  current stackLayout [0 -1 ]\n      add\n      0x00\n      blake2b\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(string memory title)\n  // CompilerUtils::pushZeroPointer()\n        /* \"contracts/Vitasensus.solpp\":4114:4141  _spacesMembers[spaceId].get */\n      tag_325\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(string memory description)\n  // CompilerUtils::pushZeroPointer()\n      swap1\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(address author)\n        /* \"contracts/Vitasensus.solpp\":4114:4147  _spacesMembers[spaceId].get(user) */\n      swap2\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(uint256 startTime)\n      swap1\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(uint256 endTime)\n      0xffffffff\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(uint256 snapshot)\n      and\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(bytes32[] memory choices)\n  // CompilerUtils::pushZeroPointer()\n      jump\t// in\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(address[] memory choicesExecutors)\n  // CompilerUtils::pushZeroPointer()\n    tag_324:  // return of function function (struct IterableMapping.Map,address) view returns (uint256)\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(bytes32[] memory choicesData)\n  // CompilerUtils::pushZeroPointer()\n        /* \"contracts/Vitasensus.solpp\":4114:4152  _spacesMembers[spaceId].get(user) == 1 */\n      eq\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(uint256[] memory votes)\n  // CompilerUtils::pushZeroPointer()\n        /* \"contracts/Vitasensus.solpp\":4107:4152  return _spacesMembers[spaceId].get(user) == 1 */\n      swap1\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function getSpaceProposal(uint256 spaceId, uint256 proposalId)\n\t\texternal\n\t\tview\n\t\treturns (\n\t\t\tstring memory title,\n\t\t\tstring memory description,\n\t\t\taddress author,\n\t\t\tuint256 startTime,\n\t\t\tuint256 endTime,\n\t\t\tuint256 snapshot,\n\t\t\tbytes32[] memory choices,\n\t\t\taddress[] memory choicesExecutors,\n\t\t\tbytes32[] memory choicesData,\n\t\t\tuint256[] memory votes\n\t\t)\n\t{\n\t\tProposal storage proposal = _getProposal(spaceId, proposalId);\n\t\treturn (\n\t\t\tproposal.title,\n\t\t\tproposal.body,\n\t\t\tproposal.author,\n\t\t\tproposal.startTime,\n\t\t\tproposal.endTime,\n\t\t\tproposal.snapshotHeight,\n\t\t\tproposal.choices,\n\t\t\tproposal.choicesExecutors,\n\t\t\tproposal.choicesData,\n\t\t\tproposal.votes\n\t\t);\n\t}\n  // newTag tag_302, desc: return tag of getSpaceProposal\n  // start of code block of getSpaceProposal\n  // ContractCompiler::appendStackVariableInitialisation(Proposal storage proposal)\n      pop\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // newPushTag tag_303, desc: return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n        /* \"contracts/Vitasensus.solpp\":4022:4156  function isSpaceMember(uint256 spaceId, address user) public view returns (bool) {... */\n      swap3\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      swap2\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":5707:5807  function removeOperator(address operator_) external onlyOwner {... */\n    tag_27:  // declaration of function removeOperator\n        /* \"contracts/Ownable.sol\":1049:1062   */\n      tag_327\n        /* \"contracts/Ownable.sol\":1049:1060   */\n      tag_239\n  // CompilerUtils::moveToStackVariable(proposal)\n        /* \"contracts/Ownable.sol\":1049:1062   */\n      jump\t// in\n    tag_327:  // return of function function () view\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::visit(_memberAccess=proposal.title)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n        /* \"contracts/Vitasensus.solpp\":5798:5803  false */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":5773:5784  _isOperator */\n      0x0b\n        /* \"contracts/Vitasensus.solpp\":5773:5795  _isOperator[operator_] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":5785:5794  operator_ */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":5773:5795  _isOperator[operator_] */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // ExpressionCompiler::visit(_memberAccess=proposal.body)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n  // ExpressionCompiler::visit(_memberAccess=proposal.author)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n      0x00\n        /* \"contracts/Vitasensus.solpp\":5773:5803  _isOperator[operator_] = false */\n      0x0100\n      exp\n      dup2\n  // ExpressionCompiler::visit(_memberAccess=proposal.startTime)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n  // ExpressionCompiler::visit(_memberAccess=proposal.endTime)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      sstore\n      pop\n        /* \"contracts/Vitasensus.solpp\":5707:5807  function removeOperator(address operator_) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":12810:12938  function getSpaceProposalsCount(uint256 spaceId) external view returns (uint256) {... */\n    tag_28:  // declaration of function getSpaceProposalsCount\n        /* \"contracts/Vitasensus.solpp\":12882:12889  uint256 */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":12902:12918  _spacesProposals */\n      0x03\n        /* \"contracts/Vitasensus.solpp\":12902:12927  _spacesProposals[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":12919:12926  spaceId */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":12902:12927  _spacesProposals[spaceId] */\n      dup2\n      mstore\n      0x20\n      add\n  // ExpressionCompiler::visit(_memberAccess=proposal.snapshotHeight)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n  // ExpressionCompiler::visit(_memberAccess=proposal.choices)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":12902:12934  _spacesProposals[spaceId].length */\n      dup1\n      sload\n      swap1\n      pop\n  // ExpressionCompiler::visit(_memberAccess=proposal.choicesExecutors)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n        /* \"contracts/Vitasensus.solpp\":12895:12934  return _spacesProposals[spaceId].length */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":12810:12938  function getSpaceProposalsCount(uint256 spaceId) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n  // ExpressionCompiler::visit(_memberAccess=proposal.choicesData)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":4159:4314  function isSpaceAdmin(uint256 spaceId, address user) public view returns (bool) {... */\n    tag_29:  // declaration of function isSpaceAdmin\n        /* \"contracts/Vitasensus.solpp\":4233:4237  bool */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":4250:4264  _spacesIsAdmin */\n      0x06\n        /* \"contracts/Vitasensus.solpp\":4250:4273  _spacesIsAdmin[spaceId] */\n      0x00\n  // ExpressionCompiler::visit(_memberAccess=proposal.votes)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n        /* \"contracts/Vitasensus.solpp\":4265:4272  spaceId */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":4250:4273  _spacesIsAdmin[spaceId] */\n      dup2\n      mstore\n      0x20\n      add\n  // CompilerUtils::convertType(): tuple(string storage ref,string storage ref,address,uint64,uint64,uint256,bytes32[] storage ref,address[] storage ref,bytes32[] storage ref,uint256[] storage ref) -> tuple(string memory,string memory,address,uint256,uint256,uint256,bytes32[] memory,address[] memory,bytes32[] memory,uint256[] memory)\n  // CompilerUtils::copyToStackTop(10, 1)\n      swap1\n  // CompilerUtils::convertType(): string storage ref -> string memory\n      dup2\n      mstore\n  // CompilerContext::callYulFunction(name=extract_byte_array_length, _inArgs=1, _outArgs=1)\n  // newPushTag tag_304, desc: return of Yul function extract_byte_array_length\n      0x20\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      add\n  // end of CompilerUtils::rotateStackDown()\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":4250:4279  _spacesIsAdmin[spaceId][user] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":4274:4278  user */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":4250:4279  _spacesIsAdmin[spaceId][user] */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n  // CompilerUtils::allocateMemory()\n  // CompilerUtils::fetchFreeMemoryPointer()\n      dup2\n      mstore\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      0x20\n      add\n      0x00\n  // CompilerUtils::storeFreeMemoryPointer()\n      blake2b\n      0x00\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // end of CompilerUtils::allocateMemory()\n      swap1\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      sload\n      swap1\n      0x0100\n  // end of CompilerUtils::rotateStackUp()\n      exp\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      div\n  // bytes of type uint256: 32\n      0xff\n      and\n  // end of CompilerUtils::storeInMemoryDynamic()\n  // CompilerUtils::copyToStackTop(3, 1)\n        /* \"contracts/Vitasensus.solpp\":4250:4310  _spacesIsAdmin[spaceId][user] || isSpaceOwner(spaceId, user) */\n      dup1\n      tag_331\n      jumpi\n  // CompilerContext::callYulFunction(name=extract_byte_array_length, _inArgs=1, _outArgs=1)\n  // newPushTag tag_305, desc: return of Yul function extract_byte_array_length\n      pop\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n        /* \"contracts/Vitasensus.solpp\":4283:4310  isSpaceOwner(spaceId, user) */\n      tag_332\n  // end of CompilerUtils::rotateStackDown()\n        /* \"contracts/Vitasensus.solpp\":4296:4303  spaceId */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":4305:4309  user */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":4283:4295  isSpaceOwner */\n      tag_16\n        /* \"contracts/Vitasensus.solpp\":4283:4310  isSpaceOwner(spaceId, user) */\n      jump\t// in\n    tag_332:  // return of function function (uint256,address) view returns (bool)\n  // newPushTag tag_306, desc: \n        /* \"contracts/Vitasensus.solpp\":4250:4310  _spacesIsAdmin[spaceId][user] || isSpaceOwner(spaceId, user) */\n    tag_331:\n        /* \"contracts/Vitasensus.solpp\":4243:4310  return _spacesIsAdmin[spaceId][user] || isSpaceOwner(spaceId, user) */\n      swap1\n  // Jump to tag_305\n      pop\n        /* \"contracts/Vitasensus.solpp\":4159:4314  function isSpaceAdmin(uint256 spaceId, address user) public view returns (bool) {... */\n      swap3\n      swap2\n  // newPushTag tag_307, desc: \n      pop\n      pop\n  // Jump to tag_306\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":11864:12312  function updateSpace(... */\n    tag_30:  // declaration of function updateSpace\n        /* \"contracts/Vitasensus.solpp\":12070:12077  spaceId */\n      dup7\n        /* \"contracts/Vitasensus.solpp\":2803:2830  _requireSpaceAdmin(spaceId) */\n      tag_334\n        /* \"contracts/Vitasensus.solpp\":2822:2829  spaceId */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":2803:2821  _requireSpaceAdmin */\n      tag_100\n        /* \"contracts/Vitasensus.solpp\":2803:2830  _requireSpaceAdmin(spaceId) */\n      jump\t// in\n    tag_334:  // return of function function (uint256) view\n        /* \"contracts/Vitasensus.solpp\":12083:12102  Space storage space */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":12105:12112  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":12113:12120  spaceId */\n      dup10\n        /* \"contracts/Vitasensus.solpp\":12105:12121  _spaces[spaceId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_336\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mstore\n      0x32\n  // end of CompilerUtils::storeInMemory()\n      0x04\n      mstore\n      0x24\n      0x00\n  // newTag tag_308, desc: \n      revert\n    tag_336:\n      swap1\n      0x00\n      mstore\n      blake2b(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n        /* \"contracts/Vitasensus.solpp\":12083:12121  Space storage space = _spaces[spaceId] */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":12138:12142  name */\n      dup8\n        /* \"contracts/Vitasensus.solpp\":12125:12130  space */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":12125:12135  space.name */\n      0x00\n      add\n        /* \"contracts/Vitasensus.solpp\":12125:12142  space.name = name */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Vitasensus.solpp\":12166:12177  description */\n      dup7\n        /* \"contracts/Vitasensus.solpp\":12146:12151  space */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":12146:12163  space.description */\n      0x03\n      add\n        /* \"contracts/Vitasensus.solpp\":12146:12177  space.description = description */\n      swap1\n  // CompilerUtils::popStackSlots(3)\n      dup1\n      mload\n      swap1\n  // end of CompilerUtils::popStackSlots()\n  // end of CompilerUtils::convertType()\n      0x20\n      add\n  // CompilerUtils::copyToStackTop(9, 1)\n      swap1\n  // CompilerUtils::convertType(): string storage ref -> string memory\n      tag_338\n      swap3\n  // CompilerContext::callYulFunction(name=extract_byte_array_length, _inArgs=1, _outArgs=1)\n  // newPushTag tag_309, desc: return of Yul function extract_byte_array_length\n      swap2\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      swap1\n  // end of CompilerUtils::rotateStackDown()\n      tag_222\n      jump\t// in\n    tag_338:\n      pop\n        /* \"contracts/Vitasensus.solpp\":12195:12205  spaceToken */\n      dup6\n        /* \"contracts/Vitasensus.solpp\":12181:12186  space */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":12181:12192  space.token */\n      0x04\n      add\n      0x00\n        /* \"contracts/Vitasensus.solpp\":12181:12205  space.token = spaceToken */\n      0x0100\n      exp\n      dup2\n      sload\n  // CompilerUtils::allocateMemory()\n  // CompilerUtils::fetchFreeMemoryPointer()\n      dup2\n      0xffffffffffffffffffff\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      mul\n      not\n      and\n  // CompilerUtils::storeFreeMemoryPointer()\n      swap1\n      dup4\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // end of CompilerUtils::allocateMemory()\n      0xffffffffffffffffffff\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      and\n      mul\n      or\n  // end of CompilerUtils::rotateStackUp()\n      swap1\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      sstore\n      pop\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":12237:12255  spaceTokenDecimals */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":12209:12256  space.tokenDecimals = uint8(spaceTokenDecimals) */\n      0xff\n  // end of CompilerUtils::storeInMemoryDynamic()\n  // CompilerUtils::copyToStackTop(3, 1)\n      and\n        /* \"contracts/Vitasensus.solpp\":12209:12214  space */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":12209:12228  space.tokenDecimals */\n      0x05\n  // CompilerContext::callYulFunction(name=extract_byte_array_length, _inArgs=1, _outArgs=1)\n  // newPushTag tag_310, desc: return of Yul function extract_byte_array_length\n      add\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n        /* \"contracts/Vitasensus.solpp\":12209:12256  space.tokenDecimals = uint8(spaceTokenDecimals) */\n      dup2\n  // end of CompilerUtils::rotateStackDown()\n      swap1\n      sstore\n      pop\n        /* \"contracts/Vitasensus.solpp\":12275:12281  avatar */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":12260:12265  space */\n      dup2\n  // newPushTag tag_311, desc: \n        /* \"contracts/Vitasensus.solpp\":12260:12272  space.avatar */\n      0x01\n      add\n  // Jump to tag_310\n        /* \"contracts/Vitasensus.solpp\":12260:12281  space.avatar = avatar */\n      dup2\n      swap1\n      sstore\n  // newPushTag tag_312, desc: \n      pop\n        /* \"contracts/Vitasensus.solpp\":12301:12308  website */\n      dup3\n  // Jump to tag_311\n        /* \"contracts/Vitasensus.solpp\":12285:12290  space */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":12285:12298  space.website */\n      0x02\n      add\n        /* \"contracts/Vitasensus.solpp\":12285:12308  space.website = website */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Vitasensus.solpp\":2834:2835  _ */\n      pop\n        /* \"contracts/Vitasensus.solpp\":11864:12312  function updateSpace(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":12720:12807  function getSpacesCount() external view returns (uint256) {... */\n    tag_31:  // declaration of function getSpacesCount\n        /* \"contracts/Vitasensus.solpp\":12769:12776  uint256 */\n      0x00\n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":12789:12796  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":12789:12803  _spaces.length */\n      dup1\n  // end of CompilerUtils::storeInMemory()\n      sload\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":12782:12803  return _spaces.length */\n      swap1\n  // newTag tag_313, desc: \n      pop\n        /* \"contracts/Vitasensus.solpp\":12720:12807  function getSpacesCount() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1784:1885   */\n    tag_32:  // declaration of function renounceOwnership\n        /* \"contracts/Ownable.sol\":1049:1062   */\n      tag_341\n        /* \"contracts/Ownable.sol\":1049:1060   */\n      tag_239\n        /* \"contracts/Ownable.sol\":1049:1062   */\n      jump\t// in\n    tag_341:  // return of function function () view\n        /* \"contracts/Ownable.sol\":1848:1878   */\n      tag_343\n        /* \"contracts/Ownable.sol\":1875:1876   */\n      0x00\n        /* \"contracts/Ownable.sol\":1848:1866   */\n      tag_245\n        /* \"contracts/Ownable.sol\":1848:1878   */\n      jump\t// in\n    tag_343:  // return of function function (address)\n        /* \"contracts/Ownable.sol\":1784:1885   */\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":10531:11248  function createSpace(... */\n    tag_33:  // declaration of function createSpace\n        /* \"contracts/Vitasensus.solpp\":1029:1044  100000 * 10**18 */\n      0x152d02c7e14af6800000\n        /* \"contracts/Vitasensus.solpp\":10720:10729  msg.value */\n      callvalue\n        /* \"contracts/Vitasensus.solpp\":10720:10751  msg.value == SPACE_CREATION_FEE */\n      eq\n        /* \"contracts/Vitasensus.solpp\":10720:10781  msg.value == SPACE_CREATION_FEE && msg.token == VITE_TOKEN_ID */\n      dup1\n      iszero\n      tag_345\n      jumpi\n      pop\n        /* \"contracts/Vitasensus.solpp\":951:981  \"tti_5649544520544f4b454e6e40\" */\n      0x5649544520544f4b454e\n        /* \"contracts/Vitasensus.solpp\":10755:10781  msg.token == VITE_TOKEN_ID */\n      0xffffffffffffffffffff\n      and\n        /* \"contracts/Vitasensus.solpp\":10755:10764  msg.token */\n      tokenid\n  // CompilerUtils::popStackSlots(3)\n        /* \"contracts/Vitasensus.solpp\":10755:10781  msg.token == VITE_TOKEN_ID */\n      0xffffffffffffffffffff\n      and\n      eq\n  // end of CompilerUtils::popStackSlots()\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":10720:10781  msg.value == SPACE_CREATION_FEE && msg.token == VITE_TOKEN_ID */\n    tag_345:\n        /* \"contracts/Vitasensus.solpp\":10712:10782  require(msg.value == SPACE_CREATION_FEE && msg.token == VITE_TOKEN_ID) */\n      tag_346\n  // CompilerUtils::copyToStackTop(7, 1)\n      jumpi\n  // CompilerUtils::convertType(): uint64 -> uint256\n      0x00\n      dup1\n  // end of CompilerUtils::convertType()\n      revert\n    tag_346:\n  // CompilerUtils::copyToStackTop(6, 1)\n        /* \"contracts/Vitasensus.solpp\":10786:10801  uint256 spaceId */\n      0x00\n  // CompilerUtils::convertType(): uint64 -> uint256\n        /* \"contracts/Vitasensus.solpp\":10804:10811  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":10804:10818  _spaces.length */\n      dup1\n  // end of CompilerUtils::convertType()\n      sload\n      swap1\n  // CompilerUtils::copyToStackTop(4, 1)\n      pop\n  // CompilerUtils::convertType(): bytes32[] storage ref -> bytes32[] memory\n        /* \"contracts/Vitasensus.solpp\":10786:10818  uint256 spaceId = _spaces.length */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":10822:10840  Space memory space */\n      tag_347\n      tag_348\n      jump\t// in\n    tag_347:\n        /* \"contracts/Vitasensus.solpp\":10857:10861  name */\n      dup8\n  // CompilerUtils::allocateMemory()\n  // CompilerUtils::fetchFreeMemoryPointer()\n        /* \"contracts/Vitasensus.solpp\":10844:10849  space */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":10844:10854  space.name */\n      0x00\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      add\n        /* \"contracts/Vitasensus.solpp\":10844:10861  space.name = name */\n      dup2\n      dup2\n  // CompilerUtils::storeFreeMemoryPointer()\n      mstore\n      pop\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // end of CompilerUtils::allocateMemory()\n      pop\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n        /* \"contracts/Vitasensus.solpp\":10885:10896  description */\n      dup7\n        /* \"contracts/Vitasensus.solpp\":10865:10870  space */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":10865:10882  space.description */\n      0x60\n  // end of CompilerUtils::rotateStackUp()\n      add\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":10865:10896  space.description = description */\n      dup2\n      swap1\n  // bytes of type uint256: 32\n      mstore\n      pop\n  // end of CompilerUtils::storeInMemoryDynamic()\n  // CompilerUtils::copyToStackTop(3, 1)\n        /* \"contracts/Vitasensus.solpp\":10914:10924  spaceToken */\n      dup6\n        /* \"contracts/Vitasensus.solpp\":10900:10905  space */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":10900:10911  space.token */\n      0x80\n      add\n        /* \"contracts/Vitasensus.solpp\":10900:10924  space.token = spaceToken */\n      swap1\n  // newPushTag tag_314, desc: \n      0xffffffffffffffffffff\n      and\n  // Jump to tag_313\n      swap1\n      dup2\n      0xffffffffffffffffffff\n      and\n      dup2\n      mstore\n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      pop\n      pop\n  // end of CompilerUtils::storeInMemory()\n        /* \"contracts/Vitasensus.solpp\":10943:10949  avatar */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":10928:10933  space */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":10928:10940  space.avatar */\n      0x20\n      add\n  // newTag tag_315, desc: \n        /* \"contracts/Vitasensus.solpp\":10928:10949  space.avatar = avatar */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n  // CompilerUtils::storeInMemoryDynamic(type=bytes32, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=bytes32, ...)\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n        /* \"contracts/Vitasensus.solpp\":10969:10976  website */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":10953:10958  space */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":10953:10966  space.website */\n      0x40\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n        /* \"contracts/Vitasensus.solpp\":10953:10976  space.website = website */\n      dup2\n  // bytes of type bytes32: 32\n      dup2\n      mstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":11002:11020  spaceTokenDecimals */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":10980:10985  space */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":10980:10999  space.tokenDecimals */\n      0xa0\n      add\n        /* \"contracts/Vitasensus.solpp\":10980:11020  space.tokenDecimals = spaceTokenDecimals */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":11049:11064  block.timestamp */\n      timestamp\n  // CompilerUtils::popStackSlots(3)\n        /* \"contracts/Vitasensus.solpp\":11024:11029  space */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":11024:11046  space.createdTimestamp */\n      0xc0\n      add\n  // end of CompilerUtils::popStackSlots()\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":11024:11064  space.createdTimestamp = block.timestamp */\n      dup2\n      dup2\n  // CompilerUtils::copyToStackTop(3, 1)\n      mstore\n  // CompilerUtils::convertType(): address[] storage ref -> address[] memory\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":11069:11076  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":11082:11087  space */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":11069:11088  _spaces.push(space) */\n      swap1\n      dup1\n      0x01\n  // CompilerUtils::allocateMemory()\n  // CompilerUtils::fetchFreeMemoryPointer()\n      dup2\n      sload\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      add\n      dup1\n      dup3\n  // CompilerUtils::storeFreeMemoryPointer()\n      sstore\n      dup1\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // end of CompilerUtils::allocateMemory()\n      swap2\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      pop\n      pop\n      0x01\n  // end of CompilerUtils::rotateStackUp()\n      swap1\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      sub\n      swap1\n  // bytes of type uint256: 32\n      0x00\n      mstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n  // CompilerUtils::copyToStackTop(3, 1)\n      blake2b(0x00, 0x20)\n      swap1\n      0x07\n  // newPushTag tag_316, desc: \n      mul\n      add\n  // Jump to tag_315\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap2\n      pop\n  // end of CompilerUtils::storeInMemory()\n      0x00\n      dup3\n      add\n      mload\n  // newTag tag_317, desc: \n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      0x40\n      dup3\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      mload\n  // bytes of type address: 32\n      dup2\n      0x02\n  // end of CompilerUtils::storeInMemoryDynamic()\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      swap1\n      dup1\n      mload\n  // CompilerUtils::popStackSlots(3)\n      swap1\n      0x20\n      add\n  // end of CompilerUtils::popStackSlots()\n  // end of CompilerUtils::convertType()\n      swap1\n      tag_350\n  // CompilerUtils::copyToStackTop(2, 1)\n      swap3\n  // CompilerUtils::convertType(): bytes32[] storage ref -> bytes32[] memory\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_350:\n      pop\n      0x80\n  // CompilerUtils::allocateMemory()\n  // CompilerUtils::fetchFreeMemoryPointer()\n      dup3\n      add\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      mload\n      dup2\n      0x04\n  // CompilerUtils::storeFreeMemoryPointer()\n      add\n      0x00\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // end of CompilerUtils::allocateMemory()\n      0x0100\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      exp\n      dup2\n      sload\n  // end of CompilerUtils::rotateStackUp()\n      dup2\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0xffffffffffffffffffff\n      mul\n  // bytes of type uint256: 32\n      not\n      and\n  // end of CompilerUtils::storeInMemoryDynamic()\n  // CompilerUtils::copyToStackTop(3, 1)\n      swap1\n      dup4\n      0xffffffffffffffffffff\n      and\n      mul\n  // newPushTag tag_318, desc: \n      or\n      swap1\n  // Jump to tag_317\n      sstore\n      pop\n      0xa0\n      dup3\n      add\n      mload\n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup2\n      0x05\n  // end of CompilerUtils::storeInMemory()\n      add\n      sstore\n      0xc0\n      dup3\n  // newTag tag_319, desc: \n      add\n      mload\n      dup2\n      0x06\n      add\n  // CompilerUtils::storeInMemoryDynamic(type=bytes32, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=bytes32, ...)\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      sstore\n      pop\n      pop\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":11092:11106  _spaceSettings */\n      0x02\n        /* \"contracts/Vitasensus.solpp\":11092:11113  _spaceSettings.push() */\n      0x01\n  // bytes of type bytes32: 32\n      dup2\n      0x01\n  // end of CompilerUtils::storeInMemoryDynamic()\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      sub\n      swap1\n  // CompilerUtils::popStackSlots(3)\n      0x00\n      mstore\n      0x20\n  // end of CompilerUtils::popStackSlots()\n  // end of CompilerUtils::convertType()\n      0x00\n      blake2b\n  // CompilerUtils::copyToStackTop(1, 1)\n      swap1\n  // CompilerUtils::convertType(): uint256[] storage ref -> uint256[] memory\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":11143:11153  msg.sender */\n      caller\n        /* \"contracts/Vitasensus.solpp\":11118:11131  _spacesOwners */\n      0x08\n        /* \"contracts/Vitasensus.solpp\":11118:11140  _spacesOwners[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":11132:11139  spaceId */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":11118:11140  _spacesOwners[spaceId] */\n      dup2\n  // CompilerUtils::allocateMemory()\n  // CompilerUtils::fetchFreeMemoryPointer()\n      mstore\n      0x20\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      add\n      swap1\n      dup2\n  // CompilerUtils::storeFreeMemoryPointer()\n      mstore\n      0x20\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // end of CompilerUtils::allocateMemory()\n      add\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      0x00\n      blake2b\n      0x00\n  // end of CompilerUtils::rotateStackUp()\n        /* \"contracts/Vitasensus.solpp\":11118:11153  _spacesOwners[spaceId] = msg.sender */\n      0x0100\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      exp\n      dup2\n  // bytes of type uint256: 32\n      sload\n      dup2\n  // end of CompilerUtils::storeInMemoryDynamic()\n  // CompilerUtils::copyToStackTop(3, 1)\n      0xffffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n  // newPushTag tag_320, desc: \n      dup4\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // Jump to tag_319\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":11196:11200  name */\n      dup8\n        /* \"contracts/Vitasensus.solpp\":11184:11194  spaceToken */\n      dup7\n  // end of CompilerUtils::storeInMemory()\n        /* \"contracts/Vitasensus.solpp\":11162:11222  SpaceCreated(spaceId, spaceToken, name, avatar, description) */\n      0xffffffffffffffffffff\n      and\n        /* \"contracts/Vitasensus.solpp\":11175:11182  spaceId */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":11162:11222  SpaceCreated(spaceId, spaceToken, name, avatar, description) */\n      0x92ac3827b776c572e5d72006a513f694b98b56b65e899bbdde95c3b1103b00f2\n  // newTag tag_321, desc: \n        /* \"contracts/Vitasensus.solpp\":11202:11208  avatar */\n      dup9\n        /* \"contracts/Vitasensus.solpp\":11210:11221  description */\n      dup12\n        /* \"contracts/Vitasensus.solpp\":11162:11222  SpaceCreated(spaceId, spaceToken, name, avatar, description) */\n      mload(0x40)\n      tag_352\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap3\n      swap2\n  // bytes of type uint256: 32\n      swap1\n      tag_353\n  // end of CompilerUtils::storeInMemoryDynamic()\n      jump\t// in\n    tag_352:  // return of Yul function abi_encode_tuple_t_bytes32_t_string_memory_ptr__to_t_bytes32_t_string_memory_ptr__fromStack_reversed\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/Vitasensus.solpp\":11226:11244  joinSpace(spaceId) */\n      tag_354\n        /* \"contracts/Vitasensus.solpp\":11236:11243  spaceId */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":11226:11235  joinSpace */\n      tag_21\n  // CompilerUtils::popStackSlots(3)\n        /* \"contracts/Vitasensus.solpp\":11226:11244  joinSpace(spaceId) */\n      jump\t// in\n    tag_354:  // return of function function (uint256)\n        /* \"contracts/Vitasensus.solpp\":10531:11248  function createSpace(... */\n      pop\n  // end of CompilerUtils::popStackSlots()\n  // end of CompilerUtils::convertType()\n      pop\n      pop\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackVariable(votes)\n      pop\n      pop\n  // CompilerUtils::moveToStackVariable(choicesData)\n      pop\n      pop\n  // CompilerUtils::moveToStackVariable(choicesExecutors)\n      pop\n      jump\t// out\n  // CompilerUtils::moveToStackVariable(choices)\n        /* \"contracts/Vitasensus.solpp\":6920:7229  function executeProposal(uint256 spaceId, uint256 proposalId)... */\n    tag_34:  // declaration of function executeProposal\n        /* \"contracts/Vitasensus.solpp\":7017:7024  spaceId */\n      dup2\n  // CompilerUtils::moveToStackVariable(snapshot)\n        /* \"contracts/Vitasensus.solpp\":7026:7036  proposalId */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":3612:3655  _requireProposalClosed(spaceId, proposalId) */\n      tag_356\n  // CompilerUtils::moveToStackVariable(endTime)\n        /* \"contracts/Vitasensus.solpp\":3635:3642  spaceId */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":3644:3654  proposalId */\n      dup3\n  // CompilerUtils::moveToStackVariable(startTime)\n        /* \"contracts/Vitasensus.solpp\":3612:3634  _requireProposalClosed */\n      tag_357\n        /* \"contracts/Vitasensus.solpp\":3612:3655  _requireProposalClosed(spaceId, proposalId) */\n      jump\t// in\n  // CompilerUtils::moveToStackVariable(author)\n    tag_356:  // return of function function (uint256,uint256) view\n        /* \"contracts/Vitasensus.solpp\":7067:7074  spaceId */\n      dup4\n  // CompilerUtils::moveToStackVariable(description)\n        /* \"contracts/Vitasensus.solpp\":7076:7086  proposalId */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":3753:3792  isProposalExecuted(spaceId, proposalId) */\n      tag_359\n  // CompilerUtils::moveToStackVariable(title)\n        /* \"contracts/Vitasensus.solpp\":3772:3779  spaceId */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":3781:3791  proposalId */\n      dup3\n  // CompilerUtils::popAndJump(toHeight=13, jumpTo=tag_301:)\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/Vitasensus.solpp\":3753:3771  isProposalExecuted */\n      tag_38\n  // end of CompilerUtils::popStackSlots()\n        /* \"contracts/Vitasensus.solpp\":3753:3792  isProposalExecuted(spaceId, proposalId) */\n      jump\t// in\n    tag_359:  // return of function function (uint256,uint256) view returns (bool)\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/Vitasensus.solpp\":3752:3792  !isProposalExecuted(spaceId, proposalId) */\n      iszero\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n        /* \"contracts/Vitasensus.solpp\":3744:3793  require(!isProposalExecuted(spaceId, proposalId)) */\n      tag_360\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 10 return parameters\n  //  current stackLayout [10 -1 -1 0 1 2 3 4 5 6 7 8 9 ]\n      jumpi\n  //  current stackLayout [10 -1 -1 0 1 2 3 4 5 9 7 8 6 ]\n      0x00\n  //  current stackLayout [10 -1 -1 0 1 2 6 4 5 9 7 8 3 ]\n      dup1\n  //  current stackLayout [10 -1 -1 3 1 2 6 4 5 9 7 8 0 ]\n      revert\n  //  current stackLayout [0 -1 -1 3 1 2 6 4 5 9 7 8 10 ]\n    tag_360:\n  //  current stackLayout [0 -1 -1 3 1 2 6 4 5 9 10 8 7 ]\n        /* \"contracts/Vitasensus.solpp\":7093:7119  uint256 winningChoiceIndex */\n      0x00\n  //  current stackLayout [0 -1 -1 3 1 2 6 7 5 9 10 8 4 ]\n        /* \"contracts/Vitasensus.solpp\":7122:7164  getWinningChoiceIndex(spaceId, proposalId) */\n      tag_362\n  //  current stackLayout [0 -1 -1 3 4 2 6 7 5 9 10 8 1 ]\n        /* \"contracts/Vitasensus.solpp\":7144:7151  spaceId */\n      dup8\n  //  current stackLayout [0 1 -1 3 4 2 6 7 5 9 10 8 -1 ]\n        /* \"contracts/Vitasensus.solpp\":7153:7163  proposalId */\n      dup8\n  //  current stackLayout [0 1 -1 3 4 2 6 7 5 9 10 8 ]\n        /* \"contracts/Vitasensus.solpp\":7122:7143  getWinningChoiceIndex */\n      tag_4\n  //  current stackLayout [0 1 -1 3 4 2 6 7 8 9 10 5 ]\n        /* \"contracts/Vitasensus.solpp\":7122:7164  getWinningChoiceIndex(spaceId, proposalId) */\n      jump\t// in\n  //  current stackLayout [0 1 -1 3 4 5 6 7 8 9 10 2 ]\n    tag_362:  // return of function function (uint256,uint256) view returns (uint256)\n  //  current stackLayout [0 1 2 3 4 5 6 7 8 9 10 -1 ]\n        /* \"contracts/Vitasensus.solpp\":7093:7164  uint256 winningChoiceIndex = getWinningChoiceIndex(spaceId, proposalId) */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":7168:7225  _executeProposal(spaceId, proposalId, winningChoiceIndex) */\n      tag_363\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(bool)\n        /* \"contracts/Vitasensus.solpp\":7185:7192  spaceId */\n      dup8\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function isProposalClosed(uint256 spaceId, uint256 proposalId) public view returns (bool) {\n\t\treturn _getProposal(spaceId, proposalId).endTime < block.timestamp;\n\t}\n  // newTag tag_322, desc: return tag of isProposalClosed\n  // start of code block of isProposalClosed\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::visit(_memberAccess=block.timestamp)\n        /* \"contracts/Vitasensus.solpp\":7194:7204  proposalId */\n      dup8\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=_getProposal(spaceId, proposalId).endTime)\n  // newPushTag tag_323, desc: return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n        /* \"contracts/Vitasensus.solpp\":7206:7224  winningChoiceIndex */\n      dup4\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":7168:7184  _executeProposal */\n      tag_364\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n        /* \"contracts/Vitasensus.solpp\":7168:7225  _executeProposal(spaceId, proposalId, winningChoiceIndex) */\n      jump\t// in\n    tag_363:  // return of function function (uint256,uint256,uint256)\n        /* \"contracts/Vitasensus.solpp\":3797:3798  _ */\n      pop\n        /* \"contracts/Vitasensus.solpp\":3659:3660  _ */\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":6920:7229  function executeProposal(uint256 spaceId, uint256 proposalId)... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":17200:18185  function getSpaceProposalVotes(... */\n    tag_35:  // declaration of function getSpaceProposalVotes\n        /* \"contracts/Vitasensus.solpp\":17331:17354  address[] memory voters */\n      0x60\n        /* \"contracts/Vitasensus.solpp\":17356:17378  uint256[] memory votes */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":17380:17404  uint256[] memory choices */\n      0x60\n        /* \"contracts/Vitasensus.solpp\":17421:17443  _spacesProposalsVoters */\n      0x0a\n        /* \"contracts/Vitasensus.solpp\":17421:17452  _spacesProposalsVoters[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":17444:17451  spaceId */\n      dup9\n        /* \"contracts/Vitasensus.solpp\":17421:17452  _spacesProposalsVoters[spaceId] */\n      dup2\n  // CompilerUtils::convertType(): uint64 -> uint256\n      mstore\n      0x20\n  // end of CompilerUtils::convertType()\n      add\n  // CompilerUtils::moveToStackVariable()\n      swap1\n      dup2\n  // CompilerUtils::popAndJump(toHeight=4, jumpTo=tag_321:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      mstore\n      0x20\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      add\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 1 return parameters\n  //  current stackLayout [1 -1 -1 0 ]\n      0x00\n  //  current stackLayout [0 -1 -1 1 ]\n      blake2b\n  //  current stackLayout [0 1 -1 -1 ]\n        /* \"contracts/Vitasensus.solpp\":17421:17464  _spacesProposalsVoters[spaceId][proposalId] */\n      0x00\n  //  current stackLayout [0 1 -1 ]\n        /* \"contracts/Vitasensus.solpp\":17453:17463  proposalId */\n      dup8\n        /* \"contracts/Vitasensus.solpp\":17421:17464  _spacesProposalsVoters[spaceId][proposalId] */\n      dup2\n      mstore\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(bool)\n      0x20\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function isSpaceMember(uint256 spaceId, address user) public view returns (bool) {\n\t\treturn _spacesMembers[spaceId].get(user) == 1;\n\t}\n  // newTag tag_324, desc: return tag of isSpaceMember\n  // start of code block of isSpaceMember\n  // ContractCompiler::visit(return)\n      add\n  // CompilerUtils::convertType(): int_const 1 -> uint256\n  // end of CompilerUtils::convertType()\n  // newPushTag tag_325, desc: return of function function (struct IterableMapping.Map,address) view returns (uint256)\n      swap1\n  // ExpressionCompiler::appendVariable(user, user)\n      dup2\n  // ExpressionCompiler::visit(_memberAccess=_spacesMembers[spaceId].get)\n  // ExpressionCompiler::appendVariable(_spacesMembers, _spacesMembers)\n      mstore\n      0x20\n      add\n      0x00\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      blake2b\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":17421:17471  _spacesProposalsVoters[spaceId][proposalId].length */\n      dup1\n      sload\n  // bytes of type uint256: 32\n      swap1\n      pop\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":17414:17418  skip */\n      dup6\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":17414:17471  skip < _spacesProposalsVoters[spaceId][proposalId].length */\n      lt\n        /* \"contracts/Vitasensus.solpp\":17410:18182  if (skip < _spacesProposalsVoters[spaceId][proposalId].length) {... */\n      iszero\n  // bytes of type uint256: 32\n      tag_366\n      jumpi\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":17478:17492  uint256 length */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":17557:17562  limit */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":17549:17553  skip */\n      dup7\n        /* \"contracts/Vitasensus.solpp\":17496:17518  _spacesProposalsVoters */\n      0x0a\n  // CompilerUtils::convertType(): struct IterableMapping.Map storage ref -> struct IterableMapping.Map storage pointer\n  // end of CompilerUtils::convertType()\n  // newTag tag_326, desc: declaration of function get\n        /* \"contracts/Vitasensus.solpp\":17496:17527  _spacesProposalsVoters[spaceId] */\n      0x00\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n        /* \"contracts/Vitasensus.solpp\":17519:17526  spaceId */\n      dup12\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n        /* \"contracts/Vitasensus.solpp\":17496:17527  _spacesProposalsVoters[spaceId] */\n      dup2\n      mstore\n  // end of CompilerUtils::rotateStackUp()\n      0x20\n      add\n      swap1\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mstore\n  // CompilerUtils::moveToStackVariable()\n      0x20\n      add\n  // CompilerUtils::popAndJump(toHeight=4, jumpTo=tag_323:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      0x00\n      blake2b\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n        /* \"contracts/Vitasensus.solpp\":17496:17539  _spacesProposalsVoters[spaceId][proposalId] */\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 1 return parameters\n  //  current stackLayout [1 -1 -1 0 ]\n        /* \"contracts/Vitasensus.solpp\":17528:17538  proposalId */\n      dup11\n  //  current stackLayout [0 -1 -1 1 ]\n        /* \"contracts/Vitasensus.solpp\":17496:17539  _spacesProposalsVoters[spaceId][proposalId] */\n      dup2\n  //  current stackLayout [0 1 -1 -1 ]\n      mstore\n  //  current stackLayout [0 1 -1 ]\n      0x20\n      add\n      swap1\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function removeOperator(address operator_) external onlyOwner {\n\t\t_isOperator[operator_] = false;\n\t}\n  // newTag tag_327, desc: return tag of removeOperator\n  // start of code block of removeOperator\n  // newPushTag tag_328, desc: return of function function () view\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendModifierOrFunctionCode() for function removeOperator(address operator_) external onlyOwner {\n\t\t_isOperator[operator_] = false;\n\t}\n  // newTag tag_329, desc: return tag of removeOperator\n  // start of code block of removeOperator\n        /* \"contracts/Vitasensus.solpp\":17496:17546  _spacesProposalsVoters[spaceId][proposalId].length */\n      dup1\n  // ExpressionCompiler::appendVariable(_isOperator, _isOperator)\n      sload\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":17496:17553  _spacesProposalsVoters[spaceId][proposalId].length - skip */\n      tag_367\n  // ExpressionCompiler::appendVariable(operator_, operator_)\n      swap2\n  // CompilerUtils::convertType(): address -> address\n      swap1\n      tag_129\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      jump\t// in\n    tag_367:  // return of Yul function checked_sub_t_uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":17495:17562  (_spacesProposalsVoters[spaceId][proposalId].length - skip) > limit */\n      gt\n        /* \"contracts/Vitasensus.solpp\":17495:17638  (_spacesProposalsVoters[spaceId][proposalId].length - skip) > limit... */\n      tag_368\n  // bytes of type address: 32\n      jumpi\n        /* \"contracts/Vitasensus.solpp\":17634:17638  skip */\n      dup6\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":17581:17603  _spacesProposalsVoters */\n      0x0a\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":17581:17612  _spacesProposalsVoters[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":17604:17611  spaceId */\n      dup11\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":17581:17612  _spacesProposalsVoters[spaceId] */\n      dup2\n      mstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":17581:17624  _spacesProposalsVoters[spaceId][proposalId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":17613:17623  proposalId */\n      dup10\n        /* \"contracts/Vitasensus.solpp\":17581:17624  _spacesProposalsVoters[spaceId][proposalId] */\n      dup2\n      mstore\n  // CompilerUtils::copyToStackTop(4, 1)\n      0x20\n  // CompilerUtils::convertType(): bool -> bool\n      add\n      swap1\n  // end of CompilerUtils::convertType()\n      dup2\n      mstore\n      0x20\n      add\n  // CompilerUtils::popStackSlots(1)\n      0x00\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      blake2b\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n        /* \"contracts/Vitasensus.solpp\":17581:17631  _spacesProposalsVoters[spaceId][proposalId].length */\n      dup1\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 0 return parameters\n  //  current stackLayout [0 -1 ]\n      sload\n      swap1\n      pop\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(uint256)\n        /* \"contracts/Vitasensus.solpp\":17581:17638  _spacesProposalsVoters[spaceId][proposalId].length - skip */\n      tag_369\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function getSpaceProposalsCount(uint256 spaceId) external view returns (uint256) {\n\t\treturn _spacesProposals[spaceId].length;\n\t}\n  // newTag tag_330, desc: return tag of getSpaceProposalsCount\n  // start of code block of getSpaceProposalsCount\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposals[spaceId].length)\n  // ExpressionCompiler::appendVariable(_spacesProposals, _spacesProposals)\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n    tag_369:  // return of Yul function checked_sub_t_uint256\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":17495:17638  (_spacesProposalsVoters[spaceId][proposalId].length - skip) > limit... */\n      jump(tag_370)\n  // bytes of type uint256: 32\n    tag_368:\n        /* \"contracts/Vitasensus.solpp\":17569:17574  limit */\n      dup5\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":17495:17638  (_spacesProposalsVoters[spaceId][proposalId].length - skip) > limit... */\n    tag_370:\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":17478:17638  uint256 length = (_spacesProposalsVoters[spaceId][proposalId].length - skip) > limit... */\n      swap1\n      pop\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":17666:17672  length */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":17652:17673  new address[](length) */\n      0xffffffffffffffff\n  // end of CompilerUtils::storeInMemoryDynamic()\n      dup2\n      gt\n      iszero\n      tag_371\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n  // CompilerUtils::moveToStackVariable()\n      0x41\n      0x04\n  // CompilerUtils::popAndJump(toHeight=3, jumpTo=tag_329:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      mstore\n      0x24\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 1 return parameters\n  //  current stackLayout [1 -1 0 ]\n      revert\n  //  current stackLayout [0 -1 1 ]\n    tag_371:\n  //  current stackLayout [0 1 -1 ]\n      mload(0x40)\n      swap1\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(bool)\n      dup1\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function isSpaceAdmin(uint256 spaceId, address user) public view returns (bool) {\n\t\treturn _spacesIsAdmin[spaceId][user] || isSpaceOwner(spaceId, user);\n\t}\n  // newTag tag_331, desc: return tag of isSpaceAdmin\n  // start of code block of isSpaceAdmin\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::appendVariable(_spacesIsAdmin, _spacesIsAdmin)\n      dup3\n      mstore\n      dup1\n      0x20\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      mul\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x20\n      add\n  // bytes of type uint256: 32\n      dup3\n      add\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x40\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mstore\n      dup1\n  // bytes of type uint256: 32\n      iszero\n      tag_372\n  // end of CompilerUtils::storeInMemoryDynamic()\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n  // ExpressionCompiler::appendVariable(user, user)\n      dup3\n  // CompilerUtils::convertType(): address -> address\n      mul\n      dup1\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      calldatasize\n      dup4\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      calldatacopy\n      dup1\n  // bytes of type address: 32\n      dup3\n      add\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap2\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      pop\n      pop\n  // bytes of type uint256: 32\n      swap1\n      pop\n  // end of CompilerUtils::storeInMemoryDynamic()\n    tag_372:\n      pop\n        /* \"contracts/Vitasensus.solpp\":17643:17673  voters = new address[](length) */\n      swap4\n      pop\n        /* \"contracts/Vitasensus.solpp\":17700:17706  length */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":17686:17707  new uint256[](length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_373\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n  // newPushTag tag_332, desc: \n      mstore\n      0x41\n  // Jump to tag_331\n      0x04\n  // newPushTag tag_333, desc: return of function function (uint256,address) view returns (bool)\n      mstore\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      0x24\n  // ExpressionCompiler::appendVariable(user, user)\n      0x00\n      revert\n    tag_373:\n      mload(0x40)\n      swap1\n      dup1\n  // CompilerUtils::moveToStackVariable()\n      dup3\n      mstore\n  // CompilerUtils::popAndJump(toHeight=4, jumpTo=tag_330:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      dup1\n      0x20\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      mul\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 1 return parameters\n  //  current stackLayout [1 -1 -1 0 ]\n      0x20\n  //  current stackLayout [0 -1 -1 1 ]\n      add\n  //  current stackLayout [0 1 -1 -1 ]\n      dup3\n  //  current stackLayout [0 1 -1 ]\n      add\n      0x40\n      mstore\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function updateSpace(\n\t\tuint256 spaceId,\n\t\tbytes32 name,\n\t\tstring memory description,\n\t\tvitetoken spaceToken,\n\t\tuint256 spaceTokenDecimals,\n\t\tbytes32 avatar,\n\t\tbytes32 website\n\t) external requireSpaceAdmin(spaceId) {\n\t\tSpace storage space = _spaces[spaceId];\n\t\tspace.name = name;\n\t\tspace.description = description;\n\t\tspace.token = spaceToken;\n\t\tspace.tokenDecimals = uint8(spaceTokenDecimals);\n\t\tspace.avatar = avatar;\n\t\tspace.website = website;\n\t}\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      dup1\n  // newTag tag_334, desc: return tag of updateSpace\n  // start of code block of updateSpace\n  // newPushTag tag_335, desc: return of function function (uint256) view\n      iszero\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      tag_374\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendModifierOrFunctionCode() for function updateSpace(\n\t\tuint256 spaceId,\n\t\tbytes32 name,\n\t\tstring memory description,\n\t\tvitetoken spaceToken,\n\t\tuint256 spaceTokenDecimals,\n\t\tbytes32 avatar,\n\t\tbytes32 website\n\t) external requireSpaceAdmin(spaceId) {\n\t\tSpace storage space = _spaces[spaceId];\n\t\tspace.name = name;\n\t\tspace.description = description;\n\t\tspace.token = spaceToken;\n\t\tspace.tokenDecimals = uint8(spaceTokenDecimals);\n\t\tspace.avatar = avatar;\n\t\tspace.website = website;\n\t}\n  // newTag tag_336, desc: return tag of updateSpace\n  // start of code block of updateSpace\n  // ContractCompiler::appendStackVariableInitialisation(Space storage space)\n      dup3\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      mul\n      dup1\n      calldatasize\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      dup4\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n  // newPushTag tag_337, desc: \n      pop\n      swap1\n  // Jump to tag_336\n      pop\n    tag_374:\n      pop\n        /* \"contracts/Vitasensus.solpp\":17678:17707  votes = new uint256[](length) */\n      swap3\n      pop\n        /* \"contracts/Vitasensus.solpp\":17736:17742  length */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":17722:17743  new uint256[](length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_375\n  // newTag tag_338, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // end of CompilerUtils::storeInMemory()\n      0x00\n      mstore\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_375:\n      0x40\n  // CompilerUtils::convertType(): struct Vitasensus.Space storage ref -> struct Vitasensus.Space storage pointer\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackVariable(space)\n      mload\n      swap1\n  // ExpressionCompiler::appendVariable(name, name)\n      dup1\n  // ExpressionCompiler::visit(_memberAccess=space.name)\n  // ExpressionCompiler::appendVariable(space, space)\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      add\n      0x40\n      mstore\n  // end of CompilerUtils::convertType()\n      dup1\n      iszero\n  // CompilerUtils::popStackSlots(1)\n      tag_376\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(description, description)\n      jumpi\n  // ExpressionCompiler::visit(_memberAccess=space.description)\n  // ExpressionCompiler::appendVariable(space, space)\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n  // CompilerContext::callLowLevelFunction($copyArrayToStorage_t_string_memory_ptr_to_t_string_storage)\n  // newPushTag tag_339, desc: \n      add\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      swap2\n      pop\n      pop\n  // end of CompilerUtils::rotateStackUp()\n      swap1\n      pop\n    tag_376:\n  // CompilerUtils::popStackSlots(1)\n      pop\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(spaceToken, spaceToken)\n        /* \"contracts/Vitasensus.solpp\":17712:17743  choices = new uint256[](length) */\n      swap2\n  // ExpressionCompiler::visit(_memberAccess=space.token)\n  // ExpressionCompiler::appendVariable(space, space)\n      pop\n        /* \"contracts/Vitasensus.solpp\":17758:17771  uint256 index */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":17774:17778  skip */\n      dup7\n        /* \"contracts/Vitasensus.solpp\":17758:17778  uint256 index = skip */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":17748:18178  for (... */\n    tag_377:\n        /* \"contracts/Vitasensus.solpp\":17792:17814  _spacesProposalsVoters */\n      0x0a\n        /* \"contracts/Vitasensus.solpp\":17792:17823  _spacesProposalsVoters[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":17815:17822  spaceId */\n      dup11\n        /* \"contracts/Vitasensus.solpp\":17792:17823  _spacesProposalsVoters[spaceId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n  // CompilerUtils::copyToStackTop(4, 1)\n      dup2\n  // CompilerUtils::convertType(): tokenId -> tokenId\n      mstore\n      0x20\n  // end of CompilerUtils::convertType()\n      add\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":17792:17835  _spacesProposalsVoters[spaceId][proposalId] */\n      0x00\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/Vitasensus.solpp\":17824:17834  proposalId */\n      dup10\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(spaceTokenDecimals, spaceTokenDecimals)\n        /* \"contracts/Vitasensus.solpp\":17792:17835  _spacesProposalsVoters[spaceId][proposalId] */\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint8\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::convertType(): uint8 -> uint256\n      mstore\n      0x20\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=space.tokenDecimals)\n  // ExpressionCompiler::appendVariable(space, space)\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":17792:17842  _spacesProposalsVoters[spaceId][proposalId].length */\n      dup1\n      sload\n  // CompilerUtils::popStackSlots(1)\n      swap1\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(avatar, avatar)\n      pop\n  // ExpressionCompiler::visit(_memberAccess=space.avatar)\n  // ExpressionCompiler::appendVariable(space, space)\n        /* \"contracts/Vitasensus.solpp\":17784:17789  index */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":17784:17842  index < _spacesProposalsVoters[spaceId][proposalId].length */\n      lt\n        /* \"contracts/Vitasensus.solpp\":17784:17873  index < _spacesProposalsVoters[spaceId][proposalId].length &&... */\n      dup1\n      iszero\n      tag_380\n      jumpi\n      pop\n        /* \"contracts/Vitasensus.solpp\":17867:17872  limit */\n      dup6\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n        /* \"contracts/Vitasensus.solpp\":17860:17864  skip */\n      dup8\n        /* \"contracts/Vitasensus.solpp\":17860:17872  skip + limit */\n      tag_381\n      swap2\n  // end of CompilerUtils::convertType()\n      swap1\n      tag_97\n  // CompilerUtils::popStackSlots(1)\n      jump\t// in\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(website, website)\n    tag_381:  // return of Yul function checked_add_t_uint256\n  // ExpressionCompiler::visit(_memberAccess=space.website)\n  // ExpressionCompiler::appendVariable(space, space)\n        /* \"contracts/Vitasensus.solpp\":17851:17856  index */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":17851:17873  index < (skip + limit) */\n      lt\n        /* \"contracts/Vitasensus.solpp\":17784:17873  index < _spacesProposalsVoters[spaceId][proposalId].length &&... */\n    tag_380:\n        /* \"contracts/Vitasensus.solpp\":17748:18178  for (... */\n      iszero\n      tag_378\n      jumpi\n        /* \"contracts/Vitasensus.solpp\":17898:17911  address voter */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":17914:17936  _spacesProposalsVoters */\n      0x0a\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n        /* \"contracts/Vitasensus.solpp\":17914:17945  _spacesProposalsVoters[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":17937:17944  spaceId */\n      dup12\n        /* \"contracts/Vitasensus.solpp\":17914:17945  _spacesProposalsVoters[spaceId] */\n      dup2\n  // end of CompilerUtils::convertType()\n      mstore\n      0x20\n  // CompilerUtils::popStackSlots(1)\n      add\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(1)\n      swap1\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      dup2\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      mstore\n  // CompilerUtils::popStackSlots(1)\n      0x20\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 7 parameters and 0 return parameters\n  //  current stackLayout [0 -1 -1 -1 -1 -1 -1 -1 ]\n      add\n  //  current stackLayout [0 -1 -1 -1 -1 -1 -1 ]\n      0x00\n  //  current stackLayout [0 -1 -1 -1 -1 -1 ]\n      blake2b\n  //  current stackLayout [0 -1 -1 -1 -1 ]\n        /* \"contracts/Vitasensus.solpp\":17914:17957  _spacesProposalsVoters[spaceId][proposalId] */\n      0x00\n  //  current stackLayout [0 -1 -1 -1 ]\n        /* \"contracts/Vitasensus.solpp\":17946:17956  proposalId */\n      dup11\n  //  current stackLayout [0 -1 -1 ]\n        /* \"contracts/Vitasensus.solpp\":17914:17957  _spacesProposalsVoters[spaceId][proposalId] */\n      dup2\n  //  current stackLayout [0 -1 ]\n      mstore\n      0x20\n      add\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(uint256)\n      swap1\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function getSpacesCount() external view returns (uint256) {\n\t\treturn _spaces.length;\n\t}\n  // newTag tag_340, desc: return tag of getSpacesCount\n  // start of code block of getSpacesCount\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::visit(_memberAccess=_spaces.length)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":17958:17963  index */\n      dup3\n  // CompilerUtils::moveToStackVariable()\n        /* \"contracts/Vitasensus.solpp\":17914:17964  _spacesProposalsVoters[spaceId][proposalId][index] */\n      dup2\n      sload\n  // CompilerUtils::popAndJump(toHeight=2, jumpTo=tag_339:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      dup2\n      lt\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      tag_382\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 0 parameters and 1 return parameters\n  //  current stackLayout [1 0 ]\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n  // newTag tag_341, desc: return tag of renounceOwnership\n  // start of code block of renounceOwnership\n  // newPushTag tag_342, desc: return of function function () view\n      mstore\n      mstore(0x04, 0x32)\n      0x24\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendModifierOrFunctionCode() for function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n  // newTag tag_343, desc: return tag of renounceOwnership\n  // start of code block of renounceOwnership\n  // newPushTag tag_344, desc: return of function function (address)\n      revert\n    tag_382:\n  // CompilerUtils::convertType(): int_const 0 -> address\n  // end of CompilerUtils::convertType()\n      swap1\n      0x00\n      mstore\n      0x20\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      blake2b\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      add\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 0 parameters and 0 return parameters\n      0x00\n      swap1\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function createSpace(\n\t\tbytes32 name,\n\t\tstring memory description,\n\t\tvitetoken spaceToken,\n\t\tbytes32 avatar,\n\t\tbytes32 website,\n\t\tuint256 spaceTokenDecimals\n\t) external payable {\n\t\trequire(msg.value == SPACE_CREATION_FEE && msg.token == VITE_TOKEN_ID);\n\t\tuint256 spaceId = _spaces.length;\n\t\tSpace memory space;\n\t\tspace.name = name;\n\t\tspace.description = description;\n\t\tspace.token = spaceToken;\n\t\tspace.avatar = avatar;\n\t\tspace.website = website;\n\t\tspace.tokenDecimals = spaceTokenDecimals;\n\t\tspace.createdTimestamp = block.timestamp;\n\n\t\t_spaces.push(space);\n\t\t_spaceSettings.push();\n\n\t\t_spacesOwners[spaceId] = msg.sender;\n\t\temit SpaceCreated(spaceId, spaceToken, name, avatar, description);\n\t\tjoinSpace(spaceId);\n\t}\n  // newTag tag_345, desc: return tag of createSpace\n  // start of code block of createSpace\n  // ExpressionCompiler::appendVariable(SPACE_CREATION_FEE, SPACE_CREATION_FEE)\n      sload\n  // CompilerUtils::convertType(): int_const 100000000000000000000000 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=msg.value)\n      swap1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      0x0100\n      exp\n      swap1\n  // newPushTag tag_346, desc: \n      div\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // Jump to tag_345\n      and\n  // ExpressionCompiler::appendVariable(VITE_TOKEN_ID, VITE_TOKEN_ID)\n        /* \"contracts/Vitasensus.solpp\":17898:17964  address voter = _spacesProposalsVoters[spaceId][proposalId][index] */\n      swap1\n  // CompilerUtils::convertType(): tokenId -> tokenId\n      pop\n        /* \"contracts/Vitasensus.solpp\":17993:17998  voter */\n      dup1\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=msg.token)\n        /* \"contracts/Vitasensus.solpp\":17970:17976  voters */\n      dup7\n  // CompilerUtils::convertType(): tokenId -> tokenId\n        /* \"contracts/Vitasensus.solpp\":17985:17989  skip */\n      dup10\n        /* \"contracts/Vitasensus.solpp\":17977:17982  index */\n      dup5\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":17977:17989  index - skip */\n      tag_384\n      swap2\n      swap1\n      tag_129\n  // newPushTag tag_347, desc: \n      jump\t// in\n    tag_384:  // return of Yul function checked_sub_t_uint256\n  // Jump to tag_346\n        /* \"contracts/Vitasensus.solpp\":17970:17990  voters[index - skip] */\n      dup2\n      mload\n      dup2\n      lt\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendStackVariableInitialisation(uint256 spaceId)\n      tag_385\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::visit(_memberAccess=_spaces.length)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n  // CompilerUtils::moveToStackVariable(spaceId)\n      0x24\n      0x00\n  // ContractCompiler::appendStackVariableInitialisation(Space memory space)\n  // CompilerContext::callLowLevelFunction($pushZeroValue_t_struct$_Space_$92_memory_ptr)\n  // newPushTag tag_348, desc: \n      revert\n  // CompilerUtils::moveIntoStack(0, 1)\n  // newTag tag_349, desc: $pushZeroValue_t_struct$_Space_$92_memory_ptr\n    tag_385:\n      0x20\n      mul\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::appendVariable(name, name)\n      0x20\n  // ExpressionCompiler::visit(_memberAccess=space.name)\n  // ExpressionCompiler::appendVariable(space, space)\n      add\n      add\n        /* \"contracts/Vitasensus.solpp\":17970:17998  voters[index - skip] = voter */\n      swap1\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      and\n      swap1\n      dup2\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n      and\n  // CompilerUtils::storeInMemoryDynamic(type=bytes32, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=bytes32, ...)\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      dup2\n      mstore\n      pop\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      pop\n        /* \"contracts/Vitasensus.solpp\":18026:18047  _spacesProposalsVotes */\n      0x09\n  // bytes of type bytes32: 32\n        /* \"contracts/Vitasensus.solpp\":18026:18056  _spacesProposalsVotes[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":18048:18055  spaceId */\n      dup12\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":18026:18056  _spacesProposalsVotes[spaceId] */\n      dup2\n  // CompilerUtils::popStackSlots(1)\n      mstore\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(description, description)\n      0x20\n  // ExpressionCompiler::visit(_memberAccess=space.description)\n  // ExpressionCompiler::appendVariable(space, space)\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n  // CompilerUtils::popStackSlots(1)\n      0x00\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(spaceToken, spaceToken)\n      blake2b\n  // ExpressionCompiler::visit(_memberAccess=space.token)\n  // ExpressionCompiler::appendVariable(space, space)\n        /* \"contracts/Vitasensus.solpp\":18026:18068  _spacesProposalsVotes[spaceId][proposalId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":18057:18067  proposalId */\n      dup11\n        /* \"contracts/Vitasensus.solpp\":18026:18068  _spacesProposalsVotes[spaceId][proposalId] */\n      dup2\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      mstore\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): tokenId -> tokenId\n      0x20\n      add\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      swap1\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n      dup2\n  // CompilerUtils::storeInMemoryDynamic(type=tokenId, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=tokenId, ...)\n  // CompilerUtils::convertType(): tokenId -> tokenId\n      mstore\n      0x20\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      0x00\n  // bytes of type tokenId: 32\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":18026:18075  _spacesProposalsVotes[spaceId][proposalId][voter] */\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":18069:18074  voter */\n      dup3\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/Vitasensus.solpp\":18026:18075  _spacesProposalsVotes[spaceId][proposalId][voter] */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(avatar, avatar)\n      and\n  // ExpressionCompiler::visit(_memberAccess=space.avatar)\n  // ExpressionCompiler::appendVariable(space, space)\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      mstore\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      0x20\n      add\n      swap1\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      dup2\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n      mstore\n  // CompilerUtils::storeInMemoryDynamic(type=bytes32, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=bytes32, ...)\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      0x20\n      add\n      0x00\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":18026:18081  _spacesProposalsVotes[spaceId][proposalId][voter].votes */\n      0x01\n  // bytes of type bytes32: 32\n      add\n      sload\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":18004:18009  votes */\n      dup6\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/Vitasensus.solpp\":18018:18022  skip */\n      dup10\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(website, website)\n        /* \"contracts/Vitasensus.solpp\":18010:18015  index */\n      dup5\n  // ExpressionCompiler::visit(_memberAccess=space.website)\n  // ExpressionCompiler::appendVariable(space, space)\n        /* \"contracts/Vitasensus.solpp\":18010:18022  index - skip */\n      tag_386\n      swap2\n      swap1\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      tag_129\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      jump\t// in\n    tag_386:  // return of Yul function checked_sub_t_uint256\n        /* \"contracts/Vitasensus.solpp\":18004:18023  votes[index - skip] */\n      dup2\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      mload\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n      dup2\n  // CompilerUtils::storeInMemoryDynamic(type=bytes32, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=bytes32, ...)\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      lt\n      tag_387\n      jumpi\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n  // bytes of type bytes32: 32\n      mstore\n      0x32\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x04\n  // CompilerUtils::popStackSlots(1)\n      mstore\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(spaceTokenDecimals, spaceTokenDecimals)\n      0x24\n  // ExpressionCompiler::visit(_memberAccess=space.tokenDecimals)\n  // ExpressionCompiler::appendVariable(space, space)\n      0x00\n      revert\n    tag_387:\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      0x20\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      mul\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n      0x20\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      add\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":18004:18081  votes[index - skip] = _spacesProposalsVotes[spaceId][proposalId][voter].votes */\n      dup2\n      dup2\n  // end of CompilerUtils::storeInMemoryDynamic()\n      mstore\n  // CompilerUtils::popStackSlots(1)\n      pop\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=block.timestamp)\n      pop\n  // ExpressionCompiler::visit(_memberAccess=space.createdTimestamp)\n  // ExpressionCompiler::appendVariable(space, space)\n        /* \"contracts/Vitasensus.solpp\":18111:18132  _spacesProposalsVotes */\n      0x09\n        /* \"contracts/Vitasensus.solpp\":18111:18141  _spacesProposalsVotes[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":18133:18140  spaceId */\n      dup12\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n        /* \"contracts/Vitasensus.solpp\":18111:18141  _spacesProposalsVotes[spaceId] */\n      dup2\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      mstore\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n      0x20\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      swap1\n  // bytes of type uint256: 32\n      dup2\n      mstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x20\n  // CompilerUtils::popStackSlots(1)\n      add\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=_spaces.push)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":18111:18153  _spacesProposalsVotes[spaceId][proposalId] */\n      0x00\n  // ExpressionCompiler::appendVariable(space, space)\n        /* \"contracts/Vitasensus.solpp\":18142:18152  proposalId */\n      dup11\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n        /* \"contracts/Vitasensus.solpp\":18111:18153  _spacesProposalsVotes[spaceId][proposalId] */\n      dup2\n  // end of CompilerUtils::rotateStackDown()\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":18111:18160  _spacesProposalsVotes[spaceId][proposalId][voter] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":18154:18159  voter */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":18111:18160  _spacesProposalsVotes[spaceId][proposalId][voter] */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n  // newTag tag_350, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup2\n      mstore\n  // end of CompilerUtils::storeInMemory()\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n  // CompilerUtils::moveToStackTop(2, 1)\n  // CompilerUtils::moveIntoStack(1, 2)\n  // CompilerUtils::rotateStackDown(3)\n        /* \"contracts/Vitasensus.solpp\":18111:18172  _spacesProposalsVotes[spaceId][proposalId][voter].choiceIndex */\n      0x00\n      add\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::moveToStackTop(2, 1)\n  // CompilerUtils::moveIntoStack(1, 2)\n  // CompilerUtils::rotateStackDown(3)\n      sload\n        /* \"contracts/Vitasensus.solpp\":18087:18094  choices */\n      dup5\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::moveToStackTop(2, 1)\n  // CompilerUtils::moveIntoStack(1, 2)\n  // CompilerUtils::rotateStackDown(3)\n        /* \"contracts/Vitasensus.solpp\":18103:18107  skip */\n      dup10\n        /* \"contracts/Vitasensus.solpp\":18095:18100  index */\n      dup5\n  // end of CompilerUtils::rotateStackDown()\n        /* \"contracts/Vitasensus.solpp\":18095:18107  index - skip */\n      tag_388\n      swap2\n      swap1\n      tag_129\n  // CompilerUtils::loadFromMemoryHelper()\n      jump\t// in\n    tag_388:  // return of Yul function checked_sub_t_uint256\n        /* \"contracts/Vitasensus.solpp\":18087:18108  choices[index - skip] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_389\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n  // end of CompilerUtils::convertType()\n      mstore\n      mstore(0x04, 0x32)\n      0x24\n  // CompilerUtils::loadFromMemoryHelper()\n      0x00\n      revert\n    tag_389:\n      0x20\n      mul\n      0x20\n      add\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      add\n        /* \"contracts/Vitasensus.solpp\":18087:18172  choices[index - skip] = _spacesProposalsVotes[spaceId][proposalId][voter].choiceIndex */\n      dup2\n      dup2\n  // end of CompilerUtils::convertType()\n      mstore\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":17748:18178  for (... */\n      pop\n        /* \"contracts/Vitasensus.solpp\":17879:17886  index++ */\n      dup1\n  // CompilerUtils::loadFromMemoryHelper()\n      dup1\n      tag_390\n      swap1\n      tag_64\n      jump\t// in\n    tag_390:  // return of Yul function increment_t_uint256\n      swap2\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":17748:18178  for (... */\n      tag_377\n  // end of CompilerUtils::convertType()\n      jump\n    tag_378:\n      pop\n        /* \"contracts/Vitasensus.solpp\":17410:18182  if (skip < _spacesProposalsVoters[spaceId][proposalId].length) {... */\n      pop\n    tag_366:\n        /* \"contracts/Vitasensus.solpp\":17200:18185  function getSpaceProposalVotes(... */\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":11715:11842  function getCreationTimestamp(uint256 spaceId) external view returns (uint256) {... */\n    tag_36:  // declaration of function getCreationTimestamp\n        /* \"contracts/Vitasensus.solpp\":11785:11792  uint256 */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":11805:11812  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":11813:11820  spaceId */\n      dup3\n  // CompilerContext::callLowLevelFunction($copyArrayToStorage_t_string_memory_ptr_to_t_string_storage)\n  // newPushTag tag_351, desc: \n        /* \"contracts/Vitasensus.solpp\":11805:11821  _spaces[spaceId] */\n      dup2\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      sload\n      dup2\n      lt\n  // end of CompilerUtils::rotateStackUp()\n      tag_392\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      0x32\n      0x04\n  // CompilerUtils::loadFromMemoryHelper()\n      mstore\n      revert(0x00, 0x24)\n    tag_392:\n      swap1\n      0x00\n      mstore\n      blake2b(0x00, 0x20)\n      swap1\n      0x07\n      mul\n      add\n  // CompilerUtils::copyToStackTop(4, 1)\n        /* \"contracts/Vitasensus.solpp\":11805:11838  _spaces[spaceId].createdTimestamp */\n      0x06\n  // CompilerUtils::convertType(): tokenId -> tokenId\n      add\n      sload\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":11798:11838  return _spaces[spaceId].createdTimestamp */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":11715:11842  function getCreationTimestamp(uint256 spaceId) external view returns (uint256) {... */\n      swap2\n      swap1\n  // CompilerUtils::popStackSlots(1)\n      pop\n  // end of CompilerUtils::popStackSlots()\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":13658:13777  function getSpaceAdmins(uint256 spaceId) external view returns (address[] memory) {... */\n    tag_37:  // declaration of function getSpaceAdmins\n        /* \"contracts/Vitasensus.solpp\":13722:13738  address[] memory */\n      0x60\n  // CompilerUtils::loadFromMemoryHelper()\n        /* \"contracts/Vitasensus.solpp\":13751:13764  _spacesAdmins */\n      0x05\n        /* \"contracts/Vitasensus.solpp\":13751:13773  _spacesAdmins[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":13765:13772  spaceId */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":13751:13773  _spacesAdmins[spaceId] */\n      dup2\n      mstore\n      0x20\n      add\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n  // CompilerUtils::loadFromMemoryHelper()\n      0x00\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":13744:13773  return _spacesAdmins[spaceId] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      0x20\n      add\n  // CompilerUtils::popStackSlots(2)\n      mload(0x40)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=_spaceSettings.push)\n  // ExpressionCompiler::appendVariable(_spaceSettings, _spaceSettings)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n  // newTag tag_352, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      iszero\n      tag_395\n  // end of CompilerUtils::storeInMemory()\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      0x20\n  // CompilerUtils::popStackSlots(1)\n      0x00\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n      blake2b\n  // ExpressionCompiler::appendVariable(_spacesOwners, _spacesOwners)\n      swap1\n    tag_396:\n      dup2\n      0x00\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      swap1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      sload\n      swap1\n  // bytes of type uint256: 32\n      0x0100\n      exp\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap1\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      div\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // bytes of type uint256: 32\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // end of CompilerUtils::storeInMemoryDynamic()\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_396\n  // CompilerUtils::copyToStackTop(4, 1)\n      jumpi\n  // CompilerUtils::convertType(): address -> address\n    tag_395:\n      pop\n  // end of CompilerUtils::convertType()\n      pop\n      pop\n      pop\n      pop\n  // CompilerUtils::popStackSlots(1)\n      swap1\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(name, name)\n      pop\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n        /* \"contracts/Vitasensus.solpp\":13658:13777  function getSpaceAdmins(uint256 spaceId) external view returns (address[] memory) {... */\n      swap2\n      swap1\n      pop\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(spaceToken, spaceToken)\n      jump\t// out\n  // CompilerUtils::convertType(): tokenId -> tokenId\n        /* \"contracts/Vitasensus.solpp\":5274:5444  function isProposalExecuted(uint256 spaceId, uint256 proposalId) public view returns (bool) {... */\n    tag_38:  // declaration of function isProposalExecuted\n        /* \"contracts/Vitasensus.solpp\":5360:5364  bool */\n      0x00\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":5420:5440  ProposalState.Closed */\n      0x01\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":5377:5440  _getProposal(spaceId, proposalId).state == ProposalState.Closed */\n      dup1\n  // ExpressionCompiler::appendVariable(avatar, avatar)\n      dup2\n  // ExpressionCompiler::appendVariable(description, description)\n      gt\n  // CompilerUtils::fetchFreeMemoryPointer()\n      iszero\n      tag_398\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             bytes32\n  //             string memory\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_bytes32_t_string_memory_ptr__to_t_bytes32_t_string_memory_ptr__fromStack_reversed, _inArgs=3, _outArgs=1)\n  // newPushTag tag_353, desc: return of Yul function abi_encode_tuple_t_bytes32_t_string_memory_ptr__to_t_bytes32_t_string_memory_ptr__fromStack_reversed\n      jumpi\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_354, desc: abi_encode_tuple_t_bytes32_t_string_memory_ptr__to_t_bytes32_t_string_memory_ptr__fromStack_reversed\n      mstore(0x04, 0x21)\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x24\n      0x00\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      revert\n    tag_398:\n        /* \"contracts/Vitasensus.solpp\":5377:5410  _getProposal(spaceId, proposalId) */\n      tag_399\n        /* \"contracts/Vitasensus.solpp\":5390:5397  spaceId */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":5399:5409  proposalId */\n      dup5\n  // newPushTag tag_355, desc: return of function function (uint256)\n        /* \"contracts/Vitasensus.solpp\":5377:5389  _getProposal */\n      tag_67\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":5377:5410  _getProposal(spaceId, proposalId) */\n      jump\t// in\n    tag_399:  // return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n        /* \"contracts/Vitasensus.solpp\":5377:5416  _getProposal(spaceId, proposalId).state */\n      0x09\n      add\n      0x00\n      swap1\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(2)\n      sload\n      swap1\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      0x0100\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 6 parameters and 0 return parameters\n  //  current stackLayout [0 -1 -1 -1 -1 -1 -1 ]\n      exp\n  //  current stackLayout [0 -1 -1 -1 -1 -1 ]\n      swap1\n  //  current stackLayout [0 -1 -1 -1 -1 ]\n      div\n  //  current stackLayout [0 -1 -1 -1 ]\n      0xff\n  //  current stackLayout [0 -1 -1 ]\n      and\n  //  current stackLayout [0 -1 ]\n        /* \"contracts/Vitasensus.solpp\":5377:5440  _getProposal(spaceId, proposalId).state == ProposalState.Closed */\n      0x01\n      dup2\n      gt\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function executeProposal(uint256 spaceId, uint256 proposalId)\n\t\texternal\n\t\trequireProposalClosed(spaceId, proposalId)\n\t\trequireProposalNotExecuted(spaceId, proposalId)\n\t{\n\t\tuint256 winningChoiceIndex = getWinningChoiceIndex(spaceId, proposalId);\n\t\t_executeProposal(spaceId, proposalId, winningChoiceIndex);\n\t}\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      iszero\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      tag_400\n  // newTag tag_356, desc: return tag of executeProposal\n  // start of code block of executeProposal\n  // newPushTag tag_357, desc: return of function function (uint256,uint256) view\n      jumpi\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      0x00\n  // newTag tag_358, desc: declaration of function _requireProposalClosed\n      mstore\n      mstore(0x04, 0x21)\n      0x24\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendModifierOrFunctionCode() for function executeProposal(uint256 spaceId, uint256 proposalId)\n\t\texternal\n\t\trequireProposalClosed(spaceId, proposalId)\n\t\trequireProposalNotExecuted(spaceId, proposalId)\n\t{\n\t\tuint256 winningChoiceIndex = getWinningChoiceIndex(spaceId, proposalId);\n\t\t_executeProposal(spaceId, proposalId, winningChoiceIndex);\n\t}\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      0x00\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      revert\n  // newTag tag_359, desc: return tag of executeProposal\n  // start of code block of executeProposal\n  // newPushTag tag_360, desc: return of function function (uint256,uint256) view returns (bool)\n    tag_400:\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      eq\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n        /* \"contracts/Vitasensus.solpp\":5370:5440  return _getProposal(spaceId, proposalId).state == ProposalState.Closed */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":5274:5444  function isProposalExecuted(uint256 spaceId, uint256 proposalId) public view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":11281:11510  function redeemSpaceCreationFee(uint256 spaceId) external {... */\n    tag_39:  // declaration of function redeemSpaceCreationFee\n        /* \"contracts/Vitasensus.solpp\":11351:11385  canRedeemSpaceCreationFee(spaceId) */\n      tag_402\n  // newPushTag tag_361, desc: \n        /* \"contracts/Vitasensus.solpp\":11377:11384  spaceId */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":11351:11376  canRedeemSpaceCreationFee */\n      tag_403\n  // Jump to tag_360\n        /* \"contracts/Vitasensus.solpp\":11351:11385  canRedeemSpaceCreationFee(spaceId) */\n      jump\t// in\n    tag_402:  // return of function function (uint256) view returns (bool)\n        /* \"contracts/Vitasensus.solpp\":11343:11386  require(canRedeemSpaceCreationFee(spaceId)) */\n      tag_404\n      jumpi\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendModifierOrFunctionCode() for function executeProposal(uint256 spaceId, uint256 proposalId)\n\t\texternal\n\t\trequireProposalClosed(spaceId, proposalId)\n\t\trequireProposalNotExecuted(spaceId, proposalId)\n\t{\n\t\tuint256 winningChoiceIndex = getWinningChoiceIndex(spaceId, proposalId);\n\t\t_executeProposal(spaceId, proposalId, winningChoiceIndex);\n\t}\n  // newTag tag_362, desc: return tag of executeProposal\n  // start of code block of executeProposal\n  // ContractCompiler::appendStackVariableInitialisation(uint256 winningChoiceIndex)\n      0x00\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // newPushTag tag_363, desc: return of function function (uint256,uint256) view returns (uint256)\n      dup1\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      revert\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n    tag_404:\n        /* \"contracts/Vitasensus.solpp\":11426:11427  0 */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":11390:11397  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":11398:11405  spaceId */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":11390:11406  _spaces[spaceId] */\n      dup2\n      sload\n  // CompilerUtils::moveToStackVariable(winningChoiceIndex)\n      dup2\n      lt\n  // newPushTag tag_364, desc: return of function function (uint256,uint256,uint256)\n      tag_405\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      jumpi\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // ExpressionCompiler::appendVariable(winningChoiceIndex, winningChoiceIndex)\n      0x00\n  // newTag tag_365, desc: declaration of function _executeProposal\n      mstore\n      mstore(0x04, 0x32)\n      0x24\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(1)\n      0x00\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      revert\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n    tag_405:\n  // CompilerUtils::popStackSlots(2)\n      swap1\n      0x00\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      mstore\n  // CompilerUtils::popStackSlots(2)\n      0x20\n      0x00\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 0 return parameters\n  //  current stackLayout [0 -1 -1 ]\n      blake2b\n  //  current stackLayout [0 -1 ]\n      swap1\n      0x07\n      mul\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(address[] memory voters)\n  // CompilerUtils::pushZeroPointer()\n      add\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(uint256[] memory votes)\n  // CompilerUtils::pushZeroPointer()\n        /* \"contracts/Vitasensus.solpp\":11390:11423  _spaces[spaceId].createdTimestamp */\n      0x06\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendStackVariableInitialisation(uint256[] memory choices)\n  // CompilerUtils::pushZeroPointer()\n      add\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function getSpaceProposalVotes(\n\t\tuint256 spaceId,\n\t\tuint256 proposalId,\n\t\tuint256 skip,\n\t\tuint256 limit\n\t) external view returns (address[] memory voters, uint256[] memory votes, uint256[] memory choices) {\n\t\tif (skip < _spacesProposalsVoters[spaceId][proposalId].length) {\n\t\t\tuint256 length = (_spacesProposalsVoters[spaceId][proposalId].length - skip) > limit\n\t\t\t\t? limit\n\t\t\t\t: _spacesProposalsVoters[spaceId][proposalId].length - skip;\n\t\t\tvoters = new address[](length);\n\t\t\tvotes = new uint256[](length);\n\t\t\tchoices = new uint256[](length);\n\t\t\tfor (\n\t\t\t\tuint256 index = skip;\n\t\t\t\tindex < _spacesProposalsVoters[spaceId][proposalId].length &&\n\t\t\t\t\tindex < (skip + limit);\n\t\t\t\tindex++\n\t\t\t) {\n\t\t\t\taddress voter = _spacesProposalsVoters[spaceId][proposalId][index];\n\t\t\t\tvoters[index - skip] = voter;\n\t\t\t\tvotes[index - skip] = _spacesProposalsVotes[spaceId][proposalId][voter].votes;\n\t\t\t\tchoices[index - skip] = _spacesProposalsVotes[spaceId][proposalId][voter].choiceIndex;\n\t\t\t}\n\t\t}\n\t}\n  // newTag tag_366, desc: return tag of getSpaceProposalVotes\n  // start of code block of getSpaceProposalVotes\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposalsVoters[spaceId][proposalId].length)\n  // ExpressionCompiler::appendVariable(_spacesProposalsVoters, _spacesProposalsVoters)\n        /* \"contracts/Vitasensus.solpp\":11390:11427  _spaces[spaceId].createdTimestamp = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/Vitasensus.solpp\":11439:11452  _spacesOwners */\n      0x08\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":11439:11461  _spacesOwners[spaceId] */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":11453:11460  spaceId */\n      dup3\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":11439:11461  _spacesOwners[spaceId] */\n      dup2\n      mstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x20\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      swap1\n  // bytes of type uint256: 32\n      dup2\n      mstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x20\n      add\n      0x00\n      blake2b\n      0x00\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      swap1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      sload\n      swap1\n  // bytes of type uint256: 32\n      0x0100\n      exp\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap1\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      div\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // bytes of type uint256: 32\n      and\n        /* \"contracts/Vitasensus.solpp\":11431:11471  payable(_spacesOwners[spaceId]).transfer */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // end of CompilerUtils::storeInMemoryDynamic()\n      and\n        /* \"contracts/Vitasensus.solpp\":951:981  \"tti_5649544520544f4b454e6e40\" */\n      0x5649544520544f4b454e\n        /* \"contracts/Vitasensus.solpp\":11431:11506  payable(_spacesOwners[spaceId]).transfer(VITE_TOKEN_ID, SPACE_CREATION_FEE) */\n      0xffffffffffffffffffff\n      and\n        /* \"contracts/Vitasensus.solpp\":1029:1044  100000 * 10**18 */\n      0x152d02c7e14af6800000\n        /* \"contracts/Vitasensus.solpp\":11431:11506  payable(_spacesOwners[spaceId]).transfer(VITE_TOKEN_ID, SPACE_CREATION_FEE) */\n      mload(0x40)\n      0x00\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(skip, skip)\n      0x40\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mload\n      swap1\n  // newPushTag tag_367, desc: \n      pop\n      dup1\n  // Jump to tag_366\n  // ContractCompiler::appendStackVariableInitialisation(uint256 length)\n      dup3\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::appendVariable(limit, limit)\n      sub\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(skip, skip)\n      swap1\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposalsVoters[spaceId][proposalId].length)\n  // ExpressionCompiler::appendVariable(_spacesProposalsVoters, _spacesProposalsVoters)\n      dup4\n      dup6\n      dup8\n      call\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      pop\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      pop\n      pop\n  // bytes of type uint256: 32\n      pop\n        /* \"contracts/Vitasensus.solpp\":11281:11510  function redeemSpaceCreationFee(uint256 spaceId) external {... */\n      pop\n  // end of CompilerUtils::storeInMemoryDynamic()\n      jump\t// out\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/IterableMapping.solpp\":1990:2091   */\n    tag_43:  // declaration of function size\n        /* \"contracts/IterableMapping.solpp\":2045:2049   */\n      0x00\n  // bytes of type uint256: 32\n        /* \"contracts/IterableMapping.solpp\":2068:2072   */\n      dup2\n        /* \"contracts/IterableMapping.solpp\":2068:2077   */\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n      add\n        /* \"contracts/IterableMapping.solpp\":2068:2084   */\n      dup1\n      sload\n      swap1\n      pop\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n        /* \"contracts/IterableMapping.solpp\":2061:2084   */\n      swap1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      pop\n        /* \"contracts/IterableMapping.solpp\":1990:2091   */\n      swap2\n  // bytes of type uint256: 32\n      swap1\n      pop\n  // end of CompilerUtils::storeInMemoryDynamic()\n      jump\t// out\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":5447:5605  function _getProposal(uint256 spaceId, uint256 proposalId)... */\n    tag_67:  // declaration of function _getProposal\n        /* \"contracts/Vitasensus.solpp\":5534:5550  Proposal storage */\n      0x00\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":5564:5580  _spacesProposals */\n      0x03\n        /* \"contracts/Vitasensus.solpp\":5564:5589  _spacesProposals[spaceId] */\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":5581:5588  spaceId */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":5564:5589  _spacesProposals[spaceId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_368, desc: return of Yul function checked_sub_t_uint256\n      0x20\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      add\n      0x00\n  // end of CompilerUtils::rotateStackUp()\n      blake2b\n        /* \"contracts/Vitasensus.solpp\":5590:5600  proposalId */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":5564:5601  _spacesProposals[spaceId][proposalId] */\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      sload\n  // newPushTag tag_369, desc: \n      dup2\n      lt\n  // Jump to tag_368\n  // ExpressionCompiler::appendVariable(skip, skip)\n      tag_410\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposalsVoters[spaceId][proposalId].length)\n  // ExpressionCompiler::appendVariable(_spacesProposalsVoters, _spacesProposalsVoters)\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      0x32\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x04\n      mstore\n  // bytes of type uint256: 32\n      0x24\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n      revert\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n    tag_410:\n      swap1\n  // bytes of type uint256: 32\n      0x00\n      mstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      blake2b(0x00, 0x20)\n      swap1\n      0x0a\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      mul\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n        /* \"contracts/Vitasensus.solpp\":5557:5601  return _spacesProposals[spaceId][proposalId] */\n      swap1\n  // bytes of type uint256: 32\n      pop\n        /* \"contracts/Vitasensus.solpp\":5447:5605  function _getProposal(uint256 spaceId, uint256 proposalId)... */\n      swap3\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap2\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      pop\n      pop\n  // bytes of type uint256: 32\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":4717:4956  function _isProposalActive(uint256 spaceId, uint256 proposalId) internal view returns (bool) {... */\n    tag_80:  // declaration of function _isProposalActive\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":4804:4808  bool */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":4871:4886  block.timestamp */\n      timestamp\n        /* \"contracts/Vitasensus.solpp\":4824:4857  _getProposal(spaceId, proposalId) */\n      tag_413\n        /* \"contracts/Vitasensus.solpp\":4837:4844  spaceId */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":4846:4856  proposalId */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":4824:4836  _getProposal */\n      tag_67\n        /* \"contracts/Vitasensus.solpp\":4824:4857  _getProposal(spaceId, proposalId) */\n      jump\t// in\n    tag_413:  // return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_370, desc: return of Yul function checked_sub_t_uint256\n        /* \"contracts/Vitasensus.solpp\":4824:4867  _getProposal(spaceId, proposalId).startTime */\n      0x02\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      add\n      0x00\n  // end of CompilerUtils::rotateStackUp()\n      swap1\n      sload\n      swap1\n  // newPushTag tag_371, desc: \n      0x0100\n      exp\n      swap1\n  // ExpressionCompiler::appendVariable(limit, limit)\n      div\n      0xffffffffffffffff\n  // CompilerUtils::moveToStackVariable(length)\n      and\n        /* \"contracts/Vitasensus.solpp\":4824:4886  _getProposal(spaceId, proposalId).startTime <= block.timestamp */\n      0xffffffffffffffff\n  // ExpressionCompiler::appendVariable(length, length)\n      and\n      gt\n      iszero\n        /* \"contracts/Vitasensus.solpp\":4824:4952  _getProposal(spaceId, proposalId).startTime <= block.timestamp &&... */\n      dup1\n      iszero\n  // newPushTag tag_372, desc: \n      tag_414\n      jumpi\n  // Jump to tag_371\n      pop\n        /* \"contracts/Vitasensus.solpp\":4937:4952  block.timestamp */\n      timestamp\n        /* \"contracts/Vitasensus.solpp\":4893:4926  _getProposal(spaceId, proposalId) */\n      tag_415\n        /* \"contracts/Vitasensus.solpp\":4906:4913  spaceId */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":4915:4925  proposalId */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":4893:4905  _getProposal */\n      tag_67\n        /* \"contracts/Vitasensus.solpp\":4893:4926  _getProposal(spaceId, proposalId) */\n      jump\t// in\n    tag_415:  // return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n        /* \"contracts/Vitasensus.solpp\":4893:4934  _getProposal(spaceId, proposalId).endTime */\n      0x02\n      add\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x08\n      swap1\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/Vitasensus.solpp\":4893:4952  _getProposal(spaceId, proposalId).endTime > block.timestamp */\n      0xffffffffffffffff\n      and\n      gt\n  // CompilerUtils::storeFreeMemoryPointer()\n        /* \"contracts/Vitasensus.solpp\":4824:4952  _getProposal(spaceId, proposalId).startTime <= block.timestamp &&... */\n    tag_414:\n        /* \"contracts/Vitasensus.solpp\":4814:4952  return... */\n      swap1\n  // end of CompilerUtils::storeFreeMemoryPointer()\n      pop\n        /* \"contracts/Vitasensus.solpp\":4717:4956  function _isProposalActive(uint256 spaceId, uint256 proposalId) internal view returns (bool) {... */\n      swap3\n  // newPushTag tag_373, desc: \n      swap2\n      pop\n  // Jump to tag_372\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":3134:3271  function _requireProposalActive(uint256 spaceId, uint256 proposalId) private view {... */\n    tag_83:  // declaration of function _requireProposalActive\n        /* \"contracts/Vitasensus.solpp\":3228:3266  _isProposalActive(spaceId, proposalId) */\n      tag_417\n        /* \"contracts/Vitasensus.solpp\":3246:3253  spaceId */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":3255:3265  proposalId */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":3228:3245  _isProposalActive */\n      tag_80\n        /* \"contracts/Vitasensus.solpp\":3228:3266  _isProposalActive(spaceId, proposalId) */\n      jump\t// in\n    tag_417:  // return of function function (uint256,uint256) view returns (bool)\n        /* \"contracts/Vitasensus.solpp\":3220:3267  require(_isProposalActive(spaceId, proposalId)) */\n      tag_418\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_418:\n        /* \"contracts/Vitasensus.solpp\":3134:3271  function _requireProposalActive(uint256 spaceId, uint256 proposalId) private view {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":2607:2752  function _requireSpaceAdmin(uint256 spaceId) private view {... */\n    tag_100:  // declaration of function _requireSpaceAdmin\n        /* \"contracts/Vitasensus.solpp\":2677:2710  isSpaceAdmin(spaceId, msg.sender) */\n      tag_420\n  // ExpressionCompiler::appendVariable(voters, voters)\n        /* \"contracts/Vitasensus.solpp\":2690:2697  spaceId */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":2699:2709  msg.sender */\n      caller\n        /* \"contracts/Vitasensus.solpp\":2677:2689  isSpaceAdmin */\n      tag_29\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/Vitasensus.solpp\":2677:2710  isSpaceAdmin(spaceId, msg.sender) */\n      jump\t// in\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(length, length)\n    tag_420:  // return of function function (uint256,address) view returns (bool)\n        /* \"contracts/Vitasensus.solpp\":2677:2747  isSpaceAdmin(spaceId, msg.sender) || isSpaceOwner(spaceId, msg.sender) */\n      dup1\n      tag_421\n      jumpi\n      pop\n  // newPushTag tag_374, desc: \n        /* \"contracts/Vitasensus.solpp\":2714:2747  isSpaceOwner(spaceId, msg.sender) */\n      tag_422\n        /* \"contracts/Vitasensus.solpp\":2727:2734  spaceId */\n      dup2\n  // Jump to tag_373\n        /* \"contracts/Vitasensus.solpp\":2736:2746  msg.sender */\n      caller\n        /* \"contracts/Vitasensus.solpp\":2714:2726  isSpaceOwner */\n      tag_16\n        /* \"contracts/Vitasensus.solpp\":2714:2747  isSpaceOwner(spaceId, msg.sender) */\n      jump\t// in\n    tag_422:  // return of function function (uint256,address) view returns (bool)\n        /* \"contracts/Vitasensus.solpp\":2677:2747  isSpaceAdmin(spaceId, msg.sender) || isSpaceOwner(spaceId, msg.sender) */\n    tag_421:\n        /* \"contracts/Vitasensus.solpp\":2669:2748  require(isSpaceAdmin(spaceId, msg.sender) || isSpaceOwner(spaceId, msg.sender)) */\n      tag_423\n      jumpi\n      0x00\n      dup1\n      revert\n  // CompilerUtils::fetchFreeMemoryPointer()\n    tag_423:\n        /* \"contracts/Vitasensus.solpp\":2607:2752  function _requireSpaceAdmin(uint256 spaceId) private view {... */\n      pop\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":2409:2517  function _requireSpaceOwner(uint256 spaceId) private view {... */\n    tag_106:  // declaration of function _requireSpaceOwner\n        /* \"contracts/Vitasensus.solpp\":2479:2512  isSpaceOwner(spaceId, msg.sender) */\n      tag_425\n        /* \"contracts/Vitasensus.solpp\":2492:2499  spaceId */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":2501:2511  msg.sender */\n      caller\n        /* \"contracts/Vitasensus.solpp\":2479:2491  isSpaceOwner */\n      tag_16\n        /* \"contracts/Vitasensus.solpp\":2479:2512  isSpaceOwner(spaceId, msg.sender) */\n      jump\t// in\n    tag_425:  // return of function function (uint256,address) view returns (bool)\n        /* \"contracts/Vitasensus.solpp\":2471:2513  require(isSpaceOwner(spaceId, msg.sender)) */\n      tag_426\n      jumpi\n      0x00\n  // CompilerUtils::storeFreeMemoryPointer()\n      dup1\n      revert\n  // end of CompilerUtils::storeFreeMemoryPointer()\n    tag_426:\n        /* \"contracts/Vitasensus.solpp\":2409:2517  function _requireSpaceOwner(uint256 spaceId) private view {... */\n      pop\n  // newPushTag tag_375, desc: \n      jump\t// out\n        /* \"contracts/IterableMapping.solpp\":558:659   */\n    tag_165:  // declaration of function size\n  // Jump to tag_374\n        /* \"contracts/IterableMapping.solpp\":613:617   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":636:640   */\n      dup2\n        /* \"contracts/IterableMapping.solpp\":636:645   */\n      0x00\n      add\n        /* \"contracts/IterableMapping.solpp\":636:652   */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/IterableMapping.solpp\":629:652   */\n      swap1\n      pop\n        /* \"contracts/IterableMapping.solpp\":558:659   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":2842:3041  function _requireSpaceMember(uint256 spaceId) private view {... */\n    tag_193:  // declaration of function _requireSpaceMember\n        /* \"contracts/Vitasensus.solpp\":2917:2951  isSpaceMember(spaceId, msg.sender) */\n      tag_429\n        /* \"contracts/Vitasensus.solpp\":2931:2938  spaceId */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":2940:2950  msg.sender */\n      caller\n        /* \"contracts/Vitasensus.solpp\":2917:2930  isSpaceMember */\n      tag_26\n        /* \"contracts/Vitasensus.solpp\":2917:2951  isSpaceMember(spaceId, msg.sender) */\n      jump\t// in\n  // ExpressionCompiler::appendVariable(votes, votes)\n    tag_429:  // return of function function (uint256,address) view returns (bool)\n        /* \"contracts/Vitasensus.solpp\":2917:2992  isSpaceMember(spaceId, msg.sender) ||... */\n      dup1\n      tag_430\n  // CompilerUtils::popStackSlots(1)\n      jumpi\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(length, length)\n      pop\n        /* \"contracts/Vitasensus.solpp\":2959:2992  isSpaceAdmin(spaceId, msg.sender) */\n      tag_431\n        /* \"contracts/Vitasensus.solpp\":2972:2979  spaceId */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":2981:2991  msg.sender */\n      caller\n        /* \"contracts/Vitasensus.solpp\":2959:2971  isSpaceAdmin */\n      tag_29\n  // newPushTag tag_376, desc: \n        /* \"contracts/Vitasensus.solpp\":2959:2992  isSpaceAdmin(spaceId, msg.sender) */\n      jump\t// in\n    tag_431:  // return of function function (uint256,address) view returns (bool)\n  // Jump to tag_375\n        /* \"contracts/Vitasensus.solpp\":2917:2992  isSpaceMember(spaceId, msg.sender) ||... */\n    tag_430:\n        /* \"contracts/Vitasensus.solpp\":2917:3033  isSpaceMember(spaceId, msg.sender) ||... */\n      dup1\n      tag_432\n      jumpi\n      pop\n        /* \"contracts/Vitasensus.solpp\":3000:3033  isSpaceOwner(spaceId, msg.sender) */\n      tag_433\n        /* \"contracts/Vitasensus.solpp\":3013:3020  spaceId */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":3022:3032  msg.sender */\n      caller\n        /* \"contracts/Vitasensus.solpp\":3000:3012  isSpaceOwner */\n      tag_16\n        /* \"contracts/Vitasensus.solpp\":3000:3033  isSpaceOwner(spaceId, msg.sender) */\n      jump\t// in\n  // CompilerUtils::fetchFreeMemoryPointer()\n    tag_433:  // return of function function (uint256,address) view returns (bool)\n        /* \"contracts/Vitasensus.solpp\":2917:3033  isSpaceMember(spaceId, msg.sender) ||... */\n    tag_432:\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n        /* \"contracts/Vitasensus.solpp\":2905:3037  require(... */\n      tag_434\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_434:\n        /* \"contracts/Vitasensus.solpp\":2842:3041  function _requireSpaceMember(uint256 spaceId) private view {... */\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1314:1442   */\n    tag_239:  // declaration of function _checkOwner\n        /* \"contracts/Ownable.sol\":1388:1398   */\n      caller\n        /* \"contracts/Ownable.sol\":1377:1398   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // CompilerUtils::storeFreeMemoryPointer()\n      and\n        /* \"contracts/Ownable.sol\":1377:1384   */\n      tag_436\n  // end of CompilerUtils::storeFreeMemoryPointer()\n        /* \"contracts/Ownable.sol\":1377:1382   */\n      tag_11\n        /* \"contracts/Ownable.sol\":1377:1384   */\n      jump\t// in\n  // newPushTag tag_377, desc: \n    tag_436:  // return of function function () view returns (address)\n        /* \"contracts/Ownable.sol\":1377:1398   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // Jump to tag_376\n      and\n      eq\n        /* \"contracts/Ownable.sol\":1369:1435   */\n      tag_437\n      jumpi\n      mload(0x40)\n      0x4b2bae7e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_438\n      swap1\n      tag_439\n      jump\t// in\n    tag_438:  // return of Yul function abi_encode_tuple_t_stringliteral_cddd93c73ab4b5d9275f4cce79da0f55e31063d273b20dce0238ee21763dd415__to_t_string_memory_ptr__fromStack_reversed\n      mload(0x40)\n      dup1\n      swap2\n  // ExpressionCompiler::appendVariable(choices, choices)\n      sub\n      swap1\n      revert\n  // CompilerUtils::popStackSlots(1)\n    tag_437:\n  // end of CompilerUtils::popStackSlots()\n  // newTag tag_378, desc: \n  // newTag tag_379, desc: \n  // newTag tag_380, desc: \n  // ContractCompiler::appendStackVariableInitialisation(uint256 index)\n        /* \"contracts/Ownable.sol\":1314:1442   */\n      jump\t// out\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::appendVariable(skip, skip)\n        /* \"contracts/Ownable.sol\":2386:2573   */\n    tag_245:  // declaration of function _transferOwnership\n  // CompilerUtils::moveToStackVariable(index)\n        /* \"contracts/Ownable.sol\":2459:2475   */\n      0x00\n        /* \"contracts/Ownable.sol\":2478:2484   */\n      dup1\n      0x00\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposalsVoters[spaceId][proposalId].length)\n  // ExpressionCompiler::appendVariable(_spacesProposalsVoters, _spacesProposalsVoters)\n      swap1\n      sload\n      swap1\n      0x0100\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      exp\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      div\n  // bytes of type uint256: 32\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Ownable.sol\":2459:2484   */\n      swap1\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      pop\n        /* \"contracts/Ownable.sol\":2503:2511   */\n      dup2\n  // bytes of type uint256: 32\n        /* \"contracts/Ownable.sol\":2494:2500   */\n      0x00\n      dup1\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Ownable.sol\":2494:2511   */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mul\n      not\n  // bytes of type uint256: 32\n      and\n      swap1\n  // end of CompilerUtils::storeInMemoryDynamic()\n      dup4\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n  // bytes of type uint256: 32\n      mul\n      or\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap1\n      sstore\n      pop\n        /* \"contracts/Ownable.sol\":2557:2565   */\n      dup2\n        /* \"contracts/Ownable.sol\":2526:2566   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ownable.sol\":2547:2555   */\n      dup2\n        /* \"contracts/Ownable.sol\":2526:2566   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(index, index)\n      and\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      0x9a78605a08fe53b920adfc51344c28abd504bd2378db8d7dcdd50e527cbebe57\n      mload(0x40)\n  // newPushTag tag_381, desc: \n      mload(0x40)\n  // Jump to tag_380\n      dup1\n  // ExpressionCompiler::appendVariable(limit, limit)\n      swap2\n  // ExpressionCompiler::appendVariable(skip, skip)\n      sub\n  // CompilerContext::callYulFunction(name=checked_add_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_382, desc: return of Yul function checked_add_t_uint256\n      swap1\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      log3\n        /* \"contracts/Ownable.sol\":2386:2573   */\n      pop\n  // end of CompilerUtils::rotateStackUp()\n      pop\n      jump\t// out\n        /* \"contracts/IterableMapping.solpp\":1026:1495   */\n    tag_249:  // declaration of function remove\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(index, index)\n        /* \"contracts/IterableMapping.solpp\":1097:1101   */\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/IterableMapping.solpp\":1097:1110   */\n      0x03\n      add\n        /* \"contracts/IterableMapping.solpp\":1097:1115   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":1111:1114   */\n      dup3\n        /* \"contracts/IterableMapping.solpp\":1097:1115   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // ContractCompiler::appendStackVariableInitialisation(address voter)\n      and\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::appendVariable(_spacesProposalsVoters, _spacesProposalsVoters)\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      0x20\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      swap1\n  // bytes of type uint256: 32\n      dup2\n      mstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x20\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      0x00\n  // bytes of type uint256: 32\n      blake2b\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      swap1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      div\n      0xff\n  // bytes of type uint256: 32\n      and\n        /* \"contracts/IterableMapping.solpp\":1092:1148   */\n      tag_442\n  // end of CompilerUtils::storeInMemoryDynamic()\n      jumpi\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/IterableMapping.solpp\":1131:1138   */\n      jump(tag_441)\n  // bytes of type uint256: 32\n        /* \"contracts/IterableMapping.solpp\":1092:1148   */\n    tag_442:\n        /* \"contracts/IterableMapping.solpp\":1165:1169   */\n      dup2\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/IterableMapping.solpp\":1165:1178   */\n      0x03\n      add\n        /* \"contracts/IterableMapping.solpp\":1165:1183   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":1179:1182   */\n      dup3\n  // ExpressionCompiler::appendVariable(index, index)\n        /* \"contracts/IterableMapping.solpp\":1165:1183   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n  // newPushTag tag_383, desc: \n      add\n      swap1\n  // Jump to tag_382\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n      0x00\n        /* \"contracts/IterableMapping.solpp\":1158:1183   */\n      0x0100\n      exp\n      dup2\n      sload\n  // newTag tag_384, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      0xff\n  // end of CompilerUtils::storeInMemory()\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"contracts/IterableMapping.solpp\":1200:1204   */\n      dup2\n        /* \"contracts/IterableMapping.solpp\":1200:1211   */\n      0x01\n      add\n        /* \"contracts/IterableMapping.solpp\":1200:1216   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":1212:1215   */\n      dup3\n        /* \"contracts/IterableMapping.solpp\":1200:1216   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n  // CompilerUtils::moveToStackVariable(voter)\n      0x20\n      add\n  // ExpressionCompiler::appendVariable(voter, voter)\n      swap1\n  // ExpressionCompiler::appendVariable(voters, voters)\n      dup2\n  // ExpressionCompiler::appendVariable(skip, skip)\n      mstore\n  // ExpressionCompiler::appendVariable(index, index)\n      0x20\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_385, desc: return of Yul function checked_sub_t_uint256\n      add\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      0x00\n      blake2b\n  // end of CompilerUtils::rotateStackUp()\n        /* \"contracts/IterableMapping.solpp\":1193:1216   */\n      0x00\n      swap1\n      sstore\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/IterableMapping.solpp\":1227:1237   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":1240:1244   */\n      dup3\n        /* \"contracts/IterableMapping.solpp\":1240:1252   */\n      0x02\n      add\n        /* \"contracts/IterableMapping.solpp\":1240:1257   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":1253:1256   */\n      dup4\n  // newPushTag tag_386, desc: \n        /* \"contracts/IterableMapping.solpp\":1240:1257   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n  // Jump to tag_385\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n      sload\n        /* \"contracts/IterableMapping.solpp\":1227:1257   */\n      swap1\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      pop\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): address -> address\n        /* \"contracts/IterableMapping.solpp\":1267:1281   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":1303:1304   */\n      0x01\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n        /* \"contracts/IterableMapping.solpp\":1284:1288   */\n      dup5\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n        /* \"contracts/IterableMapping.solpp\":1284:1293   */\n      0x00\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      add\n        /* \"contracts/IterableMapping.solpp\":1284:1300   */\n      dup1\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      sload\n      swap1\n  // bytes of type address: 32\n      pop\n        /* \"contracts/IterableMapping.solpp\":1284:1304   */\n      tag_443\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap2\n  // CompilerUtils::popStackSlots(1)\n      swap1\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposalsVotes[spaceId][proposalId][voter].votes)\n  // ExpressionCompiler::appendVariable(_spacesProposalsVotes, _spacesProposalsVotes)\n      tag_129\n      jump\t// in\n    tag_443:  // return of Yul function checked_sub_t_uint256\n        /* \"contracts/IterableMapping.solpp\":1267:1304   */\n      swap1\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      pop\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/IterableMapping.solpp\":1314:1329   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":1332:1336   */\n      dup5\n  // bytes of type uint256: 32\n        /* \"contracts/IterableMapping.solpp\":1332:1341   */\n      0x00\n      add\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/IterableMapping.solpp\":1342:1351   */\n      dup3\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/IterableMapping.solpp\":1332:1352   */\n      dup2\n      sload\n  // bytes of type uint256: 32\n      dup2\n      lt\n  // end of CompilerUtils::storeInMemoryDynamic()\n      tag_444\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      0x32\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x04\n      mstore\n  // bytes of type uint256: 32\n      0x24\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n      revert\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n    tag_444:\n      swap1\n  // bytes of type uint256: 32\n      0x00\n      mstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      blake2b(0x00, 0x20)\n      add\n      0x00\n  // ExpressionCompiler::appendVariable(voter, voter)\n      swap1\n  // CompilerUtils::convertType(): address -> address\n      sload\n      swap1\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      0x0100\n      exp\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      div\n  // bytes of type address: 32\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/IterableMapping.solpp\":1314:1352   */\n      swap1\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      pop\n        /* \"contracts/IterableMapping.solpp\":1387:1392   */\n      dup3\n  // bytes of type uint256: 32\n        /* \"contracts/IterableMapping.solpp\":1363:1367   */\n      dup6\n        /* \"contracts/IterableMapping.solpp\":1363:1375   */\n      0x02\n  // end of CompilerUtils::storeInMemoryDynamic()\n      add\n        /* \"contracts/IterableMapping.solpp\":1363:1384   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":1376:1383   */\n      dup4\n        /* \"contracts/IterableMapping.solpp\":1363:1384   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n  // ExpressionCompiler::appendVariable(votes, votes)\n      0x20\n  // ExpressionCompiler::appendVariable(skip, skip)\n      add\n  // ExpressionCompiler::appendVariable(index, index)\n      swap1\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_387, desc: return of Yul function checked_sub_t_uint256\n      dup2\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      mstore\n      0x20\n  // end of CompilerUtils::rotateStackUp()\n      add\n      0x00\n      blake2b\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/IterableMapping.solpp\":1363:1392   */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/IterableMapping.solpp\":1409:1413   */\n      dup5\n        /* \"contracts/IterableMapping.solpp\":1409:1421   */\n      0x02\n  // newPushTag tag_388, desc: \n      add\n        /* \"contracts/IterableMapping.solpp\":1409:1426   */\n      0x00\n  // Jump to tag_387\n        /* \"contracts/IterableMapping.solpp\":1422:1425   */\n      dup6\n        /* \"contracts/IterableMapping.solpp\":1409:1426   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      blake2b\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n        /* \"contracts/IterableMapping.solpp\":1402:1426   */\n      0x00\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n      swap1\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      sstore\n        /* \"contracts/IterableMapping.solpp\":1456:1463   */\n      dup1\n  // bytes of type uint256: 32\n        /* \"contracts/IterableMapping.solpp\":1437:1441   */\n      dup6\n        /* \"contracts/IterableMapping.solpp\":1437:1446   */\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n      add\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/IterableMapping.solpp\":1447:1452   */\n      dup5\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=_spacesProposalsVotes[spaceId][proposalId][voter].choiceIndex)\n  // ExpressionCompiler::appendVariable(_spacesProposalsVotes, _spacesProposalsVotes)\n        /* \"contracts/IterableMapping.solpp\":1437:1453   */\n      dup2\n      sload\n      dup2\n      lt\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      tag_446\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // bytes of type uint256: 32\n      0x00\n      mstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x32\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x04\n      mstore\n  // bytes of type uint256: 32\n      0x24\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n      revert\n    tag_446:\n      swap1\n      0x00\n      mstore\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      0x20\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x00\n      blake2b\n  // bytes of type uint256: 32\n      add\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/IterableMapping.solpp\":1437:1463   */\n      0x0100\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      exp\n      dup2\n  // bytes of type uint256: 32\n      sload\n      dup2\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0xffffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n  // ExpressionCompiler::appendVariable(voter, voter)\n      dup4\n  // CompilerUtils::convertType(): address -> address\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      mul\n      or\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      sstore\n  // bytes of type address: 32\n      pop\n        /* \"contracts/IterableMapping.solpp\":1473:1477   */\n      dup5\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/IterableMapping.solpp\":1473:1482   */\n      0x00\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n        /* \"contracts/IterableMapping.solpp\":1473:1488   */\n      dup1\n  // bytes of type uint256: 32\n      sload\n      dup1\n  // end of CompilerUtils::storeInMemoryDynamic()\n      tag_448\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x31)\n      0x24\n  // ExpressionCompiler::appendVariable(choices, choices)\n      0x00\n  // ExpressionCompiler::appendVariable(skip, skip)\n      revert\n  // ExpressionCompiler::appendVariable(index, index)\n    tag_448:\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_389, desc: return of Yul function checked_sub_t_uint256\n      0x01\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      swap1\n      sub\n  // end of CompilerUtils::rotateStackUp()\n      dup2\n      dup2\n      swap1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      0x00\n      mstore\n      blake2b(0x00, 0x20)\n      add\n  // newPushTag tag_390, desc: \n      0x00\n      0x0100\n  // Jump to tag_389\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"contracts/IterableMapping.solpp\":1026:1495   */\n      pop\n      pop\n      pop\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n    tag_441:  // return tag of remove\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      pop\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::copyToStackTop(2, 1)\n      pop\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jump\t// out\n        /* \"contracts/IterableMapping.solpp\":2455:2918   */\n    tag_251:  // declaration of function remove\n  // bytes of type uint256: 32\n        /* \"contracts/IterableMapping.solpp\":2523:2527   */\n      dup2\n        /* \"contracts/IterableMapping.solpp\":2523:2536   */\n      0x03\n  // end of CompilerUtils::storeInMemoryDynamic()\n      add\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/IterableMapping.solpp\":2523:2541   */\n      0x00\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/IterableMapping.solpp\":2537:2540   */\n      dup3\n  // end of CompilerUtils::popStackSlots()\n        /* \"contracts/IterableMapping.solpp\":2523:2541   */\n      dup2\n  // ExpressionCompiler::appendVariable(index, index)\n      mstore\n      0x20\n  // CompilerContext::callYulFunction(name=increment_t_uint256, _inArgs=1, _outArgs=1)\n  // newPushTag tag_391, desc: return of Yul function increment_t_uint256\n      add\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      swap1\n  // end of CompilerUtils::rotateStackDown()\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n  // CompilerUtils::popStackSlots(1)\n      blake2b\n  // end of CompilerUtils::popStackSlots()\n      0x00\n      swap1\n      sload\n  // CompilerUtils::popStackSlots(1)\n      swap1\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(1)\n      0x0100\n  // end of CompilerUtils::popStackSlots()\n      exp\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      swap1\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 4 parameters and 3 return parameters\n  //  current stackLayout [3 -1 -1 -1 -1 0 1 2 ]\n      div\n  //  current stackLayout [3 -1 2 -1 -1 0 1 -1 ]\n      0xff\n  //  current stackLayout [3 -1 2 -1 -1 0 1 ]\n      and\n  //  current stackLayout [3 1 2 -1 -1 0 -1 ]\n        /* \"contracts/IterableMapping.solpp\":2518:2574   */\n      tag_451\n  //  current stackLayout [3 1 2 -1 -1 0 ]\n      jumpi\n  //  current stackLayout [0 1 2 -1 -1 3 ]\n        /* \"contracts/IterableMapping.solpp\":2557:2564   */\n      tag_450\n  //  current stackLayout [0 1 2 3 -1 -1 ]\n      jump\n  //  current stackLayout [0 1 2 3 -1 ]\n        /* \"contracts/IterableMapping.solpp\":2518:2574   */\n    tag_451:\n        /* \"contracts/IterableMapping.solpp\":2591:2595   */\n      dup2\n        /* \"contracts/IterableMapping.solpp\":2591:2604   */\n      0x03\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(uint256)\n      add\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function getCreationTimestamp(uint256 spaceId) external view returns (uint256) {\n\t\treturn _spaces[spaceId].createdTimestamp;\n\t}\n  // newTag tag_392, desc: return tag of getCreationTimestamp\n  // start of code block of getCreationTimestamp\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::visit(_memberAccess=_spaces[spaceId].createdTimestamp)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n        /* \"contracts/IterableMapping.solpp\":2591:2609   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":2605:2608   */\n      dup3\n        /* \"contracts/IterableMapping.solpp\":2591:2609   */\n      dup2\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      mstore\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n  // newPushTag tag_393, desc: \n      add\n      0x00\n  // Jump to tag_392\n      blake2b\n      0x00\n        /* \"contracts/IterableMapping.solpp\":2584:2609   */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n  // newTag tag_394, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      sstore\n  // end of CompilerUtils::storeInMemory()\n        /* \"contracts/IterableMapping.solpp\":2626:2630   */\n      dup2\n        /* \"contracts/IterableMapping.solpp\":2626:2637   */\n      0x01\n      add\n        /* \"contracts/IterableMapping.solpp\":2626:2642   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":2638:2641   */\n      dup3\n        /* \"contracts/IterableMapping.solpp\":2626:2642   */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n  // CompilerUtils::moveToStackVariable()\n      blake2b\n        /* \"contracts/IterableMapping.solpp\":2619:2642   */\n      0x00\n  // CompilerUtils::popAndJump(toHeight=3, jumpTo=tag_391:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      swap1\n      sstore\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n        /* \"contracts/IterableMapping.solpp\":2653:2663   */\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 1 return parameters\n  //  current stackLayout [1 -1 0 ]\n        /* \"contracts/IterableMapping.solpp\":2666:2670   */\n      dup3\n  //  current stackLayout [0 -1 1 ]\n        /* \"contracts/IterableMapping.solpp\":2666:2678   */\n      0x02\n  //  current stackLayout [0 1 -1 ]\n      add\n        /* \"contracts/IterableMapping.solpp\":2666:2683   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":2679:2682   */\n      dup4\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(address[] memory)\n  // CompilerUtils::pushZeroPointer()\n        /* \"contracts/IterableMapping.solpp\":2666:2683   */\n      dup2\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function getSpaceAdmins(uint256 spaceId) external view returns (address[] memory) {\n\t\treturn _spacesAdmins[spaceId];\n\t}\n  // newTag tag_395, desc: return tag of getSpaceAdmins\n  // start of code block of getSpaceAdmins\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::appendVariable(_spacesAdmins, _spacesAdmins)\n      mstore\n      0x20\n      add\n      swap1\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      dup2\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mstore\n      0x20\n  // bytes of type uint256: 32\n      add\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n      blake2b\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      sload\n        /* \"contracts/IterableMapping.solpp\":2653:2683   */\n      swap1\n  // bytes of type uint256: 32\n      pop\n        /* \"contracts/IterableMapping.solpp\":2693:2707   */\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/IterableMapping.solpp\":2729:2730   */\n      0x01\n        /* \"contracts/IterableMapping.solpp\":2710:2714   */\n      dup5\n        /* \"contracts/IterableMapping.solpp\":2710:2719   */\n      0x00\n      add\n  // CompilerUtils::convertType(): address[] storage ref -> address[] memory\n        /* \"contracts/IterableMapping.solpp\":2710:2726   */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/IterableMapping.solpp\":2710:2730   */\n      tag_452\n      swap2\n      swap1\n  // CompilerUtils::allocateMemory()\n  // CompilerUtils::fetchFreeMemoryPointer()\n      tag_129\n      jump\t// in\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n    tag_452:  // return of Yul function checked_sub_t_uint256\n        /* \"contracts/IterableMapping.solpp\":2693:2730   */\n      swap1\n      pop\n  // CompilerUtils::storeFreeMemoryPointer()\n        /* \"contracts/IterableMapping.solpp\":2740:2752   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":2755:2759   */\n      dup5\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // end of CompilerUtils::allocateMemory()\n        /* \"contracts/IterableMapping.solpp\":2755:2764   */\n      0x00\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      add\n        /* \"contracts/IterableMapping.solpp\":2765:2774   */\n      dup3\n        /* \"contracts/IterableMapping.solpp\":2755:2775   */\n      dup2\n  // end of CompilerUtils::rotateStackUp()\n      sload\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup2\n      lt\n  // bytes of type uint256: 32\n      tag_453\n      jumpi\n  // end of CompilerUtils::storeInMemoryDynamic()\n  // CompilerUtils::copyToStackTop(3, 1)\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      0x32\n      0x04\n  // newPushTag tag_396, desc: \n      mstore\n      0x24\n  // Jump to tag_395\n      0x00\n      revert\n    tag_453:\n      swap1\n      0x00\n      mstore\n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x20\n      0x00\n  // end of CompilerUtils::storeInMemory()\n      blake2b\n      add\n      sload\n        /* \"contracts/IterableMapping.solpp\":2740:2775   */\n      swap1\n  // newTag tag_397, desc: \n      pop\n        /* \"contracts/IterableMapping.solpp\":2810:2815   */\n      dup3\n        /* \"contracts/IterableMapping.solpp\":2786:2790   */\n      dup6\n        /* \"contracts/IterableMapping.solpp\":2786:2798   */\n      0x02\n      add\n        /* \"contracts/IterableMapping.solpp\":2786:2807   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":2799:2806   */\n      dup4\n        /* \"contracts/IterableMapping.solpp\":2786:2807   */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      dup2\n      mstore\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x20\n      add\n  // bytes of type address: 32\n      0x00\n      blake2b\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/IterableMapping.solpp\":2786:2815   */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/IterableMapping.solpp\":2832:2836   */\n      dup5\n        /* \"contracts/IterableMapping.solpp\":2832:2844   */\n      0x02\n      add\n        /* \"contracts/IterableMapping.solpp\":2832:2849   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":2845:2848   */\n      dup6\n        /* \"contracts/IterableMapping.solpp\":2832:2849   */\n      dup2\n      mstore\n      0x20\n  // CompilerUtils::popStackSlots(3)\n      add\n      swap1\n      dup2\n  // end of CompilerUtils::popStackSlots()\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackVariable()\n      mstore\n      0x20\n  // CompilerUtils::popAndJump(toHeight=3, jumpTo=tag_394:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      add\n      0x00\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      blake2b\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 1 return parameters\n  //  current stackLayout [1 -1 0 ]\n        /* \"contracts/IterableMapping.solpp\":2825:2849   */\n      0x00\n  //  current stackLayout [0 -1 1 ]\n      swap1\n  //  current stackLayout [0 1 -1 ]\n      sstore\n        /* \"contracts/IterableMapping.solpp\":2879:2886   */\n      dup1\n        /* \"contracts/IterableMapping.solpp\":2860:2864   */\n      dup6\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(bool)\n        /* \"contracts/IterableMapping.solpp\":2860:2869   */\n      0x00\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function isProposalExecuted(uint256 spaceId, uint256 proposalId) public view returns (bool) {\n\t\treturn _getProposal(spaceId, proposalId).state == ProposalState.Closed;\n\t}\n  // newTag tag_398, desc: return tag of isProposalExecuted\n  // start of code block of isProposalExecuted\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::visit(_memberAccess=ProposalState.Closed)\n      add\n  // CompilerUtils::convertType(): enum Vitasensus.ProposalState -> enum Vitasensus.ProposalState\n        /* \"contracts/IterableMapping.solpp\":2870:2875   */\n      dup5\n        /* \"contracts/IterableMapping.solpp\":2860:2876   */\n      dup2\n      sload\n      dup2\n  // newPushTag tag_399, desc: \n      lt\n      tag_455\n  // Jump to tag_398\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=_getProposal(spaceId, proposalId).state)\n  // newPushTag tag_400, desc: return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n    tag_455:\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      swap1\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      0x00\n      mstore\n      blake2b(0x00, 0x20)\n      add\n        /* \"contracts/IterableMapping.solpp\":2860:2886   */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/IterableMapping.solpp\":2896:2900   */\n      dup5\n        /* \"contracts/IterableMapping.solpp\":2896:2905   */\n      0x00\n      add\n        /* \"contracts/IterableMapping.solpp\":2896:2911   */\n      dup1\n      sload\n      dup1\n      tag_457\n      jumpi\n  // CompilerUtils::convertType(): enum Vitasensus.ProposalState -> enum Vitasensus.ProposalState\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      0x31\n  // newPushTag tag_401, desc: \n      0x04\n      mstore\n  // Jump to tag_400\n      revert(0x00, 0x24)\n    tag_457:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n  // end of CompilerUtils::convertType()\n      0x00\n  // CompilerUtils::moveToStackVariable()\n      mstore\n      0x20\n  // CompilerUtils::popAndJump(toHeight=4, jumpTo=tag_397:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      0x00\n      blake2b\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      add\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 1 return parameters\n  //  current stackLayout [1 -1 -1 0 ]\n      0x00\n  //  current stackLayout [0 -1 -1 1 ]\n      swap1\n  //  current stackLayout [0 1 -1 -1 ]\n      sstore\n  //  current stackLayout [0 1 -1 ]\n      swap1\n      sstore\n        /* \"contracts/IterableMapping.solpp\":2455:2918   */\n      pop\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function redeemSpaceCreationFee(uint256 spaceId) external {\n\t\trequire(canRedeemSpaceCreationFee(spaceId));\n\t\t_spaces[spaceId].createdTimestamp = 0;\n\t\tpayable(_spacesOwners[spaceId]).transfer(VITE_TOKEN_ID, SPACE_CREATION_FEE);\n\t}\n  // newTag tag_402, desc: return tag of redeemSpaceCreationFee\n  // start of code block of redeemSpaceCreationFee\n  // newPushTag tag_403, desc: return of function function (uint256) view returns (bool)\n      pop\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      pop\n  // newTag tag_404, desc: declaration of function canRedeemSpaceCreationFee\n    tag_450:  // return tag of remove\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/IterableMapping.solpp\":665:1020   */\n    tag_256:  // declaration of function set\n        /* \"contracts/IterableMapping.solpp\":772:776   */\n      dup3\n        /* \"contracts/IterableMapping.solpp\":772:785   */\n      0x03\n  // newPushTag tag_405, desc: \n      add\n        /* \"contracts/IterableMapping.solpp\":772:790   */\n      0x00\n  // Jump to tag_404\n        /* \"contracts/IterableMapping.solpp\":786:789   */\n      dup4\n        /* \"contracts/IterableMapping.solpp\":772:790   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      and\n  // CompilerUtils::convertType(): int_const 0 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=_spaces[spaceId].createdTimestamp)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      dup2\n      mstore\n      0x20\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      add\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n  // newPushTag tag_406, desc: \n      blake2b\n      0x00\n  // Jump to tag_405\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/IterableMapping.solpp\":768:1014   */\n      iszero\n      tag_460\n  // newTag tag_407, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jumpi\n        /* \"contracts/IterableMapping.solpp\":825:828   */\n      dup1\n  // end of CompilerUtils::storeInMemory()\n        /* \"contracts/IterableMapping.solpp\":806:810   */\n      dup4\n        /* \"contracts/IterableMapping.solpp\":806:817   */\n      0x01\n      add\n        /* \"contracts/IterableMapping.solpp\":806:822   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":818:821   */\n      dup5\n        /* \"contracts/IterableMapping.solpp\":806:822   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      add\n      0x00\n  // CompilerUtils::popStackSlots(1)\n      blake2b\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=payable(_spacesOwners[spaceId]).transfer)\n  // ExpressionCompiler::appendVariable(_spacesOwners, _spacesOwners)\n        /* \"contracts/IterableMapping.solpp\":806:828   */\n      dup2\n      swap1\n      sstore\n      pop\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/IterableMapping.solpp\":768:1014   */\n      tag_461\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jump\n    tag_460:\n  // bytes of type uint256: 32\n        /* \"contracts/IterableMapping.solpp\":880:884   */\n      0x01\n        /* \"contracts/IterableMapping.solpp\":859:863   */\n      dup4\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/IterableMapping.solpp\":859:872   */\n      0x03\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n        /* \"contracts/IterableMapping.solpp\":859:877   */\n      0x00\n  // bytes of type uint256: 32\n        /* \"contracts/IterableMapping.solpp\":873:876   */\n      dup5\n        /* \"contracts/IterableMapping.solpp\":859:877   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // end of CompilerUtils::storeInMemoryDynamic()\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n  // CompilerUtils::convertType(): address -> address payable\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::convertType(): address payable -> address payable\n      0x00\n      blake2b\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(VITE_TOKEN_ID, VITE_TOKEN_ID)\n      0x00\n  // CompilerUtils::convertType(): tokenId -> tokenId\n        /* \"contracts/IterableMapping.solpp\":859:884   */\n      0x0100\n      exp\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(SPACE_CREATION_FEE, SPACE_CREATION_FEE)\n      dup2\n  // CompilerUtils::convertType(): int_const 100000000000000000000000 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendExternalFunctionCall(function (),\n  //       args: [\n  //             ]\n  // )\n  // evaluate arguments\n  // CompilerUtils::fetchFreeMemoryPointer()\n      sload\n      dup2\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // move arguments to memory\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             ]\n      0xff\n  // CompilerUtils::fetchFreeMemoryPointer()\n      mul\n      not\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n  // value to send\n      or\n  // vite token\n      swap1\n  // contract address\n      sstore\n      pop\n  // newTag tag_408, desc: \n  // pop stack slots 4\n  // CompilerUtils::popStackSlots(4)\n        /* \"contracts/IterableMapping.solpp\":917:920   */\n      dup1\n        /* \"contracts/IterableMapping.solpp\":898:902   */\n      dup4\n        /* \"contracts/IterableMapping.solpp\":898:909   */\n      0x01\n      add\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n        /* \"contracts/IterableMapping.solpp\":898:914   */\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 0 return parameters\n  //  current stackLayout [0 -1 ]\n        /* \"contracts/IterableMapping.solpp\":910:913   */\n      dup5\n        /* \"contracts/IterableMapping.solpp\":898:914   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(uint)\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function size(Map storage self) internal view returns (uint) {\n        return self.keys.length;\n    }\n  // newTag tag_409, desc: return tag of size\n  // start of code block of size\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::visit(_memberAccess=self.keys.length)\n  // ExpressionCompiler::visit(_memberAccess=self.keys)\n  // ExpressionCompiler::appendVariable(self, self)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n  // CompilerUtils::moveToStackVariable()\n      add\n      0x00\n  // CompilerUtils::popAndJump(toHeight=3, jumpTo=tag_408:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      blake2b\n        /* \"contracts/IterableMapping.solpp\":898:920   */\n      dup2\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      swap1\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 1 return parameters\n  //  current stackLayout [1 -1 0 ]\n      sstore\n  //  current stackLayout [0 -1 1 ]\n      pop\n  //  current stackLayout [0 1 -1 ]\n        /* \"contracts/IterableMapping.solpp\":954:958   */\n      dup3\n        /* \"contracts/IterableMapping.solpp\":954:963   */\n      0x00\n      add\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(Proposal storage)\n        /* \"contracts/IterableMapping.solpp\":954:970   */\n      dup1\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function _getProposal(uint256 spaceId, uint256 proposalId)\n\t\tprivate\n\t\tview\n\t\treturns (Proposal storage)\n\t{\n\t\treturn _spacesProposals[spaceId][proposalId];\n\t}\n  // newTag tag_410, desc: return tag of _getProposal\n  // start of code block of _getProposal\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::appendVariable(_spacesProposals, _spacesProposals)\n      sload\n      swap1\n      pop\n        /* \"contracts/IterableMapping.solpp\":934:938   */\n      dup4\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/IterableMapping.solpp\":934:946   */\n      0x02\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n        /* \"contracts/IterableMapping.solpp\":934:951   */\n      0x00\n  // bytes of type uint256: 32\n        /* \"contracts/IterableMapping.solpp\":947:950   */\n      dup5\n        /* \"contracts/IterableMapping.solpp\":934:951   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // end of CompilerUtils::storeInMemoryDynamic()\n      and\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n  // bytes of type uint256: 32\n      dup2\n      mstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x20\n      add\n      swap1\n      dup2\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      mstore\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      0x20\n      add\n      0x00\n      blake2b\n        /* \"contracts/IterableMapping.solpp\":934:970   */\n      dup2\n      swap1\n  // newPushTag tag_411, desc: \n      sstore\n      pop\n  // Jump to tag_410\n        /* \"contracts/IterableMapping.solpp\":984:988   */\n      dup3\n        /* \"contracts/IterableMapping.solpp\":984:993   */\n      0x00\n      add\n        /* \"contracts/IterableMapping.solpp\":999:1002   */\n      dup3\n        /* \"contracts/IterableMapping.solpp\":984:1003   */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n  // newTag tag_412, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup3\n      sstore\n  // end of CompilerUtils::storeInMemory()\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n  // CompilerUtils::convertType(): struct Vitasensus.Proposal storage ref -> struct Vitasensus.Proposal storage pointer\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::moveToStackVariable()\n      0x20\n      0x00\n  // CompilerUtils::popAndJump(toHeight=4, jumpTo=tag_409:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      blake2b\n      add\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 1 return parameters\n  //  current stackLayout [1 -1 -1 0 ]\n      swap1\n  //  current stackLayout [0 -1 -1 1 ]\n      swap2\n  //  current stackLayout [0 1 -1 -1 ]\n      swap1\n  //  current stackLayout [0 1 -1 ]\n      swap2\n      swap1\n      swap2\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(bool)\n      0x0100\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function _isProposalActive(uint256 spaceId, uint256 proposalId) internal view returns (bool) {\n\t\treturn\n\t\t\t_getProposal(spaceId, proposalId).startTime <= block.timestamp &&\n\t\t\t_getProposal(spaceId, proposalId).endTime > block.timestamp;\n\t}\n  // newTag tag_413, desc: return tag of _isProposalActive\n  // start of code block of _isProposalActive\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::visit(_memberAccess=block.timestamp)\n      exp\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=_getProposal(spaceId, proposalId).startTime)\n  // newPushTag tag_414, desc: return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n      dup2\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      sload\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/IterableMapping.solpp\":768:1014   */\n    tag_461:\n        /* \"contracts/IterableMapping.solpp\":665:1020   */\n      pop\n      pop\n      pop\n  // CompilerUtils::convertType(): uint64 -> uint256\n      jump\t// out\n        /* \"contracts/IterableMapping.solpp\":2097:2449   */\n    tag_258:  // declaration of function set\n  // end of CompilerUtils::convertType()\n        /* \"contracts/IterableMapping.solpp\":2201:2205   */\n      dup3\n        /* \"contracts/IterableMapping.solpp\":2201:2214   */\n      0x03\n      add\n        /* \"contracts/IterableMapping.solpp\":2201:2219   */\n      0x00\n  // newPushTag tag_415, desc: \n        /* \"contracts/IterableMapping.solpp\":2215:2218   */\n      dup4\n        /* \"contracts/IterableMapping.solpp\":2201:2219   */\n      dup2\n  // Jump to tag_414\n      mstore\n  // ExpressionCompiler::visit(_memberAccess=block.timestamp)\n      0x20\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=_getProposal(spaceId, proposalId).endTime)\n  // newPushTag tag_416, desc: return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n      add\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      swap1\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/IterableMapping.solpp\":2197:2443   */\n      iszero\n      tag_464\n  // CompilerUtils::convertType(): uint64 -> uint256\n      jumpi\n        /* \"contracts/IterableMapping.solpp\":2254:2257   */\n      dup1\n  // end of CompilerUtils::convertType()\n        /* \"contracts/IterableMapping.solpp\":2235:2239   */\n      dup4\n        /* \"contracts/IterableMapping.solpp\":2235:2246   */\n      0x01\n  // CompilerUtils::moveToStackVariable()\n      add\n        /* \"contracts/IterableMapping.solpp\":2235:2251   */\n      0x00\n  // CompilerUtils::popAndJump(toHeight=4, jumpTo=tag_412:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n        /* \"contracts/IterableMapping.solpp\":2247:2250   */\n      dup5\n        /* \"contracts/IterableMapping.solpp\":2235:2251   */\n      dup2\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      mstore\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 1 return parameters\n  //  current stackLayout [1 -1 -1 0 ]\n      0x20\n  //  current stackLayout [0 -1 -1 1 ]\n      add\n  //  current stackLayout [0 1 -1 -1 ]\n      swap1\n  //  current stackLayout [0 1 -1 ]\n      dup2\n      mstore\n      0x20\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function _requireProposalActive(uint256 spaceId, uint256 proposalId) private view {\n\t\trequire(_isProposalActive(spaceId, proposalId));\n\t}\n  // newTag tag_417, desc: return tag of _requireProposalActive\n  // start of code block of _requireProposalActive\n  // newPushTag tag_418, desc: return of function function (uint256,uint256) view returns (bool)\n      add\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      0x00\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      blake2b\n        /* \"contracts/IterableMapping.solpp\":2235:2257   */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/IterableMapping.solpp\":2197:2443   */\n      jump(tag_465)\n    tag_464:\n  // newPushTag tag_419, desc: \n        /* \"contracts/IterableMapping.solpp\":2309:2313   */\n      0x01\n        /* \"contracts/IterableMapping.solpp\":2288:2292   */\n      dup4\n  // Jump to tag_418\n        /* \"contracts/IterableMapping.solpp\":2288:2301   */\n      0x03\n      add\n        /* \"contracts/IterableMapping.solpp\":2288:2306   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":2302:2305   */\n      dup5\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n        /* \"contracts/IterableMapping.solpp\":2288:2306   */\n      dup2\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 0 return parameters\n  //  current stackLayout [0 -1 -1 ]\n      mstore\n  //  current stackLayout [0 -1 ]\n      0x20\n      add\n      swap1\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function _requireSpaceAdmin(uint256 spaceId) private view {\n\t\trequire(isSpaceAdmin(spaceId, msg.sender) || isSpaceOwner(spaceId, msg.sender));\n\t}\n  // newTag tag_420, desc: return tag of _requireSpaceAdmin\n  // start of code block of _requireSpaceAdmin\n  // newPushTag tag_421, desc: return of function function (uint256,address) view returns (bool)\n      dup2\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      mstore\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n      0x20\n      add\n      0x00\n      blake2b\n      0x00\n        /* \"contracts/IterableMapping.solpp\":2288:2313   */\n      0x0100\n      exp\n  // newPushTag tag_422, desc: \n      dup2\n      sload\n  // Jump to tag_421\n      dup2\n  // newPushTag tag_423, desc: return of function function (uint256,address) view returns (bool)\n      0xff\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      mul\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n  // newPushTag tag_424, desc: \n      sstore\n      pop\n  // Jump to tag_423\n        /* \"contracts/IterableMapping.solpp\":2346:2349   */\n      dup1\n        /* \"contracts/IterableMapping.solpp\":2327:2331   */\n      dup4\n        /* \"contracts/IterableMapping.solpp\":2327:2338   */\n      0x01\n      add\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n        /* \"contracts/IterableMapping.solpp\":2327:2343   */\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 0 return parameters\n  //  current stackLayout [0 -1 ]\n        /* \"contracts/IterableMapping.solpp\":2339:2342   */\n      dup5\n        /* \"contracts/IterableMapping.solpp\":2327:2343   */\n      dup2\n      mstore\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function _requireSpaceOwner(uint256 spaceId) private view {\n\t\trequire(isSpaceOwner(spaceId, msg.sender));\n\t}\n  // newTag tag_425, desc: return tag of _requireSpaceOwner\n  // start of code block of _requireSpaceOwner\n  // newPushTag tag_426, desc: return of function function (uint256,address) view returns (bool)\n      0x20\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      add\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      blake2b\n        /* \"contracts/IterableMapping.solpp\":2327:2349   */\n      dup2\n  // newPushTag tag_427, desc: \n      swap1\n      sstore\n  // Jump to tag_426\n      pop\n        /* \"contracts/IterableMapping.solpp\":2383:2387   */\n      dup3\n        /* \"contracts/IterableMapping.solpp\":2383:2392   */\n      0x00\n      add\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n        /* \"contracts/IterableMapping.solpp\":2383:2399   */\n      dup1\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 0 return parameters\n  //  current stackLayout [0 -1 ]\n      sload\n      swap1\n      pop\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(uint)\n        /* \"contracts/IterableMapping.solpp\":2363:2367   */\n      dup4\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function size(Map storage self) internal view returns (uint) {\n        return self.keys.length;\n    }\n  // newTag tag_428, desc: return tag of size\n  // start of code block of size\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::visit(_memberAccess=self.keys.length)\n  // ExpressionCompiler::visit(_memberAccess=self.keys)\n  // ExpressionCompiler::appendVariable(self, self)\n        /* \"contracts/IterableMapping.solpp\":2363:2375   */\n      0x02\n      add\n        /* \"contracts/IterableMapping.solpp\":2363:2380   */\n      0x00\n        /* \"contracts/IterableMapping.solpp\":2376:2379   */\n      dup5\n        /* \"contracts/IterableMapping.solpp\":2363:2380   */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n  // CompilerUtils::moveToStackVariable()\n      dup2\n      mstore\n  // CompilerUtils::popAndJump(toHeight=3, jumpTo=tag_427:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      0x20\n      add\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 1 return parameters\n  //  current stackLayout [1 -1 0 ]\n      blake2b\n  //  current stackLayout [0 -1 1 ]\n        /* \"contracts/IterableMapping.solpp\":2363:2399   */\n      dup2\n  //  current stackLayout [0 1 -1 ]\n      swap1\n      sstore\n      pop\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function _requireSpaceMember(uint256 spaceId) private view {\n\t\trequire(\n\t\t\tisSpaceMember(spaceId, msg.sender) ||\n\t\t\t\tisSpaceAdmin(spaceId, msg.sender) ||\n\t\t\t\tisSpaceOwner(spaceId, msg.sender)\n\t\t);\n\t}\n  // newTag tag_429, desc: return tag of _requireSpaceMember\n  // start of code block of _requireSpaceMember\n  // newPushTag tag_430, desc: return of function function (uint256,address) view returns (bool)\n        /* \"contracts/IterableMapping.solpp\":2413:2417   */\n      dup3\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n        /* \"contracts/IterableMapping.solpp\":2413:2422   */\n      0x00\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n      add\n        /* \"contracts/IterableMapping.solpp\":2428:2431   */\n      dup3\n        /* \"contracts/IterableMapping.solpp\":2413:2432   */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n  // newPushTag tag_431, desc: \n      add\n      dup1\n  // Jump to tag_430\n      dup3\n  // newPushTag tag_432, desc: return of function function (uint256,address) view returns (bool)\n      sstore\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      dup1\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n  // newPushTag tag_433, desc: \n      mstore\n      0x20\n  // Jump to tag_432\n      0x00\n  // newPushTag tag_434, desc: return of function function (uint256,address) view returns (bool)\n      blake2b\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      add\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n  // newPushTag tag_435, desc: \n        /* \"contracts/IterableMapping.solpp\":2197:2443   */\n    tag_465:\n        /* \"contracts/IterableMapping.solpp\":2097:2449   */\n      pop\n  // Jump to tag_434\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/IterableMapping.solpp\":308:421   */\n    tag_325:  // declaration of function get\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n        /* \"contracts/IterableMapping.solpp\":375:379   */\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 0 return parameters\n  //  current stackLayout [0 -1 ]\n        /* \"contracts/IterableMapping.solpp\":398:402   */\n      dup3\n        /* \"contracts/IterableMapping.solpp\":398:409   */\n      0x01\n      add\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function _checkOwner() internal view virtual {\n        require(owner() == msg.sender, \"Ownable: caller is not the owner\");\n    }\n  // newTag tag_436, desc: return tag of _checkOwner\n  // start of code block of _checkOwner\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n        /* \"contracts/IterableMapping.solpp\":398:414   */\n      0x00\n  // CompilerUtils::convertType(): address -> address\n        /* \"contracts/IterableMapping.solpp\":410:413   */\n      dup4\n        /* \"contracts/IterableMapping.solpp\":398:414   */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // end of CompilerUtils::convertType()\n  // newPushTag tag_437, desc: return of function function () view returns (address)\n      and\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n  // CompilerUtils::convertType(): address -> address\n      add\n      swap1\n  // end of CompilerUtils::convertType()\n      dup2\n  // CompilerUtils::moveIntoStack(1, 0)\n      mstore\n      0x20\n  // newPushTag tag_438, desc: \n      add\n      0x00\n  // Jump to tag_437\n  // CompilerUtils::fetchFreeMemoryPointer()\n      blake2b\n      sload\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n        /* \"contracts/IterableMapping.solpp\":391:414   */\n      swap1\n      pop\n        /* \"contracts/IterableMapping.solpp\":308:421   */\n      swap3\n      swap2\n      pop\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             literal_string \"Ownable: caller is not the owner\"\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_stringliteral_cddd93c73ab4b5d9275f4cce79da0f55e31063d273b20dce0238ee21763dd415__to_t_string_memory_ptr__fromStack_reversed, _inArgs=1, _outArgs=1)\n  // newPushTag tag_439, desc: return of Yul function abi_encode_tuple_t_stringliteral_cddd93c73ab4b5d9275f4cce79da0f55e31063d273b20dce0238ee21763dd415__to_t_string_memory_ptr__fromStack_reversed\n      pop\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      jump\t// out\n  // end of CompilerUtils::rotateStackDown()\n  // newTag tag_440, desc: abi_encode_tuple_t_stringliteral_cddd93c73ab4b5d9275f4cce79da0f55e31063d273b20dce0238ee21763dd415__to_t_string_memory_ptr__fromStack_reversed\n        /* \"contracts/Vitasensus.solpp\":3274:3410  function _requireProposalClosed(uint256 spaceId, uint256 proposalId) private view {... */\n    tag_357:  // declaration of function _requireProposalClosed\n        /* \"contracts/Vitasensus.solpp\":3368:3405  isProposalClosed(spaceId, proposalId) */\n      tag_469\n        /* \"contracts/Vitasensus.solpp\":3385:3392  spaceId */\n      dup3\n  // CompilerUtils::fetchFreeMemoryPointer()\n        /* \"contracts/Vitasensus.solpp\":3394:3404  proposalId */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":3368:3384  isProposalClosed */\n      tag_25\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n        /* \"contracts/Vitasensus.solpp\":3368:3405  isProposalClosed(spaceId, proposalId) */\n      jump\t// in\n    tag_469:  // return of function function (uint256,uint256) view returns (bool)\n        /* \"contracts/Vitasensus.solpp\":3360:3406  require(isProposalClosed(spaceId, proposalId)) */\n      tag_470\n      jumpi\n      0x00\n      dup1\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      revert\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 0 parameters and 0 return parameters\n    tag_470:\n        /* \"contracts/Vitasensus.solpp\":3274:3410  function _requireProposalClosed(uint256 spaceId, uint256 proposalId) private view {... */\n      pop\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n  // newTag tag_441, desc: return tag of _transferOwnership\n  // start of code block of _transferOwnership\n  // ContractCompiler::appendStackVariableInitialisation(address oldOwner)\n      pop\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::appendVariable(_owner, _owner)\n      jump\t// out\n        /* \"contracts/Vitasensus.solpp\":6383:6917  function _executeProposal(... */\n    tag_364:  // declaration of function _executeProposal\n        /* \"contracts/Vitasensus.solpp\":6496:6521  Proposal storage proposal */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":6524:6557  _getProposal(spaceId, proposalId) */\n      tag_472\n        /* \"contracts/Vitasensus.solpp\":6537:6544  spaceId */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":6546:6556  proposalId */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":6524:6536  _getProposal */\n      tag_67\n        /* \"contracts/Vitasensus.solpp\":6524:6557  _getProposal(spaceId, proposalId) */\n      jump\t// in\n    tag_472:  // return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n        /* \"contracts/Vitasensus.solpp\":6496:6557  Proposal storage proposal = _getProposal(spaceId, proposalId) */\n      swap1\n      pop\n  // CompilerUtils::moveToStackVariable(oldOwner)\n        /* \"contracts/Vitasensus.solpp\":6590:6598  proposal */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":6590:6606  proposal.choices */\n      0x05\n  // ExpressionCompiler::appendVariable(newOwner, newOwner)\n      add\n  // ExpressionCompiler::appendVariable(_owner, _owner)\n        /* \"contracts/Vitasensus.solpp\":6590:6613  proposal.choices.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":6569:6587  winningChoiceIndex */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":6569:6613  winningChoiceIndex < proposal.choices.length */\n      lt\n        /* \"contracts/Vitasensus.solpp\":6561:6614  require(winningChoiceIndex < proposal.choices.length) */\n      tag_473\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_473:\n  // CompilerUtils::copyToStackTop(4, 1)\n        /* \"contracts/Vitasensus.solpp\":6618:6634  address executor */\n      0x00\n  // CompilerUtils::convertType(): address -> address\n        /* \"contracts/Vitasensus.solpp\":6637:6645  proposal */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":6637:6662  proposal.choicesExecutors */\n      0x06\n  // end of CompilerUtils::convertType()\n      add\n        /* \"contracts/Vitasensus.solpp\":6663:6681  winningChoiceIndex */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":6637:6682  proposal.choicesExecutors[winningChoiceIndex] */\n      dup2\n      sload\n  // CompilerUtils::popStackSlots(1)\n      dup2\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(newOwner, newOwner)\n      lt\n  // CompilerUtils::convertType(): address -> address\n      tag_474\n      jumpi\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(oldOwner, oldOwner)\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // CompilerUtils::convertType(): address -> address\n      0x00\n      mstore\n  // end of CompilerUtils::convertType()\n      0x32\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x04\n      mstore\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             ]\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x24\n      0x00\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      revert\n    tag_474:\n      swap1\n      0x00\n      mstore\n  // CompilerUtils::popStackSlots(1)\n      0x20\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 0 return parameters\n  //  current stackLayout [0 -1 ]\n      blake2b\n      add\n      0x00\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function remove(Map storage self, address key) internal {\n        if (!self.inserted[key]) {\n            return;\n        }\n\n        delete self.inserted[key];\n        delete self.values[key];\n\n        uint index = self.indexOf[key];\n        uint lastIndex = self.keys.length - 1;\n        address lastKey = self.keys[lastIndex];\n\n        self.indexOf[lastKey] = index;\n        delete self.indexOf[key];\n\n        self.keys[index] = lastKey;\n        self.keys.pop();\n    }\n  // newTag tag_442, desc: return tag of remove\n  // start of code block of remove\n  // ExpressionCompiler::visit(_memberAccess=self.inserted)\n  // ExpressionCompiler::appendVariable(self, self)\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n  // ExpressionCompiler::appendVariable(key, key)\n      div\n  // CompilerUtils::convertType(): address -> address\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n        /* \"contracts/Vitasensus.solpp\":6618:6682  address executor = proposal.choicesExecutors[winningChoiceIndex] */\n      swap1\n      pop\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":6686:6698  bytes32 data */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":6701:6709  proposal */\n      dup3\n  // bytes of type address: 32\n        /* \"contracts/Vitasensus.solpp\":6701:6721  proposal.choicesData */\n      0x07\n      add\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":6722:6740  winningChoiceIndex */\n      dup5\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":6701:6741  proposal.choicesData[winningChoiceIndex] */\n      dup2\n      sload\n  // bytes of type uint256: 32\n      dup2\n      lt\n  // end of CompilerUtils::storeInMemoryDynamic()\n      tag_476\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_476:\n      swap1\n      0x00\n  // newPushTag tag_443, desc: \n      mstore\n      0x20\n  // Jump to tag_442\n  // ContractCompiler::visit(return)\n  // CompilerUtils::popAndJump(toHeight=3, jumpTo=tag_441:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      0x00\n      blake2b\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      add\n  // ExpressionCompiler::visit(_memberAccess=self.inserted)\n  // ExpressionCompiler::appendVariable(self, self)\n      sload\n        /* \"contracts/Vitasensus.solpp\":6686:6741  bytes32 data = proposal.choicesData[winningChoiceIndex] */\n      swap1\n      pop\n        /* \"contracts/Vitasensus.solpp\":6769:6770  0 */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":6749:6771  executor != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n  // ExpressionCompiler::appendVariable(key, key)\n        /* \"contracts/Vitasensus.solpp\":6749:6757  executor */\n      dup3\n  // CompilerUtils::convertType(): address -> address\n        /* \"contracts/Vitasensus.solpp\":6749:6771  executor != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      eq\n        /* \"contracts/Vitasensus.solpp\":6745:6807  if (executor != address(0)) {... */\n      tag_478\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jumpi\n        /* \"contracts/Vitasensus.solpp\":6778:6802  _execute(executor, data) */\n      tag_479\n  // bytes of type address: 32\n        /* \"contracts/Vitasensus.solpp\":6787:6795  executor */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":6797:6801  data */\n      dup3\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":6778:6786  _execute */\n      tag_480\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":6778:6802  _execute(executor, data) */\n      jump\t// in\n    tag_479:  // return of function function (address,bytes32)\n  // bytes of type uint256: 32\n        /* \"contracts/Vitasensus.solpp\":6745:6807  if (executor != address(0)) {... */\n    tag_478:\n        /* \"contracts/Vitasensus.solpp\":6827:6847  ProposalState.Closed */\n      0x01\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":6810:6818  proposal */\n      dup4\n        /* \"contracts/Vitasensus.solpp\":6810:6824  proposal.state */\n      0x09\n      add\n      0x00\n        /* \"contracts/Vitasensus.solpp\":6810:6847  proposal.state = ProposalState.Closed */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=self.values)\n  // ExpressionCompiler::appendVariable(self, self)\n      dup4\n      0x01\n      dup2\n      gt\n      iszero\n      tag_481\n  // ExpressionCompiler::appendVariable(key, key)\n      jumpi\n  // CompilerUtils::convertType(): address -> address\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      mstore\n      0x21\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x04\n      mstore\n  // bytes of type address: 32\n      0x24\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n      revert\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n    tag_481:\n      mul\n  // bytes of type uint256: 32\n      or\n      swap1\n  // end of CompilerUtils::storeInMemoryDynamic()\n      sstore\n      pop\n        /* \"contracts/Vitasensus.solpp\":6885:6892  spaceId */\n      dup6\n        /* \"contracts/Vitasensus.solpp\":6873:6883  proposalId */\n      dup6\n        /* \"contracts/Vitasensus.solpp\":6856:6913  ProposalExecuted(proposalId, spaceId, winningChoiceIndex) */\n      0x9b6f2cef359ea2598ec10bc9ad9d2d0da42bed0a38d593c22e70fda4c9a38b44\n        /* \"contracts/Vitasensus.solpp\":6894:6912  winningChoiceIndex */\n      dup7\n        /* \"contracts/Vitasensus.solpp\":6856:6913  ProposalExecuted(proposalId, spaceId, winningChoiceIndex) */\n      0x40\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendStackVariableInitialisation(uint index)\n      mload\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::visit(_memberAccess=self.indexOf)\n  // ExpressionCompiler::appendVariable(self, self)\n      tag_482\n      swap2\n      swap1\n      tag_483\n      jump\t// in\n    tag_482:  // return of Yul function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n  // ExpressionCompiler::appendVariable(key, key)\n      0x40\n  // CompilerUtils::convertType(): address -> address\n      mload\n      dup1\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      swap2\n      sub\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      log3\n  // bytes of type address: 32\n        /* \"contracts/Vitasensus.solpp\":6383:6917  function _executeProposal(... */\n      pop\n      pop\n  // end of CompilerUtils::storeInMemoryDynamic()\n      pop\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      pop\n      pop\n  // bytes of type uint256: 32\n      pop\n      jump\t// out\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":11513:11712  function canRedeemSpaceCreationFee(uint256 spaceId) internal view returns (bool) {... */\n    tag_403:  // declaration of function canRedeemSpaceCreationFee\n        /* \"contracts/Vitasensus.solpp\":11588:11592  bool */\n      0x00\n        /* \"contracts/Vitasensus.solpp\":11642:11643  0 */\n      dup1\n        /* \"contracts/Vitasensus.solpp\":11605:11612  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":11613:11620  spaceId */\n      dup4\n  // CompilerUtils::moveToStackVariable(index)\n        /* \"contracts/Vitasensus.solpp\":11605:11621  _spaces[spaceId] */\n      dup2\n      sload\n  // ContractCompiler::appendStackVariableInitialisation(uint lastIndex)\n      dup2\n  // end of ContractCompiler::appendStackVariableInitialisation()\n      lt\n  // CompilerUtils::convertType(): int_const 1 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=self.keys.length)\n  // ExpressionCompiler::visit(_memberAccess=self.keys)\n  // ExpressionCompiler::appendVariable(self, self)\n      tag_485\n      jumpi\n      mstore(0x00, 0xe0f8f85500000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      0x24\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_444, desc: return of Yul function checked_sub_t_uint256\n      0x00\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      revert\n    tag_485:\n  // end of CompilerUtils::rotateStackUp()\n      swap1\n      0x00\n      mstore\n  // CompilerUtils::moveToStackVariable(lastIndex)\n      0x20\n      0x00\n  // ContractCompiler::appendStackVariableInitialisation(address lastKey)\n      blake2b\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::visit(_memberAccess=self.keys)\n  // ExpressionCompiler::appendVariable(self, self)\n      swap1\n      0x07\n      mul\n      add\n        /* \"contracts/Vitasensus.solpp\":11605:11638  _spaces[spaceId].createdTimestamp */\n      0x06\n  // ExpressionCompiler::appendVariable(lastIndex, lastIndex)\n      add\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      sload\n        /* \"contracts/Vitasensus.solpp\":11605:11643  _spaces[spaceId].createdTimestamp != 0 */\n      eq\n      iszero\n        /* \"contracts/Vitasensus.solpp\":11605:11708  _spaces[spaceId].createdTimestamp != 0 && _spaces[spaceId].createdTimestamp + 7776000 < block.timestamp */\n      dup1\n      iszero\n      tag_487\n  // newPushTag tag_445, desc: \n      jumpi\n      pop\n  // Jump to tag_444\n        /* \"contracts/Vitasensus.solpp\":11693:11708  block.timestamp */\n      timestamp\n        /* \"contracts/Vitasensus.solpp\":11683:11690  7776000 */\n      0x76a700\n        /* \"contracts/Vitasensus.solpp\":11647:11654  _spaces */\n      0x01\n        /* \"contracts/Vitasensus.solpp\":11655:11662  spaceId */\n      dup5\n        /* \"contracts/Vitasensus.solpp\":11647:11663  _spaces[spaceId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_488\n      jumpi\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // newTag tag_446, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x00\n      mstore\n  // end of CompilerUtils::storeInMemory()\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_488:\n      swap1\n      0x00\n      mstore\n      blake2b(0x00, 0x20)\n      swap1\n      0x07\n      mul\n  // CompilerUtils::moveToStackVariable(lastKey)\n      add\n        /* \"contracts/Vitasensus.solpp\":11647:11680  _spaces[spaceId].createdTimestamp */\n      0x06\n  // ExpressionCompiler::appendVariable(index, index)\n      add\n  // ExpressionCompiler::visit(_memberAccess=self.indexOf)\n  // ExpressionCompiler::appendVariable(self, self)\n      sload\n        /* \"contracts/Vitasensus.solpp\":11647:11690  _spaces[spaceId].createdTimestamp + 7776000 */\n      tag_490\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n  // ExpressionCompiler::appendVariable(lastKey, lastKey)\n    tag_490:  // return of Yul function checked_add_t_uint256\n  // CompilerUtils::convertType(): address -> address\n        /* \"contracts/Vitasensus.solpp\":11647:11708  _spaces[spaceId].createdTimestamp + 7776000 < block.timestamp */\n      lt\n        /* \"contracts/Vitasensus.solpp\":11605:11708  _spaces[spaceId].createdTimestamp != 0 && _spaces[spaceId].createdTimestamp + 7776000 < block.timestamp */\n    tag_487:\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n        /* \"contracts/Vitasensus.solpp\":11598:11708  return _spaces[spaceId].createdTimestamp != 0 && _spaces[spaceId].createdTimestamp + 7776000 < block.timestamp */\n      swap1\n      pop\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":11513:11712  function canRedeemSpaceCreationFee(uint256 spaceId) internal view returns (bool) {... */\n      swap2\n      swap1\n  // bytes of type address: 32\n      pop\n      jump\t// out\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":6253:6380  function _execute(address addr, bytes32 data) internal {... */\n    tag_480:  // declaration of function _execute\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":6339:6343  addr */\n      dup2\n        /* \"contracts/Vitasensus.solpp\":6312:6370  VitasensusProposalExecutor(addr).executeVitasensusProposal */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // bytes of type uint256: 32\n      and\n      0xb7a61296\n  // end of CompilerUtils::storeInMemoryDynamic()\n        /* \"contracts/Vitasensus.solpp\":6371:6375  data */\n      dup3\n        /* \"contracts/Vitasensus.solpp\":6312:6376  VitasensusProposalExecutor(addr).executeVitasensusProposal(data) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      shl\n      dup2\n  // CompilerUtils::popStackSlots(1)\n      mstore\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=self.indexOf)\n  // ExpressionCompiler::appendVariable(self, self)\n      0x04\n      add\n      tag_492\n      swap2\n      swap1\n      tag_493\n  // ExpressionCompiler::appendVariable(key, key)\n      jump\t// in\n  // CompilerUtils::convertType(): address -> address\n    tag_492:  // return of Yul function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed\n      0x00\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      mload(0x40)\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      pop\n  // bytes of type address: 32\n      dup1\n      dup3\n  // end of CompilerUtils::storeInMemoryDynamic()\n      sub\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      0x00\n  // bytes of type uint256: 32\n      0x5649544520544f4b454e\n      dup7\n  // end of CompilerUtils::storeInMemoryDynamic()\n      call\n      pop\n      pop\n      pop\n        /* \"contracts/Vitasensus.solpp\":6253:6380  function _execute(address addr, bytes32 data) internal {... */\n      pop\n      pop\n      jump\t// out\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(lastKey, lastKey)\n    tag_120:  // $copyArrayToStorage_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_storage\n  // ExpressionCompiler::visit(_memberAccess=self.keys)\n  // ExpressionCompiler::appendVariable(self, self)\n      dup3\n      dup1\n      sload\n      dup3\n      dup3\n  // ExpressionCompiler::appendVariable(index, index)\n      sstore\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      swap1\n      0x00\n      mstore\n      blake2b(0x00, 0x20)\n  // newPushTag tag_447, desc: \n      swap1\n      dup2\n  // Jump to tag_446\n      add\n      swap3\n      dup3\n      iszero\n      tag_495\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n  // newTag tag_448, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n    tag_496:\n      dup3\n  // end of CompilerUtils::storeInMemory()\n      dup2\n      gt\n      iszero\n      tag_497\n      jumpi\n      dup3\n      mload\n      dup3\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n  // CompilerUtils::copyToStackTop(4, 1)\n      and\n  // CompilerUtils::convertType(): address -> address\n      swap1\n      dup4\n  // end of CompilerUtils::convertType()\n      0xffffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n  // CompilerUtils::popStackSlots(1)\n      swap1\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=self.keys.pop)\n  // ExpressionCompiler::visit(_memberAccess=self.keys)\n  // ExpressionCompiler::appendVariable(self, self)\n      sstore\n      pop\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n  // newPushTag tag_449, desc: \n      jump(tag_496)\n  // Jump to tag_448\n    tag_497:\n    tag_495:\n      pop\n      swap1\n      pop\n      tag_498\n      swap2\n      swap1\n      tag_499\n      jump\t// in\n    tag_498:\n      pop\n      swap1\n      jump\t// out\n    tag_222:  // $copyArrayToStorage_t_string_memory_ptr_to_t_string_storage\n      dup3\n  // newTag tag_450, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup1\n      sload\n  // end of CompilerUtils::storeInMemory()\n      tag_500\n      swap1\n      tag_184\n      jump\t// in\n    tag_500:  // return of Yul function extract_byte_array_length\n      swap1\n      0x00\n      mstore\n      blake2b(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(3)\n      dup3\n      tag_502\n      jumpi\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 0 return parameters\n  //  current stackLayout [0 -1 -1 ]\n      dup6\n  //  current stackLayout [0 -1 ]\n      sstore\n      jump(tag_501)\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function remove(Map storage self, uint key) internal {\n        if (!self.inserted[key]) {\n            return;\n        }\n\n        delete self.inserted[key];\n        delete self.values[key];\n\n        uint index = self.indexOf[key];\n        uint lastIndex = self.keys.length - 1;\n        uint lastKey = self.keys[lastIndex];\n\n        self.indexOf[lastKey] = index;\n        delete self.indexOf[key];\n\n        self.keys[index] = lastKey;\n        self.keys.pop();\n    }\n  // newTag tag_451, desc: return tag of remove\n  // start of code block of remove\n  // ExpressionCompiler::visit(_memberAccess=self.inserted)\n  // ExpressionCompiler::appendVariable(self, self)\n    tag_502:\n      dup3\n      0x1f\n      lt\n      tag_503\n      jumpi\n  // ExpressionCompiler::appendVariable(key, key)\n      dup1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mload\n      0xff\n  // bytes of type uint256: 32\n      not\n      and\n  // end of CompilerUtils::storeInMemoryDynamic()\n      dup4\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup1\n      add\n  // bytes of type uint256: 32\n      or\n      dup6\n  // end of CompilerUtils::storeInMemoryDynamic()\n      sstore\n      jump(tag_501)\n    tag_503:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_501\n  // newPushTag tag_452, desc: \n      jumpi\n      swap2\n  // Jump to tag_451\n  // ContractCompiler::visit(return)\n  // CompilerUtils::popAndJump(toHeight=3, jumpTo=tag_450:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      dup3\n      add\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n    tag_504:\n  // ExpressionCompiler::visit(_memberAccess=self.inserted)\n  // ExpressionCompiler::appendVariable(self, self)\n      dup3\n      dup2\n      gt\n      iszero\n      tag_505\n      jumpi\n  // ExpressionCompiler::appendVariable(key, key)\n      dup3\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mload\n      dup3\n  // bytes of type uint256: 32\n      sstore\n      swap2\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x20\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      swap2\n  // bytes of type uint256: 32\n      swap1\n      0x01\n  // end of CompilerUtils::storeInMemoryDynamic()\n      add\n      swap1\n      jump(tag_504)\n    tag_505:\n    tag_501:\n      pop\n      swap1\n      pop\n      tag_506\n      swap2\n      swap1\n      tag_499\n      jump\t// in\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=self.values)\n  // ExpressionCompiler::appendVariable(self, self)\n    tag_506:\n      pop\n      swap1\n      jump\t// out\n    tag_227:  // $copyArrayToStorage_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_storage\n      dup3\n  // ExpressionCompiler::appendVariable(key, key)\n      dup1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      sload\n      dup3\n  // bytes of type uint256: 32\n      dup3\n      sstore\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap1\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x00\n      mstore\n  // bytes of type uint256: 32\n      0x20\n      0x00\n  // end of CompilerUtils::storeInMemoryDynamic()\n      blake2b\n      swap1\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendStackVariableInitialisation(uint index)\n      tag_507\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::visit(_memberAccess=self.indexOf)\n  // ExpressionCompiler::appendVariable(self, self)\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n  // ExpressionCompiler::appendVariable(key, key)\n    tag_508:\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup3\n      dup2\n  // bytes of type uint256: 32\n      gt\n      iszero\n  // end of CompilerUtils::storeInMemoryDynamic()\n      tag_509\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jumpi\n      dup3\n  // bytes of type uint256: 32\n      mload\n      dup3\n  // end of CompilerUtils::storeInMemoryDynamic()\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n  // CompilerUtils::moveToStackVariable(index)\n      swap1\n      0x01\n  // ContractCompiler::appendStackVariableInitialisation(uint lastIndex)\n      add\n  // end of ContractCompiler::appendStackVariableInitialisation()\n      swap1\n  // CompilerUtils::convertType(): int_const 1 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=self.keys.length)\n  // ExpressionCompiler::visit(_memberAccess=self.keys)\n  // ExpressionCompiler::appendVariable(self, self)\n      jump(tag_508)\n    tag_509:\n    tag_507:\n      pop\n      swap1\n      pop\n      tag_510\n      swap2\n  // CompilerContext::callYulFunction(name=checked_sub_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_453, desc: return of Yul function checked_sub_t_uint256\n      swap1\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      tag_511\n      jump\t// in\n  // end of CompilerUtils::rotateStackUp()\n    tag_510:\n      pop\n      swap1\n  // CompilerUtils::moveToStackVariable(lastIndex)\n      jump\t// out\n    tag_233:  // $copyArrayToStorage_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_storage\n  // ContractCompiler::appendStackVariableInitialisation(uint lastKey)\n      dup3\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::visit(_memberAccess=self.keys)\n  // ExpressionCompiler::appendVariable(self, self)\n      dup1\n      sload\n      dup3\n      dup3\n      sstore\n  // ExpressionCompiler::appendVariable(lastIndex, lastIndex)\n      swap1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      0x00\n      mstore\n      blake2b(0x00, 0x20)\n      swap1\n  // newPushTag tag_454, desc: \n      dup2\n      add\n  // Jump to tag_453\n      swap3\n      dup3\n      iszero\n      tag_512\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n    tag_513:\n  // newTag tag_455, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup3\n      dup2\n  // end of CompilerUtils::storeInMemory()\n      gt\n      iszero\n      tag_514\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n  // CompilerUtils::moveToStackVariable(lastKey)\n      0x20\n      add\n  // ExpressionCompiler::appendVariable(index, index)\n      swap2\n  // ExpressionCompiler::visit(_memberAccess=self.indexOf)\n  // ExpressionCompiler::appendVariable(self, self)\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_513)\n  // ExpressionCompiler::appendVariable(lastKey, lastKey)\n    tag_514:\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n    tag_512:\n      pop\n  // bytes of type uint256: 32\n      swap1\n      pop\n  // end of CompilerUtils::storeInMemoryDynamic()\n      tag_515\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap2\n      swap1\n  // bytes of type uint256: 32\n      tag_499\n      jump\t// in\n  // end of CompilerUtils::storeInMemoryDynamic()\n    tag_515:\n      pop\n      swap1\n      jump\t// out\n    tag_348:  // $pushZeroValue_t_struct$_Space_$92_memory_ptr\n      mload(0x40)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      dup1\n      0xe0\n  // CompilerUtils::popStackSlots(1)\n      add\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=self.indexOf)\n  // ExpressionCompiler::appendVariable(self, self)\n      0x40\n      mstore\n      dup1\n      0x00\n      dup1\n      not\n  // ExpressionCompiler::appendVariable(key, key)\n      and\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup2\n      mstore\n  // bytes of type uint256: 32\n      0x20\n      add\n  // end of CompilerUtils::storeInMemoryDynamic()\n      0x00\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup1\n      not\n  // bytes of type uint256: 32\n      and\n      dup2\n  // end of CompilerUtils::storeInMemoryDynamic()\n      mstore\n      0x20\n      add\n      0x00\n      dup1\n      not\n      and\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(lastKey, lastKey)\n      dup2\n  // ExpressionCompiler::visit(_memberAccess=self.keys)\n  // ExpressionCompiler::appendVariable(self, self)\n      mstore\n      0x20\n      add\n      0x60\n      dup2\n  // ExpressionCompiler::appendVariable(index, index)\n      mstore\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      0x20\n      add\n      and(0xffffffffffffffffffff, 0x00)\n      dup2\n  // newPushTag tag_456, desc: \n      mstore\n      0x20\n  // Jump to tag_455\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n  // newTag tag_457, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jump\t// out\n    tag_499:  // $clearStorageLoop_t_uint256\n  // end of CompilerUtils::storeInMemory()\n    tag_516:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_517\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      sstore\n      pop\n  // CompilerUtils::popStackSlots(1)\n      0x01\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=self.keys.pop)\n  // ExpressionCompiler::visit(_memberAccess=self.keys)\n  // ExpressionCompiler::appendVariable(self, self)\n      add\n      jump(tag_516)\n    tag_517:\n      pop\n      swap1\n      jump\t// out\n    tag_511:  // $clearStorageLoop_t_bytes32\n    tag_518:\n      dup1\n  // newPushTag tag_458, desc: \n      dup3\n      gt\n  // Jump to tag_457\n      iszero\n      tag_519\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_518)\n    tag_519:\n      pop\n      swap1\n  // newTag tag_459, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jump\t// out\n    tag_1:  // function selector\n  // end of CompilerUtils::storeInMemory()\n      jumpi(tag_520, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x082f5974\n      eq\n      tag_521\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(3)\n      jumpi\n      dup1\n      0x08b0311c\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      eq\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 0 return parameters\n  //  current stackLayout [0 -1 -1 ]\n      tag_522\n  //  current stackLayout [0 -1 ]\n      jumpi\n      dup1\n      0x1244b9ea\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function set(\n        Map storage self,\n        address key,\n        uint val\n    ) internal {\n        if (self.inserted[key]) {\n            self.values[key] = val;\n        } else {\n            self.inserted[key] = true;\n            self.values[key] = val;\n            self.indexOf[key] = self.keys.length;\n            self.keys.push(key);\n        }\n    }\n  // newTag tag_460, desc: return tag of set\n  // start of code block of set\n  // ExpressionCompiler::visit(_memberAccess=self.inserted)\n  // ExpressionCompiler::appendVariable(self, self)\n      eq\n      tag_523\n      jumpi\n      dup1\n      0x1927510a\n      eq\n  // ExpressionCompiler::appendVariable(key, key)\n      tag_524\n  // CompilerUtils::convertType(): address -> address\n      jumpi\n      dup1\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      0x1c2aa460\n      eq\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      tag_525\n      jumpi\n  // bytes of type address: 32\n      dup1\n      0x224cf1c7\n  // end of CompilerUtils::storeInMemoryDynamic()\n      eq\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      tag_526\n      jumpi\n  // bytes of type uint256: 32\n      dup1\n      0x2518a525\n  // end of CompilerUtils::storeInMemoryDynamic()\n      eq\n      tag_527\n      jumpi\n      dup1\n      0x2b61f5f1\n      eq\n      tag_528\n      jumpi\n      dup1\n      0x30fbeb91\n      eq\n      tag_529\n      jumpi\n  // newPushTag tag_461, desc: \n      dup1\n      0x33613933\n  // Jump to tag_460\n  // ExpressionCompiler::appendVariable(val, val)\n      eq\n  // ExpressionCompiler::visit(_memberAccess=self.values)\n  // ExpressionCompiler::appendVariable(self, self)\n      tag_530\n      jumpi\n      dup1\n      0x33653289\n      eq\n      tag_531\n  // ExpressionCompiler::appendVariable(key, key)\n      jumpi\n  // CompilerUtils::convertType(): address -> address\n      dup1\n      0x402993f4\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      eq\n      tag_532\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jumpi\n      dup1\n  // bytes of type address: 32\n      0x555fec4b\n      eq\n  // end of CompilerUtils::storeInMemoryDynamic()\n      tag_533\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jumpi\n      dup1\n  // bytes of type uint256: 32\n      0x58faf7e6\n      eq\n  // end of CompilerUtils::storeInMemoryDynamic()\n      tag_534\n      jumpi\n      dup1\n      0x758ae6fe\n      eq\n      tag_535\n      jumpi\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      dup1\n      0x777cd61d\n  // CompilerUtils::popStackSlots(1)\n      eq\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // newPushTag tag_462, desc: \n      tag_536\n      jumpi\n      dup1\n      0x7bbcbead\n  // ExpressionCompiler::visit(_memberAccess=self.inserted)\n  // ExpressionCompiler::appendVariable(self, self)\n      eq\n      tag_537\n      jumpi\n      dup1\n      0x7e04aabc\n      eq\n  // ExpressionCompiler::appendVariable(key, key)\n      tag_538\n  // CompilerUtils::convertType(): address -> address\n      jumpi\n      dup1\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      0x8264b3c5\n      eq\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      tag_539\n      jumpi\n  // bytes of type address: 32\n      dup1\n      0x82ab3b2f\n  // end of CompilerUtils::storeInMemoryDynamic()\n      eq\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      tag_540\n      jumpi\n  // bytes of type uint256: 32\n      dup1\n      0x84edb26d\n  // end of CompilerUtils::storeInMemoryDynamic()\n      eq\n      tag_541\n      jumpi\n      dup1\n      0x9ef90ba3\n      eq\n      tag_542\n      jumpi\n      dup1\n      0xb081f695\n      eq\n      tag_543\n      jumpi\n  // CompilerUtils::copyToStackTop(4, 1)\n      dup1\n  // CompilerUtils::convertType(): bool -> bool\n      0xbc1b8601\n      eq\n  // end of CompilerUtils::convertType()\n      tag_544\n      jumpi\n      dup1\n      0xbc32df2d\n  // CompilerUtils::popStackSlots(1)\n      eq\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(val, val)\n      tag_545\n  // ExpressionCompiler::visit(_memberAccess=self.values)\n  // ExpressionCompiler::appendVariable(self, self)\n      jumpi\n      dup1\n      0xbf9a72cb\n      eq\n      tag_546\n      jumpi\n  // ExpressionCompiler::appendVariable(key, key)\n      dup1\n  // CompilerUtils::convertType(): address -> address\n      0xc19dd0e2\n      eq\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      tag_547\n      jumpi\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup1\n      0xc2a9073d\n  // bytes of type address: 32\n      eq\n      tag_548\n  // end of CompilerUtils::storeInMemoryDynamic()\n      jumpi\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup1\n      0xc3715233\n  // bytes of type uint256: 32\n      eq\n      tag_549\n  // end of CompilerUtils::storeInMemoryDynamic()\n      jumpi\n      dup1\n      0xc4ca0d25\n      eq\n      tag_550\n      jumpi\n      dup1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      0xcfa286aa\n      eq\n  // CompilerUtils::popStackSlots(1)\n      tag_551\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=self.keys.length)\n  // ExpressionCompiler::visit(_memberAccess=self.keys)\n  // ExpressionCompiler::appendVariable(self, self)\n      jumpi\n      dup1\n      0xd2f708ae\n      eq\n      tag_552\n      jumpi\n      dup1\n      0xd36f0336\n      eq\n  // ExpressionCompiler::visit(_memberAccess=self.indexOf)\n  // ExpressionCompiler::appendVariable(self, self)\n      tag_553\n      jumpi\n      dup1\n      0xde28fd0e\n      eq\n      tag_554\n  // ExpressionCompiler::appendVariable(key, key)\n      jumpi\n  // CompilerUtils::convertType(): address -> address\n      dup1\n      0xdf0b5099\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      eq\n      tag_555\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jumpi\n      dup1\n  // bytes of type address: 32\n      0xe9fede53\n      eq\n  // end of CompilerUtils::storeInMemoryDynamic()\n      tag_556\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jumpi\n      dup1\n  // bytes of type uint256: 32\n      0xea5e42e3\n      eq\n  // end of CompilerUtils::storeInMemoryDynamic()\n      tag_557\n      jumpi\n      dup1\n      0xed3c2f29\n      eq\n      tag_558\n      jumpi\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n    tag_520:  // notFoundOrReceiveEther\n      stop\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/Vitasensus.solpp\":12941:13119  function getSpaceProposalVotersCount(uint256 spaceId, uint256 proposalId)... */\n    tag_521:  // calldata unpacker of function (uint256,uint256) view external returns (uint256)\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=self.keys.push)\n  // ExpressionCompiler::visit(_memberAccess=self.keys)\n  // ExpressionCompiler::appendVariable(self, self)\n      tag_559\n      0x04\n      dup1\n      calldatasize\n      sub\n  // ExpressionCompiler::appendVariable(key, key)\n      dup2\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      add\n  // end of CompilerUtils::rotateStackDown()\n      swap1\n      tag_560\n      swap2\n      swap1\n      tag_561\n      jump\t// in\n    tag_560:  // return of Yul function abi_decode_tuple_t_uint256t_uint256\n      tag_2\n      jump\t// in\n    tag_559:  // return value packer of function (uint256,uint256) view external returns (uint256)\n      mload(0x40)\n      tag_562\n      swap2\n      swap1\n      tag_483\n  // newTag tag_463, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jump\t// in\n    tag_562:  // return of Yul function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n  // end of CompilerUtils::storeInMemory()\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n  // CompilerUtils::moveToStackTop(2, 1)\n  // CompilerUtils::moveIntoStack(1, 2)\n  // CompilerUtils::rotateStackDown(3)\n        /* \"contracts/Vitasensus.solpp\":13122:13655  function getUserSpaces(address user)... */\n    tag_522:  // calldata unpacker of function (address) view external returns (uint256[],bytes32[],bytes32[])\n      tag_563\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::moveToStackTop(2, 1)\n  // CompilerUtils::moveIntoStack(1, 2)\n  // CompilerUtils::rotateStackDown(3)\n      0x04\n      dup1\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::moveToStackTop(2, 1)\n  // CompilerUtils::moveIntoStack(1, 2)\n  // CompilerUtils::rotateStackDown(3)\n      calldatasize\n      sub\n  // end of CompilerUtils::rotateStackDown()\n      dup2\n      add\n      swap1\n      tag_564\n      swap2\n      swap1\n      tag_565\n      jump\t// in\n    tag_564:  // return of Yul function abi_decode_tuple_t_address\n      tag_3\n  // CompilerUtils::copyToStackTop(4, 1)\n      jump\t// in\n  // CompilerUtils::convertType(): address -> address\n    tag_563:  // return value packer of function (address) view external returns (uint256[],bytes32[],bytes32[])\n      0x40\n  // end of CompilerUtils::convertType()\n      mload\n      tag_566\n      swap4\n      swap3\n  // CompilerUtils::popStackSlots(1)\n      swap2\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      swap1\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      tag_567\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 3 parameters and 0 return parameters\n  //  current stackLayout [0 -1 -1 -1 ]\n      jump\t// in\n  //  current stackLayout [0 -1 -1 ]\n    tag_566:  // return of Yul function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed\n  //  current stackLayout [0 -1 ]\n      mload(0x40)\n      dup1\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function set(\n        Map storage self,\n        uint key,\n        uint val\n    ) internal {\n        if (self.inserted[key]) {\n            self.values[key] = val;\n        } else {\n            self.inserted[key] = true;\n            self.values[key] = val;\n            self.indexOf[key] = self.keys.length;\n            self.keys.push(key);\n        }\n    }\n  // newTag tag_464, desc: return tag of set\n  // start of code block of set\n  // ExpressionCompiler::visit(_memberAccess=self.inserted)\n  // ExpressionCompiler::appendVariable(self, self)\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Vitasensus.solpp\":5834:6250  function getWinningChoiceIndex(uint256 spaceId, uint256 proposalId)... */\n    tag_523:  // calldata unpacker of function (uint256,uint256) view external returns (uint256)\n      tag_568\n  // ExpressionCompiler::appendVariable(key, key)\n      0x04\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup1\n      calldatasize\n  // bytes of type uint256: 32\n      sub\n      dup2\n  // end of CompilerUtils::storeInMemoryDynamic()\n      add\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      tag_569\n  // bytes of type uint256: 32\n      swap2\n      swap1\n  // end of CompilerUtils::storeInMemoryDynamic()\n      tag_561\n      jump\t// in\n    tag_569:  // return of Yul function abi_decode_tuple_t_uint256t_uint256\n      tag_4\n      jump\t// in\n    tag_568:  // return value packer of function (uint256,uint256) view external returns (uint256)\n      mload(0x40)\n      tag_570\n      swap2\n      swap1\n      tag_483\n      jump\t// in\n  // newPushTag tag_465, desc: \n    tag_570:  // return of Yul function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n      0x40\n  // Jump to tag_464\n  // ExpressionCompiler::appendVariable(val, val)\n      mload\n  // ExpressionCompiler::visit(_memberAccess=self.values)\n  // ExpressionCompiler::appendVariable(self, self)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Vitasensus.solpp\":4543:4714  function hasVoted(uint256 spaceId, uint256 proposalId, address user_) public view returns (bool) {... */\n    tag_524:  // calldata unpacker of function (uint256,uint256,address) view external returns (bool)\n  // ExpressionCompiler::appendVariable(key, key)\n      tag_571\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      0x04\n      dup1\n  // bytes of type uint256: 32\n      calldatasize\n      sub\n  // end of CompilerUtils::storeInMemoryDynamic()\n      dup2\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      add\n      swap1\n  // bytes of type uint256: 32\n      tag_572\n      swap2\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap1\n      tag_573\n      jump\t// in\n    tag_572:  // return of Yul function abi_decode_tuple_t_uint256t_uint256t_address\n      tag_5\n      jump\t// in\n    tag_571:  // return value packer of function (uint256,uint256,address) view external returns (bool)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      mload(0x40)\n  // CompilerUtils::popStackSlots(1)\n      tag_574\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // newPushTag tag_466, desc: \n      swap2\n      swap1\n      tag_575\n      jump\t// in\n  // ExpressionCompiler::visit(_memberAccess=self.inserted)\n  // ExpressionCompiler::appendVariable(self, self)\n    tag_574:  // return of Yul function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed\n      mload(0x40)\n      dup1\n      swap2\n      sub\n  // ExpressionCompiler::appendVariable(key, key)\n      swap1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      return\n        /* \"contracts/Vitasensus.solpp\":4959:5104  function isProposalActive(uint256 spaceId, uint256 proposalId) external view returns (bool) {... */\n    tag_525:  // calldata unpacker of function (uint256,uint256) view external returns (bool)\n  // bytes of type uint256: 32\n      tag_576\n      0x04\n  // end of CompilerUtils::storeInMemoryDynamic()\n      dup1\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      calldatasize\n      sub\n  // bytes of type uint256: 32\n      dup2\n      add\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap1\n      tag_577\n      swap2\n      swap1\n      tag_561\n      jump\t// in\n    tag_577:  // return of Yul function abi_decode_tuple_t_uint256t_uint256\n      tag_6\n      jump\t// in\n    tag_576:  // return value packer of function (uint256,uint256) view external returns (bool)\n      mload(0x40)\n      tag_578\n  // CompilerUtils::copyToStackTop(4, 1)\n      swap2\n  // CompilerUtils::convertType(): bool -> bool\n      swap1\n      tag_575\n  // end of CompilerUtils::convertType()\n      jump\t// in\n    tag_578:  // return of Yul function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed\n      mload(0x40)\n  // CompilerUtils::popStackSlots(1)\n      dup1\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(val, val)\n      swap2\n  // ExpressionCompiler::visit(_memberAccess=self.values)\n  // ExpressionCompiler::appendVariable(self, self)\n      sub\n      swap1\n      return\n        /* \"contracts/Vitasensus.solpp\":7253:7916  function voteOnProposal(... */\n    tag_526:  // calldata unpacker of function (uint256,uint256,address,uint256,uint256) external\n      tag_579\n      0x04\n  // ExpressionCompiler::appendVariable(key, key)\n      dup1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      calldatasize\n      sub\n  // bytes of type uint256: 32\n      dup2\n      add\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap1\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      tag_580\n      swap2\n  // bytes of type uint256: 32\n      swap1\n      tag_581\n  // end of CompilerUtils::storeInMemoryDynamic()\n      jump\t// in\n    tag_580:  // return of Yul function abi_decode_tuple_t_uint256t_uint256t_addresst_uint256t_uint256\n      tag_7\n      jump\t// in\n    tag_579:  // return value packer of function (uint256,uint256,address,uint256,uint256) external\n      stop\n        /* \"contracts/Vitasensus.solpp\":12358:12699  function updateSpaceCreateProposalThreshold(... */\n    tag_527:  // calldata unpacker of function (uint256,uint256,bool) external\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      tag_582\n      0x04\n  // CompilerUtils::popStackSlots(1)\n      dup1\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=self.keys.length)\n  // ExpressionCompiler::visit(_memberAccess=self.keys)\n  // ExpressionCompiler::appendVariable(self, self)\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_583\n      swap2\n      swap1\n      tag_584\n  // ExpressionCompiler::visit(_memberAccess=self.indexOf)\n  // ExpressionCompiler::appendVariable(self, self)\n      jump\t// in\n    tag_583:  // return of Yul function abi_decode_tuple_t_uint256t_uint256t_bool\n      tag_8\n      jump\t// in\n    tag_582:  // return value packer of function (uint256,uint256,bool) external\n      stop\n  // ExpressionCompiler::appendVariable(key, key)\n        /* \"contracts/Vitasensus.solpp\":10090:10509  function setSpaceAdmins(uint256 spaceId, address[] memory newAdmins)... */\n    tag_528:  // calldata unpacker of function (uint256,address[]) external\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      tag_585\n      0x04\n  // bytes of type uint256: 32\n      dup1\n      calldatasize\n  // end of CompilerUtils::storeInMemoryDynamic()\n      sub\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup2\n      add\n  // bytes of type uint256: 32\n      swap1\n      tag_586\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap2\n      swap1\n      tag_587\n      jump\t// in\n    tag_586:  // return of Yul function abi_decode_tuple_t_uint256t_array$_t_address_$dyn_memory_ptr\n      tag_9\n      jump\t// in\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n    tag_585:  // return value packer of function (uint256,address[]) external\n      stop\n  // CompilerUtils::popStackSlots(1)\n        /* \"contracts/Vitasensus.solpp\":14416:14694  function getSpaceSettings(uint256 spaceId)... */\n    tag_529:  // calldata unpacker of function (uint256) view external returns (uint256,bool)\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=self.keys.push)\n  // ExpressionCompiler::visit(_memberAccess=self.keys)\n  // ExpressionCompiler::appendVariable(self, self)\n      tag_588\n      0x04\n      dup1\n      calldatasize\n      sub\n  // ExpressionCompiler::appendVariable(key, key)\n      dup2\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      add\n  // end of CompilerUtils::rotateStackDown()\n      swap1\n      tag_589\n      swap2\n      swap1\n      tag_590\n      jump\t// in\n    tag_589:  // return of Yul function abi_decode_tuple_t_uint256\n      tag_10\n      jump\t// in\n    tag_588:  // return value packer of function (uint256) view external returns (uint256,bool)\n      mload(0x40)\n      tag_591\n      swap3\n      swap2\n      swap1\n  // newTag tag_467, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      tag_592\n      jump\t// in\n  // end of CompilerUtils::storeInMemory()\n    tag_591:  // return of Yul function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n  // CompilerUtils::moveToStackTop(2, 1)\n  // CompilerUtils::moveIntoStack(1, 2)\n  // CompilerUtils::rotateStackDown(3)\n      return\n        /* \"contracts/Ownable.sol\":1156:1241   */\n    tag_530:  // calldata unpacker of function () view external returns (address)\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::moveToStackTop(2, 1)\n  // CompilerUtils::moveIntoStack(1, 2)\n  // CompilerUtils::rotateStackDown(3)\n      tag_593\n      tag_11\n  // end of CompilerUtils::rotateStackDown()\n  // CompilerUtils::moveToStackTop(2, 1)\n  // CompilerUtils::moveIntoStack(1, 2)\n  // CompilerUtils::rotateStackDown(3)\n      jump\t// in\n    tag_593:  // return value packer of function () view external returns (address)\n  // end of CompilerUtils::rotateStackDown()\n      mload(0x40)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      tag_594\n      swap2\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      swap1\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      tag_595\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 3 parameters and 0 return parameters\n  //  current stackLayout [0 -1 -1 -1 ]\n      jump\t// in\n  //  current stackLayout [0 -1 -1 ]\n    tag_594:  // return of Yul function abi_encode_tuple_t_address__to_t_address__fromStack_reversed\n  //  current stackLayout [0 -1 ]\n      mload(0x40)\n      dup1\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(uint)\n      swap2\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function get(Map storage self, address key) internal view returns (uint) {\n        return self.values[key];\n    }\n  // newTag tag_468, desc: return tag of get\n  // start of code block of get\n  // ContractCompiler::visit(return)\n  // ExpressionCompiler::visit(_memberAccess=self.values)\n  // ExpressionCompiler::appendVariable(self, self)\n      sub\n      swap1\n      return\n        /* \"contracts/Vitasensus.solpp\":4445:4540  function isOperator(address _addr) public view returns (bool) {... */\n    tag_531:  // calldata unpacker of function (address) view external returns (bool)\n      tag_596\n      0x04\n  // ExpressionCompiler::appendVariable(key, key)\n      dup1\n  // CompilerUtils::convertType(): address -> address\n      calldatasize\n      sub\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::storeInMemoryDynamic(type=address, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=address, ...)\n  // CompilerUtils::convertType(): address -> address\n      dup2\n      add\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      tag_597\n  // bytes of type address: 32\n      swap2\n      swap1\n  // end of CompilerUtils::storeInMemoryDynamic()\n      tag_565\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jump\t// in\n    tag_597:  // return of Yul function abi_decode_tuple_t_address\n  // bytes of type uint256: 32\n      tag_12\n      jump\t// in\n  // end of CompilerUtils::storeInMemoryDynamic()\n    tag_596:  // return value packer of function (address) view external returns (bool)\n      mload(0x40)\n      tag_598\n      swap2\n  // CompilerUtils::moveToStackVariable()\n      swap1\n      tag_575\n  // CompilerUtils::popAndJump(toHeight=4, jumpTo=tag_467:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      jump\t// in\n    tag_598:  // return of Yul function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      0x40\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 1 return parameters\n  //  current stackLayout [1 -1 -1 0 ]\n      mload\n  //  current stackLayout [0 -1 -1 1 ]\n      dup1\n  //  current stackLayout [0 1 -1 -1 ]\n      swap2\n  //  current stackLayout [0 1 -1 ]\n      sub\n      swap1\n      return\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function _requireProposalClosed(uint256 spaceId, uint256 proposalId) private view {\n\t\trequire(isProposalClosed(spaceId, proposalId));\n\t}\n  // newTag tag_469, desc: return tag of _requireProposalClosed\n  // start of code block of _requireProposalClosed\n  // newPushTag tag_470, desc: return of function function (uint256,uint256) view returns (bool)\n        /* \"contracts/Vitasensus.solpp\":14712:15613  function getSpaces(uint256 skip, uint256 limit)... */\n    tag_532:  // calldata unpacker of function (uint256,uint256) view external returns (bytes32[],tokenId[],bytes32[],bytes32[],uint256[])\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      tag_599\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_600\n  // newPushTag tag_471, desc: \n      swap2\n      swap1\n  // Jump to tag_470\n      tag_561\n      jump\t// in\n    tag_600:  // return of Yul function abi_decode_tuple_t_uint256t_uint256\n      tag_13\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      jump\t// in\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 0 return parameters\n  //  current stackLayout [0 -1 -1 ]\n    tag_599:  // return value packer of function (uint256,uint256) view external returns (bytes32[],tokenId[],bytes32[],bytes32[],uint256[])\n  //  current stackLayout [0 -1 ]\n      mload(0x40)\n      tag_601\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function _executeProposal(\n\t\tuint256 spaceId,\n\t\tuint256 proposalId,\n\t\tuint256 winningChoiceIndex\n\t) internal {\n\t\tProposal storage proposal = _getProposal(spaceId, proposalId);\n\t\trequire(winningChoiceIndex < proposal.choices.length);\n\t\taddress executor = proposal.choicesExecutors[winningChoiceIndex];\n\t\tbytes32 data = proposal.choicesData[winningChoiceIndex];\n\t\tif (executor != address(0)) {\n\t\t\t_execute(executor, data);\n\t\t}\n\t\tproposal.state = ProposalState.Closed;\n\t\temit ProposalExecuted(proposalId, spaceId, winningChoiceIndex);\n\t}\n  // newTag tag_472, desc: return tag of _executeProposal\n  // start of code block of _executeProposal\n  // ContractCompiler::appendStackVariableInitialisation(Proposal storage proposal)\n      swap6\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // newPushTag tag_473, desc: return of function function (uint256,uint256) view returns (struct Vitasensus.Proposal)\n      swap5\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      swap4\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      swap3\n      swap2\n      swap1\n      tag_602\n      jump\t// in\n    tag_601:  // return of Yul function abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_tokenId_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_tokenId_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed\n  // CompilerUtils::moveToStackVariable(proposal)\n      mload(0x40)\n  // ExpressionCompiler::visit(_memberAccess=proposal.choices.length)\n  // ExpressionCompiler::visit(_memberAccess=proposal.choices)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Vitasensus.solpp\":13924:14390  function getSpaceExternal(uint256 spaceId)... */\n    tag_533:  // calldata unpacker of function (uint256) view external returns (bytes32,string,tokenId,bytes32,bytes32,uint256,uint256)\n      tag_603\n      0x04\n      dup1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(winningChoiceIndex, winningChoiceIndex)\n      calldatasize\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      sub\n      dup2\n      add\n  // newPushTag tag_474, desc: \n      swap1\n      tag_604\n  // Jump to tag_473\n      swap2\n      swap1\n      tag_590\n      jump\t// in\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ContractCompiler::appendStackVariableInitialisation(address executor)\n    tag_604:  // return of Yul function abi_decode_tuple_t_uint256\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::visit(_memberAccess=proposal.choicesExecutors)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      tag_14\n      jump\t// in\n    tag_603:  // return value packer of function (uint256) view external returns (bytes32,string,tokenId,bytes32,bytes32,uint256,uint256)\n      mload(0x40)\n  // ExpressionCompiler::appendVariable(winningChoiceIndex, winningChoiceIndex)\n      tag_605\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n  // newPushTag tag_475, desc: \n      swap2\n      swap1\n  // Jump to tag_474\n      tag_606\n      jump\t// in\n    tag_605:  // return of Yul function abi_encode_tuple_t_bytes32_t_string_memory_ptr_t_tokenId_t_bytes32_t_bytes32_t_uint256_t_uint256__to_t_bytes32_t_string_memory_ptr_t_tokenId_t_bytes32_t_bytes32_t_uint256_t_uint256__fromStack_reversed\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Vitasensus.solpp\":13800:13907  function getSpaceOwner(uint256 spaceId) public view returns (address) {... */\n    tag_534:  // calldata unpacker of function (uint256) view external returns (address)\n  // newTag tag_476, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      tag_607\n      0x04\n  // end of CompilerUtils::storeInMemory()\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_608\n      swap2\n      swap1\n      tag_590\n      jump\t// in\n    tag_608:  // return of Yul function abi_decode_tuple_t_uint256\n      tag_15\n      jump\t// in\n    tag_607:  // return value packer of function (uint256) view external returns (address)\n      0x40\n  // CompilerUtils::moveToStackVariable(executor)\n      mload\n      tag_609\n  // ContractCompiler::appendStackVariableInitialisation(bytes32 data)\n      swap2\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ExpressionCompiler::visit(_memberAccess=proposal.choicesData)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      swap1\n      tag_595\n      jump\t// in\n    tag_609:  // return of Yul function abi_encode_tuple_t_address__to_t_address__fromStack_reversed\n      0x40\n  // ExpressionCompiler::appendVariable(winningChoiceIndex, winningChoiceIndex)\n      mload\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Vitasensus.solpp\":4317:4442  function isSpaceOwner(uint256 spaceId, address user) public view returns (bool) {... */\n    tag_535:  // calldata unpacker of function (uint256,address) view external returns (bool)\n  // newPushTag tag_477, desc: \n      tag_610\n      0x04\n  // Jump to tag_476\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_611\n      swap2\n      swap1\n      tag_612\n      jump\t// in\n  // newTag tag_478, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n    tag_611:  // return of Yul function abi_decode_tuple_t_uint256t_address\n      tag_16\n  // end of CompilerUtils::storeInMemory()\n      jump\t// in\n    tag_610:  // return value packer of function (uint256,address) view external returns (bool)\n      mload(0x40)\n      tag_613\n      swap2\n      swap1\n      tag_575\n      jump\t// in\n  // CompilerUtils::moveToStackVariable(data)\n    tag_613:  // return of Yul function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed\n      mload(0x40)\n  // CompilerUtils::convertType(): int_const 0 -> address\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::convertType(): address -> address\n      dup1\n      swap2\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(executor, executor)\n      sub\n  // CompilerUtils::convertType(): address -> address\n      swap1\n      return\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":7919:9701  function createProposal(... */\n    tag_536:  // calldata unpacker of function (uint256,string,string,uint256,uint256,uint256,bytes32[],address[],bytes32[]) payable external\n      tag_614\n      0x04\n  // newPushTag tag_479, desc: \n      dup1\n      calldatasize\n  // Jump to tag_478\n  // newPushTag tag_480, desc: return of function function (address,bytes32)\n      sub\n  // ExpressionCompiler::appendVariable(executor, executor)\n      dup2\n  // ExpressionCompiler::appendVariable(data, data)\n      add\n  // newTag tag_481, desc: declaration of function _execute\n      swap1\n      tag_615\n      swap2\n      swap1\n      tag_616\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      jump\t// in\n  // ExpressionCompiler::visit(_memberAccess=ProposalState.Closed)\n    tag_615:  // return of Yul function abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptr\n  // ExpressionCompiler::visit(_memberAccess=proposal.state)\n  // ExpressionCompiler::appendVariable(proposal, proposal)\n      tag_17\n      jump\t// in\n    tag_614:  // return value packer of function (uint256,string,string,uint256,uint256,uint256,bytes32[],address[],bytes32[]) payable external\n      stop\n        /* \"contracts/Ownable.sol\":2034:2232   */\n    tag_537:  // calldata unpacker of function (address) external\n      tag_617\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_618\n  // CompilerUtils::copyToStackTop(4, 1)\n      swap2\n  // CompilerUtils::convertType(): enum Vitasensus.ProposalState -> enum Vitasensus.ProposalState\n      swap1\n      tag_565\n      jump\t// in\n    tag_618:  // return of Yul function abi_decode_tuple_t_address\n  // newPushTag tag_482, desc: \n      tag_18\n      jump\t// in\n  // Jump to tag_481\n    tag_617:  // return value packer of function (address) external\n      stop\n        /* \"contracts/Vitasensus.solpp\":984:1044  uint256 public constant SPACE_CREATION_FEE = 100000 * 10**18 */\n    tag_538:  // calldata unpacker of function () view external returns (uint256)\n      tag_619\n      tag_19\n      jump\t// in\n    tag_619:  // return value packer of function () view external returns (uint256)\n      mload(0x40)\n      tag_620\n  // end of CompilerUtils::convertType()\n      swap2\n      swap1\n      tag_483\n      jump\t// in\n  // CompilerUtils::popStackSlots(1)\n    tag_620:  // return of Yul function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      0x40\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(proposalId, proposalId)\n      mload\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      dup1\n  // ExpressionCompiler::appendVariable(winningChoiceIndex, winningChoiceIndex)\n      swap2\n  // CompilerUtils::fetchFreeMemoryPointer()\n      sub\n      swap1\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             uint256\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_483, desc: return of Yul function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n      return\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n        /* \"contracts/Vitasensus.solpp\":9891:10063  function leaveSpace(uint256 spaceId) external {... */\n    tag_539:  // calldata unpacker of function (uint256) external\n      tag_621\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_484, desc: abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n      0x04\n      dup1\n      calldatasize\n  // CompilerUtils::fetchFreeMemoryPointer()\n      sub\n      dup2\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      add\n      swap1\n      tag_622\n      swap2\n      swap1\n  // CompilerUtils::popStackSlots(3)\n      tag_590\n      jump\t// in\n    tag_622:  // return of Yul function abi_decode_tuple_t_uint256\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      tag_20\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 3 parameters and 0 return parameters\n  //  current stackLayout [0 -1 -1 -1 ]\n      jump\t// in\n  //  current stackLayout [0 -1 -1 ]\n    tag_621:  // return value packer of function (uint256) external\n  //  current stackLayout [0 -1 ]\n      stop\n        /* \"contracts/Vitasensus.solpp\":9704:9888  function joinSpace(uint256 spaceId) public {... */\n    tag_540:  // calldata unpacker of function (uint256) external\n      tag_623\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendStackVariableInitialisation(bool)\n      0x04\n  // end of ContractCompiler::appendStackVariableInitialisation()\n  // ContractCompiler::appendModifierOrFunctionCode() for function canRedeemSpaceCreationFee(uint256 spaceId) internal view returns (bool) {\n\t\treturn _spaces[spaceId].createdTimestamp != 0 && _spaces[spaceId].createdTimestamp + 7776000 < block.timestamp;\n\t}\n  // newTag tag_485, desc: return tag of canRedeemSpaceCreationFee\n  // start of code block of canRedeemSpaceCreationFee\n  // ContractCompiler::visit(return)\n      dup1\n  // CompilerUtils::convertType(): int_const 0 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=_spaces[spaceId].createdTimestamp)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      calldatasize\n      sub\n      dup2\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      add\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      swap1\n      tag_624\n      swap2\n      swap1\n      tag_590\n      jump\t// in\n  // newPushTag tag_486, desc: \n    tag_624:  // return of Yul function abi_decode_tuple_t_uint256\n      tag_21\n  // Jump to tag_485\n      jump\t// in\n    tag_623:  // return value packer of function (uint256) external\n      stop\n        /* \"contracts/Vitasensus.solpp\":15640:16474  function getSpaceProposals(... */\n    tag_541:  // calldata unpacker of function (uint256,uint256,uint256) view external returns (uint256[],string[],string[],uint256[],uint256[],uint256[])\n      tag_625\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n  // newTag tag_487, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      tag_626\n  // end of CompilerUtils::storeInMemory()\n      swap2\n      swap1\n      tag_627\n      jump\t// in\n    tag_626:  // return of Yul function abi_decode_tuple_t_uint256t_uint256t_uint256\n      tag_22\n      jump\t// in\n    tag_625:  // return value packer of function (uint256,uint256,uint256) view external returns (uint256[],string[],string[],uint256[],uint256[],uint256[])\n      mload(0x40)\n      tag_628\n      swap7\n      swap6\n      swap5\n      swap4\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      swap3\n      swap2\n      swap1\n      tag_629\n  // newPushTag tag_488, desc: \n      jump\t// in\n    tag_628:  // return of Yul function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed\n  // Jump to tag_487\n      0x40\n  // ExpressionCompiler::visit(_memberAccess=block.timestamp)\n      mload\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      dup1\n  // CompilerUtils::convertType(): int_const 7776000 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=_spaces[spaceId].createdTimestamp)\n  // ExpressionCompiler::appendVariable(_spaces, _spaces)\n      swap2\n      sub\n      swap1\n  // ExpressionCompiler::appendVariable(spaceId, spaceId)\n      return\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":5608:5704  function addOperator(address operator_) external onlyOwner {... */\n    tag_542:  // calldata unpacker of function (address) external\n      tag_630\n      0x04\n      dup1\n      calldatasize\n      sub\n  // newPushTag tag_489, desc: \n      dup2\n      add\n  // Jump to tag_488\n      swap1\n      tag_631\n      swap2\n      swap1\n      tag_565\n      jump\t// in\n    tag_631:  // return of Yul function abi_decode_tuple_t_address\n      tag_23\n      jump\t// in\n    tag_630:  // return value packer of function (address) external\n      stop\n  // newTag tag_490, desc: \n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n        /* \"contracts/Vitasensus.solpp\":16500:17168  function getSpaceProposal(uint256 spaceId, uint256 proposalId)... */\n    tag_543:  // calldata unpacker of function (uint256,uint256) view external returns (string,string,address,uint256,uint256,uint256,bytes32[],address[],bytes32[],uint256[])\n      tag_632\n  // end of CompilerUtils::storeInMemory()\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_633\n      swap2\n      swap1\n      tag_561\n      jump\t// in\n    tag_633:  // return of Yul function abi_decode_tuple_t_uint256t_uint256\n      tag_24\n      jump\t// in\n  // CompilerContext::callYulFunction(name=checked_add_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_491, desc: return of Yul function checked_add_t_uint256\n    tag_632:  // return value packer of function (uint256,uint256) view external returns (string,string,address,uint256,uint256,uint256,bytes32[],address[],bytes32[],uint256[])\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      mload(0x40)\n  // end of CompilerUtils::rotateStackUp()\n      tag_634\n      swap11\n      swap10\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      swap9\n      swap8\n  // CompilerUtils::moveToStackVariable()\n      swap7\n      swap6\n  // CompilerUtils::popAndJump(toHeight=3, jumpTo=tag_484:)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      swap5\n      swap4\n  // end of CompilerUtils::popAndJump()\n  // end of ContractCompiler::visit(return)\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      swap3\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 1 return parameters\n  //  current stackLayout [1 -1 0 ]\n      swap2\n  //  current stackLayout [0 -1 1 ]\n      swap1\n  //  current stackLayout [0 1 -1 ]\n      tag_635\n      jump\t// in\n    tag_634:  // return of Yul function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function _execute(address addr, bytes32 data) internal {\n\t\tVitasensusProposalExecutor(addr).executeVitasensusProposal(data);\n\t}\n  // newTag tag_492, desc: return tag of _execute\n  // start of code block of _execute\n  // ExpressionCompiler::visit(_memberAccess=VitasensusProposalExecutor(addr).executeVitasensusProposal)\n  // ExpressionCompiler::appendVariable(addr, addr)\n      0x40\n  // CompilerUtils::convertType(): address -> contract VitasensusProposalExecutor\n  // end of CompilerUtils::convertType()\n  // Contract member access\n  // CompilerUtils::convertType(): contract VitasensusProposalExecutor -> address\n      mload\n      dup1\n  // end of CompilerUtils::convertType()\n  // push identifier of: function executeVitasensusProposal(bytes32 data) external; -> 0x00000000000000000000000000000000000000000000000000000000b7a61296\n      swap2\n  // ExpressionCompiler::appendExternalFunctionCall(function (bytes32) external,\n  //       args: [\n  //               data\n  //             ]\n  // )\n  // evaluate arguments\n  // evaluate arg[0]: data\n  // ExpressionCompiler::appendVariable(data, data)\n      sub\n  // CompilerUtils::fetchFreeMemoryPointer()\n      swap1\n      return\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n        /* \"contracts/Vitasensus.solpp\":5107:5271  function isProposalClosed(uint256 spaceId, uint256 proposalId) public view returns (bool) {... */\n    tag_544:  // calldata unpacker of function (uint256,uint256) view external returns (bool)\n  // CompilerUtils::storeInMemoryDynamic(type=uint32, _padToWordBoundaries=0, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint32, ...)\n  // CompilerUtils::convertType(): uint32 -> uint32\n      tag_636\n      0x04\n  // end of CompilerUtils::convertType()\n  // CompilerUtils::leftShiftNumberOnStack(bits=224)\n      dup1\n      calldatasize\n  // end of CompilerUtils::leftShiftNumberOnStack()\n  // end of CompilerUtils::prepareMemoryStore()\n      sub\n      dup2\n  // bytes of type uint32: 4\n      add\n      swap1\n  // end of CompilerUtils::storeInMemoryDynamic()\n  // move arguments to memory\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             bytes32\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_493, desc: return of Yul function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed\n      tag_637\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      swap2\n      swap1\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_494, desc: abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed\n      tag_561\n      jump\t// in\n    tag_637:  // return of Yul function abi_decode_tuple_t_uint256t_uint256\n      tag_25\n  // CompilerUtils::fetchFreeMemoryPointer()\n      jump\t// in\n    tag_636:  // return value packer of function (uint256,uint256) view external returns (bool)\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      mload(0x40)\n      tag_638\n      swap2\n      swap1\n      tag_575\n  // no value to send (0 VITE)\n      jump\t// in\n    tag_638:  // return of Yul function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed\n  // contract address\n      mload(0x40)\n  // newTag tag_495, desc: \n  // pop stack slots 3\n  // CompilerUtils::popStackSlots(3)\n      dup1\n      swap2\n      sub\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      swap1\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 0 return parameters\n  //  current stackLayout [0 -1 -1 ]\n      return\n  //  current stackLayout [0 -1 ]\n        /* \"contracts/Vitasensus.solpp\":4022:4156  function isSpaceMember(uint256 spaceId, address user) public view returns (bool) {... */\n    tag_545:  // calldata unpacker of function (uint256,address) view external returns (bool)\n      tag_639\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_640\n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap2\n      swap1\n  // end of CompilerUtils::storeInMemory()\n      tag_612\n      jump\t// in\n    tag_640:  // return of Yul function abi_decode_tuple_t_uint256t_address\n      tag_26\n      jump\t// in\n    tag_639:  // return value packer of function (uint256,address) view external returns (bool)\n      0x40\n  // newTag tag_496, desc: \n      mload\n      tag_641\n      swap2\n      swap1\n      tag_575\n      jump\t// in\n    tag_641:  // return of Yul function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed\n      mload(0x40)\n  // newTag tag_497, desc: \n      dup1\n      swap2\n      sub\n      swap1\n      return\n  // newPushTag tag_498, desc: \n        /* \"contracts/Vitasensus.solpp\":5707:5807  function removeOperator(address operator_) external onlyOwner {... */\n    tag_546:  // calldata unpacker of function (address) external\n      tag_642\n  // Jump to tag_497\n      0x04\n  // CompilerUtils::loadFromMemoryHelper()\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_643\n      swap2\n      swap1\n      tag_565\n      jump\t// in\n    tag_643:  // return of Yul function abi_decode_tuple_t_address\n      tag_27\n  // CompilerUtils::copyToStackTop(4, 1)\n      jump\t// in\n  // CompilerUtils::convertType(): address -> address\n    tag_642:  // return value packer of function (address) external\n      stop\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Vitasensus.solpp\":12810:12938  function getSpaceProposalsCount(uint256 spaceId) external view returns (uint256) {... */\n    tag_547:  // calldata unpacker of function (uint256) view external returns (uint256)\n      tag_644\n      0x04\n      dup1\n  // CompilerUtils::popStackSlots(1)\n      calldatasize\n  // end of CompilerUtils::popStackSlots()\n      sub\n      dup2\n      add\n      swap1\n      tag_645\n      swap2\n      swap1\n      tag_590\n      jump\t// in\n    tag_645:  // return of Yul function abi_decode_tuple_t_uint256\n      tag_28\n      jump\t// in\n    tag_644:  // return value packer of function (uint256) view external returns (uint256)\n      mload(0x40)\n  // CompilerContext::callLowLevelFunction($clearStorageLoop_t_uint256)\n  // newPushTag tag_499, desc: \n      tag_646\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      swap2\n      swap1\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_500, desc: $clearStorageLoop_t_uint256\n      tag_483\n      jump\t// in\n    tag_646:  // return of Yul function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n      0x40\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      mload\n  // end of CompilerUtils::rotateStackDown()\n      dup1\n      swap2\n      sub\n      swap1\n      return\n  // CompilerContext::callYulFunction(name=extract_byte_array_length, _inArgs=1, _outArgs=1)\n  // newPushTag tag_501, desc: return of Yul function extract_byte_array_length\n        /* \"contracts/Vitasensus.solpp\":4159:4314  function isSpaceAdmin(uint256 spaceId, address user) public view returns (bool) {... */\n    tag_548:  // calldata unpacker of function (uint256,address) view external returns (bool)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      tag_647\n  // end of CompilerUtils::rotateStackDown()\n      0x04\n      dup1\n      calldatasize\n      sub\n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      dup2\n      add\n  // end of CompilerUtils::storeInMemory()\n      swap1\n      tag_648\n      swap2\n      swap1\n      tag_612\n      jump\t// in\n    tag_648:  // return of Yul function abi_decode_tuple_t_uint256t_address\n      tag_29\n      jump\t// in\n    tag_647:  // return value packer of function (uint256,address) view external returns (bool)\n      mload(0x40)\n  // newTag tag_502, desc: \n      tag_649\n  // newPushTag tag_503, desc: \n      swap2\n      swap1\n  // Jump to tag_502\n      tag_575\n      jump\t// in\n    tag_649:  // return of Yul function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n  // newPushTag tag_504, desc: \n      return\n        /* \"contracts/Vitasensus.solpp\":11864:12312  function updateSpace(... */\n    tag_549:  // calldata unpacker of function (uint256,bytes32,string,tokenId,uint256,bytes32,bytes32) external\n  // Jump to tag_503\n      tag_650\n  // CompilerUtils::loadFromMemoryHelper()\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_651\n      swap2\n      swap1\n      tag_652\n      jump\t// in\n    tag_651:  // return of Yul function abi_decode_tuple_t_uint256t_bytes32t_string_memory_ptrt_tokenIdt_uint256t_bytes32t_bytes32\n      tag_30\n      jump\t// in\n    tag_650:  // return value packer of function (uint256,bytes32,string,tokenId,uint256,bytes32,bytes32) external\n      stop\n        /* \"contracts/Vitasensus.solpp\":12720:12807  function getSpacesCount() external view returns (uint256) {... */\n    tag_550:  // calldata unpacker of function () view external returns (uint256)\n      tag_653\n      tag_31\n      jump\t// in\n    tag_653:  // return value packer of function () view external returns (uint256)\n      mload(0x40)\n      tag_654\n      swap2\n      swap1\n  // newTag tag_505, desc: \n      tag_483\n      jump\t// in\n    tag_654:  // return of Yul function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n      mload(0x40)\n  // newPushTag tag_506, desc: \n      dup1\n      swap2\n  // Jump to tag_505\n      sub\n  // CompilerUtils::loadFromMemoryHelper()\n      swap1\n      return\n        /* \"contracts/Ownable.sol\":1784:1885   */\n    tag_551:  // calldata unpacker of function () external\n      tag_655\n      tag_32\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      jump\t// in\n    tag_655:  // return value packer of function () external\n      stop\n        /* \"contracts/Vitasensus.solpp\":10531:11248  function createSpace(... */\n    tag_552:  // calldata unpacker of function (bytes32,string,tokenId,bytes32,bytes32,uint256) payable external\n      tag_656\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_657\n      swap2\n      swap1\n      tag_658\n      jump\t// in\n  // CompilerContext::callLowLevelFunction($clearStorageLoop_t_uint256)\n  // newPushTag tag_507, desc: \n    tag_657:  // return of Yul function abi_decode_tuple_t_bytes32t_string_memory_ptrt_tokenIdt_bytes32t_bytes32t_uint256\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      tag_33\n      jump\t// in\n  // end of CompilerUtils::rotateStackUp()\n    tag_656:  // return value packer of function (bytes32,string,tokenId,bytes32,bytes32,uint256) payable external\n      stop\n        /* \"contracts/Vitasensus.solpp\":6920:7229  function executeProposal(uint256 spaceId, uint256 proposalId)... */\n    tag_553:  // calldata unpacker of function (uint256,uint256) external\n      tag_659\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      0x04\n  // end of CompilerUtils::rotateStackDown()\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_660\n      swap2\n      swap1\n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      tag_561\n      jump\t// in\n  // end of CompilerUtils::storeInMemory()\n    tag_660:  // return of Yul function abi_decode_tuple_t_uint256t_uint256\n      tag_34\n      jump\t// in\n    tag_659:  // return value packer of function (uint256,uint256) external\n      stop\n        /* \"contracts/Vitasensus.solpp\":17200:18185  function getSpaceProposalVotes(... */\n    tag_554:  // calldata unpacker of function (uint256,uint256,uint256,uint256) view external returns (address[],uint256[],uint256[])\n      tag_661\n  // newTag tag_508, desc: \n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_662\n      swap2\n  // newTag tag_509, desc: \n      swap1\n      tag_663\n      jump\t// in\n    tag_662:  // return of Yul function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256\n      tag_35\n  // newPushTag tag_510, desc: \n      jump\t// in\n    tag_661:  // return value packer of function (uint256,uint256,uint256,uint256) view external returns (address[],uint256[],uint256[])\n  // Jump to tag_509\n      0x40\n  // CompilerUtils::loadFromMemoryHelper()\n      mload\n      tag_664\n      swap4\n      swap3\n      swap2\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      swap1\n      tag_665\n      jump\t// in\n  // end of CompilerUtils::convertType()\n    tag_664:  // return of Yul function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Vitasensus.solpp\":11715:11842  function getCreationTimestamp(uint256 spaceId) external view returns (uint256) {... */\n    tag_555:  // calldata unpacker of function (uint256) view external returns (uint256)\n      tag_666\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n  // CompilerContext::callLowLevelFunction($clearStorageLoop_t_bytes32)\n  // newPushTag tag_511, desc: \n      tag_667\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      swap2\n      swap1\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_512, desc: $clearStorageLoop_t_bytes32\n      tag_590\n      jump\t// in\n    tag_667:  // return of Yul function abi_decode_tuple_t_uint256\n      tag_36\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      jump\t// in\n  // end of CompilerUtils::rotateStackDown()\n    tag_666:  // return value packer of function (uint256) view external returns (uint256)\n      mload(0x40)\n      tag_668\n      swap2\n      swap1\n      tag_483\n      jump\t// in\n    tag_668:  // return of Yul function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n  // CompilerUtils::storeInMemory(offset=0)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mload(0x40)\n  // end of CompilerUtils::storeInMemory()\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Vitasensus.solpp\":13658:13777  function getSpaceAdmins(uint256 spaceId) external view returns (address[] memory) {... */\n    tag_556:  // calldata unpacker of function (uint256) view external returns (address[])\n      tag_669\n  // newTag tag_513, desc: \n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_670\n      swap2\n  // newTag tag_514, desc: \n      swap1\n      tag_590\n      jump\t// in\n    tag_670:  // return of Yul function abi_decode_tuple_t_uint256\n      tag_37\n  // newPushTag tag_515, desc: \n      jump\t// in\n    tag_669:  // return value packer of function (uint256) view external returns (address[])\n  // Jump to tag_514\n      0x40\n  // CompilerUtils::loadFromMemoryHelper()\n      mload\n      tag_671\n      swap2\n      swap1\n      tag_672\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      jump\t// in\n    tag_671:  // return of Yul function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Vitasensus.solpp\":5274:5444  function isProposalExecuted(uint256 spaceId, uint256 proposalId) public view returns (bool) {... */\n    tag_557:  // calldata unpacker of function (uint256,uint256) view external returns (bool)\n      tag_673\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n  // CompilerContext::callLowLevelFunction($clearStorageLoop_t_uint256)\n  // newPushTag tag_516, desc: \n      swap1\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      tag_674\n      swap2\n  // end of CompilerUtils::rotateStackUp()\n      swap1\n      tag_561\n      jump\t// in\n    tag_674:  // return of Yul function abi_decode_tuple_t_uint256t_uint256\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      tag_38\n  // end of CompilerUtils::rotateStackDown()\n      jump\t// in\n    tag_673:  // return value packer of function (uint256,uint256) view external returns (bool)\n  // CompilerUtils::fetchFreeMemoryPointer()\n      mload(0x40)\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      tag_675\n      swap2\n      swap1\n  // CompilerUtils::storeFreeMemoryPointer()\n      tag_575\n      jump\t// in\n  // end of CompilerUtils::storeFreeMemoryPointer()\n    tag_675:  // return of Yul function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed\n      0x40\n  // CompilerUtils::storeInMemoryDynamic(type=bytes32, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=bytes32, ...)\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      mload\n      dup1\n      swap2\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      sub\n      swap1\n  // bytes of type bytes32: 32\n      return\n        /* \"contracts/Vitasensus.solpp\":11281:11510  function redeemSpaceCreationFee(uint256 spaceId) external {... */\n    tag_558:  // calldata unpacker of function (uint256) external\n  // end of CompilerUtils::storeInMemoryDynamic()\n      tag_676\n  // CompilerUtils::storeInMemoryDynamic(type=bytes32, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=bytes32, ...)\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      0x04\n      dup1\n      calldatasize\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      sub\n      dup2\n  // bytes of type bytes32: 32\n      add\n      swap1\n  // end of CompilerUtils::storeInMemoryDynamic()\n      tag_677\n  // CompilerUtils::storeInMemoryDynamic(type=bytes32, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=bytes32, ...)\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      swap2\n      swap1\n      tag_590\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jump\t// in\n    tag_677:  // return of Yul function abi_decode_tuple_t_uint256\n  // bytes of type bytes32: 32\n      tag_39\n      jump\t// in\n  // end of CompilerUtils::storeInMemoryDynamic()\n  // CompilerUtils::pushZeroPointer()\n    tag_676:  // return value packer of function (uint256) external\n  // CompilerUtils::storeInMemoryDynamic(type=string memory, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      stop\n    tag_679:\n  // bytes of type uint256: 32\n      0x00\n      tag_681\n  // end of CompilerUtils::storeInMemoryDynamic()\n  // end of CompilerUtils::storeInMemoryDynamic()\n      tag_682\n  // CompilerUtils::storeInMemoryDynamic(type=tokenId, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=tokenId, ...)\n  // CompilerUtils::convertType(): tokenId -> tokenId\n      dup5\n      tag_683\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      jump\t// in\n    tag_682:\n  // bytes of type tokenId: 32\n      tag_684\n      jump\t// in\n  // end of CompilerUtils::storeInMemoryDynamic()\n    tag_681:\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      swap1\n      pop\n  // bytes of type uint256: 32\n      dup1\n      dup4\n  // end of CompilerUtils::storeInMemoryDynamic()\n      dup3\n  // CompilerUtils::storeInMemoryDynamic(type=uint256, _padToWordBoundaries=1, _cleanup=1)\n  // CompilerUtils::prepareMemoryStore(type=uint256, ...)\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // end of CompilerUtils::prepareMemoryStore()\n      mstore\n      0x20\n  // bytes of type uint256: 32\n      dup3\n      add\n  // end of CompilerUtils::storeInMemoryDynamic()\n      swap1\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      pop\n  // end of CompilerUtils::rotateStackDown()\n      dup3\n      dup6\n  // newPushTag tag_517, desc: \n      0x20\n      dup7\n      mul\n      dup3\n      add\n      gt\n      iszero\n  // newTag tag_518, desc: \n      tag_685\n      jumpi\n      0x00\n  // CompilerUtils::copyToStackTop(2, 2)\n      dup1\n      revert\n    tag_685:\n      0x00\n    tag_686:\n      dup6\n      dup2\n      lt\n      iszero\n      tag_688\n      jumpi\n      dup2\n      tag_689\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      dup9\n  // end of CompilerUtils::rotateStackDown()\n      dup3\n      tag_690\n  // newPushTag tag_519, desc: \n      jump\t// in\n    tag_689:\n      dup5\n      mstore\n      0x20\n      dup5\n      add\n  // newTag tag_520, desc: \n      swap4\n      pop\n      0x20\n  // CompilerUtils::copyToStackTop(2, 2)\n      dup4\n      add\n      swap3\n      pop\n      pop\n      0x01\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_686)\n    tag_688:\n  // CompilerUtils::moveToStackTop(1, 1)\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      pop\n  // end of CompilerUtils::rotateStackDown()\n      pop\n      pop\n  // newTag tag_521, desc: notFoundOrReceiveEther\n  // jump to fallback or ether receiver if the data is too short to contain a function selector\n      swap4\n      swap3\n      pop\n      pop\n      pop\n  // retrieve the function signature hash from the calldata\n  // CompilerUtils::loadFromMemory(offset=0, type=uint32, fromCalldata=1, padToWordBoundaries=0)\n      jump\t// out\n  // CompilerUtils::loadFromMemoryHelper()\n    tag_691:\n  // CompilerUtils::rightShiftNumberOnStack(bits=224)\n      0x00\n      tag_693\n  // end of CompilerUtils::rightShiftNumberOnStack()\n  // newTag tag_522, desc: calldata unpacker of function (uint256,uint256) view external returns (uint256)\n  // newTag tag_523, desc: calldata unpacker of function (address) view external returns (uint256[],bytes32[],bytes32[])\n  // newTag tag_524, desc: calldata unpacker of function (uint256,uint256) view external returns (uint256)\n  // newTag tag_525, desc: calldata unpacker of function (uint256,uint256,address) view external returns (bool)\n  // newTag tag_526, desc: calldata unpacker of function (uint256,uint256) view external returns (bool)\n  // newTag tag_527, desc: calldata unpacker of function (uint256,uint256,address,uint256,uint256) external\n  // newTag tag_528, desc: calldata unpacker of function (uint256,uint256,bool) external\n  // newTag tag_529, desc: calldata unpacker of function (uint256,address[]) external\n  // newTag tag_530, desc: calldata unpacker of function (uint256) view external returns (uint256,bool)\n  // newTag tag_531, desc: calldata unpacker of function () view external returns (address)\n  // newTag tag_532, desc: calldata unpacker of function (address) view external returns (bool)\n  // newTag tag_533, desc: calldata unpacker of function (uint256,uint256) view external returns (bytes32[],tokenId[],bytes32[],bytes32[],uint256[])\n  // newTag tag_534, desc: calldata unpacker of function (uint256) view external returns (bytes32,string,tokenId,bytes32,bytes32,uint256,uint256)\n  // newTag tag_535, desc: calldata unpacker of function (uint256) view external returns (address)\n  // newTag tag_536, desc: calldata unpacker of function (uint256,address) view external returns (bool)\n  // newTag tag_537, desc: calldata unpacker of function (uint256,string,string,uint256,uint256,uint256,bytes32[],address[],bytes32[]) payable external\n  // newTag tag_538, desc: calldata unpacker of function (address) external\n  // newTag tag_539, desc: calldata unpacker of function () view external returns (uint256)\n  // newTag tag_540, desc: calldata unpacker of function (uint256) external\n  // newTag tag_541, desc: calldata unpacker of function (uint256) external\n  // newTag tag_542, desc: calldata unpacker of function (uint256,uint256,uint256) view external returns (uint256[],string[],string[],uint256[],uint256[],uint256[])\n  // newTag tag_543, desc: calldata unpacker of function (address) external\n  // newTag tag_544, desc: calldata unpacker of function (uint256,uint256) view external returns (string,string,address,uint256,uint256,uint256,bytes32[],address[],bytes32[],uint256[])\n  // newTag tag_545, desc: calldata unpacker of function (uint256,uint256) view external returns (bool)\n  // newTag tag_546, desc: calldata unpacker of function (uint256,address) view external returns (bool)\n  // newTag tag_547, desc: calldata unpacker of function (address) external\n  // newTag tag_548, desc: calldata unpacker of function (uint256) view external returns (uint256)\n  // newTag tag_549, desc: calldata unpacker of function (uint256,address) view external returns (bool)\n  // newTag tag_550, desc: calldata unpacker of function (uint256,bytes32,string,tokenId,uint256,bytes32,bytes32) external\n  // newTag tag_551, desc: calldata unpacker of function () view external returns (uint256)\n  // newTag tag_552, desc: calldata unpacker of function () external\n  // newTag tag_553, desc: calldata unpacker of function (bytes32,string,tokenId,bytes32,bytes32,uint256) payable external\n  // newTag tag_554, desc: calldata unpacker of function (uint256,uint256) external\n  // newTag tag_555, desc: calldata unpacker of function (uint256,uint256,uint256,uint256) view external returns (address[],uint256[],uint256[])\n  // newTag tag_556, desc: calldata unpacker of function (uint256) view external returns (uint256)\n  // newTag tag_557, desc: calldata unpacker of function (uint256) view external returns (address[])\n  // newTag tag_558, desc: calldata unpacker of function (uint256,uint256) view external returns (bool)\n  // newTag tag_559, desc: calldata unpacker of function (uint256) external\n  // ContractCompiler::appendInternalSelector()\n  // function selector\n      tag_694\n      dup5\n      tag_695\n      jump\t// in\n    tag_694:\n      tag_684\n      jump\t// in\n    tag_693:\n      swap1\n      pop\n      dup1\n      dup4\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      pop\n      dup3\n      dup6\n      0x20\n      dup7\n      mul\n      dup3\n      add\n      gt\n      iszero\n      tag_696\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_696:\n      0x00\n    tag_697:\n      dup6\n      dup2\n      lt\n      iszero\n      tag_699\n      jumpi\n      dup2\n      tag_700\n      dup9\n      dup3\n      tag_701\n      jump\t// in\n    tag_700:\n      dup5\n      mstore\n      0x20\n      dup5\n      add\n      swap4\n      pop\n      0x20\n      dup4\n      add\n      swap3\n      pop\n      pop\n      0x01\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_697)\n    tag_699:\n      pop\n      pop\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_702:\n      0x00\n      tag_704\n      tag_705\n      dup5\n      tag_706\n      jump\t// in\n    tag_705:\n      tag_684\n      jump\t// in\n    tag_704:\n      swap1\n      pop\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup5\n      dup5\n      dup5\n      add\n      gt\n      iszero\n      tag_707\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_707:\n      tag_708\n      dup5\n      dup3\n      dup6\n      tag_709\n      jump\t// in\n    tag_708:\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_690:\n      0x00\n      dup2\n      calldataload\n      swap1\n      pop\n      tag_711\n      dup2\n      tag_712\n      jump\t// in\n    tag_711:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_713:\n      0x00\n      dup3\n      0x1f\n      dup4\n      add\n      slt\n      tag_715\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_715:\n      dup2\n      calldataload\n      tag_716\n      dup5\n      dup3\n      0x20\n      dup7\n      add\n      tag_679\n      jump\t// in\n    tag_716:\n      swap2\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_717:\n      0x00\n      dup3\n      0x1f\n      dup4\n      add\n      slt\n      tag_719\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_719:\n      dup2\n      calldataload\n      tag_720\n      dup5\n      dup3\n  // callback selector\n  // not found\n      0x20\n      dup7\n  // end of ContractCompiler::appendInternalSelector()\n      add\n      tag_691\n      jump\t// in\n  // return value packer of function (uint256,uint256) view external returns (uint256)\n  // newPushTag tag_560, desc: return value packer of function (uint256,uint256) view external returns (uint256)\n    tag_720:\n      swap2\n      pop\n      pop\n      swap3\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      swap2\n      pop\n      pop\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_uint256, _inArgs=2, _outArgs=2)\n  // newPushTag tag_561, desc: return of Yul function abi_decode_tuple_t_uint256t_uint256\n      jump\t// out\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n    tag_721:\n      0x00\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_562, desc: abi_decode_tuple_t_uint256t_uint256\n      dup2\n      calldataload\n      swap1\n      pop\n      tag_723\n      dup2\n  // CompilerUtils::fetchFreeMemoryPointer()\n      tag_724\n      jump\t// in\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             uint256\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_563, desc: return of Yul function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n    tag_723:\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      swap3\n      swap2\n  // end of CompilerUtils::rotateStackUp()\n      pop\n      pop\n      jump\t// out\n  // CompilerUtils::fetchFreeMemoryPointer()\n    tag_701:\n      0x00\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      dup2\n      calldataload\n      swap1\n      pop\n      tag_726\n      dup2\n  // return value packer of function (address) view external returns (uint256[],bytes32[],bytes32[])\n  // newPushTag tag_564, desc: return value packer of function (address) view external returns (uint256[],bytes32[],bytes32[])\n      tag_727\n      jump\t// in\n    tag_726:\n      swap3\n      swap2\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      pop\n      pop\n      jump\t// out\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_address, _inArgs=2, _outArgs=1)\n  // newPushTag tag_565, desc: return of Yul function abi_decode_tuple_t_address\n    tag_728:\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      0x00\n      dup3\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_566, desc: abi_decode_tuple_t_address\n      0x1f\n      dup4\n      add\n      slt\n      tag_730\n      jumpi\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x00\n      dup1\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             uint256[] memory\n  //             bytes32[] memory\n  //             bytes32[] memory\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed, _inArgs=4, _outArgs=1)\n  // newPushTag tag_567, desc: return of Yul function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed\n      revert\n  // CompilerUtils::moveIntoStack(4, 1)\n  // CompilerUtils::rotateStackUp(5)\n    tag_730:\n      dup2\n      calldataload\n      tag_731\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_568, desc: abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed\n      dup5\n      dup3\n      0x20\n  // CompilerUtils::fetchFreeMemoryPointer()\n      dup7\n      add\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      tag_702\n      jump\t// in\n    tag_731:\n      swap2\n      pop\n      pop\n  // return value packer of function (uint256,uint256) view external returns (uint256)\n  // newPushTag tag_569, desc: return value packer of function (uint256,uint256) view external returns (uint256)\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n    tag_732:\n      0x00\n      dup2\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_uint256, _inArgs=2, _outArgs=2)\n  // newPushTag tag_570, desc: return of Yul function abi_decode_tuple_t_uint256t_uint256\n      calldataload\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      swap1\n      pop\n  // end of CompilerUtils::rotateStackUp()\n      tag_734\n      dup2\n      tag_735\n      jump\t// in\n    tag_734:\n      swap3\n  // CompilerUtils::fetchFreeMemoryPointer()\n      swap2\n      pop\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             uint256\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_571, desc: return of Yul function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n      pop\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      jump\t// out\n    tag_736:\n  // end of CompilerUtils::rotateStackUp()\n      0x00\n      dup2\n      calldataload\n  // CompilerUtils::fetchFreeMemoryPointer()\n      swap1\n      pop\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      tag_738\n      dup2\n      tag_739\n      jump\t// in\n    tag_738:\n      swap3\n  // return value packer of function (uint256,uint256,address) view external returns (bool)\n  // newPushTag tag_572, desc: return value packer of function (uint256,uint256,address) view external returns (bool)\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_565:\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      0x00\n      0x20\n      dup3\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_uint256t_address, _inArgs=2, _outArgs=3)\n  // newPushTag tag_573, desc: return of Yul function abi_decode_tuple_t_uint256t_uint256t_address\n      dup5\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      sub\n      slt\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_574, desc: abi_decode_tuple_t_uint256t_uint256t_address\n      iszero\n      tag_741\n      jumpi\n      0x00\n      dup1\n      revert\n  // CompilerUtils::fetchFreeMemoryPointer()\n    tag_741:\n      0x00\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             bool\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_575, desc: return of Yul function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed\n      tag_742\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup5\n      dup3\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_576, desc: abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed\n      dup6\n      add\n      tag_690\n  // CompilerUtils::fetchFreeMemoryPointer()\n      jump\t// in\n    tag_742:\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      swap2\n      pop\n      pop\n      swap3\n      swap2\n      pop\n  // return value packer of function (uint256,uint256) view external returns (bool)\n  // newPushTag tag_577, desc: return value packer of function (uint256,uint256) view external returns (bool)\n      pop\n      jump\t// out\n    tag_658:\n      0x00\n      dup1\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      0x00\n      dup1\n      0x00\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_uint256, _inArgs=2, _outArgs=2)\n  // newPushTag tag_578, desc: return of Yul function abi_decode_tuple_t_uint256t_uint256\n      dup1\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      0xc0\n      dup8\n  // end of CompilerUtils::rotateStackUp()\n      dup10\n      sub\n      slt\n      iszero\n      tag_744\n      jumpi\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x00\n      dup1\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             bool\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_579, desc: return of Yul function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed\n      revert\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n    tag_744:\n      0x00\n  // end of CompilerUtils::rotateStackUp()\n      tag_745\n      dup10\n      dup3\n  // CompilerUtils::fetchFreeMemoryPointer()\n      dup11\n      add\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      tag_701\n      jump\t// in\n    tag_745:\n      swap7\n      pop\n      pop\n  // return value packer of function (uint256,uint256,address,uint256,uint256) external\n  // newPushTag tag_580, desc: return value packer of function (uint256,uint256,address,uint256,uint256) external\n      0x20\n      dup8\n      add\n      calldataload\n      0xffffffffffffffff\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      dup2\n      gt\n      iszero\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_uint256t_addresst_uint256t_uint256, _inArgs=2, _outArgs=5)\n  // newPushTag tag_581, desc: return of Yul function abi_decode_tuple_t_uint256t_uint256t_addresst_uint256t_uint256\n      tag_746\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      jumpi\n      0x00\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_582, desc: abi_decode_tuple_t_uint256t_uint256t_addresst_uint256t_uint256\n      dup1\n      revert\n    tag_746:\n      tag_747\n      dup10\n      dup3\n      dup11\n      add\n  // return value packer of function (uint256,uint256,bool) external\n  // newPushTag tag_583, desc: return value packer of function (uint256,uint256,bool) external\n      tag_728\n      jump\t// in\n    tag_747:\n      swap6\n      pop\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      pop\n      0x40\n      tag_748\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_uint256t_bool, _inArgs=2, _outArgs=3)\n  // newPushTag tag_584, desc: return of Yul function abi_decode_tuple_t_uint256t_uint256t_bool\n      dup10\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup3\n      dup11\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_585, desc: abi_decode_tuple_t_uint256t_uint256t_bool\n      add\n      tag_732\n      jump\t// in\n    tag_748:\n      swap5\n      pop\n      pop\n      0x60\n  // return value packer of function (uint256,address[]) external\n  // newPushTag tag_586, desc: return value packer of function (uint256,address[]) external\n      tag_749\n      dup10\n      dup3\n      dup11\n      add\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      tag_701\n      jump\t// in\n    tag_749:\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_array$_t_address_$dyn_memory_ptr, _inArgs=2, _outArgs=2)\n  // newPushTag tag_587, desc: return of Yul function abi_decode_tuple_t_uint256t_array$_t_address_$dyn_memory_ptr\n      swap4\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      pop\n      pop\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_588, desc: abi_decode_tuple_t_uint256t_array$_t_address_$dyn_memory_ptr\n      0x80\n      tag_750\n      dup10\n      dup3\n      dup11\n      add\n      tag_701\n      jump\t// in\n  // return value packer of function (uint256) view external returns (uint256,bool)\n  // newPushTag tag_589, desc: return value packer of function (uint256) view external returns (uint256,bool)\n    tag_750:\n      swap3\n      pop\n      pop\n      0xa0\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      tag_751\n      dup10\n      dup3\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_590, desc: return of Yul function abi_decode_tuple_t_uint256\n      dup11\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      add\n      tag_736\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_591, desc: abi_decode_tuple_t_uint256\n      jump\t// in\n    tag_751:\n      swap2\n      pop\n      pop\n      swap3\n  // CompilerUtils::fetchFreeMemoryPointer()\n      swap6\n      pop\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             uint256\n  //             bool\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed, _inArgs=3, _outArgs=1)\n  // newPushTag tag_592, desc: return of Yul function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed\n      swap3\n  // CompilerUtils::moveIntoStack(3, 1)\n  // CompilerUtils::rotateStackUp(4)\n      swap6\n      pop\n      swap3\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_593, desc: abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed\n      swap6\n      jump\t// out\n    tag_590:\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x00\n      0x20\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      dup3\n      dup5\n      sub\n      slt\n      iszero\n      tag_753\n  // return value packer of function () view external returns (address)\n  // newPushTag tag_594, desc: return value packer of function () view external returns (address)\n      jumpi\n      0x00\n      dup1\n      revert\n  // CompilerUtils::fetchFreeMemoryPointer()\n    tag_753:\n      0x00\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             address\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_address__to_t_address__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_595, desc: return of Yul function abi_encode_tuple_t_address__to_t_address__fromStack_reversed\n      tag_754\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup5\n      dup3\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_596, desc: abi_encode_tuple_t_address__to_t_address__fromStack_reversed\n      dup6\n      add\n      tag_736\n  // CompilerUtils::fetchFreeMemoryPointer()\n      jump\t// in\n    tag_754:\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      swap2\n      pop\n      pop\n      swap3\n      swap2\n      pop\n  // return value packer of function (address) view external returns (bool)\n  // newPushTag tag_597, desc: return value packer of function (address) view external returns (bool)\n      pop\n      jump\t// out\n    tag_612:\n      0x00\n      dup1\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      0x40\n      dup4\n      dup6\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_address, _inArgs=2, _outArgs=1)\n  // newPushTag tag_598, desc: return of Yul function abi_decode_tuple_t_address\n      sub\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      slt\n      iszero\n  // end of CompilerUtils::rotateStackUp()\n      tag_756\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_756:\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x00\n      tag_757\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             bool\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_599, desc: return of Yul function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed\n      dup6\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup3\n      dup7\n  // end of CompilerUtils::rotateStackUp()\n      add\n      tag_736\n      jump\t// in\n  // CompilerUtils::fetchFreeMemoryPointer()\n    tag_757:\n      swap3\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      pop\n      pop\n      0x20\n      tag_758\n      dup6\n      dup3\n  // return value packer of function (uint256,uint256) view external returns (bytes32[],tokenId[],bytes32[],bytes32[],uint256[])\n  // newPushTag tag_600, desc: return value packer of function (uint256,uint256) view external returns (bytes32[],tokenId[],bytes32[],bytes32[],uint256[])\n      dup7\n      add\n      tag_690\n      jump\t// in\n    tag_758:\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      swap2\n      pop\n      pop\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_uint256, _inArgs=2, _outArgs=2)\n  // newPushTag tag_601, desc: return of Yul function abi_decode_tuple_t_uint256t_uint256\n      swap3\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      pop\n      swap3\n  // end of CompilerUtils::rotateStackUp()\n      swap1\n      pop\n      jump\t// out\n    tag_587:\n      0x00\n      dup1\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x40\n      dup4\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             bytes32[] memory\n  //             tokenId[] memory\n  //             bytes32[] memory\n  //             bytes32[] memory\n  //             uint256[] memory\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_tokenId_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_tokenId_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed, _inArgs=6, _outArgs=1)\n  // newPushTag tag_602, desc: return of Yul function abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_tokenId_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_tokenId_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed\n      dup6\n  // CompilerUtils::moveIntoStack(6, 1)\n  // CompilerUtils::rotateStackUp(7)\n      sub\n      slt\n      iszero\n      tag_760\n      jumpi\n      0x00\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_603, desc: abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_tokenId_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_tokenId_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed\n      dup1\n      revert\n    tag_760:\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x00\n      tag_761\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      dup6\n      dup3\n      dup7\n      add\n      tag_736\n      jump\t// in\n  // return value packer of function (uint256) view external returns (bytes32,string,tokenId,bytes32,bytes32,uint256,uint256)\n  // newPushTag tag_604, desc: return value packer of function (uint256) view external returns (bytes32,string,tokenId,bytes32,bytes32,uint256,uint256)\n    tag_761:\n      swap3\n      pop\n      pop\n      0x20\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      dup4\n      add\n      calldataload\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_605, desc: return of Yul function abi_decode_tuple_t_uint256\n      0xffffffffffffffff\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup2\n      gt\n  // end of CompilerUtils::rotateStackUp()\n      iszero\n      tag_762\n      jumpi\n      0x00\n      dup1\n      revert\n  // CompilerUtils::fetchFreeMemoryPointer()\n    tag_762:\n      tag_763\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             bytes32\n  //             string memory\n  //             tokenId\n  //             bytes32\n  //             bytes32\n  //             uint256\n  //             uint256\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_bytes32_t_string_memory_ptr_t_tokenId_t_bytes32_t_bytes32_t_uint256_t_uint256__to_t_bytes32_t_string_memory_ptr_t_tokenId_t_bytes32_t_bytes32_t_uint256_t_uint256__fromStack_reversed, _inArgs=8, _outArgs=1)\n  // newPushTag tag_606, desc: return of Yul function abi_encode_tuple_t_bytes32_t_string_memory_ptr_t_tokenId_t_bytes32_t_bytes32_t_uint256_t_uint256__to_t_bytes32_t_string_memory_ptr_t_tokenId_t_bytes32_t_bytes32_t_uint256_t_uint256__fromStack_reversed\n      dup6\n  // CompilerUtils::moveIntoStack(8, 1)\n  // CompilerUtils::rotateStackUp(9)\n      dup3\n      dup7\n      add\n      tag_713\n      jump\t// in\n    tag_763:\n      swap2\n      pop\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_607, desc: abi_encode_tuple_t_bytes32_t_string_memory_ptr_t_tokenId_t_bytes32_t_bytes32_t_uint256_t_uint256__to_t_bytes32_t_string_memory_ptr_t_tokenId_t_bytes32_t_bytes32_t_uint256_t_uint256__fromStack_reversed\n      pop\n      swap3\n      pop\n  // CompilerUtils::fetchFreeMemoryPointer()\n      swap3\n      swap1\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      pop\n      jump\t// out\n    tag_652:\n      0x00\n      dup1\n      0x00\n  // return value packer of function (uint256) view external returns (address)\n  // newPushTag tag_608, desc: return value packer of function (uint256) view external returns (address)\n      dup1\n      0x00\n      dup1\n      0x00\n      0xe0\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      dup9\n      dup11\n      sub\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_609, desc: return of Yul function abi_decode_tuple_t_uint256\n      slt\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      iszero\n      tag_765\n  // end of CompilerUtils::rotateStackUp()\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_765:\n      0x00\n  // CompilerUtils::fetchFreeMemoryPointer()\n      tag_766\n      dup11\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             address\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_address__to_t_address__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_610, desc: return of Yul function abi_encode_tuple_t_address__to_t_address__fromStack_reversed\n      dup3\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup12\n      add\n  // end of CompilerUtils::rotateStackUp()\n      tag_736\n      jump\t// in\n    tag_766:\n  // CompilerUtils::fetchFreeMemoryPointer()\n      swap8\n      pop\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      pop\n      0x20\n      tag_767\n      dup11\n      dup3\n      dup12\n  // return value packer of function (uint256,address) view external returns (bool)\n  // newPushTag tag_611, desc: return value packer of function (uint256,address) view external returns (bool)\n      add\n      tag_701\n      jump\t// in\n    tag_767:\n      swap7\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      pop\n      pop\n      0x40\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_address, _inArgs=2, _outArgs=2)\n  // newPushTag tag_612, desc: return of Yul function abi_decode_tuple_t_uint256t_address\n      dup9\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      add\n      calldataload\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_613, desc: abi_decode_tuple_t_uint256t_address\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_768\n      jumpi\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x00\n      dup1\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             bool\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_614, desc: return of Yul function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed\n      revert\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n    tag_768:\n      tag_769\n  // end of CompilerUtils::rotateStackUp()\n      dup11\n      dup3\n      dup12\n  // CompilerUtils::fetchFreeMemoryPointer()\n      add\n      tag_728\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      jump\t// in\n    tag_769:\n      swap6\n      pop\n      pop\n      0x60\n  // return value packer of function (uint256,string,string,uint256,uint256,uint256,bytes32[],address[],bytes32[]) payable external\n  // newPushTag tag_615, desc: return value packer of function (uint256,string,string,uint256,uint256,uint256,bytes32[],address[],bytes32[]) payable external\n      tag_770\n      dup11\n      dup3\n      dup12\n      add\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      tag_732\n      jump\t// in\n    tag_770:\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptr, _inArgs=2, _outArgs=9)\n  // newPushTag tag_616, desc: return of Yul function abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptr\n      swap5\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      pop\n      pop\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_617, desc: abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptr\n      0x80\n      tag_771\n      dup11\n      dup3\n      dup12\n      add\n      tag_736\n      jump\t// in\n  // return value packer of function (address) external\n  // newPushTag tag_618, desc: return value packer of function (address) external\n    tag_771:\n      swap4\n      pop\n      pop\n      0xa0\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      tag_772\n      dup11\n      dup3\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_address, _inArgs=2, _outArgs=1)\n  // newPushTag tag_619, desc: return of Yul function abi_decode_tuple_t_address\n      dup12\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      add\n      tag_701\n  // end of CompilerUtils::rotateStackUp()\n      jump\t// in\n    tag_772:\n      swap3\n      pop\n      pop\n      0xc0\n      tag_773\n      dup11\n  // return value packer of function () view external returns (uint256)\n  // newPushTag tag_620, desc: return value packer of function () view external returns (uint256)\n      dup3\n      dup12\n      add\n      tag_701\n  // CompilerUtils::fetchFreeMemoryPointer()\n      jump\t// in\n    tag_773:\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             uint256\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_621, desc: return of Yul function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n      swap2\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      pop\n      pop\n  // end of CompilerUtils::rotateStackUp()\n      swap3\n      swap6\n      swap9\n  // CompilerUtils::fetchFreeMemoryPointer()\n      swap2\n      swap5\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n  // return value packer of function (uint256) external\n  // newPushTag tag_622, desc: return value packer of function (uint256) external\n    tag_616:\n      0x00\n      dup1\n      0x00\n      dup1\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      0x00\n      dup1\n      0x00\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_623, desc: return of Yul function abi_decode_tuple_t_uint256\n      dup1\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      0x00\n      0x0120\n  // end of CompilerUtils::rotateStackUp()\n      dup11\n      dup13\n      sub\n      slt\n      iszero\n      tag_775\n      jumpi\n      0x00\n  // return value packer of function (uint256) external\n  // newPushTag tag_624, desc: return value packer of function (uint256) external\n      dup1\n      revert\n    tag_775:\n      0x00\n      tag_776\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      dup13\n      dup3\n      dup14\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_625, desc: return of Yul function abi_decode_tuple_t_uint256\n      add\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      tag_736\n      jump\t// in\n  // end of CompilerUtils::rotateStackUp()\n    tag_776:\n      swap10\n      pop\n      pop\n      0x20\n      dup11\n      add\n      calldataload\n  // return value packer of function (uint256,uint256,uint256) view external returns (uint256[],string[],string[],uint256[],uint256[],uint256[])\n  // newPushTag tag_626, desc: return value packer of function (uint256,uint256,uint256) view external returns (uint256[],string[],string[],uint256[],uint256[],uint256[])\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_777\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      jumpi\n      0x00\n      dup1\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_uint256t_uint256, _inArgs=2, _outArgs=3)\n  // newPushTag tag_627, desc: return of Yul function abi_decode_tuple_t_uint256t_uint256t_uint256\n      revert\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n    tag_777:\n      tag_778\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_628, desc: abi_decode_tuple_t_uint256t_uint256t_uint256\n      dup13\n      dup3\n      dup14\n      add\n      tag_728\n      jump\t// in\n  // CompilerUtils::fetchFreeMemoryPointer()\n    tag_778:\n      swap9\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             uint256[] memory\n  //             string memory[] memory\n  //             string memory[] memory\n  //             uint256[] memory\n  //             uint256[] memory\n  //             uint256[] memory\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed, _inArgs=7, _outArgs=1)\n  // newPushTag tag_629, desc: return of Yul function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed\n      pop\n  // CompilerUtils::moveIntoStack(7, 1)\n  // CompilerUtils::rotateStackUp(8)\n      pop\n      0x40\n      dup11\n      add\n      calldataload\n      0xffffffffffffffff\n      dup2\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_630, desc: abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_string_memory_ptr_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed\n      gt\n      iszero\n      tag_779\n  // CompilerUtils::fetchFreeMemoryPointer()\n      jumpi\n      0x00\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      dup1\n      revert\n    tag_779:\n      tag_780\n      dup13\n      dup3\n  // return value packer of function (address) external\n  // newPushTag tag_631, desc: return value packer of function (address) external\n      dup14\n      add\n      tag_728\n      jump\t// in\n    tag_780:\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      swap8\n      pop\n      pop\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_address, _inArgs=2, _outArgs=1)\n  // newPushTag tag_632, desc: return of Yul function abi_decode_tuple_t_address\n      0x60\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      tag_781\n      dup13\n  // end of CompilerUtils::rotateStackUp()\n      dup3\n      dup14\n      add\n      tag_736\n      jump\t// in\n    tag_781:\n      swap7\n      pop\n  // return value packer of function (uint256,uint256) view external returns (string,string,address,uint256,uint256,uint256,bytes32[],address[],bytes32[],uint256[])\n  // newPushTag tag_633, desc: return value packer of function (uint256,uint256) view external returns (string,string,address,uint256,uint256,uint256,bytes32[],address[],bytes32[],uint256[])\n      pop\n      0x80\n      tag_782\n      dup13\n      dup3\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      dup14\n      add\n      tag_736\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_uint256, _inArgs=2, _outArgs=2)\n  // newPushTag tag_634, desc: return of Yul function abi_decode_tuple_t_uint256t_uint256\n      jump\t// in\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n    tag_782:\n      swap6\n  // end of CompilerUtils::rotateStackUp()\n      pop\n      pop\n      0xa0\n      tag_783\n      dup13\n      dup3\n  // CompilerUtils::fetchFreeMemoryPointer()\n      dup14\n      add\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             string memory\n  //             string memory\n  //             address\n  //             uint256\n  //             uint256\n  //             uint256\n  //             bytes32[] memory\n  //             address[] memory\n  //             bytes32[] memory\n  //             uint256[] memory\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed, _inArgs=11, _outArgs=1)\n  // newPushTag tag_635, desc: return of Yul function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed\n      tag_736\n  // CompilerUtils::moveIntoStack(11, 1)\n  // CompilerUtils::rotateStackUp(12)\n      jump\t// in\n    tag_783:\n      swap5\n      pop\n      pop\n      0xc0\n      dup11\n      add\n      calldataload\n      0xffffffffffffffff\n      dup2\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_636, desc: abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_uint256_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_address_$dyn_memory_ptr_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed\n      gt\n      iszero\n      tag_784\n  // CompilerUtils::fetchFreeMemoryPointer()\n      jumpi\n      0x00\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      dup1\n      revert\n    tag_784:\n      tag_785\n      dup13\n      dup3\n  // return value packer of function (uint256,uint256) view external returns (bool)\n  // newPushTag tag_637, desc: return value packer of function (uint256,uint256) view external returns (bool)\n      dup14\n      add\n      tag_717\n      jump\t// in\n    tag_785:\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      swap4\n      pop\n      pop\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_uint256, _inArgs=2, _outArgs=2)\n  // newPushTag tag_638, desc: return of Yul function abi_decode_tuple_t_uint256t_uint256\n      0xe0\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup11\n      add\n  // end of CompilerUtils::rotateStackUp()\n      calldataload\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_786\n  // CompilerUtils::fetchFreeMemoryPointer()\n      jumpi\n      0x00\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             bool\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_639, desc: return of Yul function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed\n      dup1\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      revert\n    tag_786:\n  // end of CompilerUtils::rotateStackUp()\n      tag_787\n      dup13\n      dup3\n  // CompilerUtils::fetchFreeMemoryPointer()\n      dup14\n      add\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      tag_713\n      jump\t// in\n    tag_787:\n      swap3\n      pop\n      pop\n  // return value packer of function (uint256,address) view external returns (bool)\n  // newPushTag tag_640, desc: return value packer of function (uint256,address) view external returns (bool)\n      0x0100\n      dup11\n      add\n      calldataload\n      0xffffffffffffffff\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      dup2\n      gt\n      iszero\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_address, _inArgs=2, _outArgs=2)\n  // newPushTag tag_641, desc: return of Yul function abi_decode_tuple_t_uint256t_address\n      tag_788\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      jumpi\n      0x00\n  // end of CompilerUtils::rotateStackUp()\n      dup1\n      revert\n    tag_788:\n      tag_789\n      dup13\n      dup3\n  // CompilerUtils::fetchFreeMemoryPointer()\n      dup14\n      add\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             bool\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_642, desc: return of Yul function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed\n      tag_717\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      jump\t// in\n    tag_789:\n  // end of CompilerUtils::rotateStackUp()\n      swap2\n      pop\n      pop\n  // CompilerUtils::fetchFreeMemoryPointer()\n      swap3\n      swap6\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      pop\n  // return value packer of function (address) external\n  // newPushTag tag_643, desc: return value packer of function (address) external\n      swap3\n      swap6\n      swap9\n      jump\t// out\n    tag_561:\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      0x00\n      dup1\n      0x40\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_address, _inArgs=2, _outArgs=1)\n  // newPushTag tag_644, desc: return of Yul function abi_decode_tuple_t_address\n      dup4\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup6\n      sub\n  // end of CompilerUtils::rotateStackUp()\n      slt\n      iszero\n      tag_791\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_791:\n  // return value packer of function (uint256) view external returns (uint256)\n  // newPushTag tag_645, desc: return value packer of function (uint256) view external returns (uint256)\n      0x00\n      tag_792\n      dup6\n      dup3\n      dup7\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      add\n      tag_736\n      jump\t// in\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_646, desc: return of Yul function abi_decode_tuple_t_uint256\n    tag_792:\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      swap3\n      pop\n  // end of CompilerUtils::rotateStackUp()\n      pop\n      0x20\n      tag_793\n      dup6\n      dup3\n      dup7\n  // CompilerUtils::fetchFreeMemoryPointer()\n      add\n      tag_736\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             uint256\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_647, desc: return of Yul function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n      jump\t// in\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n    tag_793:\n      swap2\n  // end of CompilerUtils::rotateStackUp()\n      pop\n      pop\n      swap3\n  // CompilerUtils::fetchFreeMemoryPointer()\n      pop\n      swap3\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      swap1\n      pop\n      jump\t// out\n    tag_573:\n      0x00\n      dup1\n  // return value packer of function (uint256,address) view external returns (bool)\n  // newPushTag tag_648, desc: return value packer of function (uint256,address) view external returns (bool)\n      0x00\n      0x60\n      dup5\n      dup7\n      sub\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      slt\n      iszero\n      tag_795\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_address, _inArgs=2, _outArgs=2)\n  // newPushTag tag_649, desc: return of Yul function abi_decode_tuple_t_uint256t_address\n      jumpi\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      0x00\n      dup1\n  // end of CompilerUtils::rotateStackUp()\n      revert\n    tag_795:\n      0x00\n      tag_796\n      dup7\n      dup3\n  // CompilerUtils::fetchFreeMemoryPointer()\n      dup8\n      add\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             bool\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_650, desc: return of Yul function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed\n      tag_736\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      jump\t// in\n    tag_796:\n  // end of CompilerUtils::rotateStackUp()\n      swap4\n      pop\n      pop\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x20\n      tag_797\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      dup7\n      dup3\n      dup8\n      add\n      tag_736\n      jump\t// in\n  // return value packer of function (uint256,bytes32,string,tokenId,uint256,bytes32,bytes32) external\n  // newPushTag tag_651, desc: return value packer of function (uint256,bytes32,string,tokenId,uint256,bytes32,bytes32) external\n    tag_797:\n      swap3\n      pop\n      pop\n      0x40\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      tag_798\n      dup7\n      dup3\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_bytes32t_string_memory_ptrt_tokenIdt_uint256t_bytes32t_bytes32, _inArgs=2, _outArgs=7)\n  // newPushTag tag_652, desc: return of Yul function abi_decode_tuple_t_uint256t_bytes32t_string_memory_ptrt_tokenIdt_uint256t_bytes32t_bytes32\n      dup8\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      add\n      tag_690\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_653, desc: abi_decode_tuple_t_uint256t_bytes32t_string_memory_ptrt_tokenIdt_uint256t_bytes32t_bytes32\n      jump\t// in\n    tag_798:\n      swap2\n      pop\n      pop\n      swap3\n      pop\n      swap3\n  // return value packer of function () view external returns (uint256)\n  // newPushTag tag_654, desc: return value packer of function () view external returns (uint256)\n      pop\n      swap3\n      jump\t// out\n    tag_581:\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x00\n      dup1\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             uint256\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_655, desc: return of Yul function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n      0x00\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup1\n      0x00\n  // end of CompilerUtils::rotateStackUp()\n      0xa0\n      dup7\n      dup9\n  // CompilerUtils::fetchFreeMemoryPointer()\n      sub\n      slt\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      iszero\n      tag_800\n      jumpi\n      0x00\n      dup1\n      revert\n  // return value packer of function () external\n  // newPushTag tag_656, desc: return value packer of function () external\n    tag_800:\n      0x00\n      tag_801\n      dup9\n      dup3\n      dup10\n  // return value packer of function (bytes32,string,tokenId,bytes32,bytes32,uint256) payable external\n  // newPushTag tag_657, desc: return value packer of function (bytes32,string,tokenId,bytes32,bytes32,uint256) payable external\n      add\n      tag_736\n      jump\t// in\n    tag_801:\n      swap6\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      pop\n      pop\n      0x20\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_bytes32t_string_memory_ptrt_tokenIdt_bytes32t_bytes32t_uint256, _inArgs=2, _outArgs=6)\n  // newPushTag tag_658, desc: return of Yul function abi_decode_tuple_t_bytes32t_string_memory_ptrt_tokenIdt_bytes32t_bytes32t_uint256\n      tag_802\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup9\n      dup3\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_659, desc: abi_decode_tuple_t_bytes32t_string_memory_ptrt_tokenIdt_bytes32t_bytes32t_uint256\n      dup10\n      add\n      tag_736\n      jump\t// in\n    tag_802:\n      swap5\n      pop\n      pop\n  // return value packer of function (uint256,uint256) external\n  // newPushTag tag_660, desc: return value packer of function (uint256,uint256) external\n      0x40\n      tag_803\n      dup9\n      dup3\n      dup10\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      add\n      tag_690\n      jump\t// in\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_uint256, _inArgs=2, _outArgs=2)\n  // newPushTag tag_661, desc: return of Yul function abi_decode_tuple_t_uint256t_uint256\n    tag_803:\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      swap4\n      pop\n  // end of CompilerUtils::rotateStackUp()\n      pop\n      0x60\n      tag_804\n      dup9\n      dup3\n      dup10\n      add\n      tag_736\n  // return value packer of function (uint256,uint256,uint256,uint256) view external returns (address[],uint256[],uint256[])\n  // newPushTag tag_662, desc: return value packer of function (uint256,uint256,uint256,uint256) view external returns (address[],uint256[],uint256[])\n      jump\t// in\n    tag_804:\n      swap3\n      pop\n      pop\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      0x80\n      tag_805\n      dup9\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256, _inArgs=2, _outArgs=4)\n  // newPushTag tag_663, desc: return of Yul function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256\n      dup3\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup10\n      add\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_664, desc: abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256\n      tag_736\n      jump\t// in\n    tag_805:\n      swap2\n      pop\n      pop\n  // CompilerUtils::fetchFreeMemoryPointer()\n      swap3\n      swap6\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             address[] memory\n  //             uint256[] memory\n  //             uint256[] memory\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed, _inArgs=4, _outArgs=1)\n  // newPushTag tag_665, desc: return of Yul function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed\n      pop\n  // CompilerUtils::moveIntoStack(4, 1)\n  // CompilerUtils::rotateStackUp(5)\n      swap3\n      swap6\n      swap1\n      swap4\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_666, desc: abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed\n      pop\n      jump\t// out\n    tag_584:\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x00\n      dup1\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      0x00\n      0x60\n      dup5\n      dup7\n      sub\n      slt\n  // return value packer of function (uint256) view external returns (uint256)\n  // newPushTag tag_667, desc: return value packer of function (uint256) view external returns (uint256)\n      iszero\n      tag_807\n      jumpi\n      0x00\n      dup1\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      revert\n    tag_807:\n      0x00\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_668, desc: return of Yul function abi_decode_tuple_t_uint256\n      tag_808\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup7\n      dup3\n  // end of CompilerUtils::rotateStackUp()\n      dup8\n      add\n      tag_736\n      jump\t// in\n    tag_808:\n      swap4\n  // CompilerUtils::fetchFreeMemoryPointer()\n      pop\n      pop\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             uint256\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_669, desc: return of Yul function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n      0x20\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      tag_809\n      dup7\n  // end of CompilerUtils::rotateStackUp()\n      dup3\n      dup8\n      add\n  // CompilerUtils::fetchFreeMemoryPointer()\n      tag_736\n      jump\t// in\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n    tag_809:\n      swap3\n      pop\n      pop\n      0x40\n      tag_810\n  // return value packer of function (uint256) view external returns (address[])\n  // newPushTag tag_670, desc: return value packer of function (uint256) view external returns (address[])\n      dup7\n      dup3\n      dup8\n      add\n      tag_721\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      jump\t// in\n    tag_810:\n      swap2\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_671, desc: return of Yul function abi_decode_tuple_t_uint256\n      pop\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      pop\n      swap3\n  // end of CompilerUtils::rotateStackUp()\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n    tag_627:\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x00\n      dup1\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             address[] memory\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_672, desc: return of Yul function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed\n      0x00\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      0x60\n      dup5\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_673, desc: abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed\n      dup7\n      sub\n      slt\n  // CompilerUtils::fetchFreeMemoryPointer()\n      iszero\n      tag_812\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_812:\n      0x00\n  // return value packer of function (uint256,uint256) view external returns (bool)\n  // newPushTag tag_674, desc: return value packer of function (uint256,uint256) view external returns (bool)\n      tag_813\n      dup7\n      dup3\n      dup8\n      add\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      tag_736\n      jump\t// in\n    tag_813:\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256t_uint256, _inArgs=2, _outArgs=2)\n  // newPushTag tag_675, desc: return of Yul function abi_decode_tuple_t_uint256t_uint256\n      swap4\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      pop\n      pop\n  // end of CompilerUtils::rotateStackUp()\n      0x20\n      tag_814\n      dup7\n      dup3\n      dup8\n      add\n  // CompilerUtils::fetchFreeMemoryPointer()\n      tag_736\n      jump\t// in\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             bool\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_676, desc: return of Yul function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed\n    tag_814:\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      swap3\n      pop\n  // end of CompilerUtils::rotateStackUp()\n      pop\n      0x40\n      tag_815\n  // CompilerUtils::fetchFreeMemoryPointer()\n      dup7\n      dup3\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      dup8\n      add\n      tag_736\n      jump\t// in\n    tag_815:\n      swap2\n  // return value packer of function (uint256) external\n  // newPushTag tag_677, desc: return value packer of function (uint256) external\n      pop\n      pop\n      swap3\n      pop\n      swap3\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      pop\n      swap3\n      jump\t// out\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_678, desc: return of Yul function abi_decode_tuple_t_uint256\n    tag_663:\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      0x00\n      dup1\n  // end of CompilerUtils::rotateStackUp()\n      0x00\n      dup1\n      0x80\n      dup6\n      dup8\n      sub\n      slt\n  // CompilerContext::appendYulUtilityFunctions()\n  // newTag tag_679, desc: \n      iszero\n      tag_817\n  // newTag tag_680, desc: abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr\n      jumpi\n      0x00\n  // newTag tag_681, desc: \n  // newTag tag_682, desc: \n      dup1\n  // newTag tag_683, desc: \n      revert\n    tag_817:\n  // newTag tag_684, desc: array_allocation_size_t_array$_t_address_$dyn_memory_ptr\n      0x00\n      tag_818\n      dup8\n  // newTag tag_685, desc: allocate_memory\n      dup3\n      dup9\n      add\n      tag_736\n      jump\t// in\n    tag_818:\n      swap5\n      pop\n      pop\n      0x20\n      tag_819\n      dup8\n      dup3\n      dup9\n      add\n      tag_736\n      jump\t// in\n    tag_819:\n      swap4\n      pop\n      pop\n      0x40\n      tag_820\n  // newTag tag_686, desc: \n      dup8\n      dup3\n      dup9\n      add\n      tag_736\n      jump\t// in\n    tag_820:\n  // newTag tag_687, desc: \n  // newTag tag_688, desc: \n  // newTag tag_689, desc: \n      swap3\n      pop\n      pop\n      0x60\n      tag_821\n      dup8\n      dup3\n      dup9\n  // newTag tag_690, desc: \n      add\n      tag_736\n      jump\t// in\n  // newTag tag_691, desc: abi_decode_t_address\n    tag_821:\n      swap2\n      pop\n      pop\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n    tag_822:\n      0x00\n      tag_824\n      dup4\n      dup4\n      tag_825\n      jump\t// in\n    tag_824:\n      0x20\n      dup4\n      add\n      swap1\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_826:\n      0x00\n      tag_828\n      dup4\n      dup4\n  // newTag tag_692, desc: abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr\n      tag_829\n      jump\t// in\n  // newTag tag_693, desc: \n  // newTag tag_694, desc: \n    tag_828:\n  // newTag tag_695, desc: \n      0x20\n      dup4\n  // newTag tag_696, desc: array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr\n      add\n      swap1\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_830:\n      0x00\n      tag_832\n      dup4\n      dup4\n      tag_833\n      jump\t// in\n    tag_832:\n      swap1\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_834:\n      0x00\n      tag_836\n  // newTag tag_697, desc: \n      dup4\n      dup4\n      tag_837\n      jump\t// in\n    tag_836:\n      0x20\n      dup4\n  // newTag tag_698, desc: \n  // newTag tag_699, desc: \n  // newTag tag_700, desc: \n      add\n      swap1\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n  // newTag tag_701, desc: \n    tag_838:\n      0x00\n      tag_840\n  // newTag tag_702, desc: abi_decode_t_bytes32\n      dup4\n      dup4\n      tag_841\n      jump\t// in\n    tag_840:\n      0x20\n      dup4\n      add\n      swap1\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_825:\n      tag_843\n      dup2\n      tag_844\n      jump\t// in\n    tag_843:\n      dup3\n      mstore\n      pop\n      pop\n      jump\t// out\n    tag_845:\n      tag_847\n      dup2\n      tag_844\n      jump\t// in\n    tag_847:\n      dup3\n      mstore\n      pop\n  // newTag tag_703, desc: abi_decode_available_length_t_string_memory_ptr\n      pop\n      jump\t// out\n  // newTag tag_704, desc: \n  // newTag tag_705, desc: \n    tag_848:\n  // newTag tag_706, desc: \n      0x00\n      tag_850\n  // newTag tag_707, desc: array_allocation_size_t_string_memory_ptr\n      dup3\n      tag_851\n      jump\t// in\n    tag_850:\n      tag_852\n      dup2\n      dup6\n      tag_853\n      jump\t// in\n    tag_852:\n      swap4\n      pop\n      tag_854\n      dup4\n      tag_855\n      jump\t// in\n    tag_854:\n      dup1\n      0x00\n    tag_856:\n  // newTag tag_708, desc: \n      dup4\n      dup2\n      lt\n      iszero\n      tag_858\n      jumpi\n  // newTag tag_709, desc: \n      dup2\n      mload\n      tag_859\n      dup9\n  // newTag tag_710, desc: copy_calldata_to_memory\n      dup3\n      tag_822\n      jump\t// in\n    tag_859:\n      swap8\n      pop\n      tag_860\n      dup4\n      tag_861\n      jump\t// in\n    tag_860:\n      swap3\n      pop\n  // newTag tag_711, desc: \n      pop\n      0x01\n      dup2\n      add\n  // newTag tag_712, desc: \n      swap1\n      pop\n  // newTag tag_713, desc: validator_revert_t_address\n      jump(tag_856)\n    tag_858:\n      pop\n      dup6\n      swap4\n      pop\n      pop\n      pop\n  // newTag tag_714, desc: abi_decode_t_array$_t_address_$dyn_memory_ptr\n      pop\n      swap3\n  // newTag tag_715, desc: \n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_862:\n      0x00\n      tag_864\n  // newTag tag_716, desc: \n      dup3\n      tag_865\n      jump\t// in\n    tag_864:\n      tag_866\n      dup2\n      dup6\n      tag_867\n  // newTag tag_717, desc: \n      jump\t// in\n    tag_866:\n      swap4\n      pop\n      tag_868\n      dup4\n      tag_869\n      jump\t// in\n    tag_868:\n      dup1\n      0x00\n    tag_870:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_872\n      jumpi\n  // newTag tag_718, desc: abi_decode_t_array$_t_bytes32_$dyn_memory_ptr\n      dup2\n      mload\n  // newTag tag_719, desc: \n      tag_873\n      dup9\n      dup3\n      tag_826\n      jump\t// in\n    tag_873:\n      swap8\n  // newTag tag_720, desc: \n      pop\n      tag_874\n      dup4\n      tag_875\n      jump\t// in\n    tag_874:\n      swap3\n      pop\n  // newTag tag_721, desc: \n      pop\n      0x01\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_870)\n    tag_872:\n      pop\n      dup6\n      swap4\n      pop\n      pop\n      pop\n      pop\n      swap3\n      swap2\n  // newTag tag_722, desc: abi_decode_t_bool\n      pop\n      pop\n  // newTag tag_723, desc: \n      jump\t// out\n    tag_876:\n      0x00\n      tag_878\n  // newTag tag_724, desc: \n      dup3\n      tag_879\n  // newTag tag_725, desc: validator_revert_t_bool\n      jump\t// in\n    tag_878:\n      tag_880\n      dup2\n      dup6\n      tag_881\n      jump\t// in\n    tag_880:\n      swap4\n      pop\n      dup4\n  // newTag tag_726, desc: \n      0x20\n      dup3\n      mul\n      dup6\n  // newTag tag_727, desc: \n      add\n      tag_882\n  // newTag tag_728, desc: validator_revert_t_bytes32\n      dup6\n      tag_883\n      jump\t// in\n    tag_882:\n      dup1\n      0x00\n    tag_884:\n      dup6\n      dup2\n  // newTag tag_729, desc: abi_decode_t_string_memory_ptr\n      lt\n      iszero\n  // newTag tag_730, desc: \n      tag_886\n      jumpi\n      dup5\n      dup5\n      sub\n      dup10\n      mstore\n  // newTag tag_731, desc: \n      dup2\n      mload\n      tag_887\n      dup6\n      dup3\n      tag_830\n      jump\t// in\n    tag_887:\n  // newTag tag_732, desc: \n      swap5\n      pop\n      tag_888\n      dup4\n      tag_889\n      jump\t// in\n    tag_888:\n      swap3\n      pop\n      0x20\n      dup11\n      add\n      swap10\n      pop\n      pop\n      0x01\n      dup2\n      add\n  // newTag tag_733, desc: abi_decode_t_tokenId\n      swap1\n      pop\n  // newTag tag_734, desc: \n      jump(tag_884)\n    tag_886:\n      pop\n  // newTag tag_735, desc: \n      dup3\n      swap8\n  // newTag tag_736, desc: validator_revert_t_tokenId\n      pop\n      dup8\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n  // newTag tag_737, desc: abi_decode_t_uint256\n      swap3\n      swap2\n  // newTag tag_738, desc: \n      pop\n      pop\n      jump\t// out\n    tag_890:\n  // newTag tag_739, desc: \n      0x00\n      tag_892\n  // newTag tag_740, desc: validator_revert_t_uint256\n      dup3\n      tag_893\n      jump\t// in\n    tag_892:\n      tag_894\n      dup2\n      dup6\n      tag_895\n      jump\t// in\n    tag_894:\n      swap4\n  // newTag tag_741, desc: \n      pop\n      tag_896\n      dup4\n      tag_897\n      jump\t// in\n    tag_896:\n  // newTag tag_742, desc: \n      dup1\n      0x00\n    tag_898:\n      dup4\n      dup2\n      lt\n      iszero\n  // newTag tag_743, desc: \n      tag_900\n      jumpi\n      dup2\n      mload\n      tag_901\n      dup9\n      dup3\n      tag_834\n      jump\t// in\n    tag_901:\n      swap8\n      pop\n      tag_902\n      dup4\n      tag_903\n      jump\t// in\n    tag_902:\n      swap3\n      pop\n      pop\n      0x01\n      dup2\n      add\n      swap1\n  // newTag tag_744, desc: \n      pop\n      jump(tag_898)\n    tag_900:\n      pop\n      dup6\n  // newTag tag_745, desc: \n      swap4\n      pop\n      pop\n      pop\n      pop\n      swap3\n      swap2\n  // newTag tag_746, desc: \n      pop\n      pop\n      jump\t// out\n    tag_904:\n      0x00\n      tag_906\n      dup3\n      tag_907\n      jump\t// in\n    tag_906:\n      tag_908\n      dup2\n      dup6\n      tag_909\n      jump\t// in\n    tag_908:\n      swap4\n      pop\n      tag_910\n  // newTag tag_747, desc: \n      dup4\n      tag_911\n      jump\t// in\n    tag_910:\n      dup1\n      0x00\n  // newTag tag_748, desc: \n    tag_912:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_914\n      jumpi\n      dup2\n      mload\n      tag_915\n      dup9\n      dup3\n  // newTag tag_749, desc: \n      tag_838\n      jump\t// in\n    tag_915:\n      swap8\n      pop\n      tag_916\n      dup4\n      tag_917\n      jump\t// in\n    tag_916:\n      swap3\n      pop\n  // newTag tag_750, desc: \n      pop\n      0x01\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_912)\n    tag_914:\n      pop\n      dup6\n      swap4\n  // newTag tag_751, desc: \n      pop\n      pop\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_918:\n      tag_920\n      dup2\n  // newTag tag_752, desc: \n      tag_921\n      jump\t// in\n    tag_920:\n      dup3\n      mstore\n      pop\n      pop\n      jump\t// out\n    tag_829:\n      tag_923\n      dup2\n      tag_924\n      jump\t// in\n    tag_923:\n      dup3\n      mstore\n      pop\n      pop\n      jump\t// out\n    tag_925:\n      tag_927\n      dup2\n      tag_924\n  // newTag tag_753, desc: \n      jump\t// in\n    tag_927:\n      dup3\n      mstore\n      pop\n      pop\n  // newTag tag_754, desc: \n      jump\t// out\n    tag_833:\n      0x00\n      tag_929\n      dup3\n      tag_930\n      jump\t// in\n  // newTag tag_755, desc: \n    tag_929:\n      tag_931\n      dup2\n      dup6\n      tag_932\n      jump\t// in\n    tag_931:\n      swap4\n      pop\n      tag_933\n      dup2\n      dup6\n      0x20\n      dup7\n      add\n      tag_934\n      jump\t// in\n    tag_933:\n      tag_935\n      dup2\n  // newTag tag_756, desc: \n      tag_936\n      jump\t// in\n    tag_935:\n      dup5\n      add\n      swap2\n  // newTag tag_757, desc: \n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n  // newTag tag_758, desc: \n    tag_937:\n      0x00\n      tag_939\n      dup3\n      tag_930\n      jump\t// in\n    tag_939:\n      tag_940\n      dup2\n      dup6\n      tag_941\n      jump\t// in\n  // newTag tag_759, desc: \n    tag_940:\n      swap4\n      pop\n      tag_942\n      dup2\n      dup6\n      0x20\n      dup7\n      add\n      tag_934\n      jump\t// in\n    tag_942:\n      tag_943\n      dup2\n      tag_936\n      jump\t// in\n    tag_943:\n      dup5\n      add\n      swap2\n      pop\n  // newTag tag_760, desc: \n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n  // newTag tag_761, desc: \n    tag_944:\n      0x00\n      dup2\n      sload\n      tag_946\n      dup2\n      tag_184\n  // newTag tag_762, desc: \n      jump\t// in\n    tag_946:\n      tag_947\n      dup2\n      dup7\n      tag_941\n      jump\t// in\n    tag_947:\n      swap5\n      pop\n      0x01\n      dup3\n      and\n      0x00\n      dup2\n      eq\n      tag_949\n      jumpi\n      0x01\n  // newTag tag_763, desc: \n      dup2\n      eq\n      tag_950\n      jumpi\n      jump(tag_948)\n  // newTag tag_764, desc: \n    tag_949:\n      0xff\n      not\n      dup4\n      and\n      dup7\n      mstore\n      0x20\n      dup7\n      add\n      swap4\n      pop\n      jump(tag_948)\n    tag_950:\n      tag_951\n      dup6\n      tag_952\n      jump\t// in\n    tag_951:\n      0x00\n    tag_953:\n      dup4\n      dup2\n      lt\n      iszero\n  // newTag tag_765, desc: \n      tag_955\n      jumpi\n      dup2\n      sload\n      dup2\n      dup10\n  // newTag tag_766, desc: \n      add\n      mstore\n      0x01\n      dup3\n      add\n      swap2\n      pop\n  // newTag tag_767, desc: \n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_953)\n    tag_955:\n      dup1\n      dup9\n      add\n      swap6\n  // newTag tag_768, desc: \n      pop\n      pop\n      pop\n    tag_948:\n      pop\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_956:\n      0x00\n      tag_958\n      0x26\n      dup4\n      tag_941\n      jump\t// in\n  // newTag tag_769, desc: \n    tag_958:\n      swap2\n      pop\n      tag_959\n      dup3\n      tag_960\n  // newTag tag_770, desc: \n      jump\t// in\n    tag_959:\n      0x40\n      dup3\n      add\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_961:\n  // newTag tag_771, desc: \n      0x00\n      tag_963\n      0x20\n      dup4\n      tag_941\n      jump\t// in\n    tag_963:\n      swap2\n      pop\n      tag_964\n      dup3\n      tag_965\n  // newTag tag_772, desc: \n      jump\t// in\n    tag_964:\n      0x20\n      dup3\n      add\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_837:\n  // newTag tag_773, desc: \n      tag_967\n      dup2\n      tag_968\n      jump\t// in\n    tag_967:\n      dup3\n      mstore\n      pop\n      pop\n      jump\t// out\n    tag_969:\n      tag_971\n  // newTag tag_774, desc: \n      dup2\n      tag_968\n      jump\t// in\n    tag_971:\n      dup3\n      mstore\n      pop\n      pop\n      jump\t// out\n    tag_841:\n      tag_973\n      dup2\n      tag_974\n      jump\t// in\n    tag_973:\n      dup3\n      mstore\n      pop\n      pop\n      jump\t// out\n    tag_975:\n      tag_977\n      dup2\n      tag_974\n      jump\t// in\n    tag_977:\n      dup3\n      mstore\n      pop\n      pop\n      jump\t// out\n    tag_978:\n      tag_980\n  // newTag tag_775, desc: \n      dup2\n      tag_981\n      jump\t// in\n    tag_980:\n      dup3\n      mstore\n  // newTag tag_776, desc: \n      pop\n      pop\n      jump\t// out\n    tag_595:\n      0x00\n      0x20\n      dup3\n  // newTag tag_777, desc: \n      add\n      swap1\n      pop\n      tag_983\n      0x00\n      dup4\n      add\n      dup5\n      tag_845\n      jump\t// in\n    tag_983:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_672:\n      0x00\n      0x20\n  // newTag tag_778, desc: \n      dup3\n      add\n      swap1\n      pop\n      dup2\n      dup2\n  // newTag tag_779, desc: \n      sub\n      0x00\n      dup4\n      add\n      mstore\n      tag_985\n      dup2\n      dup5\n      tag_848\n      jump\t// in\n    tag_985:\n      swap1\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_665:\n  // newTag tag_780, desc: \n      0x00\n      0x60\n      dup3\n      add\n      swap1\n      pop\n  // newTag tag_781, desc: \n      dup2\n      dup2\n      sub\n      0x00\n      dup4\n      add\n      mstore\n      tag_987\n      dup2\n      dup7\n      tag_848\n      jump\t// in\n  // newTag tag_782, desc: \n    tag_987:\n      swap1\n      pop\n      dup2\n      dup2\n      sub\n      0x20\n      dup4\n      add\n      mstore\n      tag_988\n      dup2\n  // newTag tag_783, desc: \n      dup6\n      tag_904\n      jump\t// in\n    tag_988:\n      swap1\n      pop\n      dup2\n      dup2\n      sub\n      0x40\n      dup4\n      add\n  // newTag tag_784, desc: \n      mstore\n      tag_989\n      dup2\n      dup5\n      tag_904\n      jump\t// in\n    tag_989:\n      swap1\n      pop\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_602:\n      0x00\n      0xa0\n  // newTag tag_785, desc: \n      dup3\n      add\n      swap1\n      pop\n      dup2\n      dup2\n  // newTag tag_786, desc: \n      sub\n      0x00\n      dup4\n      add\n      mstore\n      tag_991\n      dup2\n      dup9\n      tag_862\n      jump\t// in\n    tag_991:\n      swap1\n      pop\n      dup2\n      dup2\n      sub\n      0x20\n      dup4\n      add\n  // newTag tag_787, desc: \n      mstore\n      tag_992\n      dup2\n      dup8\n      tag_890\n      jump\t// in\n  // newTag tag_788, desc: \n    tag_992:\n      swap1\n      pop\n      dup2\n      dup2\n      sub\n      0x40\n      dup4\n      add\n      mstore\n      tag_993\n      dup2\n      dup7\n      tag_862\n      jump\t// in\n    tag_993:\n      swap1\n      pop\n      dup2\n  // newTag tag_789, desc: \n      dup2\n      sub\n      0x60\n      dup4\n      add\n      mstore\n  // newTag tag_790, desc: \n      tag_994\n      dup2\n      dup6\n      tag_862\n      jump\t// in\n    tag_994:\n      swap1\n      pop\n      dup2\n      dup2\n      sub\n      0x80\n      dup4\n      add\n      mstore\n      tag_995\n      dup2\n      dup5\n      tag_904\n      jump\t// in\n    tag_995:\n      swap1\n      pop\n      swap7\n      swap6\n      pop\n      pop\n  // newTag tag_791, desc: \n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_567:\n  // newTag tag_792, desc: \n      0x00\n      0x60\n      dup3\n      add\n      swap1\n      pop\n      dup2\n  // newTag tag_793, desc: \n      dup2\n      sub\n      0x00\n      dup4\n      add\n      mstore\n      tag_997\n      dup2\n      dup7\n      tag_904\n      jump\t// in\n    tag_997:\n  // newTag tag_794, desc: \n      swap1\n      pop\n      dup2\n      dup2\n      sub\n      0x20\n      dup4\n      add\n      mstore\n      tag_998\n      dup2\n      dup6\n      tag_862\n      jump\t// in\n    tag_998:\n      swap1\n      pop\n      dup2\n      dup2\n      sub\n      0x40\n      dup4\n  // newTag tag_795, desc: \n      add\n      mstore\n      tag_999\n      dup2\n      dup5\n      tag_862\n  // newTag tag_796, desc: \n      jump\t// in\n    tag_999:\n      swap1\n      pop\n      swap5\n      swap4\n      pop\n  // newTag tag_797, desc: \n      pop\n      pop\n      pop\n      jump\t// out\n    tag_629:\n      0x00\n      0xc0\n      dup3\n      add\n      swap1\n      pop\n      dup2\n  // newTag tag_798, desc: \n      dup2\n      sub\n      0x00\n      dup4\n      add\n      mstore\n      tag_1001\n      dup2\n      dup10\n      tag_904\n      jump\t// in\n    tag_1001:\n  // newTag tag_799, desc: \n      swap1\n      pop\n      dup2\n      dup2\n      sub\n      0x20\n      dup4\n      add\n      mstore\n      tag_1002\n      dup2\n      dup9\n      tag_876\n      jump\t// in\n    tag_1002:\n      swap1\n      pop\n      dup2\n      dup2\n      sub\n      0x40\n      dup4\n      add\n      mstore\n  // newTag tag_800, desc: \n      tag_1003\n      dup2\n      dup8\n      tag_876\n      jump\t// in\n    tag_1003:\n  // newTag tag_801, desc: \n      swap1\n      pop\n      dup2\n      dup2\n      sub\n      0x60\n      dup4\n  // newTag tag_802, desc: \n      add\n      mstore\n      tag_1004\n      dup2\n      dup7\n      tag_904\n      jump\t// in\n    tag_1004:\n      swap1\n      pop\n      dup2\n      dup2\n  // newTag tag_803, desc: \n      sub\n      0x80\n      dup4\n      add\n      mstore\n      tag_1005\n      dup2\n      dup6\n      tag_904\n      jump\t// in\n    tag_1005:\n      swap1\n  // newTag tag_804, desc: \n      pop\n      dup2\n      dup2\n      sub\n      0xa0\n      dup4\n      add\n      mstore\n      tag_1006\n      dup2\n      dup5\n      tag_904\n  // newTag tag_805, desc: \n      jump\t// in\n    tag_1006:\n      swap1\n      pop\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n  // newTag tag_806, desc: \n      pop\n      jump\t// out\n    tag_575:\n      0x00\n      0x20\n      dup3\n      add\n      swap1\n      pop\n      tag_1008\n      0x00\n      dup4\n      add\n      dup5\n      tag_918\n      jump\t// in\n    tag_1008:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_493:\n      0x00\n      0x20\n  // newTag tag_807, desc: \n      dup3\n      add\n      swap1\n      pop\n      tag_1010\n      0x00\n  // newTag tag_808, desc: \n      dup4\n      add\n      dup5\n      tag_925\n      jump\t// in\n    tag_1010:\n      swap3\n  // newTag tag_809, desc: \n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_353:\n      0x00\n      0x40\n      dup3\n      add\n      swap1\n      pop\n      tag_1012\n  // newTag tag_810, desc: \n      0x00\n      dup4\n      add\n      dup6\n      tag_925\n      jump\t// in\n    tag_1012:\n      dup2\n      dup2\n      sub\n      0x20\n      dup4\n  // newTag tag_811, desc: \n      add\n      mstore\n      tag_1013\n      dup2\n      dup5\n      tag_937\n      jump\t// in\n    tag_1013:\n      swap1\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_606:\n      0x00\n      0xe0\n      dup3\n      add\n      swap1\n  // newTag tag_812, desc: \n      pop\n      tag_1015\n      0x00\n      dup4\n      add\n      dup11\n  // newTag tag_813, desc: \n      tag_925\n      jump\t// in\n    tag_1015:\n      dup2\n      dup2\n      sub\n      0x20\n  // newTag tag_814, desc: \n      dup4\n      add\n      mstore\n      tag_1016\n      dup2\n      dup10\n      tag_937\n      jump\t// in\n    tag_1016:\n      swap1\n      pop\n      tag_1017\n  // newTag tag_815, desc: \n      0x40\n      dup4\n      add\n      dup9\n      tag_969\n      jump\t// in\n    tag_1017:\n      tag_1018\n      0x60\n      dup4\n      add\n      dup8\n  // newTag tag_816, desc: \n      tag_925\n      jump\t// in\n    tag_1018:\n      tag_1019\n      0x80\n      dup4\n      add\n      dup7\n      tag_925\n      jump\t// in\n    tag_1019:\n      tag_1020\n      0xa0\n      dup4\n      add\n      dup6\n      tag_975\n      jump\t// in\n    tag_1020:\n      tag_1021\n      0xc0\n      dup4\n      add\n  // newTag tag_817, desc: \n      dup5\n      tag_975\n      jump\t// in\n    tag_1021:\n      swap9\n      swap8\n  // newTag tag_818, desc: \n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n  // newTag tag_819, desc: \n      pop\n      jump\t// out\n    tag_635:\n      0x00\n      0x0140\n      dup3\n      add\n      swap1\n      pop\n      dup2\n      dup2\n      sub\n  // newTag tag_820, desc: \n      0x00\n      dup4\n      add\n      mstore\n      tag_1023\n      dup2\n      dup14\n      tag_937\n      jump\t// in\n    tag_1023:\n      swap1\n      pop\n  // newTag tag_821, desc: \n      dup2\n      dup2\n      sub\n      0x20\n      dup4\n      add\n      mstore\n      tag_1024\n      dup2\n      dup13\n      tag_937\n      jump\t// in\n  // newTag tag_822, desc: \n    tag_1024:\n      swap1\n      pop\n      tag_1025\n      0x40\n      dup4\n      add\n      dup12\n      tag_845\n      jump\t// in\n    tag_1025:\n      tag_1026\n      0x60\n      dup4\n      add\n      dup11\n      tag_975\n      jump\t// in\n    tag_1026:\n      tag_1027\n  // newTag tag_823, desc: abi_encodeUpdatedPos_t_address_to_t_address\n      0x80\n      dup4\n  // newTag tag_824, desc: \n  // newTag tag_825, desc: \n      add\n      dup10\n      tag_975\n  // newTag tag_826, desc: abi_encode_t_address_to_t_address\n      jump\t// in\n    tag_1027:\n      tag_1028\n      0xa0\n      dup4\n      add\n      dup9\n      tag_975\n      jump\t// in\n    tag_1028:\n      dup2\n      dup2\n      sub\n      0xc0\n  // newTag tag_827, desc: abi_encodeUpdatedPos_t_bytes32_to_t_bytes32\n      dup4\n      add\n  // newTag tag_828, desc: \n  // newTag tag_829, desc: \n      mstore\n      tag_1029\n      dup2\n  // newTag tag_830, desc: abi_encode_t_bytes32_to_t_bytes32\n      dup8\n      tag_862\n      jump\t// in\n    tag_1029:\n      swap1\n      pop\n      dup2\n      dup2\n      sub\n      0xe0\n      dup4\n      add\n      mstore\n      tag_1030\n  // newTag tag_831, desc: abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr\n      dup2\n      dup7\n  // newTag tag_832, desc: \n  // newTag tag_833, desc: \n      tag_848\n      jump\t// in\n    tag_1030:\n  // newTag tag_834, desc: abi_encode_t_string_memory_ptr_to_t_string_memory_ptr\n      swap1\n      pop\n      dup2\n      dup2\n      sub\n      0x0100\n      dup4\n      add\n      mstore\n      tag_1031\n      dup2\n  // newTag tag_835, desc: abi_encodeUpdatedPos_t_tokenId_to_t_tokenId\n      dup6\n      tag_862\n  // newTag tag_836, desc: \n  // newTag tag_837, desc: \n      jump\t// in\n    tag_1031:\n      swap1\n  // newTag tag_838, desc: abi_encode_t_tokenId_to_t_tokenId\n      pop\n      dup2\n      dup2\n      sub\n      0x0120\n      dup4\n      add\n      mstore\n      tag_1032\n      dup2\n      dup5\n      tag_904\n      jump\t// in\n    tag_1032:\n  // newTag tag_839, desc: abi_encodeUpdatedPos_t_uint256_to_t_uint256\n      swap1\n      pop\n  // newTag tag_840, desc: \n  // newTag tag_841, desc: \n      swap12\n      swap11\n      pop\n  // newTag tag_842, desc: abi_encode_t_uint256_to_t_uint256\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_235:\n      0x00\n      0xa0\n      dup3\n  // newTag tag_843, desc: \n  // newTag tag_844, desc: \n      add\n      swap1\n  // newTag tag_845, desc: cleanup_t_address\n      pop\n      dup2\n      dup2\n      sub\n      0x00\n      dup4\n      add\n      mstore\n      tag_1034\n  // newTag tag_846, desc: abi_encode_t_address_to_t_address_fromStack\n      dup2\n  // newTag tag_847, desc: \n  // newTag tag_848, desc: \n      dup9\n      tag_944\n      jump\t// in\n    tag_1034:\n      swap1\n      pop\n      dup2\n      dup2\n      sub\n      0x20\n      dup4\n  // newTag tag_849, desc: abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack\n      add\n      mstore\n  // newTag tag_850, desc: \n  // newTag tag_851, desc: \n      tag_1035\n      dup2\n  // newTag tag_852, desc: array_length_t_array$_t_address_$dyn_memory_ptr\n      dup8\n      tag_944\n      jump\t// in\n  // newTag tag_853, desc: \n    tag_1035:\n      swap1\n      pop\n  // newTag tag_854, desc: array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack\n      tag_1036\n      0x40\n      dup4\n      add\n      dup7\n  // newTag tag_855, desc: \n      tag_978\n      jump\t// in\n  // newTag tag_856, desc: array_dataslot_t_array$_t_address_$dyn_memory_ptr\n    tag_1036:\n      tag_1037\n      0x60\n      dup4\n      add\n  // newTag tag_857, desc: \n  // newTag tag_858, desc: \n  // newTag tag_859, desc: \n      dup6\n      tag_978\n      jump\t// in\n    tag_1037:\n      tag_1038\n      0x80\n      dup4\n      add\n      dup5\n  // newTag tag_860, desc: \n      tag_975\n      jump\t// in\n    tag_1038:\n      swap7\n      swap6\n      pop\n      pop\n      pop\n  // newTag tag_861, desc: \n      pop\n      pop\n  // newTag tag_862, desc: array_nextElement_t_array$_t_address_$dyn_memory_ptr\n      pop\n      jump\t// out\n    tag_243:\n      0x00\n      0x20\n      dup3\n      add\n      swap1\n      pop\n      dup2\n      dup2\n      sub\n      0x00\n      dup4\n      add\n      mstore\n      tag_1040\n      dup2\n      tag_956\n      jump\t// in\n    tag_1040:\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_439:\n  // newTag tag_863, desc: abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack\n      0x00\n      0x20\n  // newTag tag_864, desc: \n  // newTag tag_865, desc: \n      dup3\n      add\n  // newTag tag_866, desc: array_length_t_array$_t_bytes32_$dyn_memory_ptr\n      swap1\n      pop\n      dup2\n  // newTag tag_867, desc: \n      dup2\n      sub\n      0x00\n  // newTag tag_868, desc: array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack\n      dup4\n      add\n      mstore\n      tag_1042\n      dup2\n  // newTag tag_869, desc: \n      tag_961\n      jump\t// in\n  // newTag tag_870, desc: array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr\n    tag_1042:\n      swap1\n      pop\n      swap2\n      swap1\n  // newTag tag_871, desc: \n  // newTag tag_872, desc: \n  // newTag tag_873, desc: \n      pop\n      jump\t// out\n    tag_483:\n      0x00\n      0x20\n      dup3\n      add\n      swap1\n      pop\n  // newTag tag_874, desc: \n      tag_1044\n      0x00\n      dup4\n      add\n      dup5\n      tag_975\n      jump\t// in\n    tag_1044:\n  // newTag tag_875, desc: \n      swap3\n      swap2\n  // newTag tag_876, desc: array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr\n      pop\n      pop\n      jump\t// out\n    tag_592:\n      0x00\n      0x40\n      dup3\n      add\n      swap1\n      pop\n      tag_1046\n      0x00\n      dup4\n      add\n      dup6\n      tag_975\n      jump\t// in\n    tag_1046:\n      tag_1047\n      0x20\n      dup4\n      add\n      dup5\n      tag_918\n      jump\t// in\n    tag_1047:\n      swap4\n      swap3\n  // newTag tag_877, desc: abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack\n      pop\n      pop\n  // newTag tag_878, desc: \n  // newTag tag_879, desc: \n      pop\n      jump\t// out\n  // newTag tag_880, desc: array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr\n    tag_684:\n      0x00\n      tag_1049\n  // newTag tag_881, desc: \n      tag_1050\n      jump\t// in\n    tag_1049:\n  // newTag tag_882, desc: array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack\n      swap1\n      pop\n      tag_1051\n      dup3\n      dup3\n      tag_1052\n      jump\t// in\n    tag_1051:\n      swap2\n      swap1\n      pop\n  // newTag tag_883, desc: \n      jump\t// out\n    tag_1050:\n  // newTag tag_884, desc: array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr\n      0x00\n      0x40\n      mload\n      swap1\n      pop\n  // newTag tag_885, desc: \n  // newTag tag_886, desc: \n  // newTag tag_887, desc: \n      swap1\n      jump\t// out\n    tag_683:\n      0x00\n      0xffffffffffffffff\n      dup3\n      gt\n      iszero\n      tag_1055\n      jumpi\n      tag_1056\n      tag_1057\n      jump\t// in\n    tag_1056:\n  // newTag tag_888, desc: \n    tag_1055:\n      0x20\n      dup3\n      mul\n      swap1\n      pop\n      0x20\n      dup2\n  // newTag tag_889, desc: \n      add\n      swap1\n  // newTag tag_890, desc: array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_695:\n      0x00\n      0xffffffffffffffff\n      dup3\n      gt\n      iszero\n      tag_1059\n      jumpi\n      tag_1060\n      tag_1057\n      jump\t// in\n    tag_1060:\n    tag_1059:\n      0x20\n      dup3\n      mul\n      swap1\n      pop\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_706:\n      0x00\n      0xffffffffffffffff\n      dup3\n      gt\n      iszero\n  // newTag tag_891, desc: abi_encode_t_array$_t_tokenId_$dyn_memory_ptr_to_t_array$_t_tokenId_$dyn_memory_ptr_fromStack\n      tag_1062\n      jumpi\n  // newTag tag_892, desc: \n  // newTag tag_893, desc: \n      tag_1063\n      tag_1057\n  // newTag tag_894, desc: array_length_t_array$_t_tokenId_$dyn_memory_ptr\n      jump\t// in\n    tag_1063:\n    tag_1062:\n  // newTag tag_895, desc: \n      tag_1064\n      dup3\n      tag_936\n  // newTag tag_896, desc: array_storeLengthForEncoding_t_array$_t_tokenId_$dyn_memory_ptr_fromStack\n      jump\t// in\n    tag_1064:\n      swap1\n      pop\n      0x20\n  // newTag tag_897, desc: \n      dup2\n      add\n  // newTag tag_898, desc: array_dataslot_t_array$_t_tokenId_$dyn_memory_ptr\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n  // newTag tag_899, desc: \n  // newTag tag_900, desc: \n  // newTag tag_901, desc: \n      jump\t// out\n    tag_855:\n      0x00\n      dup2\n      swap1\n      pop\n      0x20\n      dup3\n      add\n  // newTag tag_902, desc: \n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_869:\n      0x00\n  // newTag tag_903, desc: \n      dup2\n      swap1\n  // newTag tag_904, desc: array_nextElement_t_array$_t_tokenId_$dyn_memory_ptr\n      pop\n      0x20\n      dup3\n      add\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_883:\n      0x00\n      dup2\n      swap1\n      pop\n      0x20\n      dup3\n      add\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_897:\n      0x00\n      dup2\n      swap1\n  // newTag tag_905, desc: abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack\n      pop\n      0x20\n  // newTag tag_906, desc: \n  // newTag tag_907, desc: \n      dup3\n      add\n  // newTag tag_908, desc: array_length_t_array$_t_uint256_$dyn_memory_ptr\n      swap1\n      pop\n      swap2\n  // newTag tag_909, desc: \n      swap1\n      pop\n      jump\t// out\n  // newTag tag_910, desc: array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack\n    tag_911:\n      0x00\n      dup2\n      swap1\n      pop\n  // newTag tag_911, desc: \n      0x20\n      dup3\n  // newTag tag_912, desc: array_dataslot_t_array$_t_uint256_$dyn_memory_ptr\n      add\n      swap1\n      pop\n      swap2\n      swap1\n  // newTag tag_913, desc: \n  // newTag tag_914, desc: \n  // newTag tag_915, desc: \n      pop\n      jump\t// out\n    tag_952:\n      0x00\n      dup2\n      swap1\n      pop\n      dup2\n      0x00\n  // newTag tag_916, desc: \n      mstore\n      0x20\n      0x00\n      keccak256\n      swap1\n      pop\n      swap2\n      swap1\n  // newTag tag_917, desc: \n      pop\n      jump\t// out\n  // newTag tag_918, desc: array_nextElement_t_array$_t_uint256_$dyn_memory_ptr\n    tag_851:\n      0x00\n      dup2\n      mload\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_865:\n      0x00\n      dup2\n      mload\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_879:\n      0x00\n      dup2\n      mload\n      swap1\n      pop\n      swap2\n      swap1\n  // newTag tag_919, desc: abi_encode_t_bool_to_t_bool_fromStack\n      pop\n  // newTag tag_920, desc: \n  // newTag tag_921, desc: \n      jump\t// out\n    tag_893:\n  // newTag tag_922, desc: cleanup_t_bool\n      0x00\n      dup2\n      mload\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_907:\n  // newTag tag_923, desc: \n  // newTag tag_924, desc: \n      0x00\n      dup2\n  // newTag tag_925, desc: cleanup_t_bytes32\n      mload\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_930:\n      0x00\n  // newTag tag_926, desc: abi_encode_t_bytes32_to_t_bytes32_fromStack\n      dup2\n  // newTag tag_927, desc: \n  // newTag tag_928, desc: \n      mload\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_861:\n      0x00\n      0x20\n      dup3\n      add\n      swap1\n  // newTag tag_929, desc: \n  // newTag tag_930, desc: \n      pop\n      swap2\n  // newTag tag_931, desc: array_length_t_string_memory_ptr\n      swap1\n      pop\n      jump\t// out\n  // newTag tag_932, desc: \n    tag_875:\n      0x00\n      0x20\n  // newTag tag_933, desc: array_storeLengthForEncoding_t_string_memory_ptr\n      dup3\n      add\n      swap1\n      pop\n      swap2\n  // newTag tag_934, desc: \n      swap1\n      pop\n      jump\t// out\n    tag_889:\n      0x00\n      0x20\n  // newTag tag_935, desc: copy_memory_to_memory\n      dup3\n      add\n      swap1\n  // newTag tag_936, desc: \n      pop\n      swap2\n  // newTag tag_937, desc: round_up_to_mul_of_32\n      swap1\n      pop\n      jump\t// out\n    tag_903:\n      0x00\n      0x20\n      dup3\n      add\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n  // newTag tag_938, desc: abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack\n    tag_917:\n      0x00\n  // newTag tag_939, desc: \n  // newTag tag_940, desc: \n      0x20\n      dup3\n      add\n      swap1\n      pop\n  // newTag tag_941, desc: \n      swap2\n      swap1\n      pop\n  // newTag tag_942, desc: array_storeLengthForEncoding_t_string_memory_ptr_fromStack\n      jump\t// out\n    tag_853:\n      0x00\n      dup3\n      dup3\n  // newTag tag_943, desc: \n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      pop\n      swap3\n      swap2\n      pop\n  // newTag tag_944, desc: \n      pop\n      jump\t// out\n    tag_867:\n      0x00\n      dup3\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      pop\n      swap3\n      swap2\n      pop\n      pop\n  // newTag tag_945, desc: abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack\n      jump\t// out\n    tag_881:\n  // newTag tag_946, desc: \n      0x00\n      dup3\n  // newTag tag_947, desc: \n      dup3\n      mstore\n      0x20\n      dup3\n      add\n  // newTag tag_948, desc: \n      swap1\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_895:\n      0x00\n      dup3\n      dup3\n  // newTag tag_949, desc: \n      mstore\n  // newTag tag_950, desc: \n      0x20\n      dup3\n      add\n      swap1\n      pop\n  // newTag tag_951, desc: \n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_909:\n      0x00\n      dup3\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_932:\n  // newTag tag_952, desc: \n      0x00\n      dup3\n  // newTag tag_953, desc: array_dataslot_t_string_storage\n      dup3\n      mstore\n      0x20\n      dup3\n  // newTag tag_954, desc: \n  // newTag tag_955, desc: \n  // newTag tag_956, desc: \n      add\n      swap1\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_941:\n      0x00\n      dup3\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_97:\n      0x00\n      tag_1090\n      dup3\n      tag_974\n      jump\t// in\n    tag_1090:\n      swap2\n      pop\n      tag_1091\n      dup4\n      tag_974\n      jump\t// in\n    tag_1091:\n      swap3\n      pop\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      sub\n      dup3\n      gt\n  // newTag tag_957, desc: abi_encode_t_stringliteral_0ff6cd9d5cae2396a0860cd9d9046debd79d2926a6d9abc06ee4b1a6011cfec4_to_t_string_memory_ptr_fromStack\n      iszero\n      tag_1092\n  // newTag tag_958, desc: \n  // newTag tag_959, desc: \n      jumpi\n      tag_1093\n      tag_1094\n      jump\t// in\n    tag_1093:\n    tag_1092:\n      dup3\n      dup3\n  // newTag tag_960, desc: \n      add\n      swap1\n  // newTag tag_961, desc: store_literal_in_memory_0ff6cd9d5cae2396a0860cd9d9046debd79d2926a6d9abc06ee4b1a6011cfec4\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_1095:\n      0x00\n      dup1\n      dup3\n      swap2\n      pop\n      dup4\n  // newTag tag_962, desc: abi_encode_t_stringliteral_cddd93c73ab4b5d9275f4cce79da0f55e31063d273b20dce0238ee21763dd415_to_t_string_memory_ptr_fromStack\n      swap1\n      pop\n  // newTag tag_963, desc: \n  // newTag tag_964, desc: \n    tag_1097:\n      0x01\n      dup6\n      gt\n      iszero\n      tag_1099\n      jumpi\n      dup1\n  // newTag tag_965, desc: \n      dup7\n      div\n  // newTag tag_966, desc: store_literal_in_memory_cddd93c73ab4b5d9275f4cce79da0f55e31063d273b20dce0238ee21763dd415\n      dup2\n      gt\n      iszero\n      tag_1100\n      jumpi\n      tag_1101\n      tag_1094\n      jump\t// in\n    tag_1101:\n    tag_1100:\n      0x01\n      dup6\n      and\n      iszero\n  // newTag tag_967, desc: \n  // newTag tag_968, desc: \n      tag_1102\n      jumpi\n  // newTag tag_969, desc: cleanup_t_tokenId\n      dup1\n      dup3\n      mul\n      swap2\n      pop\n    tag_1102:\n      dup1\n      dup2\n      mul\n  // newTag tag_970, desc: abi_encode_t_tokenId_to_t_tokenId_fromStack\n      swap1\n  // newTag tag_971, desc: \n  // newTag tag_972, desc: \n      pop\n      tag_1103\n      dup6\n      tag_1104\n      jump\t// in\n    tag_1103:\n      swap5\n      pop\n      jump(tag_1097)\n    tag_1099:\n      swap5\n  // newTag tag_973, desc: \n  // newTag tag_974, desc: \n      pop\n      swap5\n  // newTag tag_975, desc: cleanup_t_uint256\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_207:\n      0x00\n      tag_1106\n      dup3\n  // newTag tag_976, desc: abi_encode_t_uint256_to_t_uint256_fromStack\n      tag_974\n  // newTag tag_977, desc: \n  // newTag tag_978, desc: \n      jump\t// in\n    tag_1106:\n      swap2\n      pop\n      tag_1107\n      dup4\n      tag_974\n      jump\t// in\n    tag_1107:\n      swap3\n      pop\n  // newTag tag_979, desc: abi_encode_t_uint64_to_t_uint256_fromStack\n      tag_1108\n  // newTag tag_980, desc: \n  // newTag tag_981, desc: \n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup5\n  // newTag tag_982, desc: convert_t_uint64_to_t_uint256\n      dup5\n      tag_1109\n      jump\t// in\n    tag_1108:\n      swap1\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n  // newTag tag_983, desc: \n    tag_1109:\n      0x00\n      dup3\n      tag_1111\n      jumpi\n  // newTag tag_984, desc: \n      0x01\n      swap1\n      pop\n      jump(tag_1110)\n    tag_1111:\n      dup2\n      tag_1112\n      jumpi\n      0x00\n      swap1\n      pop\n      jump(tag_1110)\n    tag_1112:\n      dup2\n  // newTag tag_985, desc: \n      0x01\n      dup2\n      eq\n      tag_1114\n      jumpi\n      0x02\n      dup2\n      eq\n      tag_1115\n      jumpi\n      jump(tag_1113)\n  // newTag tag_986, desc: \n    tag_1114:\n      0x01\n      swap2\n      pop\n      pop\n      jump(tag_1110)\n    tag_1115:\n      0xff\n      dup5\n      gt\n      iszero\n      tag_1116\n      jumpi\n      tag_1117\n      tag_1094\n  // newTag tag_987, desc: \n      jump\t// in\n    tag_1117:\n    tag_1116:\n      dup4\n      0x02\n      exp\n      swap2\n      pop\n      dup5\n      dup3\n      gt\n      iszero\n  // newTag tag_988, desc: \n      tag_1118\n      jumpi\n      tag_1119\n      tag_1094\n      jump\t// in\n    tag_1119:\n    tag_1118:\n      pop\n      jump(tag_1110)\n    tag_1113:\n      pop\n      0x20\n      dup4\n      lt\n  // newTag tag_989, desc: \n      0x0133\n      dup4\n      lt\n      and\n      0x4e\n      dup5\n      lt\n      0x0b\n      dup5\n      lt\n      and\n      or\n      iszero\n      tag_1120\n      jumpi\n  // newTag tag_990, desc: \n      dup3\n      dup3\n      exp\n      swap1\n      pop\n      dup4\n      dup2\n      gt\n      iszero\n      tag_1121\n      jumpi\n      tag_1122\n      tag_1094\n      jump\t// in\n    tag_1122:\n    tag_1121:\n      jump(tag_1110)\n  // newTag tag_991, desc: \n    tag_1120:\n      tag_1123\n      dup5\n      dup5\n      dup5\n      0x01\n      tag_1095\n      jump\t// in\n    tag_1123:\n      swap3\n      pop\n      swap1\n  // newTag tag_992, desc: \n      pop\n      dup2\n      dup5\n      div\n      dup2\n      gt\n      iszero\n      tag_1124\n      jumpi\n      tag_1125\n      tag_1094\n      jump\t// in\n    tag_1125:\n    tag_1124:\n      dup2\n  // newTag tag_993, desc: \n      dup2\n      mul\n      swap1\n      pop\n    tag_1110:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_209:\n      0x00\n      tag_1127\n      dup3\n  // newTag tag_994, desc: \n      tag_974\n      jump\t// in\n    tag_1127:\n      swap2\n      pop\n      tag_1128\n      dup4\n      tag_974\n      jump\t// in\n    tag_1128:\n      swap3\n      pop\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      div\n  // newTag tag_995, desc: \n      dup4\n      gt\n      dup3\n      iszero\n      iszero\n      and\n      iszero\n      tag_1129\n      jumpi\n      tag_1130\n      tag_1094\n      jump\t// in\n    tag_1130:\n    tag_1129:\n      dup3\n  // newTag tag_996, desc: \n      dup3\n      mul\n      swap1\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_129:\n      0x00\n      tag_1132\n      dup3\n      tag_974\n      jump\t// in\n    tag_1132:\n      swap2\n      pop\n      tag_1133\n      dup4\n  // newTag tag_997, desc: \n      tag_974\n      jump\t// in\n    tag_1133:\n      swap3\n      pop\n      dup3\n      dup3\n      lt\n      iszero\n      tag_1134\n      jumpi\n      tag_1135\n  // newTag tag_998, desc: \n      tag_1094\n      jump\t// in\n    tag_1135:\n    tag_1134:\n      dup3\n      dup3\n      sub\n      swap1\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_844:\n  // newTag tag_999, desc: \n      0x00\n      tag_1137\n      dup3\n      tag_1138\n      jump\t// in\n    tag_1137:\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_921:\n      0x00\n      dup2\n  // newTag tag_1000, desc: \n      iszero\n      iszero\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_924:\n      0x00\n      dup2\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_968:\n  // newTag tag_1001, desc: \n      0x00\n      tag_1142\n      dup3\n      tag_1143\n      jump\t// in\n    tag_1142:\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n  // newTag tag_1002, desc: \n    tag_1138:\n      0x00\n      0xffffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_974:\n      0x00\n      dup2\n      swap1\n  // newTag tag_1003, desc: \n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_1146:\n      0x00\n      0xffffffffffffffff\n      dup3\n      and\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n  // newTag tag_1004, desc: \n      jump\t// out\n    tag_1143:\n      0x00\n      0xffffffffffffffffffff\n      dup3\n      and\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_981:\n      0x00\n      tag_1150\n  // newTag tag_1005, desc: \n      dup3\n      tag_1146\n      jump\t// in\n    tag_1150:\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_709:\n      dup3\n      dup2\n      dup4\n      calldatacopy\n  // newTag tag_1006, desc: \n      0x00\n      dup4\n      dup4\n      add\n      mstore\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_934:\n      0x00\n    tag_1153:\n      dup4\n      dup2\n      lt\n  // newTag tag_1007, desc: \n      iszero\n      tag_1155\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_1153)\n    tag_1155:\n      dup4\n      dup2\n  // newTag tag_1008, desc: \n      gt\n      iszero\n      tag_1156\n      jumpi\n      0x00\n  // newTag tag_1009, desc: \n      dup5\n      dup5\n      add\n      mstore\n    tag_1156:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_184:\n      0x00\n      0x02\n      dup3\n      div\n      swap1\n  // newTag tag_1010, desc: \n      pop\n      0x01\n      dup3\n      and\n      dup1\n  // newTag tag_1011, desc: \n      tag_1158\n      jumpi\n      0x7f\n      dup3\n      and\n      swap2\n      pop\n    tag_1158:\n      0x20\n      dup3\n      lt\n      dup2\n      eq\n      iszero\n      tag_1159\n      jumpi\n  // newTag tag_1012, desc: \n      tag_1160\n      tag_1161\n      jump\t// in\n    tag_1160:\n    tag_1159:\n  // newTag tag_1013, desc: \n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_1052:\n      tag_1163\n      dup3\n      tag_936\n      jump\t// in\n    tag_1163:\n      dup2\n      add\n      dup2\n      dup2\n  // newTag tag_1014, desc: \n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      iszero\n      tag_1164\n      jumpi\n      tag_1165\n      tag_1057\n      jump\t// in\n    tag_1165:\n    tag_1164:\n      dup1\n      0x40\n      mstore\n      pop\n  // newTag tag_1015, desc: \n      pop\n      pop\n      jump\t// out\n    tag_64:\n      0x00\n  // newTag tag_1016, desc: \n      tag_1167\n      dup3\n      tag_974\n      jump\t// in\n    tag_1167:\n      swap2\n      pop\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup3\n      eq\n      iszero\n      tag_1168\n      jumpi\n      tag_1169\n      tag_1094\n  // newTag tag_1017, desc: \n      jump\t// in\n    tag_1169:\n    tag_1168:\n      0x01\n      dup3\n      add\n      swap1\n      pop\n  // newTag tag_1018, desc: \n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_1094:\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n      mstore\n  // newTag tag_1019, desc: \n      0x11\n      0x04\n      mstore\n      0x24\n      0x00\n      revert\n    tag_1161:\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // newTag tag_1020, desc: \n      0x00\n      mstore\n      0x22\n      0x04\n      mstore\n      0x24\n      0x00\n      revert\n  // newTag tag_1021, desc: \n    tag_1057:\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n      0x00\n      mstore\n      0x41\n      0x04\n      mstore\n      0x24\n  // newTag tag_1022, desc: \n      0x00\n      revert\n    tag_936:\n      0x00\n      0x1f\n      not\n      0x1f\n      dup4\n      add\n      and\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_1104:\n      0x00\n      dup2\n      0x01\n      shr\n      swap1\n  // newTag tag_1023, desc: \n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_960:\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n      0x00\n      dup3\n      add\n      mstore\n      0x6464726573730000000000000000000000000000000000000000000000000000\n  // newTag tag_1024, desc: \n      0x20\n      dup3\n      add\n      mstore\n      pop\n      jump\t// out\n    tag_965:\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x00\n      dup3\n      add\n      mstore\n      pop\n      jump\t// out\n    tag_712:\n  // newTag tag_1025, desc: \n      tag_1178\n      dup2\n      tag_844\n      jump\t// in\n    tag_1178:\n      dup2\n      eq\n      tag_1179\n  // newTag tag_1026, desc: \n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1179:\n      pop\n      jump\t// out\n    tag_724:\n  // newTag tag_1027, desc: \n      tag_1181\n      dup2\n      tag_921\n      jump\t// in\n    tag_1181:\n      dup2\n      eq\n      tag_1182\n  // newTag tag_1028, desc: \n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1182:\n      pop\n      jump\t// out\n    tag_727:\n  // newTag tag_1029, desc: \n      tag_1184\n      dup2\n      tag_924\n      jump\t// in\n    tag_1184:\n      dup2\n      eq\n      tag_1185\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1185:\n      pop\n      jump\t// out\n  // newTag tag_1030, desc: \n    tag_735:\n      tag_1187\n      dup2\n      tag_968\n      jump\t// in\n    tag_1187:\n      dup2\n      eq\n      tag_1188\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1188:\n      pop\n  // newTag tag_1031, desc: \n      jump\t// out\n    tag_739:\n      tag_1190\n      dup2\n      tag_974\n      jump\t// in\n    tag_1190:\n      dup2\n      eq\n      tag_1191\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1191:\n  // newTag tag_1032, desc: \n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582000000000000000000000000000000000000000000000000000000000000000000029\n}\n","bytecode":{"generatedSources":[],"linkReferences":{},"object":"608060405262000015336200001b60201b60201c565b620000e4565b60008060009054906101000a900474ffffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548174ffffffffffffffffffffffffffffffffffffffffff021916908374ffffffffffffffffffffffffffffffffffffffffff1602179055508174ffffffffffffffffffffffffffffffffffffffffff168174ffffffffffffffffffffffffffffffffffffffffff167f9a78605a08fe53b920adfc51344c28abd504bd2378db8d7dcdd50e527cbebe5760405160405180910390a35050565b615f7480620000f46000396000f3fe608060405261402e565b6000600a6000848152602001908152602001600021600083815260200190815260200160002180549050905092915050565b6060806060600061008b600760008774ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002161301c565b90508067ffffffffffffffff8111156100cd577fe0f8f85500000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156100fb5781602001602082028036833780820191505090505b5093508067ffffffffffffffff81111561013e577fe0f8f85500000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561016c5781602001602082028036833780820191505090505b5092508067ffffffffffffffff8111156101af577fe0f8f85500000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156101dd5781602001602082028036833780820191505090505b50915060005b61022c600760008874ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002161301c565b81101561043a576000600760008874ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002160000182815481106102b1577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002101549050808683815181106102f8577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250506001818154811061033e577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600021906007020160000154858381518110610389577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050600181815481106103cf577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002190600702016001015484838151811061041a577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505050808061043290615d69565b9150506101e3565b50509193909250565b600080610450848461302d565b90506000806000809150915060005b836008018054905081101561051c57828460080182815481106104ab577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002101541115610509578360080181815481106104f8577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600021015492508091505b808061051490615d69565b91505061045f565b5080935050505092915050565b60008060096000868152602001908152602001600021600085815260200190815260200160002160008474ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff168152602001908152602001600021600101541190509392505050565b60006105a98383613090565b905092915050565b84846105bd82826130ff565b6105c633610ab4565b6105cf57600080fd5b6105d98786612426565b6105e257600080fd5b6105ed878787610529565b156105f757600080fd5b6000610603888861302d565b90508060050180549050851061061857600080fd5b600a60008981526020019081526020016000216000888152602001908152602001600021869080600181540180825580915050600190039060005260206000210160009091909190916101000a81548174ffffffffffffffffffffffffffffffffffffffffff021916908374ffffffffffffffffffffffffffffffffffffffffff1602179055506000600960008a8152602001908152602001600021600089815260200190815260200160002160008874ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff168152602001908152602001600021905085816000018190555084816001018190555084826008018781548110610755577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002101600082825461076e91906159ce565b92505081905550505050505050505050565b8261078a81613116565b6000600285815481106107c6577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002190600202019050838160000181905550828160010160006101000a81548160ff0219169083151502179055505050505050565b8161080c8161313d565b60005b600560008581526020019081526020016000218054905081101561092157600060066000868152602001908152602001600021600060056000888152602001908152602001600021848154811061088f577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000210160009054906101000a900474ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002160006101000a81548160ff021916908315150217905550808061091990615d69565b91505061080f565b5060005b82518110156109ec57600160066000868152602001908152602001600021600085848151811061097e577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015174ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002160006101000a81548160ff02191690831515021790555080806109e490615d69565b915050610925565b5081600560008581526020019081526020016000219080519060200190610a14929190613df6565b50505050565b600080600060028481548110610a59577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000219060020201905080600001548160010160009054906101000a900460ff169250925050915091565b60008060009054906101000a900474ffffffffffffffffffffffffffffffffffffffffff16905090565b6000600b60008374ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002160009054906101000a900460ff169050919050565b60608060608060606001805490508710156110d35760008688600180549050610b359190615bef565b11610b505787600180549050610b4b9190615bef565b610b52565b865b90508067ffffffffffffffff811115610b94577fe0f8f85500000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610bc25781602001602082028036833780820191505090505b5095508067ffffffffffffffff811115610c05577fe0f8f85500000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610c335781602001602082028036833780820191505090505b5094508067ffffffffffffffff811115610c76577fe0f8f85500000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610ca45781602001602082028036833780820191505090505b5093508067ffffffffffffffff811115610ce7577fe0f8f85500000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610d155781602001602082028036833780820191505090505b5092508067ffffffffffffffff811115610d58577fe0f8f85500000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610d865781602001602082028036833780820191505090505b50915060008890505b60018054905081108015610dad57508789610daa91906159ce565b81105b156110d05760018181548110610dec577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600021906007020160000154878a83610e0b9190615bef565b81518110610e42577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505060018181548110610e88577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600021906007020160040160009054906101000a900469ffffffffffffffffffff16868a83610ebd9190615bef565b81518110610ef4577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001019069ffffffffffffffffffff16908169ffffffffffffffffffff168152505060018181548110610f54577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600021906007020160010154858a83610f739190615bef565b81518110610faa577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505060018181548110610ff0577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600021906007020160020154848a8361100f9190615bef565b81518110611046577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505061106d60046000838152602001908152602001600021613153565b838a8361107a9190615bef565b815181106110b1577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101818152505080806110c890615d69565b915050610d8f565b50505b9295509295909350565b60006060600080600080600060018881548110611123577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000219060070201600001546001898154811061116f577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600021906007020160030160018a815481106111ba577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600021906007020160040160009054906101000a900469ffffffffffffffffffff1660018b8154811061121c577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002190600702016001015460018c81548110611268577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600021906007020160020154611295600460008f8152602001908152602001600021613153565b60018e815481106112cf577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000219060070201600501548580546112ed90615d06565b80601f016020809104026020016040519081016040528092919081815260200182805461131990615d06565b80156113665780601f1061133b57610100808354040283529160200191611366565b820191906000526020600021905b81548152906001019060200180831161134957829003601f168201915b505050505095509650965096509650965096509650919395979092949650565b60006008600083815260200190815260200160002160009054906101000a900474ffffffffffffffffffffffffffffffffffffffffff169050919050565b60008174ffffffffffffffffffffffffffffffffffffffffff166008600085815260200190815260200160002160009054906101000a900474ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff1614905092915050565b8861143d81613164565b4669ffffffffffffffffffff1660018b81548110611484577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600021906007020160040160009054906101000a900469ffffffffffffffffffff1669ffffffffffffffffffff16146114c257600080fd5b600060028b815481106114fe577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002190600202019050600061151a8c336124dd565b90508160010160009054906101000a900460ff161561153e578061153d57600080fd5b5b80806115b0575060018c8154811061157f577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600021906007020160050154600a61159d9190615a77565b82600001546115ac9190615b95565b3410155b6115b957600080fd5b87891080156115c757504288115b6115d057600080fd5b60008914806115df5750428910155b6115e857600080fd5b6001805490508c106115f957600080fd5b600086511161160757600080fd5b855185511461161557600080fd5b855184511461162357600080fd5b6000600360008e8152602001908152602001600021805490509050600360008e81526020019081526020016000216001816001815401808255809150500390600052602060002190505060006116798e8361302d565b90508c816001019080519060200190611693929190613e82565b508b8160000190805190602001906116ac929190613e82565b5060008b146116bb578a6116bd565b425b8160020160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550898160020160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508781600501908051906020019061172a929190613f08565b5086816006019080519060200190611743929190613df6565b508581600701908051906020019061175c929190613f08565b50338160040160006101000a81548174ffffffffffffffffffffffffffffffffffffffffff021916908374ffffffffffffffffffffffffffffffffffffffffff160217905550875167ffffffffffffffff8111156117e3577fe0f8f85500000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156118115781602001602082028036833780820191505090505b50816008019080519060200190611829929190613f55565b508881600301819055503374ffffffffffffffffffffffffffffffffffffffffff168e837f4dd34088f7b48a18379b03b82c8b41e51a23bc7c71d55ffccc9e705ba491575e84600101856000018660020160009054906101000a900467ffffffffffffffff168760020160089054906101000a900467ffffffffffffffff1688600301546040516118be9594939291906156dc565b60405180910390a43374ffffffffffffffffffffffffffffffffffffffffff164669ffffffffffffffffffff16346040516000604051905080820390838587f1505050505050505050505050505050505050565b61191a61319c565b600074ffffffffffffffffffffffffffffffffffffffffff168174ffffffffffffffffffffffffffffffffffffffffff16141561198c576040517f4b2bae7e0000000000000000000000000000000000000000000000000000000081526004016119839061573d565b60405180910390fd5b61199581613215565b50565b69152d02c7e14af680000081565b6119af81613164565b6119d433600460008481526020019081526020016000216132de90919063ffffffff16565b611a2781600760003374ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002161362c90919063ffffffff16565b50565b611a348133612426565b15611a3e57600080fd5b611a66336001600460008581526020019081526020016000216137e99092919063ffffffff16565b611abc816001600760003374ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000216139ec9092919063ffffffff16565b50565b60608060608060608060008890505b600360008b81526020019081526020016000218054905081108015611afd57508789611afa91906159ce565b81105b156120145780878a83611b109190615bef565b81518110611b47577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050600360008b81526020019081526020016000218181548110611b9e577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002190600a02016001018054611bba90615d06565b80601f0160208091040260200160405190810160405280929190818152602001828054611be690615d06565b8015611c335780601f10611c0857610100808354040283529160200191611c33565b820191906000526020600021905b815481529060010190602001808311611c1657829003601f168201915b5050505050868a83611c459190615bef565b81518110611c7c577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250600360008b81526020019081526020016000218181548110611cd2577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002190600a02016000018054611cee90615d06565b80601f0160208091040260200160405190810160405280929190818152602001828054611d1a90615d06565b8015611d675780601f10611d3c57610100808354040283529160200191611d67565b820191906000526020600021905b815481529060010190602001808311611d4a57829003601f168201915b5050505050858a83611d799190615bef565b81518110611db0577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250600360008b81526020019081526020016000218181548110611e06577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002190600a020160020160009054906101000a900467ffffffffffffffff1667ffffffffffffffff16848a83611e439190615bef565b81518110611e7a577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050600360008b81526020019081526020016000218181548110611ed1577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002190600a020160020160089054906101000a900467ffffffffffffffff1667ffffffffffffffff16838a83611f0e9190615bef565b81518110611f45577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050600360008b81526020019081526020016000218181548110611f9c577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002190600a020160050180549050828a83611fbe9190615bef565b81518110611ff5577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050808061200c90615d69565b915050611ace565b5093975093979195509350565b61202961319c565b6001600b60008374ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002160006101000a81548160ff02191690831515021790555050565b60608060008060008060608060608060006120a18d8d61302d565b905080600101816000018260040160009054906101000a900474ffffffffffffffffffffffffffffffffffffffffff168360020160009054906101000a900467ffffffffffffffff168460020160089054906101000a900467ffffffffffffffff1685600301548660050187600601886007018960080189805461212490615d06565b80601f016020809104026020016040519081016040528092919081815260200182805461215090615d06565b801561219d5780601f106121725761010080835404028352916020019161219d565b820191906000526020600021905b81548152906001019060200180831161218057829003601f168201915b505050505099508880546121b090615d06565b80601f01602080910402602001604051908101604052809291908181526020018280546121dc90615d06565b80156122295780601f106121fe57610100808354040283529160200191612229565b820191906000526020600021905b81548152906001019060200180831161220c57829003601f168201915b505050505098508667ffffffffffffffff1696508567ffffffffffffffff1695508380548060200260200160405190810160405280929190818152602001828054801561229557602002820191906000526020600021905b815481526020019060010190808311612281575b505050505093508280548060200260200160405190810160405280929190818152602001828054801561231f57602002820191906000526020600021905b8160009054906101000a900474ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116122d3575b505050505092508180548060200260200160405190810160405280929190818152602001828054801561237157602002820191906000526020600021905b81548152602001906001019080831161235d575b50505050509150808054806020026020016040519081016040528092919081815260200182805480156123c357602002820191906000526020600021905b8154815260200190600101908083116123af575b505050505090509a509a509a509a509a509a509a509a509a509a50509295989b9194979a5092959850565b6000426123fb848461302d565b60020160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1610905092915050565b6000600161244f8360046000878152602001908152602001600021613acd90919063ffffffff16565b14905092915050565b61246061319c565b6000600b60008374ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002160006101000a81548160ff02191690831515021790555050565b600060036000838152602001908152602001600021805490509050919050565b60006006600084815260200190815260200160002160008374ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002160009054906101000a900460ff1680612550575061254f83836113c4565b5b905092915050565b8661256281613116565b60006001898154811061259e577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002190600702019050878160000181905550868160030190805190602001906125cf929190613e82565b50858160040160006101000a81548169ffffffffffffffffffff021916908369ffffffffffffffffffff1602179055508460ff168160050181905550838160010181905550828160020181905550505050505050505050565b6000600180549050905090565b61263d61319c565b6126476000613215565b565b69152d02c7e14af6800000341480156126835750695649544520544f4b454e69ffffffffffffffffffff164669ffffffffffffffffffff16145b61268c57600080fd5b6000600180549050905061269e613fa2565b8781600001818152505086816060018190525085816080019069ffffffffffffffffffff16908169ffffffffffffffffffff16815250508481602001818152505083816040018181525050828160a0018181525050428160c001818152505060018190806001815401808255809150506001900390600052602060002190600702016000909190919091506000820151816000015560208201518160010155604082015181600201556060820151816003019080519060200190612763929190613e82565b5060808201518160040160006101000a81548169ffffffffffffffffffff021916908369ffffffffffffffffffff16021790555060a0820151816005015560c082015181600601555050600260018160018154018082558091505003906000526020600021905050336008600084815260200190815260200160002160006101000a81548174ffffffffffffffffffffffffffffffffffffffffff021916908374ffffffffffffffffffffffffffffffffffffffffff160217905550878669ffffffffffffffffffff16837f92ac3827b776c572e5d72006a513f694b98b56b65e899bbdde95c3b1103b00f2888b60405161285f929190615570565b60405180910390a461287082611a2a565b5050505050505050565b81816128868282613b1b565b83836128928282612e9b565b1561289c57600080fd5b60006128a88787610443565b90506128b5878783613b32565b50505050505050565b6060806060600a6000888152602001908152602001600021600087815260200190815260200160002180549050851015612d995760008486600a60008b815260200190815260200160002160008a8152602001908152602001600021805490506129289190615bef565b116129655785600a60008a81526020019081526020016000216000898152602001908152602001600021805490506129609190615bef565b612967565b845b90508067ffffffffffffffff8111156129a9577fe0f8f85500000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156129d75781602001602082028036833780820191505090505b5093508067ffffffffffffffff811115612a1a577fe0f8f85500000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015612a485781602001602082028036833780820191505090505b5092508067ffffffffffffffff811115612a8b577fe0f8f85500000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015612ab95781602001602082028036833780820191505090505b50915060008690505b600a60008a815260200190815260200160002160008981526020019081526020016000218054905081108015612b0257508587612aff91906159ce565b81105b15612d96576000600a60008b815260200190815260200160002160008a81526020019081526020016000218281548110612b65577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000210160009054906101000a900474ffffffffffffffffffffffffffffffffffffffffff16905080868984612ba19190615bef565b81518110612bd8577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001019074ffffffffffffffffffffffffffffffffffffffffff16908174ffffffffffffffffffffffffffffffffffffffffff1681525050600960008b815260200190815260200160002160008a815260200190815260200160002160008274ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002160010154858984612c889190615bef565b81518110612cbf577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050600960008b815260200190815260200160002160008a815260200190815260200160002160008274ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002160000154848984612d3f9190615bef565b81518110612d76577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050508080612d8e90615d69565b915050612ac2565b50505b9450945094915050565b600060018281548110612ddf577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000219060070201600601549050919050565b606060056000838152602001908152602001600021805480602002602001604051908101604052809291908181526020018280548015612e8f57602002820191906000526020600021905b8160009054906101000a900474ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612e43575b50505050509050919050565b6000600180811115612ed6577fe0f8f85500000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b612ee0848461302d565b60090160009054906101000a900460ff166001811115612f29577fe0f8f85500000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14905092915050565b612f3b81613cdf565b612f4457600080fd5b600060018281548110612f80577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000219060070201600601819055506008600082815260200190815260200160002160009054906101000a900474ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16695649544520544f4b454e69ffffffffffffffffffff1669152d02c7e14af68000006040516000604051905080820390838587f15050505050565b600081600001805490509050919050565b600060036000848152602001908152602001600021828154811061307a577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002190600a0201905092915050565b60004261309d848461302d565b60020160009054906101000a900467ffffffffffffffff1667ffffffffffffffff16111580156130f75750426130d3848461302d565b60020160089054906101000a900467ffffffffffffffff1667ffffffffffffffff16115b905092915050565b6131098282613090565b61311257600080fd5b5050565b61312081336124dd565b80613131575061313081336113c4565b5b61313a57600080fd5b50565b61314781336113c4565b61315057600080fd5b50565b600081600001805490509050919050565b61316e8133612426565b8061317f575061317e81336124dd565b5b80613190575061318f81336113c4565b5b61319957600080fd5b50565b3374ffffffffffffffffffffffffffffffffffffffffff166131bc610a8a565b74ffffffffffffffffffffffffffffffffffffffffff1614613213576040517f4b2bae7e00000000000000000000000000000000000000000000000000000000815260040161320a9061575d565b60405180910390fd5b565b60008060009054906101000a900474ffffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548174ffffffffffffffffffffffffffffffffffffffffff021916908374ffffffffffffffffffffffffffffffffffffffffff1602179055508174ffffffffffffffffffffffffffffffffffffffffff168174ffffffffffffffffffffffffffffffffffffffffff167f9a78605a08fe53b920adfc51344c28abd504bd2378db8d7dcdd50e527cbebe5760405160405180910390a35050565b8160030160008274ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002160009054906101000a900460ff1661333857613628565b8160030160008274ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002160006101000a81549060ff02191690558160010160008274ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000216000905560008260020160008374ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000215490506000600184600001805490506134309190615bef565b90506000846000018281548110613470577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000210160009054906101000a900474ffffffffffffffffffffffffffffffffffffffffff169050828560020160008374ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff168152602001908152602001600021819055508460020160008574ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff168152602001908152602001600021600090558085600001848154811061356a577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000210160006101000a81548174ffffffffffffffffffffffffffffffffffffffffff021916908374ffffffffffffffffffffffffffffffffffffffffff160217905550846000018054806135ee577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6001900381819060005260206000210160006101000a81549074ffffffffffffffffffffffffffffffffffffffffff021916905590555050505b5050565b81600301600082815260200190815260200160002160009054906101000a900460ff16613658576137e5565b81600301600082815260200190815260200160002160006101000a81549060ff02191690558160010160008281526020019081526020016000216000905560008260020160008381526020019081526020016000215490506000600184600001805490506136c69190615bef565b90506000846000018281548110613706577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000210154905082856002016000838152602001908152602001600021819055508460020160008581526020019081526020016000216000905580856000018481548110613783577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000210181905550846000018054806137cb577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600190038181906000526020600021016000905590555050505b5050565b8260030160008374ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002160009054906101000a900460ff161561388c57808360010160008474ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff168152602001908152602001600021819055506139e7565b60018360030160008474ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002160006101000a81548160ff021916908315150217905550808360010160008474ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000218190555082600001805490508360020160008474ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000218190555082600001829080600181540180825580915050600190039060005260206000210160009091909190916101000a81548174ffffffffffffffffffffffffffffffffffffffffff021916908374ffffffffffffffffffffffffffffffffffffffffff1602179055505b505050565b82600301600083815260200190815260200160002160009054906101000a900460ff1615613a33578083600101600084815260200190815260200160002181905550613ac8565b600183600301600084815260200190815260200160002160006101000a81548160ff0219169083151502179055508083600101600084815260200190815260200160002181905550826000018054905083600201600084815260200190815260200160002181905550826000018290806001815401808255809150506001900390600052602060002101600090919091909150555b505050565b60008260010160008374ffffffffffffffffffffffffffffffffffffffffff1674ffffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002154905092915050565b613b2582826123ee565b613b2e57600080fd5b5050565b6000613b3e848461302d565b905080600501805490508210613b5357600080fd5b6000816006018381548110613b91577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000210160009054906101000a900474ffffffffffffffffffffffffffffffffffffffffff1690506000826007018481548110613bfd577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002101549050600074ffffffffffffffffffffffffffffffffffffffffff168274ffffffffffffffffffffffffffffffffffffffffff1614613c4b57613c4a8282613d9b565b5b60018360090160006101000a81548160ff02191690836001811115613c99577fe0f8f85500000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555085857f9b6f2cef359ea2598ec10bc9ad9d2d0da42bed0a38d593c22e70fda4c9a38b4486604051613ccf919061577d565b60405180910390a3505050505050565b60008060018381548110613d1c577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002190600702016006015414158015613d945750426276a70060018481548110613d76577fe0f8f85500000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600021906007020160060154613d9291906159ce565b105b9050919050565b8174ffffffffffffffffffffffffffffffffffffffffff1663b7a61296826040518263ffffffff1660e01b8152600401613dd59190615555565b60006040519050808203906000695649544520544f4b454e86f15050505050565b828054828255906000526020600021908101928215613e71579160200282015b82811115613e705782518260006101000a81548174ffffffffffffffffffffffffffffffffffffffffff021916908374ffffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190613e16565b5b509050613e7e9190613ff4565b5090565b828054613e8e90615d06565b90600052602060002190601f016020900481019282613eb05760008555613ef7565b82601f10613ec957805160ff1916838001178555613ef7565b82800160010185558215613ef7579182015b82811115613ef6578251825591602001919060010190613edb565b5b509050613f049190613ff4565b5090565b828054828255906000526020600021908101928215613f44579160200282015b82811115613f43578251825591602001919060010190613f28565b5b509050613f519190614011565b5090565b828054828255906000526020600021908101928215613f91579160200282015b82811115613f90578251825591602001919060010190613f75565b5b509050613f9e9190613ff4565b5090565b6040518060e0016040528060008019168152602001600080191681526020016000801916815260200160608152602001600069ffffffffffffffffffff16815260200160008152602001600081525090565b5b8082111561400d576000816000905550600101613ff5565b5090565b5b8082111561402a576000816000905550600101614012565b5090565b600436106141df5760003560e01c8063082f5974146141e157806308b0311c146142115780631244b9ea146142435780631927510a146142735780631c2aa460146142a3578063224cf1c7146142d35780632518a525146142ef5780632b61f5f11461430b57806330fbeb911461432757806333613933146143585780633365328914614376578063402993f4146143a6578063555fec4b146143da57806358faf7e614614410578063758ae6fe14614440578063777cd61d146144705780637bbcbead1461448c5780637e04aabc146144a85780638264b3c5146144c657806382ab3b2f146144e257806384edb26d146144fe5780639ef90ba314614533578063b081f6951461454f578063bc1b860114614588578063bc32df2d146145b8578063bf9a72cb146145e8578063c19dd0e214614604578063c2a9073d14614634578063c371523314614664578063c4ca0d2514614680578063cfa286aa1461469e578063d2f708ae146146a8578063d36f0336146146c4578063de28fd0e146146e0578063df0b509914614712578063e9fede5314614742578063ea5e42e314614772578063ed3c2f29146147a2575b005b6141fb60048036038101906141f69190614d32565b610009565b604051614208919061577d565b60405180910390f35b61422b600480360381019061422691906149bb565b61003b565b60405161423a93929190615463565b60405180910390f35b61425d60048036038101906142589190614d32565b610443565b60405161426a919061577d565b60405180910390f35b61428d60048036038101906142889190614d6e565b610529565b60405161429a919061553a565b60405180910390f35b6142bd60048036038101906142b89190614d32565b61059d565b6040516142ca919061553a565b60405180910390f35b6142ed60048036038101906142e89190614dbd565b6105b1565b005b61430960048036038101906143049190614e34565b610780565b005b61432560048036038101906143209190614aea565b610802565b005b614341600480360381019061433c9190614a85565b610a1a565b60405161434f929190615798565b60405180910390f35b614360610a8a565b60405161436d9190615364565b60405180910390f35b614390600480360381019061438b91906149bb565b610ab4565b60405161439d919061553a565b60405180910390f35b6143c060048036038101906143bb9190614d32565b610b0c565b6040516143d19594939291906153ed565b60405180910390f35b6143f460048036038101906143ef9190614a85565b6110dd565b60405161440797969594939291906155a0565b60405180910390f35b61442a60048036038101906144259190614a85565b611386565b6040516144379190615364565b60405180910390f35b61445a60048036038101906144559190614aae565b6113c4565b604051614467919061553a565b60405180910390f35b61448a60048036038101906144859190614bf4565b611433565b005b6144a660048036038101906144a191906149bb565b611912565b005b6144b0611998565b6040516144bd919061577d565b60405180910390f35b6144e060048036038101906144db9190614a85565b6119a6565b005b6144fc60048036038101906144f79190614a85565b611a2a565b005b61451860048036038101906145139190614e83565b611abf565b60405161452a969594939291906154af565b60405180910390f35b61454d600480360381019061454891906149bb565b612021565b005b61456960048036038101906145649190614d32565b612086565b60405161457f9a99989796959493929190615616565b60405180910390f35b6145a2600480360381019061459d9190614d32565b6123ee565b6040516145af919061553a565b60405180910390f35b6145d260048036038101906145cd9190614aae565b612426565b6040516145df919061553a565b60405180910390f35b61460260048036038101906145fd91906149bb565b612458565b005b61461e60048036038101906146199190614a85565b6124bd565b60405161462b919061577d565b60405180910390f35b61464e60048036038101906146499190614aae565b6124dd565b60405161465b919061553a565b60405180910390f35b61467e60048036038101906146799190614b3e565b612558565b005b614688612628565b604051614695919061577d565b60405180910390f35b6146a6612635565b005b6146c260048036038101906146bd91906149e4565b612649565b005b6146de60048036038101906146d99190614d32565b61287a565b005b6146fa60048036038101906146f59190614ed2565b6128be565b604051614709939291906153a1565b60405180910390f35b61472c60048036038101906147279190614a85565b612da3565b604051614739919061577d565b60405180910390f35b61475c60048036038101906147579190614a85565b612df8565b604051614769919061537f565b60405180910390f35b61478c60048036038101906147879190614d32565b612e9b565b604051614799919061553a565b60405180910390f35b6147bc60048036038101906147b79190614a85565b612f32565b005b60006147d16147cc846157e6565b6157c1565b905080838252602082019050828560208602820111156147f057600080fd5b60005b85811015614820578161480688826148d4565b8452602084019350602083019250506001810190506147f3565b5050509392505050565b600061483d61483884615812565b6157c1565b9050808382526020820190508285602086028201111561485c57600080fd5b60005b8581101561488c57816148728882614952565b84526020840193506020830192505060018101905061485f565b5050509392505050565b60006148a96148a48461583e565b6157c1565b9050828152602081018484840111156148c157600080fd5b6148cc848285615cc4565b509392505050565b6000813590506148e381615ed5565b92915050565b600082601f8301126148fa57600080fd5b813561490a8482602086016147be565b91505092915050565b600082601f83011261492457600080fd5b813561493484826020860161482a565b91505092915050565b60008135905061494c81615eec565b92915050565b60008135905061496181615f03565b92915050565b600082601f83011261497857600080fd5b8135614988848260208601614896565b91505092915050565b6000813590506149a081615f1a565b92915050565b6000813590506149b581615f31565b92915050565b6000602082840312156149cd57600080fd5b60006149db848285016148d4565b91505092915050565b60008060008060008060c087890312156149fd57600080fd5b6000614a0b89828a01614952565b965050602087013567ffffffffffffffff811115614a2857600080fd5b614a3489828a01614967565b9550506040614a4589828a01614991565b9450506060614a5689828a01614952565b9350506080614a6789828a01614952565b92505060a0614a7889828a016149a6565b9150509295509295509295565b600060208284031215614a9757600080fd5b6000614aa5848285016149a6565b91505092915050565b60008060408385031215614ac157600080fd5b6000614acf858286016149a6565b9250506020614ae0858286016148d4565b9150509250929050565b60008060408385031215614afd57600080fd5b6000614b0b858286016149a6565b925050602083013567ffffffffffffffff811115614b2857600080fd5b614b34858286016148e9565b9150509250929050565b600080600080600080600060e0888a031215614b5957600080fd5b6000614b678a828b016149a6565b9750506020614b788a828b01614952565b965050604088013567ffffffffffffffff811115614b9557600080fd5b614ba18a828b01614967565b9550506060614bb28a828b01614991565b9450506080614bc38a828b016149a6565b93505060a0614bd48a828b01614952565b92505060c0614be58a828b01614952565b91505092959891949750929550565b60008060008060008060008060006101208a8c031215614c1357600080fd5b6000614c218c828d016149a6565b99505060208a013567ffffffffffffffff811115614c3e57600080fd5b614c4a8c828d01614967565b98505060408a013567ffffffffffffffff811115614c6757600080fd5b614c738c828d01614967565b9750506060614c848c828d016149a6565b9650506080614c958c828d016149a6565b95505060a0614ca68c828d016149a6565b94505060c08a013567ffffffffffffffff811115614cc357600080fd5b614ccf8c828d01614913565b93505060e08a013567ffffffffffffffff811115614cec57600080fd5b614cf88c828d016148e9565b9250506101008a013567ffffffffffffffff811115614d1657600080fd5b614d228c828d01614913565b9150509295985092959850929598565b60008060408385031215614d4557600080fd5b6000614d53858286016149a6565b9250506020614d64858286016149a6565b9150509250929050565b600080600060608486031215614d8357600080fd5b6000614d91868287016149a6565b9350506020614da2868287016149a6565b9250506040614db3868287016148d4565b9150509250925092565b600080600080600060a08688031215614dd557600080fd5b6000614de3888289016149a6565b9550506020614df4888289016149a6565b9450506040614e05888289016148d4565b9350506060614e16888289016149a6565b9250506080614e27888289016149a6565b9150509295509295909350565b600080600060608486031215614e4957600080fd5b6000614e57868287016149a6565b9350506020614e68868287016149a6565b9250506040614e798682870161493d565b9150509250925092565b600080600060608486031215614e9857600080fd5b6000614ea6868287016149a6565b9350506020614eb7868287016149a6565b9250506040614ec8868287016149a6565b9150509250925092565b60008060008060808587031215614ee857600080fd5b6000614ef6878288016149a6565b9450506020614f07878288016149a6565b9350506040614f18878288016149a6565b9250506060614f29878288016149a6565b91505092959194509250565b6000614f418383614fa9565b60208301905092915050565b6000614f5983836151c3565b60208301905092915050565b6000614f7183836151e1565b905092915050565b6000614f858383615319565b60208301905092915050565b6000614f9d8383615337565b60208301905092915050565b614fb281615c23565b82525050565b614fc181615c23565b82525050565b6000614fd2826158d4565b614fdc8185615957565b9350614fe78361586f565b8060005b83811015615018578151614fff8882614f35565b975061500a83615916565b925050600181019050614feb565b5085935050505092915050565b6000615030826158df565b61503a8185615968565b93506150458361587f565b8060005b8381101561507657815161505d8882614f4d565b975061506883615923565b925050600181019050615049565b5085935050505092915050565b600061508e826158ea565b6150988185615979565b9350836020820285016150aa8561588f565b8060005b858110156150e657848403895281516150c78582614f65565b94506150d283615930565b925060208a019950506001810190506150ae565b50829750879550505050505092915050565b6000615103826158f5565b61510d818561598a565b93506151188361589f565b8060005b838110156151495781516151308882614f79565b975061513b8361593d565b92505060018101905061511c565b5085935050505092915050565b600061516182615900565b61516b818561599b565b9350615176836158af565b8060005b838110156151a757815161518e8882614f91565b97506151998361594a565b92505060018101905061517a565b5085935050505092915050565b6151bd81615c35565b82525050565b6151cc81615c41565b82525050565b6151db81615c41565b82525050565b60006151ec8261590b565b6151f681856159ac565b9350615206818560208601615cd3565b61520f81615e3f565b840191505092915050565b60006152258261590b565b61522f81856159bd565b935061523f818560208601615cd3565b61524881615e3f565b840191505092915050565b6000815461526081615d06565b61526a81866159bd565b945060018216600081146152855760018114615297576152ca565b60ff19831686526020860193506152ca565b6152a0856158bf565b60005b838110156152c2578154818901526001820191506020810190506152a3565b808801955050505b50505092915050565b60006152e06026836159bd565b91506152eb82615e5d565b604082019050919050565b60006153036020836159bd565b915061530e82615eac565b602082019050919050565b61532281615c4b565b82525050565b61533181615c4b565b82525050565b61534081615c7e565b82525050565b61534f81615c7e565b82525050565b61535e81615cb2565b82525050565b60006020820190506153796000830184614fb8565b92915050565b600060208201905081810360008301526153998184614fc7565b905092915050565b600060608201905081810360008301526153bb8186614fc7565b905081810360208301526153cf8185615156565b905081810360408301526153e38184615156565b9050949350505050565b600060a08201905081810360008301526154078188615025565b9050818103602083015261541b81876150f8565b9050818103604083015261542f8186615025565b905081810360608301526154438185615025565b905081810360808301526154578184615156565b90509695505050505050565b6000606082019050818103600083015261547d8186615156565b905081810360208301526154918185615025565b905081810360408301526154a58184615025565b9050949350505050565b600060c08201905081810360008301526154c98189615156565b905081810360208301526154dd8188615083565b905081810360408301526154f18187615083565b905081810360608301526155058186615156565b905081810360808301526155198185615156565b905081810360a083015261552d8184615156565b9050979650505050505050565b600060208201905061554f60008301846151b4565b92915050565b600060208201905061556a60008301846151d2565b92915050565b600060408201905061558560008301856151d2565b8181036020830152615597818461521a565b90509392505050565b600060e0820190506155b5600083018a6151d2565b81810360208301526155c7818961521a565b90506155d66040830188615328565b6155e360608301876151d2565b6155f060808301866151d2565b6155fd60a0830185615346565b61560a60c0830184615346565b98975050505050505050565b6000610140820190508181036000830152615631818d61521a565b90508181036020830152615645818c61521a565b9050615654604083018b614fb8565b615661606083018a615346565b61566e6080830189615346565b61567b60a0830188615346565b81810360c083015261568d8187615025565b905081810360e08301526156a18186614fc7565b90508181036101008301526156b68185615025565b90508181036101208301526156cb8184615156565b90509b9a5050505050505050505050565b600060a08201905081810360008301526156f68188615253565b9050818103602083015261570a8187615253565b90506157196040830186615355565b6157266060830185615355565b6157336080830184615346565b9695505050505050565b60006020820190508181036000830152615756816152d3565b9050919050565b60006020820190508181036000830152615776816152f6565b9050919050565b60006020820190506157926000830184615346565b92915050565b60006040820190506157ad6000830185615346565b6157ba60208301846151b4565b9392505050565b60006157cb6157dc565b90506157d78282615d38565b919050565b6000604051905090565b600067ffffffffffffffff82111561580157615800615e10565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561582d5761582c615e10565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561585957615858615e10565b5b61586282615e3f565b9050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006159d982615c7e565b91506159e483615c7e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115615a1957615a18615db2565b5b828201905092915050565b6000808291508390505b6001851115615a6e57808604811115615a4a57615a49615db2565b5b6001851615615a595780820291505b8081029050615a6785615e50565b9450615a2e565b94509492505050565b6000615a8282615c7e565b9150615a8d83615c7e565b9250615aba7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484615ac2565b905092915050565b600082615ad25760019050615b8e565b81615ae05760009050615b8e565b8160018114615af65760028114615b0057615b2f565b6001915050615b8e565b60ff841115615b1257615b11615db2565b5b8360020a915084821115615b2957615b28615db2565b5b50615b8e565b5060208310610133831016604e8410600b8410161715615b645782820a905083811115615b5f57615b5e615db2565b5b615b8e565b615b718484846001615a24565b92509050818404811115615b8857615b87615db2565b5b81810290505b9392505050565b6000615ba082615c7e565b9150615bab83615c7e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615615be457615be3615db2565b5b828202905092915050565b6000615bfa82615c7e565b9150615c0583615c7e565b925082821015615c1857615c17615db2565b5b828203905092915050565b6000615c2e82615c5d565b9050919050565b60008115159050919050565b6000819050919050565b6000615c5682615c9c565b9050919050565b600074ffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b600069ffffffffffffffffffff82169050919050565b6000615cbd82615c88565b9050919050565b82818337600083830152505050565b60005b83811015615cf1578082015181840152602081019050615cd6565b83811115615d00576000848401525b50505050565b60006002820490506001821680615d1e57607f821691505b60208210811415615d3257615d31615de1565b5b50919050565b615d4182615e3f565b810181811067ffffffffffffffff82111715615d6057615d5f615e10565b5b80604052505050565b6000615d7482615c7e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415615da757615da6615db2565b5b600182019050919050565b7fe0f8f85500000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7fe0f8f85500000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7fe0f8f85500000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b615ede81615c23565b8114615ee957600080fd5b50565b615ef581615c35565b8114615f0057600080fd5b50565b615f0c81615c41565b8114615f1757600080fd5b50565b615f2381615c4b565b8114615f2e57600080fd5b50565b615f3a81615c7e565b8114615f4557600080fd5b5056fea165627a7a7230582000000000000000000000000000000000000000000000000000000000000000000029","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0x15 CALLER PUSH3 0x1B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xE4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9A78605A08FE53B920ADFC51344C28ABD504BD2378DB8D7DCDD50E527CBEBE57 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x5F74 DUP1 PUSH3 0xF4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x402E JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 PUSH1 0x0 PUSH2 0x8B PUSH1 0x7 PUSH1 0x0 DUP8 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH2 0x301C JUMP JUMPDEST SWAP1 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCD JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP4 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13E JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x16C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AF JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1DD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 JUMPDEST PUSH2 0x22C PUSH1 0x7 PUSH1 0x0 DUP9 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH2 0x301C JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x43A JUMPI PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP9 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2B1 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B ADD SLOAD SWAP1 POP DUP1 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2F8 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x33E JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 ADD SLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x389 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3CF JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x1 ADD SLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x41A JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP DUP1 DUP1 PUSH2 0x432 SWAP1 PUSH2 0x5D69 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1E3 JUMP JUMPDEST POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x450 DUP5 DUP5 PUSH2 0x302D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP2 POP SWAP2 POP PUSH1 0x0 JUMPDEST DUP4 PUSH1 0x8 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x51C JUMPI DUP3 DUP5 PUSH1 0x8 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4AB JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B ADD SLOAD GT ISZERO PUSH2 0x509 JUMPI DUP4 PUSH1 0x8 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4F8 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B ADD SLOAD SWAP3 POP DUP1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x514 SWAP1 PUSH2 0x5D69 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x45F JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x9 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 DUP5 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x1 ADD SLOAD GT SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A9 DUP4 DUP4 PUSH2 0x3090 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP5 DUP5 PUSH2 0x5BD DUP3 DUP3 PUSH2 0x30FF JUMP JUMPDEST PUSH2 0x5C6 CALLER PUSH2 0xAB4 JUMP JUMPDEST PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5D9 DUP8 DUP7 PUSH2 0x2426 JUMP JUMPDEST PUSH2 0x5E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5ED DUP8 DUP8 DUP8 PUSH2 0x529 JUMP JUMPDEST ISZERO PUSH2 0x5F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x603 DUP9 DUP9 PUSH2 0x302D JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 ADD DUP1 SLOAD SWAP1 POP DUP6 LT PUSH2 0x618 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP7 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 DUP9 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B SWAP1 POP DUP6 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP5 DUP3 PUSH1 0x8 ADD DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x755 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x76E SWAP2 SWAP1 PUSH2 0x59CE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH2 0x78A DUP2 PUSH2 0x3116 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x7C6 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP DUP4 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH2 0x80C DUP2 PUSH2 0x313D JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x921 JUMPI PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x88F JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x919 SWAP1 PUSH2 0x5D69 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x80F JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x9EC JUMPI PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x97E JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x9E4 SWAP1 PUSH2 0x5D69 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x925 JUMP JUMPDEST POP DUP2 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xA14 SWAP3 SWAP2 SWAP1 PUSH2 0x3DF6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xA59 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP4 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 DUP1 PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD SWAP1 POP DUP8 LT ISZERO PUSH2 0x10D3 JUMPI PUSH1 0x0 DUP7 DUP9 PUSH1 0x1 DUP1 SLOAD SWAP1 POP PUSH2 0xB35 SWAP2 SWAP1 PUSH2 0x5BEF JUMP JUMPDEST GT PUSH2 0xB50 JUMPI DUP8 PUSH1 0x1 DUP1 SLOAD SWAP1 POP PUSH2 0xB4B SWAP2 SWAP1 PUSH2 0x5BEF JUMP JUMPDEST PUSH2 0xB52 JUMP JUMPDEST DUP7 JUMPDEST SWAP1 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB94 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBC2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP6 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC05 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC33 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP5 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC76 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xCA4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP4 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCE7 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD15 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD58 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD86 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 DUP9 SWAP1 POP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 POP DUP2 LT DUP1 ISZERO PUSH2 0xDAD JUMPI POP DUP8 DUP10 PUSH2 0xDAA SWAP2 SWAP1 PUSH2 0x59CE JUMP JUMPDEST DUP2 LT JUMPDEST ISZERO PUSH2 0x10D0 JUMPI PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xDEC JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 ADD SLOAD DUP8 DUP11 DUP4 PUSH2 0xE0B SWAP2 SWAP1 PUSH2 0x5BEF JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xE42 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE88 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP11 DUP4 PUSH2 0xEBD SWAP2 SWAP1 PUSH2 0x5BEF JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xEF4 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF54 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x1 ADD SLOAD DUP6 DUP11 DUP4 PUSH2 0xF73 SWAP2 SWAP1 PUSH2 0x5BEF JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xFAA JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xFF0 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x2 ADD SLOAD DUP5 DUP11 DUP4 PUSH2 0x100F SWAP2 SWAP1 PUSH2 0x5BEF JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1046 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x106D PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH2 0x3153 JUMP JUMPDEST DUP4 DUP11 DUP4 PUSH2 0x107A SWAP2 SWAP1 PUSH2 0x5BEF JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x10B1 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x10C8 SWAP1 PUSH2 0x5D69 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD8F JUMP JUMPDEST POP POP JUMPDEST SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x1123 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 ADD SLOAD PUSH1 0x1 DUP10 DUP2 SLOAD DUP2 LT PUSH2 0x116F JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x3 ADD PUSH1 0x1 DUP11 DUP2 SLOAD DUP2 LT PUSH2 0x11BA JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP12 DUP2 SLOAD DUP2 LT PUSH2 0x121C JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x1 DUP13 DUP2 SLOAD DUP2 LT PUSH2 0x1268 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x2 ADD SLOAD PUSH2 0x1295 PUSH1 0x4 PUSH1 0x0 DUP16 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH2 0x3153 JUMP JUMPDEST PUSH1 0x1 DUP15 DUP2 SLOAD DUP2 LT PUSH2 0x12CF JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x5 ADD SLOAD DUP6 DUP1 SLOAD PUSH2 0x12ED SWAP1 PUSH2 0x5D06 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1319 SWAP1 PUSH2 0x5D06 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1366 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x133B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1366 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1349 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP6 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP1 SWAP3 SWAP5 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP9 PUSH2 0x143D DUP2 PUSH2 0x3164 JUMP JUMPDEST TOKENID PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP12 DUP2 SLOAD DUP2 LT PUSH2 0x1484 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP12 DUP2 SLOAD DUP2 LT PUSH2 0x14FE JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP PUSH1 0x0 PUSH2 0x151A DUP13 CALLER PUSH2 0x24DD JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x153E JUMPI DUP1 PUSH2 0x153D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x15B0 JUMPI POP PUSH1 0x1 DUP13 DUP2 SLOAD DUP2 LT PUSH2 0x157F JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x5 ADD SLOAD PUSH1 0xA PUSH2 0x159D SWAP2 SWAP1 PUSH2 0x5A77 JUMP JUMPDEST DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x15AC SWAP2 SWAP1 PUSH2 0x5B95 JUMP JUMPDEST CALLVALUE LT ISZERO JUMPDEST PUSH2 0x15B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 DUP10 LT DUP1 ISZERO PUSH2 0x15C7 JUMPI POP TIMESTAMP DUP9 GT JUMPDEST PUSH2 0x15D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP10 EQ DUP1 PUSH2 0x15DF JUMPI POP TIMESTAMP DUP10 LT ISZERO JUMPDEST PUSH2 0x15E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 POP DUP13 LT PUSH2 0x15F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP7 MLOAD GT PUSH2 0x1607 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 MLOAD DUP6 MLOAD EQ PUSH2 0x1615 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 MLOAD DUP5 MLOAD EQ PUSH2 0x1623 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP15 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x3 PUSH1 0x0 DUP15 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x1 DUP2 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 POP POP PUSH1 0x0 PUSH2 0x1679 DUP15 DUP4 PUSH2 0x302D JUMP JUMPDEST SWAP1 POP DUP13 DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1693 SWAP3 SWAP2 SWAP1 PUSH2 0x3E82 JUMP JUMPDEST POP DUP12 DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x16AC SWAP3 SWAP2 SWAP1 PUSH2 0x3E82 JUMP JUMPDEST POP PUSH1 0x0 DUP12 EQ PUSH2 0x16BB JUMPI DUP11 PUSH2 0x16BD JUMP JUMPDEST TIMESTAMP JUMPDEST DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP10 DUP2 PUSH1 0x2 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP8 DUP2 PUSH1 0x5 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x172A SWAP3 SWAP2 SWAP1 PUSH2 0x3F08 JUMP JUMPDEST POP DUP7 DUP2 PUSH1 0x6 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1743 SWAP3 SWAP2 SWAP1 PUSH2 0x3DF6 JUMP JUMPDEST POP DUP6 DUP2 PUSH1 0x7 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x175C SWAP3 SWAP2 SWAP1 PUSH2 0x3F08 JUMP JUMPDEST POP CALLER DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP8 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17E3 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1811 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP DUP2 PUSH1 0x8 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1829 SWAP3 SWAP2 SWAP1 PUSH2 0x3F55 JUMP JUMPDEST POP DUP9 DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP15 DUP4 PUSH32 0x4DD34088F7B48A18379B03B82C8B41E51A23BC7C71D55FFCCC9E705BA491575E DUP5 PUSH1 0x1 ADD DUP6 PUSH1 0x0 ADD DUP7 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP8 PUSH1 0x2 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x18BE SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x56DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 CALLER PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND TOKENID PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND CALLVALUE PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP1 DUP3 SUB SWAP1 DUP4 DUP6 DUP8 CALL POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x191A PUSH2 0x319C JUMP JUMPDEST PUSH1 0x0 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x198C JUMPI PUSH1 0x40 MLOAD PUSH32 0x4B2BAE7E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1983 SWAP1 PUSH2 0x573D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1995 DUP2 PUSH2 0x3215 JUMP JUMPDEST POP JUMP JUMPDEST PUSH10 0x152D02C7E14AF6800000 DUP2 JUMP JUMPDEST PUSH2 0x19AF DUP2 PUSH2 0x3164 JUMP JUMPDEST PUSH2 0x19D4 CALLER PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH2 0x32DE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A27 DUP2 PUSH1 0x7 PUSH1 0x0 CALLER PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH2 0x362C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A34 DUP2 CALLER PUSH2 0x2426 JUMP JUMPDEST ISZERO PUSH2 0x1A3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A66 CALLER PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH2 0x37E9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1ABC DUP2 PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH2 0x39EC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 DUP1 PUSH1 0x60 DUP1 PUSH1 0x0 DUP9 SWAP1 POP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP1 SLOAD SWAP1 POP DUP2 LT DUP1 ISZERO PUSH2 0x1AFD JUMPI POP DUP8 DUP10 PUSH2 0x1AFA SWAP2 SWAP1 PUSH2 0x59CE JUMP JUMPDEST DUP2 LT JUMPDEST ISZERO PUSH2 0x2014 JUMPI DUP1 DUP8 DUP11 DUP4 PUSH2 0x1B10 SWAP2 SWAP1 PUSH2 0x5BEF JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1B47 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x3 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1B9E JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0xA MUL ADD PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1BBA SWAP1 PUSH2 0x5D06 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1BE6 SWAP1 PUSH2 0x5D06 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1C33 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1C08 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1C33 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1C16 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP7 DUP11 DUP4 PUSH2 0x1C45 SWAP2 SWAP1 PUSH2 0x5BEF JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1C7C JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1CD2 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0xA MUL ADD PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x1CEE SWAP1 PUSH2 0x5D06 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D1A SWAP1 PUSH2 0x5D06 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D67 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D3C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D67 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D4A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP6 DUP11 DUP4 PUSH2 0x1D79 SWAP2 SWAP1 PUSH2 0x5BEF JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1DB0 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1E06 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0xA MUL ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP5 DUP11 DUP4 PUSH2 0x1E43 SWAP2 SWAP1 PUSH2 0x5BEF JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1E7A JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x3 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1ED1 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0xA MUL ADD PUSH1 0x2 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP4 DUP11 DUP4 PUSH2 0x1F0E SWAP2 SWAP1 PUSH2 0x5BEF JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1F45 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x3 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1F9C JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0xA MUL ADD PUSH1 0x5 ADD DUP1 SLOAD SWAP1 POP DUP3 DUP11 DUP4 PUSH2 0x1FBE SWAP2 SWAP1 PUSH2 0x5BEF JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1FF5 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x200C SWAP1 PUSH2 0x5D69 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1ACE JUMP JUMPDEST POP SWAP4 SWAP8 POP SWAP4 SWAP8 SWAP2 SWAP6 POP SWAP4 POP JUMP JUMPDEST PUSH2 0x2029 PUSH2 0x319C JUMP JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH1 0x0 DUP4 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP1 PUSH1 0x60 DUP1 PUSH1 0x0 PUSH2 0x20A1 DUP14 DUP14 PUSH2 0x302D JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD DUP2 PUSH1 0x0 ADD DUP3 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x2 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x3 ADD SLOAD DUP7 PUSH1 0x5 ADD DUP8 PUSH1 0x6 ADD DUP9 PUSH1 0x7 ADD DUP10 PUSH1 0x8 ADD DUP10 DUP1 SLOAD PUSH2 0x2124 SWAP1 PUSH2 0x5D06 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2150 SWAP1 PUSH2 0x5D06 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x219D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2172 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x219D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2180 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP10 POP DUP9 DUP1 SLOAD PUSH2 0x21B0 SWAP1 PUSH2 0x5D06 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x21DC SWAP1 PUSH2 0x5D06 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2229 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x21FE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2229 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x220C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP9 POP DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP7 POP DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP6 POP DUP4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2295 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2281 JUMPI JUMPDEST POP POP POP POP POP SWAP4 POP DUP3 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x231F JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x22D3 JUMPI JUMPDEST POP POP POP POP POP SWAP3 POP DUP2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2371 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x235D JUMPI JUMPDEST POP POP POP POP POP SWAP2 POP DUP1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x23C3 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x23AF JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP2 SWAP5 SWAP8 SWAP11 POP SWAP3 SWAP6 SWAP9 POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP PUSH2 0x23FB DUP5 DUP5 PUSH2 0x302D JUMP JUMPDEST PUSH1 0x2 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND LT SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x244F DUP4 PUSH1 0x4 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH2 0x3ACD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST EQ SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2460 PUSH2 0x319C JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP4 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 DUP4 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x2550 JUMPI POP PUSH2 0x254F DUP4 DUP4 PUSH2 0x13C4 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP7 PUSH2 0x2562 DUP2 PUSH2 0x3116 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP10 DUP2 SLOAD DUP2 LT PUSH2 0x259E JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP DUP8 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP7 DUP2 PUSH1 0x3 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x25CF SWAP3 SWAP2 SWAP1 PUSH2 0x3E82 JUMP JUMPDEST POP DUP6 DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH10 0xFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0xFF AND DUP2 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x263D PUSH2 0x319C JUMP JUMPDEST PUSH2 0x2647 PUSH1 0x0 PUSH2 0x3215 JUMP JUMPDEST JUMP JUMPDEST PUSH10 0x152D02C7E14AF6800000 CALLVALUE EQ DUP1 ISZERO PUSH2 0x2683 JUMPI POP PUSH10 0x5649544520544F4B454E PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND TOKENID PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x268C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH2 0x269E PUSH2 0x3FA2 JUMP JUMPDEST DUP8 DUP2 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP7 DUP2 PUSH1 0x60 ADD DUP2 SWAP1 MSTORE POP DUP6 DUP2 PUSH1 0x80 ADD SWAP1 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0xA0 ADD DUP2 DUP2 MSTORE POP POP TIMESTAMP DUP2 PUSH1 0xC0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x2763 SWAP3 SWAP2 SWAP1 PUSH2 0x3E82 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH10 0xFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE POP POP PUSH1 0x2 PUSH1 0x1 DUP2 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 POP POP CALLER PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP8 DUP7 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x92AC3827B776C572E5D72006A513F694B98B56B65E899BBDDE95C3B1103B00F2 DUP9 DUP12 PUSH1 0x40 MLOAD PUSH2 0x285F SWAP3 SWAP2 SWAP1 PUSH2 0x5570 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2870 DUP3 PUSH2 0x1A2A JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 DUP2 PUSH2 0x2886 DUP3 DUP3 PUSH2 0x3B1B JUMP JUMPDEST DUP4 DUP4 PUSH2 0x2892 DUP3 DUP3 PUSH2 0x2E9B JUMP JUMPDEST ISZERO PUSH2 0x289C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x28A8 DUP8 DUP8 PUSH2 0x443 JUMP JUMPDEST SWAP1 POP PUSH2 0x28B5 DUP8 DUP8 DUP4 PUSH2 0x3B32 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 PUSH1 0xA PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP1 SLOAD SWAP1 POP DUP6 LT ISZERO PUSH2 0x2D99 JUMPI PUSH1 0x0 DUP5 DUP7 PUSH1 0xA PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP1 SLOAD SWAP1 POP PUSH2 0x2928 SWAP2 SWAP1 PUSH2 0x5BEF JUMP JUMPDEST GT PUSH2 0x2965 JUMPI DUP6 PUSH1 0xA PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP1 SLOAD SWAP1 POP PUSH2 0x2960 SWAP2 SWAP1 PUSH2 0x5BEF JUMP JUMPDEST PUSH2 0x2967 JUMP JUMPDEST DUP5 JUMPDEST SWAP1 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29A9 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x29D7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP4 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A1A JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2A48 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A8B JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2AB9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 DUP7 SWAP1 POP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP1 SLOAD SWAP1 POP DUP2 LT DUP1 ISZERO PUSH2 0x2B02 JUMPI POP DUP6 DUP8 PUSH2 0x2AFF SWAP2 SWAP1 PUSH2 0x59CE JUMP JUMPDEST DUP2 LT JUMPDEST ISZERO PUSH2 0x2D96 JUMPI PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2B65 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 DUP7 DUP10 DUP5 PUSH2 0x2BA1 SWAP2 SWAP1 PUSH2 0x5BEF JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x2BD8 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x9 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 DUP3 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x1 ADD SLOAD DUP6 DUP10 DUP5 PUSH2 0x2C88 SWAP2 SWAP1 PUSH2 0x5BEF JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x2CBF JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x9 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 DUP3 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 ADD SLOAD DUP5 DUP10 DUP5 PUSH2 0x2D3F SWAP2 SWAP1 PUSH2 0x5BEF JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x2D76 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP DUP1 DUP1 PUSH2 0x2D8E SWAP1 PUSH2 0x5D69 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2AC2 JUMP JUMPDEST POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2DDF JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x6 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2E8F JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2E43 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x2ED6 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2EE0 DUP5 DUP5 PUSH2 0x302D JUMP JUMPDEST PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2F29 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F3B DUP2 PUSH2 0x3CDF JUMP JUMPDEST PUSH2 0x2F44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2F80 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH10 0x5649544520544F4B454E PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND PUSH10 0x152D02C7E14AF6800000 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP1 DUP3 SUB SWAP1 DUP4 DUP6 DUP8 CALL POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x307A JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0xA MUL ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP PUSH2 0x309D DUP5 DUP5 PUSH2 0x302D JUMP JUMPDEST PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO DUP1 ISZERO PUSH2 0x30F7 JUMPI POP TIMESTAMP PUSH2 0x30D3 DUP5 DUP5 PUSH2 0x302D JUMP JUMPDEST PUSH1 0x2 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND GT JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3109 DUP3 DUP3 PUSH2 0x3090 JUMP JUMPDEST PUSH2 0x3112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3120 DUP2 CALLER PUSH2 0x24DD JUMP JUMPDEST DUP1 PUSH2 0x3131 JUMPI POP PUSH2 0x3130 DUP2 CALLER PUSH2 0x13C4 JUMP JUMPDEST JUMPDEST PUSH2 0x313A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3147 DUP2 CALLER PUSH2 0x13C4 JUMP JUMPDEST PUSH2 0x3150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x316E DUP2 CALLER PUSH2 0x2426 JUMP JUMPDEST DUP1 PUSH2 0x317F JUMPI POP PUSH2 0x317E DUP2 CALLER PUSH2 0x24DD JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x3190 JUMPI POP PUSH2 0x318F DUP2 CALLER PUSH2 0x13C4 JUMP JUMPDEST JUMPDEST PUSH2 0x3199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST CALLER PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31BC PUSH2 0xA8A JUMP JUMPDEST PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3213 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4B2BAE7E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x320A SWAP1 PUSH2 0x575D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9A78605A08FE53B920ADFC51344C28ABD504BD2378DB8D7DCDD50E527CBEBE57 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x3 ADD PUSH1 0x0 DUP3 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3338 JUMPI PUSH2 0x3628 JUMP JUMPDEST DUP2 PUSH1 0x3 ADD PUSH1 0x0 DUP3 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP3 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 SWAP1 SSTORE PUSH1 0x0 DUP3 PUSH1 0x2 ADD PUSH1 0x0 DUP4 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x3430 SWAP2 SWAP1 PUSH2 0x5BEF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3470 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP6 PUSH1 0x2 ADD PUSH1 0x0 DUP4 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x2 ADD PUSH1 0x0 DUP6 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 SWAP1 SSTORE DUP1 DUP6 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x356A JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x35EE JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE POP POP POP JUMPDEST POP POP JUMP JUMPDEST DUP2 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3658 JUMPI PUSH2 0x37E5 JUMP JUMPDEST DUP2 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 SWAP1 SSTORE PUSH1 0x0 DUP3 PUSH1 0x2 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x36C6 SWAP2 SWAP1 PUSH2 0x5BEF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3706 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B ADD SLOAD SWAP1 POP DUP3 DUP6 PUSH1 0x2 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x2 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 SWAP1 SSTORE DUP1 DUP6 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x3783 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B ADD DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x37CB JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP JUMPDEST POP POP JUMP JUMPDEST DUP3 PUSH1 0x3 ADD PUSH1 0x0 DUP4 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x388C JUMPI DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP2 SWAP1 SSTORE POP PUSH2 0x39E7 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x3 ADD PUSH1 0x0 DUP5 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x2 ADD PUSH1 0x0 DUP5 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x3 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3A33 JUMPI DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP2 SWAP1 SSTORE POP PUSH2 0x3AC8 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x3 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x2 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP4 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 BLAKE2B SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3B25 DUP3 DUP3 PUSH2 0x23EE JUMP JUMPDEST PUSH2 0x3B2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B3E DUP5 DUP5 PUSH2 0x302D JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 ADD DUP1 SLOAD SWAP1 POP DUP3 LT PUSH2 0x3B53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x6 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3B91 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x7 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x3BFD JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3C4B JUMPI PUSH2 0x3C4A DUP3 DUP3 PUSH2 0x3D9B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x9 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3C99 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP DUP6 DUP6 PUSH32 0x9B6F2CEF359EA2598EC10BC9AD9D2D0DA42BED0A38D593C22E70FDA4C9A38B44 DUP7 PUSH1 0x40 MLOAD PUSH2 0x3CCF SWAP2 SWAP1 PUSH2 0x577D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3D1C JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x6 ADD SLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x3D94 JUMPI POP TIMESTAMP PUSH3 0x76A700 PUSH1 0x1 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x3D76 JUMPI PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x6 ADD SLOAD PUSH2 0x3D92 SWAP2 SWAP1 PUSH2 0x59CE JUMP JUMPDEST LT JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB7A61296 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DD5 SWAP2 SWAP1 PUSH2 0x5555 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP1 DUP3 SUB SWAP1 PUSH1 0x0 PUSH10 0x5649544520544F4B454E DUP7 CALL POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x3E71 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3E70 JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3E16 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x3E7E SWAP2 SWAP1 PUSH2 0x3FF4 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x3E8E SWAP1 PUSH2 0x5D06 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x3EB0 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x3EF7 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x3EC9 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x3EF7 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x3EF7 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3EF6 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3EDB JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x3F04 SWAP2 SWAP1 PUSH2 0x3FF4 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x3F44 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3F43 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3F28 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x3F51 SWAP2 SWAP1 PUSH2 0x4011 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 BLAKE2B SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x3F91 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3F90 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3F75 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x3F9E SWAP2 SWAP1 PUSH2 0x3FF4 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x400D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x3FF5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x402A JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x4012 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41DF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82F5974 EQ PUSH2 0x41E1 JUMPI DUP1 PUSH4 0x8B0311C EQ PUSH2 0x4211 JUMPI DUP1 PUSH4 0x1244B9EA EQ PUSH2 0x4243 JUMPI DUP1 PUSH4 0x1927510A EQ PUSH2 0x4273 JUMPI DUP1 PUSH4 0x1C2AA460 EQ PUSH2 0x42A3 JUMPI DUP1 PUSH4 0x224CF1C7 EQ PUSH2 0x42D3 JUMPI DUP1 PUSH4 0x2518A525 EQ PUSH2 0x42EF JUMPI DUP1 PUSH4 0x2B61F5F1 EQ PUSH2 0x430B JUMPI DUP1 PUSH4 0x30FBEB91 EQ PUSH2 0x4327 JUMPI DUP1 PUSH4 0x33613933 EQ PUSH2 0x4358 JUMPI DUP1 PUSH4 0x33653289 EQ PUSH2 0x4376 JUMPI DUP1 PUSH4 0x402993F4 EQ PUSH2 0x43A6 JUMPI DUP1 PUSH4 0x555FEC4B EQ PUSH2 0x43DA JUMPI DUP1 PUSH4 0x58FAF7E6 EQ PUSH2 0x4410 JUMPI DUP1 PUSH4 0x758AE6FE EQ PUSH2 0x4440 JUMPI DUP1 PUSH4 0x777CD61D EQ PUSH2 0x4470 JUMPI DUP1 PUSH4 0x7BBCBEAD EQ PUSH2 0x448C JUMPI DUP1 PUSH4 0x7E04AABC EQ PUSH2 0x44A8 JUMPI DUP1 PUSH4 0x8264B3C5 EQ PUSH2 0x44C6 JUMPI DUP1 PUSH4 0x82AB3B2F EQ PUSH2 0x44E2 JUMPI DUP1 PUSH4 0x84EDB26D EQ PUSH2 0x44FE JUMPI DUP1 PUSH4 0x9EF90BA3 EQ PUSH2 0x4533 JUMPI DUP1 PUSH4 0xB081F695 EQ PUSH2 0x454F JUMPI DUP1 PUSH4 0xBC1B8601 EQ PUSH2 0x4588 JUMPI DUP1 PUSH4 0xBC32DF2D EQ PUSH2 0x45B8 JUMPI DUP1 PUSH4 0xBF9A72CB EQ PUSH2 0x45E8 JUMPI DUP1 PUSH4 0xC19DD0E2 EQ PUSH2 0x4604 JUMPI DUP1 PUSH4 0xC2A9073D EQ PUSH2 0x4634 JUMPI DUP1 PUSH4 0xC3715233 EQ PUSH2 0x4664 JUMPI DUP1 PUSH4 0xC4CA0D25 EQ PUSH2 0x4680 JUMPI DUP1 PUSH4 0xCFA286AA EQ PUSH2 0x469E JUMPI DUP1 PUSH4 0xD2F708AE EQ PUSH2 0x46A8 JUMPI DUP1 PUSH4 0xD36F0336 EQ PUSH2 0x46C4 JUMPI DUP1 PUSH4 0xDE28FD0E EQ PUSH2 0x46E0 JUMPI DUP1 PUSH4 0xDF0B5099 EQ PUSH2 0x4712 JUMPI DUP1 PUSH4 0xE9FEDE53 EQ PUSH2 0x4742 JUMPI DUP1 PUSH4 0xEA5E42E3 EQ PUSH2 0x4772 JUMPI DUP1 PUSH4 0xED3C2F29 EQ PUSH2 0x47A2 JUMPI JUMPDEST STOP JUMPDEST PUSH2 0x41FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41F6 SWAP2 SWAP1 PUSH2 0x4D32 JUMP JUMPDEST PUSH2 0x9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4208 SWAP2 SWAP1 PUSH2 0x577D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x422B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4226 SWAP2 SWAP1 PUSH2 0x49BB JUMP JUMPDEST PUSH2 0x3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x423A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5463 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x425D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4258 SWAP2 SWAP1 PUSH2 0x4D32 JUMP JUMPDEST PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x426A SWAP2 SWAP1 PUSH2 0x577D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x428D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4288 SWAP2 SWAP1 PUSH2 0x4D6E JUMP JUMPDEST PUSH2 0x529 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x429A SWAP2 SWAP1 PUSH2 0x553A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42B8 SWAP2 SWAP1 PUSH2 0x4D32 JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42CA SWAP2 SWAP1 PUSH2 0x553A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42E8 SWAP2 SWAP1 PUSH2 0x4DBD JUMP JUMPDEST PUSH2 0x5B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4309 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4304 SWAP2 SWAP1 PUSH2 0x4E34 JUMP JUMPDEST PUSH2 0x780 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4325 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4320 SWAP2 SWAP1 PUSH2 0x4AEA JUMP JUMPDEST PUSH2 0x802 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4341 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x433C SWAP2 SWAP1 PUSH2 0x4A85 JUMP JUMPDEST PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x434F SWAP3 SWAP2 SWAP1 PUSH2 0x5798 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4360 PUSH2 0xA8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x436D SWAP2 SWAP1 PUSH2 0x5364 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4390 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x438B SWAP2 SWAP1 PUSH2 0x49BB JUMP JUMPDEST PUSH2 0xAB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x439D SWAP2 SWAP1 PUSH2 0x553A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43BB SWAP2 SWAP1 PUSH2 0x4D32 JUMP JUMPDEST PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43D1 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x53ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43EF SWAP2 SWAP1 PUSH2 0x4A85 JUMP JUMPDEST PUSH2 0x10DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4407 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x55A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x442A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4425 SWAP2 SWAP1 PUSH2 0x4A85 JUMP JUMPDEST PUSH2 0x1386 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4437 SWAP2 SWAP1 PUSH2 0x5364 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x445A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4455 SWAP2 SWAP1 PUSH2 0x4AAE JUMP JUMPDEST PUSH2 0x13C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4467 SWAP2 SWAP1 PUSH2 0x553A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x448A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4485 SWAP2 SWAP1 PUSH2 0x4BF4 JUMP JUMPDEST PUSH2 0x1433 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44A1 SWAP2 SWAP1 PUSH2 0x49BB JUMP JUMPDEST PUSH2 0x1912 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44B0 PUSH2 0x1998 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44BD SWAP2 SWAP1 PUSH2 0x577D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44DB SWAP2 SWAP1 PUSH2 0x4A85 JUMP JUMPDEST PUSH2 0x19A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44F7 SWAP2 SWAP1 PUSH2 0x4A85 JUMP JUMPDEST PUSH2 0x1A2A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4518 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4513 SWAP2 SWAP1 PUSH2 0x4E83 JUMP JUMPDEST PUSH2 0x1ABF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x452A SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x54AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x454D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4548 SWAP2 SWAP1 PUSH2 0x49BB JUMP JUMPDEST PUSH2 0x2021 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4569 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4564 SWAP2 SWAP1 PUSH2 0x4D32 JUMP JUMPDEST PUSH2 0x2086 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x457F SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x459D SWAP2 SWAP1 PUSH2 0x4D32 JUMP JUMPDEST PUSH2 0x23EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45AF SWAP2 SWAP1 PUSH2 0x553A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45CD SWAP2 SWAP1 PUSH2 0x4AAE JUMP JUMPDEST PUSH2 0x2426 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45DF SWAP2 SWAP1 PUSH2 0x553A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4602 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45FD SWAP2 SWAP1 PUSH2 0x49BB JUMP JUMPDEST PUSH2 0x2458 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x461E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4619 SWAP2 SWAP1 PUSH2 0x4A85 JUMP JUMPDEST PUSH2 0x24BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x462B SWAP2 SWAP1 PUSH2 0x577D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x464E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4649 SWAP2 SWAP1 PUSH2 0x4AAE JUMP JUMPDEST PUSH2 0x24DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x465B SWAP2 SWAP1 PUSH2 0x553A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x467E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4679 SWAP2 SWAP1 PUSH2 0x4B3E JUMP JUMPDEST PUSH2 0x2558 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4688 PUSH2 0x2628 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4695 SWAP2 SWAP1 PUSH2 0x577D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46A6 PUSH2 0x2635 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46BD SWAP2 SWAP1 PUSH2 0x49E4 JUMP JUMPDEST PUSH2 0x2649 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46D9 SWAP2 SWAP1 PUSH2 0x4D32 JUMP JUMPDEST PUSH2 0x287A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46F5 SWAP2 SWAP1 PUSH2 0x4ED2 JUMP JUMPDEST PUSH2 0x28BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4709 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x53A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x472C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4727 SWAP2 SWAP1 PUSH2 0x4A85 JUMP JUMPDEST PUSH2 0x2DA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4739 SWAP2 SWAP1 PUSH2 0x577D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x475C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4757 SWAP2 SWAP1 PUSH2 0x4A85 JUMP JUMPDEST PUSH2 0x2DF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4769 SWAP2 SWAP1 PUSH2 0x537F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x478C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4787 SWAP2 SWAP1 PUSH2 0x4D32 JUMP JUMPDEST PUSH2 0x2E9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4799 SWAP2 SWAP1 PUSH2 0x553A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47B7 SWAP2 SWAP1 PUSH2 0x4A85 JUMP JUMPDEST PUSH2 0x2F32 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x47D1 PUSH2 0x47CC DUP5 PUSH2 0x57E6 JUMP JUMPDEST PUSH2 0x57C1 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x47F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x4820 JUMPI DUP2 PUSH2 0x4806 DUP9 DUP3 PUSH2 0x48D4 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x47F3 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x483D PUSH2 0x4838 DUP5 PUSH2 0x5812 JUMP JUMPDEST PUSH2 0x57C1 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x485C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x488C JUMPI DUP2 PUSH2 0x4872 DUP9 DUP3 PUSH2 0x4952 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x485F JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A9 PUSH2 0x48A4 DUP5 PUSH2 0x583E JUMP JUMPDEST PUSH2 0x57C1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x48C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x48CC DUP5 DUP3 DUP6 PUSH2 0x5CC4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x48E3 DUP2 PUSH2 0x5ED5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x48FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x490A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x47BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4924 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4934 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x482A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x494C DUP2 PUSH2 0x5EEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4961 DUP2 PUSH2 0x5F03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4978 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4988 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4896 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x49A0 DUP2 PUSH2 0x5F1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x49B5 DUP2 PUSH2 0x5F31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x49CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x49DB DUP5 DUP3 DUP6 ADD PUSH2 0x48D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x49FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4A0B DUP10 DUP3 DUP11 ADD PUSH2 0x4952 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4A28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A34 DUP10 DUP3 DUP11 ADD PUSH2 0x4967 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x4A45 DUP10 DUP3 DUP11 ADD PUSH2 0x4991 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x4A56 DUP10 DUP3 DUP11 ADD PUSH2 0x4952 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x4A67 DUP10 DUP3 DUP11 ADD PUSH2 0x4952 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x4A78 DUP10 DUP3 DUP11 ADD PUSH2 0x49A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4AA5 DUP5 DUP3 DUP6 ADD PUSH2 0x49A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4AC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4ACF DUP6 DUP3 DUP7 ADD PUSH2 0x49A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4AE0 DUP6 DUP3 DUP7 ADD PUSH2 0x48D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4AFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4B0B DUP6 DUP3 DUP7 ADD PUSH2 0x49A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4B28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4B34 DUP6 DUP3 DUP7 ADD PUSH2 0x48E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x4B59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4B67 DUP11 DUP3 DUP12 ADD PUSH2 0x49A6 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x4B78 DUP11 DUP3 DUP12 ADD PUSH2 0x4952 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4B95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4BA1 DUP11 DUP3 DUP12 ADD PUSH2 0x4967 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x4BB2 DUP11 DUP3 DUP12 ADD PUSH2 0x4991 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x4BC3 DUP11 DUP3 DUP12 ADD PUSH2 0x49A6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x4BD4 DUP11 DUP3 DUP12 ADD PUSH2 0x4952 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x4BE5 DUP11 DUP3 DUP12 ADD PUSH2 0x4952 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x4C13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4C21 DUP13 DUP3 DUP14 ADD PUSH2 0x49A6 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x20 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4C3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C4A DUP13 DUP3 DUP14 ADD PUSH2 0x4967 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x40 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4C67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C73 DUP13 DUP3 DUP14 ADD PUSH2 0x4967 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x60 PUSH2 0x4C84 DUP13 DUP3 DUP14 ADD PUSH2 0x49A6 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x80 PUSH2 0x4C95 DUP13 DUP3 DUP14 ADD PUSH2 0x49A6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0xA0 PUSH2 0x4CA6 DUP13 DUP3 DUP14 ADD PUSH2 0x49A6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4CC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4CCF DUP13 DUP3 DUP14 ADD PUSH2 0x4913 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xE0 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4CEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4CF8 DUP13 DUP3 DUP14 ADD PUSH2 0x48E9 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x100 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4D16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4D22 DUP13 DUP3 DUP14 ADD PUSH2 0x4913 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4D45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4D53 DUP6 DUP3 DUP7 ADD PUSH2 0x49A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4D64 DUP6 DUP3 DUP7 ADD PUSH2 0x49A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4D83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4D91 DUP7 DUP3 DUP8 ADD PUSH2 0x49A6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4DA2 DUP7 DUP3 DUP8 ADD PUSH2 0x49A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x4DB3 DUP7 DUP3 DUP8 ADD PUSH2 0x48D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4DD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4DE3 DUP9 DUP3 DUP10 ADD PUSH2 0x49A6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x4DF4 DUP9 DUP3 DUP10 ADD PUSH2 0x49A6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x4E05 DUP9 DUP3 DUP10 ADD PUSH2 0x48D4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x4E16 DUP9 DUP3 DUP10 ADD PUSH2 0x49A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x4E27 DUP9 DUP3 DUP10 ADD PUSH2 0x49A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4E49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4E57 DUP7 DUP3 DUP8 ADD PUSH2 0x49A6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4E68 DUP7 DUP3 DUP8 ADD PUSH2 0x49A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x4E79 DUP7 DUP3 DUP8 ADD PUSH2 0x493D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4E98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4EA6 DUP7 DUP3 DUP8 ADD PUSH2 0x49A6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x4EB7 DUP7 DUP3 DUP8 ADD PUSH2 0x49A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x4EC8 DUP7 DUP3 DUP8 ADD PUSH2 0x49A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4EE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4EF6 DUP8 DUP3 DUP9 ADD PUSH2 0x49A6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4F07 DUP8 DUP3 DUP9 ADD PUSH2 0x49A6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x4F18 DUP8 DUP3 DUP9 ADD PUSH2 0x49A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x4F29 DUP8 DUP3 DUP9 ADD PUSH2 0x49A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F41 DUP4 DUP4 PUSH2 0x4FA9 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F59 DUP4 DUP4 PUSH2 0x51C3 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F71 DUP4 DUP4 PUSH2 0x51E1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F85 DUP4 DUP4 PUSH2 0x5319 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F9D DUP4 DUP4 PUSH2 0x5337 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4FB2 DUP2 PUSH2 0x5C23 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4FC1 DUP2 PUSH2 0x5C23 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FD2 DUP3 PUSH2 0x58D4 JUMP JUMPDEST PUSH2 0x4FDC DUP2 DUP6 PUSH2 0x5957 JUMP JUMPDEST SWAP4 POP PUSH2 0x4FE7 DUP4 PUSH2 0x586F JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5018 JUMPI DUP2 MLOAD PUSH2 0x4FFF DUP9 DUP3 PUSH2 0x4F35 JUMP JUMPDEST SWAP8 POP PUSH2 0x500A DUP4 PUSH2 0x5916 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4FEB JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5030 DUP3 PUSH2 0x58DF JUMP JUMPDEST PUSH2 0x503A DUP2 DUP6 PUSH2 0x5968 JUMP JUMPDEST SWAP4 POP PUSH2 0x5045 DUP4 PUSH2 0x587F JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5076 JUMPI DUP2 MLOAD PUSH2 0x505D DUP9 DUP3 PUSH2 0x4F4D JUMP JUMPDEST SWAP8 POP PUSH2 0x5068 DUP4 PUSH2 0x5923 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x5049 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x508E DUP3 PUSH2 0x58EA JUMP JUMPDEST PUSH2 0x5098 DUP2 DUP6 PUSH2 0x5979 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x50AA DUP6 PUSH2 0x588F JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x50E6 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x50C7 DUP6 DUP3 PUSH2 0x4F65 JUMP JUMPDEST SWAP5 POP PUSH2 0x50D2 DUP4 PUSH2 0x5930 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x50AE JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5103 DUP3 PUSH2 0x58F5 JUMP JUMPDEST PUSH2 0x510D DUP2 DUP6 PUSH2 0x598A JUMP JUMPDEST SWAP4 POP PUSH2 0x5118 DUP4 PUSH2 0x589F JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5149 JUMPI DUP2 MLOAD PUSH2 0x5130 DUP9 DUP3 PUSH2 0x4F79 JUMP JUMPDEST SWAP8 POP PUSH2 0x513B DUP4 PUSH2 0x593D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x511C JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5161 DUP3 PUSH2 0x5900 JUMP JUMPDEST PUSH2 0x516B DUP2 DUP6 PUSH2 0x599B JUMP JUMPDEST SWAP4 POP PUSH2 0x5176 DUP4 PUSH2 0x58AF JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x51A7 JUMPI DUP2 MLOAD PUSH2 0x518E DUP9 DUP3 PUSH2 0x4F91 JUMP JUMPDEST SWAP8 POP PUSH2 0x5199 DUP4 PUSH2 0x594A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x517A JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x51BD DUP2 PUSH2 0x5C35 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x51CC DUP2 PUSH2 0x5C41 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x51DB DUP2 PUSH2 0x5C41 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51EC DUP3 PUSH2 0x590B JUMP JUMPDEST PUSH2 0x51F6 DUP2 DUP6 PUSH2 0x59AC JUMP JUMPDEST SWAP4 POP PUSH2 0x5206 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5CD3 JUMP JUMPDEST PUSH2 0x520F DUP2 PUSH2 0x5E3F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5225 DUP3 PUSH2 0x590B JUMP JUMPDEST PUSH2 0x522F DUP2 DUP6 PUSH2 0x59BD JUMP JUMPDEST SWAP4 POP PUSH2 0x523F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x5CD3 JUMP JUMPDEST PUSH2 0x5248 DUP2 PUSH2 0x5E3F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x5260 DUP2 PUSH2 0x5D06 JUMP JUMPDEST PUSH2 0x526A DUP2 DUP7 PUSH2 0x59BD JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x5285 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x5297 JUMPI PUSH2 0x52CA JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP4 POP PUSH2 0x52CA JUMP JUMPDEST PUSH2 0x52A0 DUP6 PUSH2 0x58BF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x52C2 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x52A3 JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52E0 PUSH1 0x26 DUP4 PUSH2 0x59BD JUMP JUMPDEST SWAP2 POP PUSH2 0x52EB DUP3 PUSH2 0x5E5D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5303 PUSH1 0x20 DUP4 PUSH2 0x59BD JUMP JUMPDEST SWAP2 POP PUSH2 0x530E DUP3 PUSH2 0x5EAC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5322 DUP2 PUSH2 0x5C4B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5331 DUP2 PUSH2 0x5C4B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5340 DUP2 PUSH2 0x5C7E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x534F DUP2 PUSH2 0x5C7E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x535E DUP2 PUSH2 0x5CB2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5379 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4FB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5399 DUP2 DUP5 PUSH2 0x4FC7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x53BB DUP2 DUP7 PUSH2 0x4FC7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x53CF DUP2 DUP6 PUSH2 0x5156 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x53E3 DUP2 DUP5 PUSH2 0x5156 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5407 DUP2 DUP9 PUSH2 0x5025 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x541B DUP2 DUP8 PUSH2 0x50F8 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x542F DUP2 DUP7 PUSH2 0x5025 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x5443 DUP2 DUP6 PUSH2 0x5025 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x5457 DUP2 DUP5 PUSH2 0x5156 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x547D DUP2 DUP7 PUSH2 0x5156 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x5491 DUP2 DUP6 PUSH2 0x5025 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x54A5 DUP2 DUP5 PUSH2 0x5025 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x54C9 DUP2 DUP10 PUSH2 0x5156 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x54DD DUP2 DUP9 PUSH2 0x5083 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x54F1 DUP2 DUP8 PUSH2 0x5083 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x5505 DUP2 DUP7 PUSH2 0x5156 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x5519 DUP2 DUP6 PUSH2 0x5156 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x552D DUP2 DUP5 PUSH2 0x5156 JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x554F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x51B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x556A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x51D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5585 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x51D2 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x5597 DUP2 DUP5 PUSH2 0x521A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x55B5 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x51D2 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x55C7 DUP2 DUP10 PUSH2 0x521A JUMP JUMPDEST SWAP1 POP PUSH2 0x55D6 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x5328 JUMP JUMPDEST PUSH2 0x55E3 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x51D2 JUMP JUMPDEST PUSH2 0x55F0 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x51D2 JUMP JUMPDEST PUSH2 0x55FD PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x5346 JUMP JUMPDEST PUSH2 0x560A PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x5346 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5631 DUP2 DUP14 PUSH2 0x521A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x5645 DUP2 DUP13 PUSH2 0x521A JUMP JUMPDEST SWAP1 POP PUSH2 0x5654 PUSH1 0x40 DUP4 ADD DUP12 PUSH2 0x4FB8 JUMP JUMPDEST PUSH2 0x5661 PUSH1 0x60 DUP4 ADD DUP11 PUSH2 0x5346 JUMP JUMPDEST PUSH2 0x566E PUSH1 0x80 DUP4 ADD DUP10 PUSH2 0x5346 JUMP JUMPDEST PUSH2 0x567B PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x5346 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x568D DUP2 DUP8 PUSH2 0x5025 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x56A1 DUP2 DUP7 PUSH2 0x4FC7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x56B6 DUP2 DUP6 PUSH2 0x5025 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x56CB DUP2 DUP5 PUSH2 0x5156 JUMP JUMPDEST SWAP1 POP SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x56F6 DUP2 DUP9 PUSH2 0x5253 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x570A DUP2 DUP8 PUSH2 0x5253 JUMP JUMPDEST SWAP1 POP PUSH2 0x5719 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x5355 JUMP JUMPDEST PUSH2 0x5726 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x5355 JUMP JUMPDEST PUSH2 0x5733 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x5346 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5756 DUP2 PUSH2 0x52D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5776 DUP2 PUSH2 0x52F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5792 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5346 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x57AD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x5346 JUMP JUMPDEST PUSH2 0x57BA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x51B4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x57CB PUSH2 0x57DC JUMP JUMPDEST SWAP1 POP PUSH2 0x57D7 DUP3 DUP3 PUSH2 0x5D38 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x5801 JUMPI PUSH2 0x5800 PUSH2 0x5E10 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x582D JUMPI PUSH2 0x582C PUSH2 0x5E10 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x5859 JUMPI PUSH2 0x5858 PUSH2 0x5E10 JUMP JUMPDEST JUMPDEST PUSH2 0x5862 DUP3 PUSH2 0x5E3F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x59D9 DUP3 PUSH2 0x5C7E JUMP JUMPDEST SWAP2 POP PUSH2 0x59E4 DUP4 PUSH2 0x5C7E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x5A19 JUMPI PUSH2 0x5A18 PUSH2 0x5DB2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x5A6E JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x5A4A JUMPI PUSH2 0x5A49 PUSH2 0x5DB2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x5A59 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x5A67 DUP6 PUSH2 0x5E50 JUMP JUMPDEST SWAP5 POP PUSH2 0x5A2E JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A82 DUP3 PUSH2 0x5C7E JUMP JUMPDEST SWAP2 POP PUSH2 0x5A8D DUP4 PUSH2 0x5C7E JUMP JUMPDEST SWAP3 POP PUSH2 0x5ABA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x5AC2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x5AD2 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x5B8E JUMP JUMPDEST DUP2 PUSH2 0x5AE0 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x5B8E JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x5AF6 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x5B00 JUMPI PUSH2 0x5B2F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x5B8E JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x5B12 JUMPI PUSH2 0x5B11 PUSH2 0x5DB2 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x5B29 JUMPI PUSH2 0x5B28 PUSH2 0x5DB2 JUMP JUMPDEST JUMPDEST POP PUSH2 0x5B8E JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x5B64 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x5B5F JUMPI PUSH2 0x5B5E PUSH2 0x5DB2 JUMP JUMPDEST JUMPDEST PUSH2 0x5B8E JUMP JUMPDEST PUSH2 0x5B71 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x5A24 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x5B88 JUMPI PUSH2 0x5B87 PUSH2 0x5DB2 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BA0 DUP3 PUSH2 0x5C7E JUMP JUMPDEST SWAP2 POP PUSH2 0x5BAB DUP4 PUSH2 0x5C7E JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x5BE4 JUMPI PUSH2 0x5BE3 PUSH2 0x5DB2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BFA DUP3 PUSH2 0x5C7E JUMP JUMPDEST SWAP2 POP PUSH2 0x5C05 DUP4 PUSH2 0x5C7E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x5C18 JUMPI PUSH2 0x5C17 PUSH2 0x5DB2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C2E DUP3 PUSH2 0x5C5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C56 DUP3 PUSH2 0x5C9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CBD DUP3 PUSH2 0x5C88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5CF1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5CD6 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x5D00 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x5D1E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x5D32 JUMPI PUSH2 0x5D31 PUSH2 0x5DE1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5D41 DUP3 PUSH2 0x5E3F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x5D60 JUMPI PUSH2 0x5D5F PUSH2 0x5E10 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D74 DUP3 PUSH2 0x5C7E JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x5DA7 JUMPI PUSH2 0x5DA6 PUSH2 0x5DB2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x5EDE DUP2 PUSH2 0x5C23 JUMP JUMPDEST DUP2 EQ PUSH2 0x5EE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5EF5 DUP2 PUSH2 0x5C35 JUMP JUMPDEST DUP2 EQ PUSH2 0x5F00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5F0C DUP2 PUSH2 0x5C41 JUMP JUMPDEST DUP2 EQ PUSH2 0x5F17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5F23 DUP2 PUSH2 0x5C4B JUMP JUMPDEST DUP2 EQ PUSH2 0x5F2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5F3A DUP2 PUSH2 0x5C7E JUMP JUMPDEST DUP2 EQ PUSH2 0x5F45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP 0x29 ","sourceMap":"168:18019:2:-:0;;;893:30:1;912:10;893:18;;;:30;;:::i;:::-;168:18019:2;;2386:187:1;2459:16;2478:6;;;;;;;;;;;2459:25;;2503:8;2494:6;;:17;;;;;;;;;;;;;;;;;;2557:8;2526:40;;2547:8;2526:40;;;;;;;;;;;;2386:187;;:::o;168:18019:2:-;;;;;;;"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.6eb4927f.mod\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"JoinedSpace\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"LeftSpace\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"snapshot\",\"type\":\"uint256\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"choiceId\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"tokenId\",\"name\":\"token\",\"type\":\"tokenId\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"avatar\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"SpaceCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SPACE_CREATION_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator_\",\"type\":\"address\"}],\"name\":\"addOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"snapshot\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"choices\",\"type\":\"bytes32[]\"},{\"internalType\":\"address[]\",\"name\":\"choicesExecutors\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"choicesData\",\"type\":\"bytes32[]\"}],\"name\":\"createProposal\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"tokenId\",\"name\":\"spaceToken\",\"type\":\"tokenId\"},{\"internalType\":\"bytes32\",\"name\":\"avatar\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"website\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"spaceTokenDecimals\",\"type\":\"uint256\"}],\"name\":\"createSpace\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"executeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"}],\"name\":\"getCreationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"}],\"name\":\"getSpaceAdmins\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"}],\"name\":\"getSpaceExternal\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"tokenId\",\"name\":\"token\",\"type\":\"tokenId\"},{\"internalType\":\"bytes32\",\"name\":\"avatar\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"website\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"memberCounts\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenDecimals\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"}],\"name\":\"getSpaceOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getSpaceProposal\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"snapshot\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"choices\",\"type\":\"bytes32[]\"},{\"internalType\":\"address[]\",\"name\":\"choicesExecutors\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"choicesData\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"votes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getSpaceProposalVotersCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"skip\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"getSpaceProposalVotes\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"voters\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"votes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"choices\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"skip\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"getSpaceProposals\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalIds\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"titles\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"descriptions\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"startTimes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"endTimes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"choicesCount\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"}],\"name\":\"getSpaceProposalsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"}],\"name\":\"getSpaceSettings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalThreshold\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"onlyAdminCreateProposal\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"skip\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"getSpaces\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"names\",\"type\":\"bytes32[]\"},{\"internalType\":\"tokenId[]\",\"name\":\"tokens\",\"type\":\"tokenId[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"avatars\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"websites\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"memberCounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSpacesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserSpaces\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"spaceIds\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"names\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"avatars\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getWinningChoiceIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"isProposalActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"isProposalClosed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"isProposalExecuted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isSpaceAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isSpaceMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isSpaceOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"}],\"name\":\"joinSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"}],\"name\":\"leaveSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"}],\"name\":\"redeemSpaceCreationFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator_\",\"type\":\"address\"}],\"name\":\"removeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"newAdmins\",\"type\":\"address[]\"}],\"name\":\"setSpaceAdmins\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"tokenId\",\"name\":\"spaceToken\",\"type\":\"tokenId\"},{\"internalType\":\"uint256\",\"name\":\"spaceTokenDecimals\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"avatar\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"website\",\"type\":\"bytes32\"}],\"name\":\"updateSpace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"adminCreateProposal\",\"type\":\"bool\"}],\"name\":\"updateSpaceCreateProposalThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spaceId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"choiceIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"name\":\"voteOnProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Vitasensus.solpp\":\"Vitasensus\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IterableMapping.solpp\":{\"keccak256\":\"0x23d597e141982624f4a1db139f7e83a70e590e0fcbfc56896730a4c7e5b4b02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52c6dab08c23869072f1c217d63ee9810034cf30e577431316fdfa4f0d04c98f\",\"dweb:/ipfs/QmeoAFd5hy8RKLz4ZimcbG943VyTzzcNXVEK7Lrx2jNRwL\"]},\"contracts/Ownable.sol\":{\"keccak256\":\"0xa972e39f1d2fe07867a66f8b55596f8ddb3425503d7d7871faa01ee1468f311a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8350f7f6cc9e7485cef21f5ebe364a589285933846d75989c019b1f2043d0556\",\"dweb:/ipfs/QmWKoFjsiFtb4yt7UJG7iT7HR9Ey5fPaX8c5TyY4yfugV9\"]},\"contracts/Vitasensus.solpp\":{\"keccak256\":\"0x84405f4b20d5dd9fd62b70f68746f632949a798e83a9d46d81314590eea18768\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f2e1eae2c691cd79cde9191f9945b8a1dd780c645ae787a3aab0dd86a42b922b\",\"dweb:/ipfs/QmeN8LFeFAeqtnJUUBEbsKBJcWZPj74mpFJnWpDFyvsyXz\"]},\"contracts/VitasensusProposalExecutor.solpp\":{\"keccak256\":\"0x4fc0aae9874ca213bf7f8fa6b311950c8b341ac9db1f79b1f32bd05110da9ded\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://31f6137faa66f2c93402107f8df05f80ec206f82484128a890764be51b11eadf\",\"dweb:/ipfs/QmSut867o7nYgpf6tSRuQ7hUaUx1womGuwFTRwGuXRCmXE\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":2676,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":134,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"_spaces","offset":0,"slot":"1","type":"t_array(t_struct(Space)92_storage)dyn_storage"},{"astId":138,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"_spaceSettings","offset":0,"slot":"2","type":"t_array(t_struct(SpaceSettings)97_storage)dyn_storage"},{"astId":144,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"_spacesProposals","offset":0,"slot":"3","type":"t_mapping(t_uint256,t_array(t_struct(Proposal)125_storage)dyn_storage)"},{"astId":149,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"_spacesMembers","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_struct(Map)2283_storage)"},{"astId":154,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"_spacesAdmins","offset":0,"slot":"5","type":"t_mapping(t_uint256,t_array(t_address)dyn_storage)"},{"astId":160,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"_spacesIsAdmin","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_mapping(t_address,t_bool))"},{"astId":165,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"_userSpaces","offset":0,"slot":"7","type":"t_mapping(t_address,t_struct(Map)2485_storage)"},{"astId":169,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"_spacesOwners","offset":0,"slot":"8","type":"t_mapping(t_uint256,t_address)"},{"astId":178,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"_spacesProposalsVotes","offset":0,"slot":"9","type":"t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_struct(Vote)130_storage)))"},{"astId":185,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"_spacesProposalsVoters","offset":0,"slot":"10","type":"t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_address)dyn_storage))"},{"astId":189,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"_isOperator","offset":0,"slot":"11","type":"t_mapping(t_address,t_bool)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"21"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_array(t_struct(Proposal)125_storage)dyn_storage":{"base":"t_struct(Proposal)125_storage","encoding":"dynamic_array","label":"struct Vitasensus.Proposal[]","numberOfBytes":"32"},"t_array(t_struct(Space)92_storage)dyn_storage":{"base":"t_struct(Space)92_storage","encoding":"dynamic_array","label":"struct Vitasensus.Space[]","numberOfBytes":"32"},"t_array(t_struct(SpaceSettings)97_storage)dyn_storage":{"base":"t_struct(SpaceSettings)97_storage","encoding":"dynamic_array","label":"struct Vitasensus.SpaceSettings[]","numberOfBytes":"32"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_enum(ProposalState)77":{"encoding":"inplace","label":"enum Vitasensus.ProposalState","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_struct(Map)2485_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct UintKeyedIterableMapping.Map)","numberOfBytes":"32","value":"t_struct(Map)2485_storage"},"t_mapping(t_address,t_struct(Vote)130_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct Vitasensus.Vote)","numberOfBytes":"32","value":"t_struct(Vote)130_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_array(t_address)dyn_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address[])","numberOfBytes":"32","value":"t_array(t_address)dyn_storage"},"t_mapping(t_uint256,t_array(t_struct(Proposal)125_storage)dyn_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Vitasensus.Proposal[])","numberOfBytes":"32","value":"t_array(t_struct(Proposal)125_storage)dyn_storage"},"t_mapping(t_uint256,t_bool)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_uint256,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_uint256,t_mapping(t_address,t_struct(Vote)130_storage))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => struct Vitasensus.Vote))","numberOfBytes":"32","value":"t_mapping(t_address,t_struct(Vote)130_storage)"},"t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_address)dyn_storage))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(uint256 => address[]))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_array(t_address)dyn_storage)"},"t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_address,t_struct(Vote)130_storage)))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(uint256 => mapping(address => struct Vitasensus.Vote)))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_mapping(t_address,t_struct(Vote)130_storage))"},"t_mapping(t_uint256,t_struct(Map)2283_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct IterableMapping.Map)","numberOfBytes":"32","value":"t_struct(Map)2283_storage"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Map)2283_storage":{"encoding":"inplace","label":"struct IterableMapping.Map","members":[{"astId":2270,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"keys","offset":0,"slot":"0","type":"t_array(t_address)dyn_storage"},{"astId":2274,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"values","offset":0,"slot":"1","type":"t_mapping(t_address,t_uint256)"},{"astId":2278,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"indexOf","offset":0,"slot":"2","type":"t_mapping(t_address,t_uint256)"},{"astId":2282,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"inserted","offset":0,"slot":"3","type":"t_mapping(t_address,t_bool)"}],"numberOfBytes":"128"},"t_struct(Map)2485_storage":{"encoding":"inplace","label":"struct UintKeyedIterableMapping.Map","members":[{"astId":2472,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"keys","offset":0,"slot":"0","type":"t_array(t_uint256)dyn_storage"},{"astId":2476,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"values","offset":0,"slot":"1","type":"t_mapping(t_uint256,t_uint256)"},{"astId":2480,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"indexOf","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_uint256)"},{"astId":2484,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"inserted","offset":0,"slot":"3","type":"t_mapping(t_uint256,t_bool)"}],"numberOfBytes":"128"},"t_struct(Proposal)125_storage":{"encoding":"inplace","label":"struct Vitasensus.Proposal","members":[{"astId":99,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"body","offset":0,"slot":"0","type":"t_string_storage"},{"astId":101,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"title","offset":0,"slot":"1","type":"t_string_storage"},{"astId":103,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"startTime","offset":0,"slot":"2","type":"t_uint64"},{"astId":105,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"endTime","offset":8,"slot":"2","type":"t_uint64"},{"astId":107,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"snapshotHeight","offset":0,"slot":"3","type":"t_uint256"},{"astId":109,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"author","offset":0,"slot":"4","type":"t_address"},{"astId":112,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"choices","offset":0,"slot":"5","type":"t_array(t_bytes32)dyn_storage"},{"astId":115,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"choicesExecutors","offset":0,"slot":"6","type":"t_array(t_address)dyn_storage"},{"astId":118,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"choicesData","offset":0,"slot":"7","type":"t_array(t_bytes32)dyn_storage"},{"astId":121,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"votes","offset":0,"slot":"8","type":"t_array(t_uint256)dyn_storage"},{"astId":124,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"state","offset":0,"slot":"9","type":"t_enum(ProposalState)77"}],"numberOfBytes":"320"},"t_struct(Space)92_storage":{"encoding":"inplace","label":"struct Vitasensus.Space","members":[{"astId":79,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"name","offset":0,"slot":"0","type":"t_bytes32"},{"astId":81,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"avatar","offset":0,"slot":"1","type":"t_bytes32"},{"astId":83,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"website","offset":0,"slot":"2","type":"t_bytes32"},{"astId":85,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"description","offset":0,"slot":"3","type":"t_string_storage"},{"astId":87,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"token","offset":0,"slot":"4","type":"t_tokenId"},{"astId":89,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"tokenDecimals","offset":0,"slot":"5","type":"t_uint256"},{"astId":91,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"createdTimestamp","offset":0,"slot":"6","type":"t_uint256"}],"numberOfBytes":"224"},"t_struct(SpaceSettings)97_storage":{"encoding":"inplace","label":"struct Vitasensus.SpaceSettings","members":[{"astId":94,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"createProposalThreshold","offset":0,"slot":"0","type":"t_uint256"},{"astId":96,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"onlyAdminsCanCreateProposals","offset":0,"slot":"1","type":"t_bool"}],"numberOfBytes":"64"},"t_struct(Vote)130_storage":{"encoding":"inplace","label":"struct Vitasensus.Vote","members":[{"astId":127,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"choiceIndex","offset":0,"slot":"0","type":"t_uint256"},{"astId":129,"contract":"contracts/Vitasensus.solpp:Vitasensus","label":"votes","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_tokenId":{"encoding":"inplace","label":"tokenId","numberOfBytes":"10"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"}}}}},"contracts/VitasensusProposalExecutor.solpp":{"ExternalCallTestContract":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"data","type":"bytes32"}],"name":"EventA","type":"event"},{"inputs":[],"name":"data","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"data_","type":"bytes32"}],"name":"executeVitasensusProposal","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"assembly":"  // newTag tag_2, desc: function selector\n  // ContractCompiler::initializeContext()\n  // ContractCompiler::registerImmutableVariables()\n  // end of ContractCompiler::registerImmutableVariables()\n    /* \"contracts/VitasensusProposalExecutor.solpp\":166:405   */\n  0x80\n  // CompilerUtils::storeFreeMemoryPointer()\n  0x40\n  mstore\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // ContractCompiler::registerStateVariables()\n  // end of ContractCompiler::registerStateVariables()\n  // ContractCompiler::initializeStateVariables()\n  // end of ContractCompiler::initializeStateVariables()\n  // ContractCompiler::initializeStateVariables()\n  // end of ContractCompiler::initializeStateVariables()\n  // newPushTag tag_3, desc: \n  dataSize(sub_0)\n  dup1\n  // CompilerContext::appendYulUtilityFunctions()\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n  // newTag tag_2, desc: function selector\n  // ContractCompiler::initializeContext()\n        /* \"contracts/VitasensusProposalExecutor.solpp\":166:405   */\n      0x80\n  // CompilerUtils::storeFreeMemoryPointer()\n      0x40\n      mstore\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // ContractCompiler::registerStateVariables()\n  // end of ContractCompiler::registerStateVariables()\n  // newTag tag_3, desc: declaration of function data\n  // newTag tag_4, desc: declaration of function executeVitasensusProposal\n      jump(tag_1)\n        /* \"contracts/VitasensusProposalExecutor.solpp\":270:289   */\n    tag_2:  // declaration of function data\n  // ExpressionCompiler::appendStateVariableAccessor(data)\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/VitasensusProposalExecutor.solpp\":293:403   */\n    tag_3:  // declaration of function executeVitasensusProposal\n        /* \"contracts/VitasensusProposalExecutor.solpp\":372:377   */\n      dup1\n  // end of ExpressionCompiler::appendStateVariableAccessor()\n        /* \"contracts/VitasensusProposalExecutor.solpp\":365:369   */\n      0x00\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function executeVitasensusProposal(bytes32 data_) external override {\n\t\tdata = data_;\n\t\temit EventA(data_);\n\t}\n  // newTag tag_5, desc: return tag of executeVitasensusProposal\n  // start of code block of executeVitasensusProposal\n  // ExpressionCompiler::appendVariable(data_, data_)\n        /* \"contracts/VitasensusProposalExecutor.solpp\":365:377   */\n      dup2\n  // ExpressionCompiler::appendVariable(data, data)\n      swap1\n      sstore\n      pop\n        /* \"contracts/VitasensusProposalExecutor.solpp\":393:398   */\n      dup1\n        /* \"contracts/VitasensusProposalExecutor.solpp\":386:399   */\n      0x22dfb6557724ee17312e1fab7ba79be2f7a1555d8e4de64babbb64281352f645\n      0x40\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      mload\n      mload(0x40)\n  // end of CompilerUtils::convertType()\n      dup1\n      swap2\n  // CompilerUtils::popStackSlots(1)\n      sub\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(data_, data_)\n      swap1\n  // CompilerUtils::convertType(): bytes32 -> bytes32\n      log2\n        /* \"contracts/VitasensusProposalExecutor.solpp\":293:403   */\n      pop\n      jump\t// out\n  // end of CompilerUtils::convertType()\n    tag_1:  // function selector\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x04\n      calldatasize\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             ]\n  // CompilerUtils::fetchFreeMemoryPointer()\n      lt\n      tag_5\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      jumpi\n      shr(0xe0, calldataload(0x00))\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      dup1\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 0 return parameters\n  //  current stackLayout [0 -1 ]\n      0x0fabfc53\n      eq\n      tag_6\n  // newTag tag_6, desc: notFoundOrReceiveEther\n  // jump to fallback or ether receiver if the data is too short to contain a function selector\n      jumpi\n      dup1\n      0xb7a61296\n      eq\n      tag_7\n  // retrieve the function signature hash from the calldata\n  // CompilerUtils::loadFromMemory(offset=0, type=uint32, fromCalldata=1, padToWordBoundaries=0)\n      jumpi\n  // CompilerUtils::loadFromMemoryHelper()\n    tag_5:  // notFoundOrReceiveEther\n  // CompilerUtils::rightShiftNumberOnStack(bits=224)\n      stop\n        /* \"contracts/VitasensusProposalExecutor.solpp\":270:289   */\n    tag_6:  // calldata unpacker of function () view external returns (bytes32)\n  // end of CompilerUtils::rightShiftNumberOnStack()\n  // newTag tag_7, desc: calldata unpacker of function () view external returns (bytes32)\n  // newTag tag_8, desc: calldata unpacker of function (bytes32) external\n  // ContractCompiler::appendInternalSelector()\n  // function selector\n      tag_8\n      tag_2\n      jump\t// in\n    tag_8:  // return value packer of function () view external returns (bytes32)\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n  // callback selector\n  // not found\n      jump\t// in\n    tag_9:  // return of Yul function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed\n  // end of ContractCompiler::appendInternalSelector()\n      mload(0x40)\n      dup1\n  // return value packer of function () view external returns (bytes32)\n  // newPushTag tag_9, desc: return value packer of function () view external returns (bytes32)\n      swap2\n      sub\n      swap1\n      return\n  // CompilerUtils::fetchFreeMemoryPointer()\n        /* \"contracts/VitasensusProposalExecutor.solpp\":293:403   */\n    tag_7:  // calldata unpacker of function (bytes32) external\n      tag_11\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             bytes32\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_10, desc: return of Yul function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed\n      0x04\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      dup1\n      calldatasize\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_11, desc: abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed\n      sub\n      dup2\n      add\n  // CompilerUtils::fetchFreeMemoryPointer()\n      swap1\n      tag_12\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:  // return of Yul function abi_decode_tuple_t_bytes32\n      tag_3\n  // return value packer of function (bytes32) external\n  // newPushTag tag_12, desc: return value packer of function (bytes32) external\n      jump\t// in\n    tag_11:  // return value packer of function (bytes32) external\n      stop\n    tag_15:\n      0x00\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      dup2\n      calldataload\n      swap1\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_bytes32, _inArgs=2, _outArgs=1)\n  // newPushTag tag_13, desc: return of Yul function abi_decode_tuple_t_bytes32\n      pop\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      tag_17\n      dup2\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_14, desc: abi_decode_tuple_t_bytes32\n      tag_18\n      jump\t// in\n    tag_17:\n      swap3\n      swap2\n      pop\n      pop\n  // CompilerContext::appendYulUtilityFunctions()\n  // newTag tag_15, desc: \n      jump\t// out\n    tag_13:\n  // newTag tag_16, desc: abi_decode_t_bytes32\n      0x00\n      0x20\n  // newTag tag_17, desc: \n      dup3\n      dup5\n      sub\n      slt\n  // newTag tag_18, desc: \n      iszero\n      tag_20\n  // newTag tag_19, desc: validator_revert_t_bytes32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      0x00\n      tag_21\n      dup5\n      dup3\n      dup6\n      add\n  // newTag tag_20, desc: \n      tag_15\n      jump\t// in\n    tag_21:\n      swap2\n      pop\n      pop\n  // newTag tag_21, desc: \n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_22:\n      tag_24\n  // newTag tag_22, desc: \n      dup2\n      tag_25\n      jump\t// in\n    tag_24:\n      dup3\n      mstore\n      pop\n      pop\n      jump\t// out\n    tag_10:\n      0x00\n      0x20\n      dup3\n      add\n      swap1\n      pop\n      tag_27\n  // newTag tag_23, desc: abi_encode_t_bytes32_to_t_bytes32_fromStack\n      0x00\n  // newTag tag_24, desc: \n  // newTag tag_25, desc: \n      dup4\n      add\n  // newTag tag_26, desc: cleanup_t_bytes32\n      dup5\n      tag_22\n      jump\t// in\n    tag_27:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_25:\n      0x00\n  // newTag tag_27, desc: \n      dup2\n      swap1\n      pop\n      swap2\n      swap1\n  // newTag tag_28, desc: \n      pop\n      jump\t// out\n    tag_18:\n      tag_30\n      dup2\n      tag_25\n      jump\t// in\n    tag_30:\n      dup2\n      eq\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n  // newTag tag_29, desc: \n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582000000000000000000000000000000000000000000000000000000000000000000029\n}\n","bytecode":{"generatedSources":[],"linkReferences":{},"object":"608060405261015c806100136000396000f3fe6080604052610046565b60005481565b80600081905550807f22dfb6557724ee17312e1fab7ba79be2f7a1555d8e4de64babbb64281352f64560405160405180910390a250565b6004361061006b5760003560e01c80630fabfc531461006d578063b7a612961461008b575b005b610075610009565b60405161008291906100f4565b60405180910390f35b6100a560048036038101906100a091906100bc565b61000f565b005b6000813590506100b681610119565b92915050565b6000602082840312156100ce57600080fd5b60006100dc848285016100a7565b91505092915050565b6100ee8161010f565b82525050565b600060208201905061010960008301846100e5565b92915050565b6000819050919050565b6101228161010f565b811461012d57600080fd5b5056fea165627a7a7230582000000000000000000000000000000000000000000000000000000000000000000029","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x15C DUP1 PUSH2 0x13 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x46 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP1 PUSH32 0x22DFB6557724EE17312E1FAB7BA79BE2F7A1555D8E4DE64BABBB64281352F645 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xFABFC53 EQ PUSH2 0x6D JUMPI DUP1 PUSH4 0xB7A61296 EQ PUSH2 0x8B JUMPI JUMPDEST STOP JUMPDEST PUSH2 0x75 PUSH2 0x9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x82 SWAP2 SWAP1 PUSH2 0xF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0xBC JUMP JUMPDEST PUSH2 0xF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB6 DUP2 PUSH2 0x119 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDC DUP5 DUP3 DUP6 ADD PUSH2 0xA7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEE DUP2 PUSH2 0x10F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x109 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x122 DUP2 PUSH2 0x10F JUMP JUMPDEST DUP2 EQ PUSH2 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP 0x29 ","sourceMap":"166:239:3:-:0;;;;;;;;;"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.6eb4927f.mod\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"EventA\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"data_\",\"type\":\"bytes32\"}],\"name\":\"executeVitasensusProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VitasensusProposalExecutor.solpp\":\"ExternalCallTestContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/VitasensusProposalExecutor.solpp\":{\"keccak256\":\"0x4fc0aae9874ca213bf7f8fa6b311950c8b341ac9db1f79b1f32bd05110da9ded\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://31f6137faa66f2c93402107f8df05f80ec206f82484128a890764be51b11eadf\",\"dweb:/ipfs/QmSut867o7nYgpf6tSRuQ7hUaUx1womGuwFTRwGuXRCmXE\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":2797,"contract":"contracts/VitasensusProposalExecutor.solpp:ExternalCallTestContract","label":"data","offset":0,"slot":"0","type":"t_bytes32"}],"types":{"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"}}}},"VitasensusProposalExecutor":{"abi":[{"inputs":[{"internalType":"bytes32","name":"data","type":"bytes32"}],"name":"executeVitasensusProposal","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"assembly":"","bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.6eb4927f.mod\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"executeVitasensusProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VitasensusProposalExecutor.solpp\":\"VitasensusProposalExecutor\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/VitasensusProposalExecutor.solpp\":{\"keccak256\":\"0x4fc0aae9874ca213bf7f8fa6b311950c8b341ac9db1f79b1f32bd05110da9ded\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://31f6137faa66f2c93402107f8df05f80ec206f82484128a890764be51b11eadf\",\"dweb:/ipfs/QmSut867o7nYgpf6tSRuQ7hUaUx1womGuwFTRwGuXRCmXE\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}}},"sources":{"contracts/IterableMapping.solpp":{"id":0},"contracts/Ownable.sol":{"id":1},"contracts/Vitasensus.solpp":{"id":2},"contracts/VitasensusProposalExecutor.solpp":{"id":3}}}
