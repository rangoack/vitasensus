{"contracts":{"contracts/Cafe.solpp":{"Baz":{"abi":[{"inputs":[],"name":"setTime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"val","type":"uint256"}],"name":"setVal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"time","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"assembly":"  // newTag tag_2, desc: function selector\n  // ContractCompiler::initializeContext()\n  // ContractCompiler::registerImmutableVariables()\n  // end of ContractCompiler::registerImmutableVariables()\n    /* \"contracts/Cafe.solpp\":796:982  contract Baz {... */\n  0x80\n  // CompilerUtils::storeFreeMemoryPointer()\n  0x40\n  mstore\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // ContractCompiler::registerStateVariables()\n  // end of ContractCompiler::registerStateVariables()\n  // ContractCompiler::initializeStateVariables()\n  // end of ContractCompiler::initializeStateVariables()\n  // newPushTag tag_3, desc: \n  dataSize(sub_0)\n  dup1\n  // CompilerContext::appendYulUtilityFunctions()\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n  // newTag tag_2, desc: function selector\n  // ContractCompiler::initializeContext()\n        /* \"contracts/Cafe.solpp\":796:982  contract Baz {... */\n      0x80\n  // CompilerUtils::storeFreeMemoryPointer()\n      0x40\n      mstore\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // ContractCompiler::registerStateVariables()\n  // end of ContractCompiler::registerStateVariables()\n  // newTag tag_3, desc: declaration of function time\n  // newTag tag_4, desc: declaration of function setTime\n  // newTag tag_5, desc: declaration of function setVal\n      jump(tag_1)\n        /* \"contracts/Cafe.solpp\":815:834  uint256 public time */\n    tag_2:  // declaration of function time\n  // ExpressionCompiler::appendStateVariableAccessor(time)\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/Cafe.solpp\":845:911  function setTime() public  {... */\n    tag_3:  // declaration of function setTime\n        /* \"contracts/Cafe.solpp\":889:904  block.timestamp */\n      timestamp\n  // end of ExpressionCompiler::appendStateVariableAccessor()\n        /* \"contracts/Cafe.solpp\":882:886  time */\n      0x00\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function setTime() public  {\n        time = block.timestamp;\n    }\n  // newTag tag_6, desc: return tag of setTime\n  // start of code block of setTime\n  // ExpressionCompiler::visit(_memberAccess=block.timestamp)\n        /* \"contracts/Cafe.solpp\":882:904  time = block.timestamp */\n      dup2\n  // ExpressionCompiler::appendVariable(time, time)\n      swap1\n      sstore\n      pop\n        /* \"contracts/Cafe.solpp\":845:911  function setTime() public  {... */\n      jump\t// out\n        /* \"contracts/Cafe.solpp\":917:980  function setVal(uint256 val) public {... */\n    tag_4:  // declaration of function setVal\n        /* \"contracts/Cafe.solpp\":970:973  val */\n      dup1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n        /* \"contracts/Cafe.solpp\":963:967  time */\n      0x00\n        /* \"contracts/Cafe.solpp\":963:973  time = val */\n      dup2\n  // CompilerUtils::popStackSlots(1)\n      swap1\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      sstore\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 0 parameters and 0 return parameters\n      pop\n        /* \"contracts/Cafe.solpp\":917:980  function setVal(uint256 val) public {... */\n      pop\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function setVal(uint256 val) public {\n        time = val;\n    }\n  // newTag tag_7, desc: return tag of setVal\n  // start of code block of setVal\n  // ExpressionCompiler::appendVariable(val, val)\n      jump\t// out\n  // ExpressionCompiler::appendVariable(time, time)\n    tag_1:  // function selector\n      jumpi(tag_7, lt(calldatasize, 0x04))\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      calldataload(0x00)\n  // CompilerUtils::popStackSlots(1)\n      0xe0\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      shr\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 0 return parameters\n  //  current stackLayout [0 -1 ]\n      dup1\n      0x5f6331d9\n      eq\n  // newTag tag_8, desc: notFoundOrReceiveEther\n  // jump to fallback or ether receiver if the data is too short to contain a function selector\n      tag_8\n      jumpi\n      dup1\n      0x682b4511\n      eq\n  // retrieve the function signature hash from the calldata\n  // CompilerUtils::loadFromMemory(offset=0, type=uint32, fromCalldata=1, padToWordBoundaries=0)\n      tag_9\n  // CompilerUtils::loadFromMemoryHelper()\n      jumpi\n  // CompilerUtils::rightShiftNumberOnStack(bits=224)\n      dup1\n      0xdfa8f48e\n  // end of CompilerUtils::rightShiftNumberOnStack()\n  // newTag tag_9, desc: calldata unpacker of function () view external returns (uint256)\n  // newTag tag_10, desc: calldata unpacker of function () external\n  // newTag tag_11, desc: calldata unpacker of function (uint256) external\n  // ContractCompiler::appendInternalSelector()\n  // function selector\n      eq\n      tag_10\n      jumpi\n    tag_7:  // notFoundOrReceiveEther\n      stop\n        /* \"contracts/Cafe.solpp\":815:834  uint256 public time */\n    tag_8:  // calldata unpacker of function () view external returns (uint256)\n      tag_11\n      tag_2\n      jump\t// in\n    tag_11:  // return value packer of function () view external returns (uint256)\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n  // callback selector\n  // not found\n      tag_13\n      jump\t// in\n  // end of ContractCompiler::appendInternalSelector()\n    tag_12:  // return of Yul function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n      mload(0x40)\n  // return value packer of function () view external returns (uint256)\n  // newPushTag tag_12, desc: return value packer of function () view external returns (uint256)\n      dup1\n      swap2\n      sub\n      swap1\n  // CompilerUtils::fetchFreeMemoryPointer()\n      return\n        /* \"contracts/Cafe.solpp\":845:911  function setTime() public  {... */\n    tag_9:  // calldata unpacker of function () external\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             uint256\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_13, desc: return of Yul function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n      tag_14\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      tag_3\n      jump\t// in\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_14, desc: abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n    tag_14:  // return value packer of function () external\n      stop\n        /* \"contracts/Cafe.solpp\":917:980  function setVal(uint256 val) public {... */\n    tag_10:  // calldata unpacker of function (uint256) external\n  // CompilerUtils::fetchFreeMemoryPointer()\n      tag_15\n      0x04\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n  // return value packer of function () external\n  // newPushTag tag_15, desc: return value packer of function () external\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:  // return of Yul function abi_decode_tuple_t_uint256\n  // return value packer of function (uint256) external\n  // newPushTag tag_16, desc: return value packer of function (uint256) external\n      tag_4\n      jump\t// in\n    tag_15:  // return value packer of function (uint256) external\n      stop\n    tag_19:\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      0x00\n      dup2\n      calldataload\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_17, desc: return of Yul function abi_decode_tuple_t_uint256\n      swap1\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      pop\n      tag_21\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_18, desc: abi_decode_tuple_t_uint256\n      dup2\n      tag_22\n      jump\t// in\n    tag_21:\n      swap3\n      swap2\n      pop\n  // CompilerContext::appendYulUtilityFunctions()\n  // newTag tag_19, desc: \n      pop\n      jump\t// out\n  // newTag tag_20, desc: abi_decode_t_uint256\n    tag_17:\n      0x00\n  // newTag tag_21, desc: \n      0x20\n      dup3\n      dup5\n      sub\n  // newTag tag_22, desc: \n      slt\n      iszero\n  // newTag tag_23, desc: validator_revert_t_uint256\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      0x00\n      tag_25\n      dup5\n      dup3\n      dup6\n  // newTag tag_24, desc: \n      add\n      tag_19\n      jump\t// in\n    tag_25:\n      swap2\n      pop\n  // newTag tag_25, desc: \n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_26:\n  // newTag tag_26, desc: \n      tag_28\n      dup2\n      tag_29\n      jump\t// in\n    tag_28:\n      dup3\n      mstore\n      pop\n      pop\n      jump\t// out\n    tag_13:\n      0x00\n      0x20\n      dup3\n      add\n      swap1\n      pop\n  // newTag tag_27, desc: abi_encode_t_uint256_to_t_uint256_fromStack\n      tag_31\n  // newTag tag_28, desc: \n  // newTag tag_29, desc: \n      0x00\n      dup4\n  // newTag tag_30, desc: cleanup_t_uint256\n      add\n      dup5\n      tag_26\n      jump\t// in\n    tag_31:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_29:\n  // newTag tag_31, desc: \n      0x00\n      dup2\n      swap1\n      pop\n      swap2\n  // newTag tag_32, desc: \n      swap1\n      pop\n      jump\t// out\n    tag_22:\n      tag_34\n      dup2\n      tag_29\n      jump\t// in\n    tag_34:\n      dup2\n      eq\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n  // newTag tag_33, desc: \n    tag_35:\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582000000000000000000000000000000000000000000000000000000000000000000029\n}\n","bytecode":{"generatedSources":[],"linkReferences":{},"object":"608060405261014d806100136000396000f3fe6080604052610022565b60005481565b42600081905550565b8060008190555050565b600436106100525760003560e01c80635f6331d914610054578063682b451114610072578063dfa8f48e1461007c575b005b61005c610009565b60405161006991906100e5565b60405180910390f35b61007a61000f565b005b610096600480360381019061009191906100ad565b610018565b005b6000813590506100a78161010a565b92915050565b6000602082840312156100bf57600080fd5b60006100cd84828501610098565b91505092915050565b6100df81610100565b82525050565b60006020820190506100fa60008301846100d6565b92915050565b6000819050919050565b61011381610100565b811461011e57600080fd5b5056fea165627a7a7230582000000000000000000000000000000000000000000000000000000000000000000029","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x14D DUP1 PUSH2 0x13 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x22 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST TIMESTAMP PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 CALLDATASIZE LT PUSH2 0x52 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5F6331D9 EQ PUSH2 0x54 JUMPI DUP1 PUSH4 0x682B4511 EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0xDFA8F48E EQ PUSH2 0x7C JUMPI JUMPDEST STOP JUMPDEST PUSH2 0x5C PUSH2 0x9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x69 SWAP2 SWAP1 PUSH2 0xE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A PUSH2 0xF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x96 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x91 SWAP2 SWAP1 PUSH2 0xAD JUMP JUMPDEST PUSH2 0x18 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA7 DUP2 PUSH2 0x10A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCD DUP5 DUP3 DUP6 ADD PUSH2 0x98 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDF DUP2 PUSH2 0x100 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x113 DUP2 PUSH2 0x100 JUMP JUMPDEST DUP2 EQ PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP 0x29 ","sourceMap":"796:186:0:-:0;;;;;;;;;"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.6eb4927f.mod\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"setTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"setVal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"time\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Cafe.solpp\":\"Baz\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Cafe.solpp\":{\"keccak256\":\"0xe0ee7c453c80ca6cb4b00e1f57eae46c8a9ed836a1150fdec0fa6f9dc2ead3d1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0aebd0d9cc91b79554e1dfbedcb1a9d4a6c350251639573982174c1cebbb1967\",\"dweb:/ipfs/QmZT5cJRt5QquhNvtyhkzGA6HiDJAQ6tpWKEeKpgoiwiSN\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":83,"contract":"contracts/Cafe.solpp:Baz","label":"time","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}},"Cafe":{"abi":[{"inputs":[],"stateMutability":"payable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"num","type":"uint256"}],"name":"Buy","type":"event"},{"inputs":[],"name":"VITE","outputs":[{"internalType":"tokenId","name":"","type":"tokenId"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address payable","name":"to","type":"address"},{"internalType":"uint256","name":"numOfCups","type":"uint256"}],"name":"buyCoffee","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"price","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"assembly":"  // newTag tag_2, desc: function selector\n  // ContractCompiler::initializeContext()\n  // ContractCompiler::registerImmutableVariables()\n  // end of ContractCompiler::registerImmutableVariables()\n    /* \"contracts/Cafe.solpp\":91:682  contract Cafe {... */\n  0x80\n  // CompilerUtils::storeFreeMemoryPointer()\n  0x40\n  mstore\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // ContractCompiler::registerStateVariables()\n  // end of ContractCompiler::registerStateVariables()\n  // ContractCompiler::initializeStateVariables()\n    /* \"contracts/Cafe.solpp\":229:235  10**18 */\n  0x0de0b6b3a7640000\n  // CompilerUtils::convertType(): int_const 1000000000000000000 -> uint256\n  // end of CompilerUtils::convertType()\n    /* \"contracts/Cafe.solpp\":206:235  uint256 public price = 10**18 */\n  0x00\n  sstore\n    /* \"contracts/Cafe.solpp\":91:682  contract Cafe {... */\n  dataSize(sub_0)\n  dup1\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  dataOffset(sub_0)\n  0x00\n  // end of ContractCompiler::initializeStateVariables()\n  // newTag tag_3, desc: declaration of function \n  codecopy\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for constructor() payable {}\n  // newTag tag_4, desc: return tag of \n  // start of code block of \n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n  0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 0 parameters and 0 return parameters\n  // newPushTag tag_5, desc: \n  return\nstop\n\nsub_0: assembly {\n  // newTag tag_2, desc: function selector\n  // ContractCompiler::initializeContext()\n        /* \"contracts/Cafe.solpp\":91:682  contract Cafe {... */\n      0x80\n  // CompilerUtils::storeFreeMemoryPointer()\n      0x40\n      mstore\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // ContractCompiler::registerStateVariables()\n  // end of ContractCompiler::registerStateVariables()\n  // newTag tag_3, desc: declaration of function price\n  // newTag tag_4, desc: declaration of function VITE\n  // newTag tag_5, desc: declaration of function buyCoffee\n      jump(tag_1)\n        /* \"contracts/Cafe.solpp\":206:235  uint256 public price = 10**18 */\n    tag_2:  // declaration of function price\n  // ExpressionCompiler::appendStateVariableAccessor(price)\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/Cafe.solpp\":241:304  vitetoken public constant VITE = \"tti_5649544520544f4b454e6e40\" */\n    tag_3:  // declaration of function VITE\n        /* \"contracts/Cafe.solpp\":274:304  \"tti_5649544520544f4b454e6e40\" */\n      0x5649544520544f4b454e\n  // end of ExpressionCompiler::appendStateVariableAccessor()\n        /* \"contracts/Cafe.solpp\":241:304  vitetoken public constant VITE = \"tti_5649544520544f4b454e6e40\" */\n      dup2\n      jump\t// out\n        /* \"contracts/Cafe.solpp\":364:680  function buyCoffee(address payable to, uint256 numOfCups) payable external {... */\n    tag_4:  // declaration of function buyCoffee\n        /* \"contracts/Cafe.solpp\":274:304  \"tti_5649544520544f4b454e6e40\" */\n      0x5649544520544f4b454e\n        /* \"contracts/Cafe.solpp\":455:472  msg.token == VITE */\n      0xffffffffffffffffffff\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function buyCoffee(address payable to, uint256 numOfCups) payable external {\n      require(msg.token == VITE, \"require vite\");\n      require(msg.value >= price*numOfCups, \"enough to buy coffee\");\n\n      // send VITE to `to`\n      to.transfer(VITE, price * numOfCups);\n\n      emit Buy(msg.sender, to, numOfCups);\n   }\n  // newTag tag_6, desc: return tag of buyCoffee\n  // start of code block of buyCoffee\n  // ExpressionCompiler::appendVariable(VITE, VITE)\n      and\n  // CompilerUtils::convertType(): tokenId -> tokenId\n        /* \"contracts/Cafe.solpp\":455:464  msg.token */\n      tokenid\n        /* \"contracts/Cafe.solpp\":455:472  msg.token == VITE */\n      0xffffffffffffffffffff\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=msg.token)\n      and\n  // CompilerUtils::convertType(): tokenId -> tokenId\n      eq\n        /* \"contracts/Cafe.solpp\":447:489  require(msg.token == VITE, \"require vite\") */\n      tag_6\n  // end of CompilerUtils::convertType()\n      jumpi\n  // CompilerUtils::moveIntoStack(1, 0)\n      mload(0x40)\n  // newPushTag tag_7, desc: \n      0x4b2bae7e00000000000000000000000000000000000000000000000000000000\n      dup2\n  // Jump to tag_6\n  // CompilerUtils::fetchFreeMemoryPointer()\n      mstore\n      0x04\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      add\n      tag_7\n      swap1\n      tag_8\n      jump\t// in\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             literal_string \"require vite\"\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_stringliteral_d0a59a2f3226362c39a52c3fdfb5d923dbeaa71c54834e627fc0e6a36ff98821__to_t_string_memory_ptr__fromStack_reversed, _inArgs=1, _outArgs=1)\n  // newPushTag tag_8, desc: return of Yul function abi_encode_tuple_t_stringliteral_d0a59a2f3226362c39a52c3fdfb5d923dbeaa71c54834e627fc0e6a36ff98821__to_t_string_memory_ptr__fromStack_reversed\n    tag_7:  // return of Yul function abi_encode_tuple_t_stringliteral_d0a59a2f3226362c39a52c3fdfb5d923dbeaa71c54834e627fc0e6a36ff98821__to_t_string_memory_ptr__fromStack_reversed\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      0x40\n  // end of CompilerUtils::rotateStackDown()\n  // newTag tag_9, desc: abi_encode_tuple_t_stringliteral_d0a59a2f3226362c39a52c3fdfb5d923dbeaa71c54834e627fc0e6a36ff98821__to_t_string_memory_ptr__fromStack_reversed\n      mload\n      dup1\n      swap2\n  // CompilerUtils::fetchFreeMemoryPointer()\n      sub\n      swap1\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      revert\n    tag_6:\n        /* \"contracts/Cafe.solpp\":524:533  numOfCups */\n      dup1\n        /* \"contracts/Cafe.solpp\":518:523  price */\n      sload(0x00)\n        /* \"contracts/Cafe.solpp\":518:533  price*numOfCups */\n      tag_9\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::appendVariable(numOfCups, numOfCups)\n      swap2\n  // ExpressionCompiler::appendVariable(price, price)\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:  // return of Yul function checked_mul_t_uint256\n  // CompilerContext::callYulFunction(name=checked_mul_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_10, desc: return of Yul function checked_mul_t_uint256\n        /* \"contracts/Cafe.solpp\":505:514  msg.value */\n      callvalue\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n        /* \"contracts/Cafe.solpp\":505:533  msg.value >= price*numOfCups */\n      lt\n      iszero\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_11, desc: checked_mul_t_uint256\n        /* \"contracts/Cafe.solpp\":497:558  require(msg.value >= price*numOfCups, \"enough to buy coffee\") */\n      tag_11\n      jumpi\n      0x40\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::visit(_memberAccess=msg.value)\n      mload\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      0x4b2bae7e00000000000000000000000000000000000000000000000000000000\n      dup2\n  // CompilerUtils::moveIntoStack(1, 0)\n      mstore\n      0x04\n  // newPushTag tag_12, desc: \n      add\n      tag_12\n  // Jump to tag_11\n  // CompilerUtils::fetchFreeMemoryPointer()\n      swap1\n      tag_13\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      jump\t// in\n    tag_12:  // return of Yul function abi_encode_tuple_t_stringliteral_c9377a29439d356333970b4d01c0fdae0ab02b4c12843ab705d788b4d7e695d7__to_t_string_memory_ptr__fromStack_reversed\n      mload(0x40)\n      dup1\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             literal_string \"enough to buy coffee\"\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_stringliteral_c9377a29439d356333970b4d01c0fdae0ab02b4c12843ab705d788b4d7e695d7__to_t_string_memory_ptr__fromStack_reversed, _inArgs=1, _outArgs=1)\n  // newPushTag tag_13, desc: return of Yul function abi_encode_tuple_t_stringliteral_c9377a29439d356333970b4d01c0fdae0ab02b4c12843ab705d788b4d7e695d7__to_t_string_memory_ptr__fromStack_reversed\n      swap2\n  // CompilerUtils::moveIntoStack(1, 1)\n  // CompilerUtils::rotateStackDown(2)\n      sub\n  // end of CompilerUtils::rotateStackDown()\n  // newTag tag_14, desc: abi_encode_tuple_t_stringliteral_c9377a29439d356333970b4d01c0fdae0ab02b4c12843ab705d788b4d7e695d7__to_t_string_memory_ptr__fromStack_reversed\n      swap1\n      revert\n    tag_11:\n  // CompilerUtils::fetchFreeMemoryPointer()\n        /* \"contracts/Cafe.solpp\":594:596  to */\n      dup2\n        /* \"contracts/Cafe.solpp\":594:605  to.transfer */\n      0xffffffffffffffffffffffffffffffffffffffffff\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      and\n        /* \"contracts/Cafe.solpp\":274:304  \"tti_5649544520544f4b454e6e40\" */\n      0x5649544520544f4b454e\n        /* \"contracts/Cafe.solpp\":594:630  to.transfer(VITE, price * numOfCups) */\n      0xffffffffffffffffffff\n      and\n        /* \"contracts/Cafe.solpp\":620:629  numOfCups */\n      dup3\n        /* \"contracts/Cafe.solpp\":612:617  price */\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // ExpressionCompiler::visit(_memberAccess=to.transfer)\n  // ExpressionCompiler::appendVariable(to, to)\n      sload\n  // CompilerUtils::convertType(): address payable -> address payable\n        /* \"contracts/Cafe.solpp\":612:629  price * numOfCups */\n      tag_14\n      swap2\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(VITE, VITE)\n      swap1\n  // CompilerUtils::convertType(): tokenId -> tokenId\n      tag_10\n      jump\t// in\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendVariable(numOfCups, numOfCups)\n    tag_14:  // return of Yul function checked_mul_t_uint256\n  // ExpressionCompiler::appendVariable(price, price)\n        /* \"contracts/Cafe.solpp\":594:630  to.transfer(VITE, price * numOfCups) */\n      mload(0x40)\n      0x00\n      0x40\n  // CompilerContext::callYulFunction(name=checked_mul_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_15, desc: return of Yul function checked_mul_t_uint256\n      mload\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      swap1\n      pop\n  // end of CompilerUtils::rotateStackUp()\n      dup1\n      dup3\n      sub\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n  // ExpressionCompiler::appendExternalFunctionCall(function (),\n  //       args: [\n  //             ]\n  // )\n  // evaluate arguments\n  // CompilerUtils::fetchFreeMemoryPointer()\n      swap1\n      dup4\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // move arguments to memory\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             ]\n      dup6\n  // CompilerUtils::fetchFreeMemoryPointer()\n      dup8\n      call\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Cafe.solpp\":644:674  Buy(msg.sender, to, numOfCups) */\n      0x6cffe91e3273a785afb43323d6fee45b35bb972653675329489ebca1f8d56c80\n        /* \"contracts/Cafe.solpp\":648:658  msg.sender */\n      caller\n  // value to send\n        /* \"contracts/Cafe.solpp\":660:662  to */\n      dup4\n  // vite token\n        /* \"contracts/Cafe.solpp\":664:673  numOfCups */\n      dup4\n  // contract address\n        /* \"contracts/Cafe.solpp\":644:674  Buy(msg.sender, to, numOfCups) */\n      mload(0x40)\n  // newTag tag_16, desc: \n  // pop stack slots 4\n  // CompilerUtils::popStackSlots(4)\n      tag_16\n      swap4\n      swap3\n      swap2\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n      swap1\n  // ExpressionCompiler::visit(_memberAccess=msg.sender)\n      tag_17\n  // ExpressionCompiler::appendVariable(to, to)\n      jump\t// in\n  // ExpressionCompiler::appendVariable(numOfCups, numOfCups)\n    tag_16:  // return of Yul function abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed\n  // CompilerUtils::fetchFreeMemoryPointer()\n      mload(0x40)\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             address\n  //             address payable\n  //             uint256\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed, _inArgs=4, _outArgs=1)\n  // newPushTag tag_17, desc: return of Yul function abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed\n      dup1\n  // CompilerUtils::moveIntoStack(4, 1)\n  // CompilerUtils::rotateStackUp(5)\n      swap2\n      sub\n      swap1\n      log1\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_18, desc: abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed\n        /* \"contracts/Cafe.solpp\":364:680  function buyCoffee(address payable to, uint256 numOfCups) payable external {... */\n      pop\n      pop\n      jump\t// out\n  // CompilerUtils::fetchFreeMemoryPointer()\n    tag_1:  // function selector\n      0x04\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      calldatasize\n      lt\n      tag_18\n      jumpi\n      0x00\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      calldataload\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 2 parameters and 0 return parameters\n  //  current stackLayout [0 -1 -1 ]\n      0xe0\n  //  current stackLayout [0 -1 ]\n      shr\n      dup1\n      0x1d1e8a71\n  // newTag tag_19, desc: notFoundOrReceiveEther\n  // newTag tag_20, desc: notFound\n  // jump to fallback or ether receiver if the data is too short to contain a function selector\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x60e4dfce\n  // retrieve the function signature hash from the calldata\n  // CompilerUtils::loadFromMemory(offset=0, type=uint32, fromCalldata=1, padToWordBoundaries=0)\n      eq\n  // CompilerUtils::loadFromMemoryHelper()\n      tag_21\n  // CompilerUtils::rightShiftNumberOnStack(bits=224)\n      jumpi\n      dup1\n  // end of CompilerUtils::rightShiftNumberOnStack()\n  // newTag tag_21, desc: calldata unpacker of function () view external returns (uint256)\n  // newTag tag_22, desc: calldata unpacker of function () view external returns (tokenId)\n  // newTag tag_23, desc: calldata unpacker of function (address payable,uint256) payable external\n  // ContractCompiler::appendInternalSelector()\n  // function selector\n      0x87960933\n      eq\n      tag_22\n      jumpi\n      jump(tag_19)\n    tag_18:  // notFoundOrReceiveEther\n      jumpi(tag_19, calldatasize)\n      stop\n    tag_19:  // notFound\n      0x00\n      dup1\n      revert\n  // callback selector\n  // not found\n        /* \"contracts/Cafe.solpp\":206:235  uint256 public price = 10**18 */\n    tag_20:  // calldata unpacker of function () view external returns (uint256)\n      tag_25\n  // end of ContractCompiler::appendInternalSelector()\n      tag_2\n      jump\t// in\n    tag_25:  // return value packer of function () view external returns (uint256)\n      0x40\n  // newTag tag_24, desc: declaration of function \n      mload\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for receive() external payable {\n   }\n  // newTag tag_25, desc: return tag of \n  // start of code block of \n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      tag_26\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 0 parameters and 0 return parameters\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:  // return of Yul function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n      0x40\n  // return value packer of function () view external returns (uint256)\n  // newPushTag tag_26, desc: return value packer of function () view external returns (uint256)\n      mload\n      dup1\n      swap2\n      sub\n  // CompilerUtils::fetchFreeMemoryPointer()\n      swap1\n      return\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             uint256\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_27, desc: return of Yul function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n        /* \"contracts/Cafe.solpp\":241:304  vitetoken public constant VITE = \"tti_5649544520544f4b454e6e40\" */\n    tag_21:  // calldata unpacker of function () view external returns (tokenId)\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      tag_28\n      tag_3\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_28, desc: abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n      jump\t// in\n    tag_28:  // return value packer of function () view external returns (tokenId)\n      0x40\n  // CompilerUtils::fetchFreeMemoryPointer()\n      mload\n      tag_29\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:  // return of Yul function abi_encode_tuple_t_tokenId__to_t_tokenId__fromStack_reversed\n      0x40\n  // return value packer of function () view external returns (tokenId)\n  // newPushTag tag_29, desc: return value packer of function () view external returns (tokenId)\n      mload\n      dup1\n      swap2\n      sub\n  // CompilerUtils::fetchFreeMemoryPointer()\n      swap1\n      return\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             tokenId\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_tokenId__to_t_tokenId__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_30, desc: return of Yul function abi_encode_tuple_t_tokenId__to_t_tokenId__fromStack_reversed\n        /* \"contracts/Cafe.solpp\":364:680  function buyCoffee(address payable to, uint256 numOfCups) payable external {... */\n    tag_22:  // calldata unpacker of function (address payable,uint256) payable external\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      tag_31\n      0x04\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_31, desc: abi_encode_tuple_t_tokenId__to_t_tokenId__fromStack_reversed\n      dup1\n      calldatasize\n      sub\n  // CompilerUtils::fetchFreeMemoryPointer()\n      dup2\n      add\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n  // return value packer of function (address payable,uint256) payable external\n  // newPushTag tag_32, desc: return value packer of function (address payable,uint256) payable external\n    tag_32:  // return of Yul function abi_decode_tuple_t_address_payablet_uint256\n      tag_4\n      jump\t// in\n    tag_31:  // return value packer of function (address payable,uint256) payable external\n      stop\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n    tag_35:\n      0x00\n      dup2\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_address_payablet_uint256, _inArgs=2, _outArgs=2)\n  // newPushTag tag_33, desc: return of Yul function abi_decode_tuple_t_address_payablet_uint256\n      calldataload\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      swap1\n      pop\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_34, desc: abi_decode_tuple_t_address_payablet_uint256\n      tag_37\n      dup2\n      tag_38\n      jump\t// in\n    tag_37:\n      swap3\n      swap2\n  // CompilerContext::appendYulUtilityFunctions()\n  // newTag tag_35, desc: \n      pop\n      pop\n  // newTag tag_36, desc: abi_decode_t_address_payable\n      jump\t// out\n    tag_39:\n  // newTag tag_37, desc: \n      0x00\n      dup2\n      calldataload\n      swap1\n  // newTag tag_38, desc: \n      pop\n      tag_41\n  // newTag tag_39, desc: validator_revert_t_address_payable\n      dup2\n      tag_42\n      jump\t// in\n    tag_41:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n  // newTag tag_40, desc: abi_decode_t_uint256\n    tag_33:\n      0x00\n  // newTag tag_41, desc: \n      dup1\n      0x40\n      dup4\n      dup6\n  // newTag tag_42, desc: \n      sub\n      slt\n  // newTag tag_43, desc: validator_revert_t_uint256\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      0x00\n      tag_45\n      dup6\n      dup3\n      dup7\n  // newTag tag_44, desc: \n      add\n      tag_35\n      jump\t// in\n    tag_45:\n      swap3\n      pop\n  // newTag tag_45, desc: \n      pop\n      0x20\n      tag_46\n      dup6\n      dup3\n      dup7\n      add\n  // newTag tag_46, desc: \n      tag_39\n      jump\t// in\n    tag_46:\n      swap2\n      pop\n      pop\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n  // newTag tag_47, desc: \n    tag_47:\n      tag_49\n      dup2\n      tag_50\n      jump\t// in\n    tag_49:\n      dup3\n      mstore\n      pop\n      pop\n      jump\t// out\n    tag_51:\n      tag_53\n      dup2\n      tag_54\n      jump\t// in\n    tag_53:\n      dup3\n  // newTag tag_48, desc: abi_encode_t_address_payable_to_t_address_fromStack\n      mstore\n  // newTag tag_49, desc: \n  // newTag tag_50, desc: \n      pop\n      pop\n  // newTag tag_51, desc: convert_t_address_payable_to_t_address\n      jump\t// out\n    tag_55:\n      0x00\n      tag_57\n      0x14\n      dup4\n      tag_58\n      jump\t// in\n    tag_57:\n  // newTag tag_52, desc: abi_encode_t_address_to_t_address_fromStack\n      swap2\n  // newTag tag_53, desc: \n  // newTag tag_54, desc: \n      pop\n      tag_59\n  // newTag tag_55, desc: cleanup_t_address\n      dup3\n      tag_60\n      jump\t// in\n    tag_59:\n      0x20\n      dup3\n      add\n      swap1\n      pop\n  // newTag tag_56, desc: abi_encode_t_stringliteral_c9377a29439d356333970b4d01c0fdae0ab02b4c12843ab705d788b4d7e695d7_to_t_string_memory_ptr_fromStack\n      swap2\n      swap1\n  // newTag tag_57, desc: \n  // newTag tag_58, desc: \n      pop\n      jump\t// out\n    tag_61:\n  // newTag tag_59, desc: array_storeLengthForEncoding_t_string_memory_ptr_fromStack\n      0x00\n      tag_63\n      0x0c\n      dup4\n      tag_58\n  // newTag tag_60, desc: \n      jump\t// in\n    tag_63:\n  // newTag tag_61, desc: store_literal_in_memory_c9377a29439d356333970b4d01c0fdae0ab02b4c12843ab705d788b4d7e695d7\n      swap2\n      pop\n      tag_64\n      dup3\n      tag_65\n      jump\t// in\n    tag_64:\n      0x20\n      dup3\n      add\n      swap1\n      pop\n      swap2\n  // newTag tag_62, desc: abi_encode_t_stringliteral_d0a59a2f3226362c39a52c3fdfb5d923dbeaa71c54834e627fc0e6a36ff98821_to_t_string_memory_ptr_fromStack\n      swap1\n      pop\n  // newTag tag_63, desc: \n  // newTag tag_64, desc: \n      jump\t// out\n    tag_66:\n      tag_68\n      dup2\n      tag_69\n      jump\t// in\n    tag_68:\n      dup3\n  // newTag tag_65, desc: \n      mstore\n      pop\n  // newTag tag_66, desc: store_literal_in_memory_d0a59a2f3226362c39a52c3fdfb5d923dbeaa71c54834e627fc0e6a36ff98821\n      pop\n      jump\t// out\n    tag_70:\n      tag_72\n      dup2\n      tag_73\n      jump\t// in\n    tag_72:\n      dup3\n      mstore\n      pop\n      pop\n      jump\t// out\n  // newTag tag_67, desc: abi_encode_t_tokenId_to_t_tokenId_fromStack\n    tag_17:\n  // newTag tag_68, desc: \n  // newTag tag_69, desc: \n      0x00\n      0x60\n  // newTag tag_70, desc: cleanup_t_tokenId\n      dup3\n      add\n      swap1\n      pop\n      tag_75\n      0x00\n      dup4\n      add\n      dup7\n  // newTag tag_71, desc: abi_encode_t_uint256_to_t_uint256_fromStack\n      tag_51\n  // newTag tag_72, desc: \n  // newTag tag_73, desc: \n      jump\t// in\n    tag_75:\n  // newTag tag_74, desc: cleanup_t_uint256\n      tag_76\n      0x20\n      dup4\n      add\n      dup6\n      tag_47\n      jump\t// in\n    tag_76:\n      tag_77\n      0x40\n      dup4\n  // newTag tag_75, desc: \n      add\n      dup5\n      tag_70\n      jump\t// in\n    tag_77:\n  // newTag tag_76, desc: \n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_13:\n  // newTag tag_77, desc: \n      0x00\n      0x20\n      dup3\n      add\n      swap1\n      pop\n      dup2\n      dup2\n  // newTag tag_78, desc: \n      sub\n      0x00\n      dup4\n      add\n      mstore\n      tag_79\n      dup2\n      tag_55\n      jump\t// in\n    tag_79:\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_8:\n      0x00\n  // newTag tag_79, desc: \n      0x20\n      dup3\n      add\n      swap1\n      pop\n      dup2\n      dup2\n      sub\n      0x00\n      dup4\n      add\n      mstore\n  // newTag tag_80, desc: \n      tag_81\n      dup2\n      tag_61\n      jump\t// in\n    tag_81:\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_30:\n      0x00\n      0x20\n  // newTag tag_81, desc: \n      dup3\n      add\n      swap1\n      pop\n      tag_83\n      0x00\n      dup4\n      add\n      dup5\n      tag_66\n      jump\t// in\n    tag_83:\n  // newTag tag_82, desc: \n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_27:\n      0x00\n      0x20\n      dup3\n      add\n      swap1\n      pop\n      tag_85\n      0x00\n  // newTag tag_83, desc: \n      dup4\n      add\n      dup5\n      tag_70\n      jump\t// in\n  // newTag tag_84, desc: \n    tag_85:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_58:\n      0x00\n      dup3\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      pop\n  // newTag tag_85, desc: \n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n  // newTag tag_86, desc: \n    tag_10:\n      0x00\n      tag_88\n      dup3\n      tag_73\n      jump\t// in\n    tag_88:\n      swap2\n      pop\n      tag_89\n      dup4\n      tag_73\n      jump\t// in\n    tag_89:\n      swap3\n      pop\n  // newTag tag_87, desc: \n      dup2\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      div\n      dup4\n      gt\n      dup3\n      iszero\n      iszero\n      and\n      iszero\n      tag_90\n      jumpi\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n  // newTag tag_88, desc: \n  // newTag tag_89, desc: \n    tag_90:\n      dup3\n      dup3\n      mul\n      swap1\n      pop\n      swap3\n  // newTag tag_90, desc: \n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_54:\n      0x00\n      tag_94\n      dup3\n      tag_95\n      jump\t// in\n    tag_94:\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n  // newTag tag_91, desc: \n    tag_96:\n      0x00\n  // newTag tag_92, desc: \n      tag_98\n  // newTag tag_93, desc: panic_error_0x11\n      dup3\n      tag_95\n      jump\t// in\n    tag_98:\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_69:\n      0x00\n      tag_100\n      dup3\n      tag_101\n      jump\t// in\n    tag_100:\n  // newTag tag_94, desc: \n  // newTag tag_95, desc: \n      swap1\n      pop\n  // newTag tag_96, desc: cleanup_t_uint168\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_95:\n      0x00\n      0xffffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n      swap1\n  // newTag tag_97, desc: cleanup_t_address_payable\n      pop\n      swap2\n  // newTag tag_98, desc: \n  // newTag tag_99, desc: \n      swap1\n      pop\n      jump\t// out\n    tag_73:\n      0x00\n      dup2\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_101:\n      0x00\n  // newTag tag_100, desc: \n  // newTag tag_101, desc: \n      0xffffffffffffffffffff\n      dup3\n  // newTag tag_102, desc: cleanup_t_uint80\n      and\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_50:\n      0x00\n      tag_106\n      dup3\n      tag_107\n  // newTag tag_103, desc: \n      jump\t// in\n    tag_106:\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_107:\n      0x00\n      tag_109\n      dup3\n  // newTag tag_104, desc: \n      tag_110\n      jump\t// in\n    tag_109:\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_110:\n  // newTag tag_105, desc: \n      0x00\n      tag_112\n      dup3\n      tag_95\n      jump\t// in\n    tag_112:\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n  // newTag tag_106, desc: \n  // newTag tag_107, desc: \n    tag_92:\n      0xe0f8f85500000000000000000000000000000000000000000000000000000000\n  // newTag tag_108, desc: convert_t_uint168_to_t_address\n      0x00\n      mstore\n      0x11\n      0x04\n      mstore\n      0x24\n      0x00\n      revert\n    tag_60:\n      0x656e6f75676820746f2062757920636f66666565000000000000000000000000\n      0x00\n      dup3\n  // newTag tag_109, desc: \n  // newTag tag_110, desc: \n      add\n      mstore\n  // newTag tag_111, desc: convert_t_uint168_to_t_uint168\n      pop\n      jump\t// out\n    tag_65:\n      0x7265717569726520766974650000000000000000000000000000000000000000\n      0x00\n      dup3\n      add\n      mstore\n      pop\n      jump\t// out\n    tag_38:\n      tag_117\n  // newTag tag_112, desc: \n  // newTag tag_113, desc: \n      dup2\n      tag_96\n      jump\t// in\n    tag_117:\n      dup2\n      eq\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n  // newTag tag_114, desc: \n      jump\t// out\n    tag_42:\n      tag_120\n      dup2\n      tag_73\n      jump\t// in\n    tag_120:\n      dup2\n      eq\n      tag_121\n      jumpi\n      0x00\n  // newTag tag_115, desc: \n      dup1\n      revert\n    tag_121:\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582000000000000000000000000000000000000000000000000000000000000000000029\n}\n","bytecode":{"generatedSources":[],"linkReferences":{},"object":"6080604052670de0b6b3a76400006000556105838061001f6000396000f3fe6080604052610163565b60005481565b695649544520544f4b454e81565b695649544520544f4b454e69ffffffffffffffffffff164669ffffffffffffffffffff1614610081576040517f4b2bae7e0000000000000000000000000000000000000000000000000000000081526004016100789061033a565b60405180910390fd5b8060005461008f91906103a1565b3410156100d1576040517f4b2bae7e0000000000000000000000000000000000000000000000000000000081526004016100c89061031a565b60405180910390fd5b8174ffffffffffffffffffffffffffffffffffffffffff16695649544520544f4b454e69ffffffffffffffffffff168260005461010e91906103a1565b6040516000604051905080820390838587f1505050507f6cffe91e3273a785afb43323d6fee45b35bb972653675329489ebca1f8d56c80338383604051610157939291906102e3565b60405180910390a15050565b600436106101975760003560e01c80631d1e8a71146101a357806360e4dfce146101c157806387960933146101df5761019e565b3661019e57005b600080fd5b6101ab610009565b6040516101b89190610375565b60405180910390f35b6101c961000f565b6040516101d6919061035a565b60405180910390f35b6101f960048036038101906101f49190610225565b61001d565b005b60008135905061020a81610529565b92915050565b60008135905061021f81610540565b92915050565b6000806040838503121561023857600080fd5b6000610246858286016101fb565b925050602061025785828601610210565b9150509250929050565b61026a81610472565b82525050565b610279816103fb565b82525050565b600061028c601483610390565b9150610297826104d7565b602082019050919050565b60006102af600c83610390565b91506102ba82610500565b602082019050919050565b6102ce8161041f565b82525050565b6102dd81610452565b82525050565b60006060820190506102f86000830186610270565b6103056020830185610261565b61031260408301846102d4565b949350505050565b600060208201905081810360008301526103338161027f565b9050919050565b60006020820190508181036000830152610353816102a2565b9050919050565b600060208201905061036f60008301846102c5565b92915050565b600060208201905061038a60008301846102d4565b92915050565b600082825260208201905092915050565b60006103ac82610452565b91506103b783610452565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156103f0576103ef6104a8565b5b828202905092915050565b600061040682610431565b9050919050565b600061041882610431565b9050919050565b600061042a8261045c565b9050919050565b600074ffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b600061047d82610484565b9050919050565b600061048f82610496565b9050919050565b60006104a182610431565b9050919050565b7fe0f8f85500000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f656e6f75676820746f2062757920636f66666565000000000000000000000000600082015250565b7f7265717569726520766974650000000000000000000000000000000000000000600082015250565b6105328161040d565b811461053d57600080fd5b50565b61054981610452565b811461055457600080fd5b5056fea165627a7a7230582000000000000000000000000000000000000000000000000000000000000000000029","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 SSTORE PUSH2 0x583 DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x163 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH10 0x5649544520544F4B454E DUP2 JUMP JUMPDEST PUSH10 0x5649544520544F4B454E PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND TOKENID PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x81 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4B2BAE7E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78 SWAP1 PUSH2 0x33A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 SLOAD PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x3A1 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0xD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4B2BAE7E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8 SWAP1 PUSH2 0x31A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH10 0x5649544520544F4B454E PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x0 SLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x3A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP1 DUP3 SUB SWAP1 DUP4 DUP6 DUP8 CALL POP POP POP POP PUSH32 0x6CFFE91E3273A785AFB43323D6FEE45B35BB972653675329489EBCA1F8D56C80 CALLER DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x157 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x4 CALLDATASIZE LT PUSH2 0x197 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D1E8A71 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x60E4DFCE EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x87960933 EQ PUSH2 0x1DF JUMPI PUSH2 0x19E JUMP JUMPDEST CALLDATASIZE PUSH2 0x19E JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AB PUSH2 0x9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C9 PUSH2 0xF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x225 JUMP JUMPDEST PUSH2 0x1D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20A DUP2 PUSH2 0x529 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21F DUP2 PUSH2 0x540 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x246 DUP6 DUP3 DUP7 ADD PUSH2 0x1FB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x257 DUP6 DUP3 DUP7 ADD PUSH2 0x210 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x26A DUP2 PUSH2 0x472 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x279 DUP2 PUSH2 0x3FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28C PUSH1 0x14 DUP4 PUSH2 0x390 JUMP JUMPDEST SWAP2 POP PUSH2 0x297 DUP3 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AF PUSH1 0xC DUP4 PUSH2 0x390 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BA DUP3 PUSH2 0x500 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CE DUP2 PUSH2 0x41F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2DD DUP2 PUSH2 0x452 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2F8 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x270 JUMP JUMPDEST PUSH2 0x305 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x261 JUMP JUMPDEST PUSH2 0x312 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2D4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x333 DUP2 PUSH2 0x27F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x353 DUP2 PUSH2 0x2A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x36F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x38A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AC DUP3 PUSH2 0x452 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B7 DUP4 PUSH2 0x452 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3F0 JUMPI PUSH2 0x3EF PUSH2 0x4A8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x406 DUP3 PUSH2 0x431 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x418 DUP3 PUSH2 0x431 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42A DUP3 PUSH2 0x45C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47D DUP3 PUSH2 0x484 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48F DUP3 PUSH2 0x496 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A1 DUP3 PUSH2 0x431 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xE0F8F85500000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x656E6F75676820746F2062757920636F66666565000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x7265717569726520766974650000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x532 DUP2 PUSH2 0x40D JUMP JUMPDEST DUP2 EQ PUSH2 0x53D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x549 DUP2 PUSH2 0x452 JUMP JUMPDEST DUP2 EQ PUSH2 0x554 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP 0x29 ","sourceMap":"91:591:0:-:0;;;229:6;206:29;;91:591;;;;;;"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.6eb4927f.mod\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"VITE\",\"outputs\":[{\"internalType\":\"tokenId\",\"name\":\"\",\"type\":\"tokenId\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numOfCups\",\"type\":\"uint256\"}],\"name\":\"buyCoffee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Cafe.solpp\":\"Cafe\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Cafe.solpp\":{\"keccak256\":\"0xe0ee7c453c80ca6cb4b00e1f57eae46c8a9ed836a1150fdec0fa6f9dc2ead3d1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0aebd0d9cc91b79554e1dfbedcb1a9d4a6c350251639573982174c1cebbb1967\",\"dweb:/ipfs/QmZT5cJRt5QquhNvtyhkzGA6HiDJAQ6tpWKEeKpgoiwiSN\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":14,"contract":"contracts/Cafe.solpp:Cafe","label":"price","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}},"Foo":{"abi":[{"inputs":[{"internalType":"uint256","name":"val","type":"uint256"}],"name":"setVal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"time","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"assembly":"  // newTag tag_2, desc: function selector\n  // ContractCompiler::initializeContext()\n  // ContractCompiler::registerImmutableVariables()\n  // end of ContractCompiler::registerImmutableVariables()\n    /* \"contracts/Cafe.solpp\":684:794  contract Foo {... */\n  0x80\n  // CompilerUtils::storeFreeMemoryPointer()\n  0x40\n  mstore\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // ContractCompiler::registerStateVariables()\n  // end of ContractCompiler::registerStateVariables()\n  // ContractCompiler::initializeStateVariables()\n  // end of ContractCompiler::initializeStateVariables()\n  // newPushTag tag_3, desc: \n  dataSize(sub_0)\n  dup1\n  // CompilerContext::appendYulUtilityFunctions()\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n  // newTag tag_2, desc: function selector\n  // ContractCompiler::initializeContext()\n        /* \"contracts/Cafe.solpp\":684:794  contract Foo {... */\n      0x80\n  // CompilerUtils::storeFreeMemoryPointer()\n      0x40\n      mstore\n  // end of CompilerUtils::storeFreeMemoryPointer()\n  // ContractCompiler::registerStateVariables()\n  // end of ContractCompiler::registerStateVariables()\n  // newTag tag_3, desc: declaration of function time\n  // newTag tag_4, desc: declaration of function setVal\n      jump(tag_1)\n        /* \"contracts/Cafe.solpp\":703:722  uint256 public time */\n    tag_2:  // declaration of function time\n  // ExpressionCompiler::appendStateVariableAccessor(time)\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/Cafe.solpp\":729:792  function setVal(uint256 val) public {... */\n    tag_3:  // declaration of function setVal\n        /* \"contracts/Cafe.solpp\":782:785  val */\n      dup1\n  // end of ExpressionCompiler::appendStateVariableAccessor()\n        /* \"contracts/Cafe.solpp\":775:779  time */\n      0x00\n  // Add parameters\n  // Add return parameters\n  // ContractCompiler::appendModifierOrFunctionCode() for function setVal(uint256 val) public {\n        time = val;\n    }\n  // newTag tag_5, desc: return tag of setVal\n  // start of code block of setVal\n  // ExpressionCompiler::appendVariable(val, val)\n        /* \"contracts/Cafe.solpp\":775:785  time = val */\n      dup2\n  // ExpressionCompiler::appendVariable(time, time)\n      swap1\n      sstore\n      pop\n        /* \"contracts/Cafe.solpp\":729:792  function setVal(uint256 val) public {... */\n      pop\n      jump\t// out\n    tag_1:  // function selector\n  // CompilerUtils::convertType(): uint256 -> uint256\n  // end of CompilerUtils::convertType()\n      0x04\n      calldatasize\n  // CompilerUtils::popStackSlots(1)\n      lt\n  // end of CompilerUtils::popStackSlots()\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // start processing return data\n      tag_5\n  // CompilerUtils::popStackSlots(0)\n  // end of CompilerUtils::popStackSlots()\n  // finish processing return data\n  // end of ContractCompiler::appendModifierOrFunctionCode()\n  // remove variables: 1 parameters and 0 return parameters\n  //  current stackLayout [0 -1 ]\n      jumpi\n      calldataload(0x00)\n  // newTag tag_6, desc: notFoundOrReceiveEther\n  // jump to fallback or ether receiver if the data is too short to contain a function selector\n      0xe0\n      shr\n      dup1\n      0x5f6331d9\n      eq\n  // retrieve the function signature hash from the calldata\n  // CompilerUtils::loadFromMemory(offset=0, type=uint32, fromCalldata=1, padToWordBoundaries=0)\n      tag_6\n  // CompilerUtils::loadFromMemoryHelper()\n      jumpi\n  // CompilerUtils::rightShiftNumberOnStack(bits=224)\n      dup1\n      0xdfa8f48e\n  // end of CompilerUtils::rightShiftNumberOnStack()\n  // newTag tag_7, desc: calldata unpacker of function () view external returns (uint256)\n  // newTag tag_8, desc: calldata unpacker of function (uint256) external\n  // ContractCompiler::appendInternalSelector()\n  // function selector\n      eq\n      tag_7\n      jumpi\n    tag_5:  // notFoundOrReceiveEther\n      stop\n        /* \"contracts/Cafe.solpp\":703:722  uint256 public time */\n    tag_6:  // calldata unpacker of function () view external returns (uint256)\n      tag_8\n      tag_2\n      jump\t// in\n    tag_8:  // return value packer of function () view external returns (uint256)\n  // callback selector\n  // not found\n      mload(0x40)\n  // end of ContractCompiler::appendInternalSelector()\n      tag_9\n      swap2\n      swap1\n  // return value packer of function () view external returns (uint256)\n  // newPushTag tag_9, desc: return value packer of function () view external returns (uint256)\n      tag_10\n      jump\t// in\n    tag_9:  // return of Yul function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n      0x40\n  // CompilerUtils::fetchFreeMemoryPointer()\n      mload\n      dup1\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n  // CompilerUtils::encodeToMemory()  stack[<v1> <v2> ... <vn> <mem>]\n  //     givenTypes: [\n  //             uint256\n  //             ]\n  // CompilerUtils::abiEncodeV2()  stack[<$value0> <$value1> ... <$value(n-1)> <$headStart>] top\n  // CompilerContext::callYulFunction(name=abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed, _inArgs=2, _outArgs=1)\n  // newPushTag tag_10, desc: return of Yul function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n      swap2\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n      sub\n      swap1\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_11, desc: abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed\n      return\n        /* \"contracts/Cafe.solpp\":729:792  function setVal(uint256 val) public {... */\n    tag_7:  // calldata unpacker of function (uint256) external\n      tag_11\n  // CompilerUtils::fetchFreeMemoryPointer()\n      0x04\n      dup1\n  // end of CompilerUtils::fetchFreeMemoryPointer()\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n  // return value packer of function (uint256) external\n  // newPushTag tag_12, desc: return value packer of function (uint256) external\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:  // return of Yul function abi_decode_tuple_t_uint256\n  // CompilerUtils::abiDecodeV2() stack[<source_offset> <length>] top\n      tag_3\n      jump\t// in\n    tag_11:  // return value packer of function (uint256) external\n  // CompilerUtils::abiDecodeV2() stack[<end> <start>] top\n  // CompilerContext::callYulFunction(name=abi_decode_tuple_t_uint256, _inArgs=2, _outArgs=1)\n  // newPushTag tag_13, desc: return of Yul function abi_decode_tuple_t_uint256\n      stop\n  // CompilerUtils::moveIntoStack(2, 1)\n  // CompilerUtils::rotateStackUp(3)\n    tag_15:\n      0x00\n  // end of CompilerUtils::rotateStackUp()\n  // newTag tag_14, desc: abi_decode_tuple_t_uint256\n      dup2\n      calldataload\n      swap1\n      pop\n      tag_17\n      dup2\n      tag_18\n  // CompilerContext::appendYulUtilityFunctions()\n  // newTag tag_15, desc: \n      jump\t// in\n    tag_17:\n  // newTag tag_16, desc: abi_decode_t_uint256\n      swap3\n      swap2\n  // newTag tag_17, desc: \n      pop\n      pop\n      jump\t// out\n    tag_13:\n  // newTag tag_18, desc: \n      0x00\n      0x20\n  // newTag tag_19, desc: validator_revert_t_uint256\n      dup3\n      dup5\n      sub\n      slt\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n  // newTag tag_20, desc: \n      0x00\n      tag_21\n      dup5\n      dup3\n      dup6\n      add\n  // newTag tag_21, desc: \n      tag_15\n      jump\t// in\n    tag_21:\n      swap2\n      pop\n      pop\n      swap3\n  // newTag tag_22, desc: \n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_22:\n      tag_24\n      dup2\n      tag_25\n      jump\t// in\n    tag_24:\n      dup3\n      mstore\n      pop\n      pop\n      jump\t// out\n    tag_10:\n      0x00\n  // newTag tag_23, desc: abi_encode_t_uint256_to_t_uint256_fromStack\n      0x20\n  // newTag tag_24, desc: \n  // newTag tag_25, desc: \n      dup3\n      add\n  // newTag tag_26, desc: cleanup_t_uint256\n      swap1\n      pop\n      tag_27\n      0x00\n      dup4\n      add\n      dup5\n      tag_22\n      jump\t// in\n    tag_27:\n      swap3\n  // newTag tag_27, desc: \n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_25:\n  // newTag tag_28, desc: \n      0x00\n      dup2\n      swap1\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_18:\n      tag_30\n      dup2\n      tag_25\n      jump\t// in\n    tag_30:\n      dup2\n      eq\n  // newTag tag_29, desc: \n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582000000000000000000000000000000000000000000000000000000000000000000029\n}\n","bytecode":{"generatedSources":[],"linkReferences":{},"object":"6080604052610117806100136000396000f3fe60806040526018565b60005481565b8060008190555050565b60043610603a5760003560e01c80635f6331d914603c578063dfa8f48e146056575b005b60426008565b604051604d919060b4565b60405180910390f35b606c6004803603810190606891906081565b600e565b005b600081359050607b8160d7565b92915050565b600060208284031215609257600080fd5b6000609e84828501606e565b91505092915050565b60ae8160cd565b82525050565b600060208201905060c7600083018460a7565b92915050565b6000819050919050565b60de8160cd565b811460e857600080fd5b5056fea165627a7a7230582000000000000000000000000000000000000000000000000000000000000000000029","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x117 DUP1 PUSH2 0x13 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x18 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5F6331D9 EQ PUSH1 0x3C JUMPI DUP1 PUSH4 0xDFA8F48E EQ PUSH1 0x56 JUMPI JUMPDEST STOP JUMPDEST PUSH1 0x42 PUSH1 0x8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x4D SWAP2 SWAP1 PUSH1 0xB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x6C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH1 0x68 SWAP2 SWAP1 PUSH1 0x81 JUMP JUMPDEST PUSH1 0xE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH1 0x7B DUP2 PUSH1 0xD7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x9E DUP5 DUP3 DUP6 ADD PUSH1 0x6E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xAE DUP2 PUSH1 0xCD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xC7 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0xA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xDE DUP2 PUSH1 0xCD JUMP JUMPDEST DUP2 EQ PUSH1 0xE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP 0x29 ","sourceMap":"684:110:0:-:0;;;;;;;;;"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.6eb4927f.mod\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"setVal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"time\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Cafe.solpp\":\"Foo\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Cafe.solpp\":{\"keccak256\":\"0xe0ee7c453c80ca6cb4b00e1f57eae46c8a9ed836a1150fdec0fa6f9dc2ead3d1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0aebd0d9cc91b79554e1dfbedcb1a9d4a6c350251639573982174c1cebbb1967\",\"dweb:/ipfs/QmZT5cJRt5QquhNvtyhkzGA6HiDJAQ6tpWKEeKpgoiwiSN\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":70,"contract":"contracts/Cafe.solpp:Foo","label":"time","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}}},"sources":{"contracts/Cafe.solpp":{"id":0}}}
